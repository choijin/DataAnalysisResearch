<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: Enabling Independent Learning of Computer Programming Using Programs Written by Peers</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>375275.00</AwardTotalIntnAmount>
<AwardAmount>415275</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>William Bainbridge</SignBlockName>
<PO_EMAI>wbainbri@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The purpose of this project is to develop and evaluate user interface tools that enable middle school students to effectively teach themselves the basics of computer programming using programs written by peers. The proposed tools will enable middle school users to 1) identify interesting functionality within programs written by peers and 2) re-create that functionality for use in their own programs through automatically generated custom tutorials. As users complete these tutorials to re-create functionality selected from programs their peers have written, they will be introduced to a broad range of programming concepts and constructs. The project will include user testing to both guide and evaluate the development of 1) user interface tools that enable novice programmers to find code of interest in an unfamiliar codebase and 2) technology to automatically generate customized tutorials based on a recorded history of the sequence of user interface actions used to construct a program.&lt;br/&gt;&lt;br/&gt;Computer programming has become a fundamental tool that enables progress  across a broad range of disciplines including basic science, communications, and medicine. Yet, Computer Science is failing to attract the number of students necessary to sustain progress both within the discipline and in those disciplines supported by computer science. Opportunities to study computer science during middle school (when many students begin to opt out of math and science based careers) are rare. This project will enable middle school children to teach themselves computer programming using programs created by their peers. The project will be implemented within Storytelling Alice, an environment that enables middle school children to write programs to create 3D animated movies. Users will be able to identify parts of movies created by other users that interest them and follow automatically generated tutorials to learn how to create the selected parts of those movies. By building tools that help users to learn effectively from programs written by peers within an appealing programming environment, we enable middle school students across the country to develop skills in computer programming at a time when formal opportunities to study computer science are decreasing and the need for computer scientists is increasing. While this project targets middle school students in the context of learning computer programming, there are many other audiences (e.g. adults learning a new piece of computer software) would benefit from software technologies that enable self-teaching.</AbstractNarration>
<MinAmdLetterDate>09/09/2008</MinAmdLetterDate>
<MaxAmdLetterDate>04/15/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0835438</AwardID>
<Investigator>
<FirstName>Caitlin</FirstName>
<LastName>Kelleher</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Caitlin Kelleher</PI_FULL_NAME>
<EmailAddress>ckelleher@cse.wustl.edu</EmailAddress>
<PI_PHON>3149356119</PI_PHON>
<NSF_ID>000240794</NSF_ID>
<StartDate>09/09/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Washington University</Name>
<CityName>Saint Louis</CityName>
<ZipCode>631304862</ZipCode>
<PhoneNumber>3147474134</PhoneNumber>
<StreetAddress>CAMPUS BOX 1054</StreetAddress>
<StreetAddress2><![CDATA[1 Brookings Drive]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Missouri</StateName>
<StateCode>MO</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MO01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>068552207</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WASHINGTON UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>068552207</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Washington University]]></Name>
<CityName>Saint Louis</CityName>
<StateCode>MO</StateCode>
<ZipCode>631304862</ZipCode>
<StreetAddress><![CDATA[CAMPUS BOX 1054]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Missouri</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MO01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7367</Code>
<Text>HCC-Human-Centered Computing</Text>
</ProgramElement>
<ProgramElement>
<Code>7625</Code>
<Text>REAL</Text>
</ProgramElement>
<ProgramReference>
<Code>1707</Code>
<Text>ADVANCED LEARNING TECHNOLOGIES</Text>
</ProgramReference>
<ProgramReference>
<Code>7367</Code>
<Text>Cyber-Human Systems</Text>
</ProgramReference>
<ProgramReference>
<Code>7495</Code>
<Text>ROBUST INTELLIGENCE</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0408</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~375275</FUND_OBLG>
<FUND_OBLG>2009~16000</FUND_OBLG>
<FUND_OBLG>2010~16000</FUND_OBLG>
<FUND_OBLG>2011~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Intellectual Merit</p> <p>Today, there are few opportunities for students to explore computer programming prior to college, due in part to a lack of K-12 teachers with a computer science background. To provide opportunities to students who do not have access to a class or teacher, we have developed a programming environment called Looking Glass that enables users to learn from Looking Glass programs shared by other users.&nbsp; Using Looking Glass, users can write programs that control the behaviors of characters in a virtual world. If a user finds a program that includes an animation that the user wishes the learn how to create, the user can remix the source program, select the beginning and end of the animation of interest, and then follow a tutorial to re-create that animation within their own program&rsquo;s context.</p> <p>To make this possible, we have studied how people without programming experience approach the process of determining which lines of code are responsible for an animation of interest. Using this information, we have developed tools that enable users without programming experience to quickly explore the behavior of an existing program and link lines of code to specific outputs. In addition, we have developed a user interface toolkit that enables us to automatically generate tutorials from a document, in this case a program. Finally, we have explored different ways to present the completed tutorials. Based on these explorations, we developed a new technique for presenting tutorials within the interface that asks users to attempt to complete a step independently. If a user struggles, he or she can request help (i.e. &ldquo;Show Me How&rdquo;) which reveals step by step instructions that are visually overlaid on the interface. Taken together, these resources enable any shared Looking Glass program to serve as a learning resource for other interested users.</p> <p>&nbsp;</p> <p>Broader Impact</p> <p>Over the course of the grant, we have introduced several hundred middle school aged children to programming through a variety of activities ranging from user testing to public lectures and workshops. More importantly, the Looking Glass program that we developed is available for free from lookingglass.wustl.edu, along with a starter set of tutorials. This system will provide a foundation for further research, but we will continue to make the current version available for use by the general public for free.</p><br> <p>            Last Modified: 11/20/2012<br>      Modified by: Caitlin&nbsp;Kelleher</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2012/0835438/0835438_10026529_1353429903952_remixInstructions--rgov-214x142.jpg" original="/por/images/Reports/POR/2012/0835438/0835438_10026529_1353429903952_remixInstructions--rgov-800width.jpg" title="Remix instructions"><img src="/por/images/Reports/POR/2012/0835438/0835438_10026529_1353429903952_remixInstructions--rgov-66x44.jpg" alt="Remix instructions"></a> <div class="imageCaptionContainer"> <div class="imageCaption">By clicking on help, users can bring up a panel that displays instructions for selecting a start or end bound for a remix. Inspired by the on-request stencils approach, this panel gives general instructions that users can follow and provides Show Me buttons that trigger a more detailed walkthrough.</div> <div class="imageCredit">Caitlin Kelleher</div> <div class="imagePermisssions">Creative Commons</div> <d...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intellectual Merit  Today, there are few opportunities for students to explore computer programming prior to college, due in part to a lack of K-12 teachers with a computer science background. To provide opportunities to students who do not have access to a class or teacher, we have developed a programming environment called Looking Glass that enables users to learn from Looking Glass programs shared by other users.  Using Looking Glass, users can write programs that control the behaviors of characters in a virtual world. If a user finds a program that includes an animation that the user wishes the learn how to create, the user can remix the source program, select the beginning and end of the animation of interest, and then follow a tutorial to re-create that animation within their own programÆs context.  To make this possible, we have studied how people without programming experience approach the process of determining which lines of code are responsible for an animation of interest. Using this information, we have developed tools that enable users without programming experience to quickly explore the behavior of an existing program and link lines of code to specific outputs. In addition, we have developed a user interface toolkit that enables us to automatically generate tutorials from a document, in this case a program. Finally, we have explored different ways to present the completed tutorials. Based on these explorations, we developed a new technique for presenting tutorials within the interface that asks users to attempt to complete a step independently. If a user struggles, he or she can request help (i.e. "Show Me How") which reveals step by step instructions that are visually overlaid on the interface. Taken together, these resources enable any shared Looking Glass program to serve as a learning resource for other interested users.     Broader Impact  Over the course of the grant, we have introduced several hundred middle school aged children to programming through a variety of activities ranging from user testing to public lectures and workshops. More importantly, the Looking Glass program that we developed is available for free from lookingglass.wustl.edu, along with a starter set of tutorials. This system will provide a foundation for further research, but we will continue to make the current version available for use by the general public for free.       Last Modified: 11/20/2012       Submitted by: Caitlin Kelleher]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

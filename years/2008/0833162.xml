<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Language and System Support for Petascale Irregular Applications</AwardTitle>
<AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>799995.00</AwardTotalIntnAmount>
<AwardAmount>799995</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;Until recently, most high-performance computing applications involved matrix computations. However, new application areas such as computational biology and machine learning involve constructing, computing with, and modifying large sparse graphs. &lt;br/&gt;&lt;br/&gt;The Galois team at the University of Texas, Austin has been building a system that exploits optimistic parallelization and compiler analysis to raise the level of abstraction at which these applications can be coded without a substantial performance penalty. The programming model is sequential Java augmented with two constructs called optimistic set iterators. This project brings together Galois project team members, computational biologists and machine learning experts to extend and evaluate the Galois system on high-end shared-memory machines and large-scale distributed memory for applications that involve computations on large sparse graphs.  The main thrusts of the project are (i) design and implementation of modest language extensions for supporting nested data-parallelism, (ii) porting the existing system to distributed-memory machines, (iii) implementation of adaptive feedback-driven parallel execution,  and (iv) development of compiler analyses to optimize execution.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/16/2008</MinAmdLetterDate>
<MaxAmdLetterDate>08/16/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0833162</AwardID>
<Investigator>
<FirstName>Keshav</FirstName>
<LastName>Pingali</LastName>
<EmailAddress>pingali@cs.utexas.edu</EmailAddress>
<StartDate>08/16/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ron</FirstName>
<LastName>Elber</LastName>
<EmailAddress>ron@ices.utexas.edu</EmailAddress>
<StartDate>08/16/2008</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Martin</FirstName>
<LastName>Burtscher</LastName>
<EmailAddress>burtscher@ices.utexas.edu</EmailAddress>
<StartDate>08/16/2008</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7583</Code>
<Text>ITR-HECURA</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

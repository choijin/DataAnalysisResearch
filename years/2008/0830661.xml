<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Polyhedral Frameworks for Approximation Algorithms</AwardTitle>
<AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>100000.00</AwardTotalIntnAmount>
<AwardAmount>100000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Petros Drineas</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Linear programming (LP) and polyhedral formulations have earned an unparalleled reputation in the last 60 years as a unifying framework for both practically and theoretically attacking discrete optimization problems, ranging from resource allocation and scheduling to routing and VLSI design.  From a theoretical perspective they are the basis of most known approaches to constructing generic approximation algorithms for NP-hard problems.  Despite LP's distinguished status, the PI feels that the full impact of polyhedral techniques on computer science has yet to be realized.  The PI aims to address this gap by (1) developing frameworks for designing approximation algorithms that better leverage the structure that polyhedral formulations provide, and, as an ambitious long term goal, (2) developing a complexity theory based on polyhedral formulation size.&lt;br/&gt;&lt;br/&gt;In particular, the PI proposes an iterated packing technique for rounding packing problems that enjoys many of the benefits that the elegant and powerful iterated rounding method offers for covering problems: iterated packing is conceptually simple, and large fractional components facilitate rounding.  One may view LP as a bona fide model of computation, with formulation size as a measure of complexity.  This perspective has the potential of inducing different types of separations than traditional complexity measures; for example, although matching is a fundamental problem in P, there is no polynomial-sized polyhedral formulation known for it.  The PI also seeks to unearth connections between traditional and polyhedral complexity.  For any discrete optimization problem, the PI suggests a canonical decision problem and conjectures that the optimization problem is solvable in polynomial time if and only if the associated decision problem is in NC^1.&lt;br/&gt;&lt;br/&gt;A broader goal of this inherently interdisciplinary research is to forge deeper connections between the operations research and theoretical computer science communities: LP is a foundational component of the former, and the PI seeks to elevate the status of LP beyond that of just a tool in the latter.  The PI will attempt to engage collaborators from both communities, and the research conducted will be disseminated in venues visible to both communities.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/01/2008</MinAmdLetterDate>
<MaxAmdLetterDate>08/01/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0830661</AwardID>
<Investigator>
<FirstName>Ojas</FirstName>
<LastName>Parekh</LastName>
<EmailAddress>ojas.parekh@emory.edu</EmailAddress>
<StartDate>08/01/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Emory University</Name>
<CityName>Atlanta</CityName>
<ZipCode>303224250</ZipCode>
<PhoneNumber>4047272503</PhoneNumber>
<StreetAddress>1599 Clifton Rd NE, 4th Floor</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

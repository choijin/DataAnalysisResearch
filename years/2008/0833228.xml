<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:  New Directions in Inapproximability and Probabilistically Checkable Proofs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/31/2008</AwardEffectiveDate>
<AwardExpirationDate>01/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>239934.00</AwardTotalIntnAmount>
<AwardAmount>319934</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Dmitri Maslov</SignBlockName>
<PO_EMAI>dmaslov@nsf.gov</PO_EMAI>
<PO_PHON>7032928910</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The central question studied in theoretical computer science is: how efficiently (fast) can computational problems be solved?While many problems do have efficient algorithms, there is a wide  class of important problems (called NP-complete problems) which  are very unlikely to have efficient algorithms. In practice however,  it may suffice to solve these problems approximately. This research  investigates whether approximate solutions to NP-complete problems  can be found efficiently, and how good is the quality of approximation.&lt;br/&gt; The main contribution of this research is negative results, i.e. proving that for certain NP-complete problems, efficiently finding  even approximate solutions is very unlikely. To illustrate the  significance of proving such negative results, the investigator  proves that it is unlikely to break into a certain cryptosystem,  giving a guarantee of its security against malicious attacks. Another related aspect of this research is Proababilistically Checkable  Proofs, a method to specify proof formats for mathematical statements,  such that the validity of the proof can be checked very efficiently,  by looking at only a few places in the proof instead of reading  the entire proof. The research has a potential for broader impact  in terms of scientific workshops, collaboration between several  international researchers, developement of graduate courses, promoting  undergraduate research, and advising Ph.D. students.&lt;br/&gt;&lt;br/&gt; Many computational problems arising in theory and practice  are NP-complete. An extensively studied approach to cope with  NP-completeness is designing polynomial time algorithms that  compute approximately optimal solutions. However, it turns out  that for many problems, computing approximate solutions itself  is an NP-complete problem, a famous result known as the PCP Theorem,  discovered in 1992. In spite of the tremendous body of research  that followed this discovery, for many NP-complete problems,  there is a gap between the best known approximation result, and  the best known inapproximability result. This research focusses  on filling this gap by proving tight inapproximability results.&lt;br/&gt; The PCP Theorem can also be viewed as a result about proof checking  (and that is how it was discovered). It gives a way of specifying  proofs for NP-statements such that the validity of the proof can be  checked very efficiently. The research investigates constructions  of more efficient PCPs, with further applications to inapproximability  results. The techniques developed are likely to have new applications  to areas like metric embeddings and learning theory. The research  has a potential for broader impact in terms of scientific workshops,  collaboration between international researchers, developement of  graduate courses, promoting undergraduate research and advising Ph.D.&lt;br/&gt; students.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/22/2008</MinAmdLetterDate>
<MaxAmdLetterDate>01/14/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0833228</AwardID>
<Investigator>
<FirstName>Subhash</FirstName>
<LastName>Khot</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Subhash A Khot</PI_FULL_NAME>
<EmailAddress>khot@cs.nyu.edu</EmailAddress>
<PI_PHON>2129984859</PI_PHON>
<NSF_ID>000193258</NSF_ID>
<StartDate>07/22/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>New York University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100121019</ZipCode>
<PhoneNumber>2129982121</PhoneNumber>
<StreetAddress>70 WASHINGTON SQUARE S</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041968306</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NEW YORK UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041968306</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[New York University]]></Name>
<CityName>NEW YORK</CityName>
<StateCode>NY</StateCode>
<ZipCode>100121019</ZipCode>
<StreetAddress><![CDATA[70 WASHINGTON SQUARE S]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>7351</Code>
<Text>THEORETICAL FOUNDATIONS (TF)</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~79934</FUND_OBLG>
<FUND_OBLG>2009~160000</FUND_OBLG>
<FUND_OBLG>2011~80000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Project Outcomes Report:&nbsp; NSF CAREER Grant CCF-<a title="View Reports for Award Number0833228" href="https://www.fastlane.nsf.gov/researchadmin/listProjRpts.do?awdID=0833228&amp;awdTitl=CAREER%3A++New+Directions+in+Inapproximability+and+Probabilistically+Checkable+Proofs&amp;rptType=AF">0833228</a></p> <p>Project Title:&nbsp; New Directions in Inapproximability and<br />Probabilistically Checkable Proofs</p> <p>PI:&nbsp; Subhash Khot</p> <p>Theoretical computer science studies the power and limits of efficient<br />computation: determining which important computational problems have<br />fast algorithms, and which do not. The preeminent problem is the P vs.<br />NP question, which is now considered one of the central questions of<br />&nbsp;mathematics. The class P contains all problems having fast algorithms, while the class NP contains numerous problems of interest in science and industry. If P = NP, then all the latter problems have fast algorithms, creating a scientific utopia. Most experts believe that P not= NP, that is<br />some problems in NP have no fast algorithms, but this remains unproven despite 40 years of research.<br /><br />Lacking such proof, what criterion should serve as a certificate of<br />hardness? The notion of NP-completeness, namely being "the hardest" among all NP problems, stands as the best criterion.&nbsp; This notion turns<br />out to be extremely fruitful: numerous problems throughout science and industry are proved NP-complete. However, most problems of interest in science and industry are optimization problems, and the above only provides evidence that they are hard to solve optimally. In practice, good approximations usually suffice, and the next natural question is: for such problems, how accurate are the approximate solutions that efficient algorithms can find? A breakthrough came in the early &lsquo;90s with the<br />Probabilistically Checkable Proofs (PCP) Theorem, creating a tool to systematically prove that even some approximation problems are NP-complete. Further developments led to the realization that for some problems, there is a sharp dividing line in approximation quality, below which approximation is achievable efficiently, and above which it is NP-complete.<br /><br />This is the line of research in which PI's work on the CAREER grant fits in. The PI has obtained strong inapproximability results for&nbsp; NP-complete problems arising from varied domains such as combinatorial optimization, scheduling,&nbsp; clustering, cryptography, coding theory, circuit design, <br />and learning theory.&nbsp; These results provide an insight into computationally hard instances and often into structural properties of mathematical structures (i.e. graphs, metric spaces, lattices, boolean functions) involved. PI's work has&nbsp; immediate connections to some areas in mathematics, such as analysis and metric geometry. More generally, PI's work fits under the umbrella of "computational intractability", which is a phenomenon that affects almost every branch of science including mathematics, physics and biology (e.g. is it really intractable to break cryptosystems? can a quantum computer be built? can the best way to fold proteins be efficiently computed? is computational intractability a fundamental constraint on the workings of nature?).&nbsp; Deeper understanding of computational intractability is likely to have a broad influence on science in general. <br /><br />PI's work on the CAREER grant has resulted in 21 publications in the top peer-reviewed conferences in theoretical computer science. Many new methods and research directions have been developed which are likely to have impact on future research. The work has contributed to the Ph.D. thesis of three students (two at Georgia Tech and one at NYU) and development of four research courses at graduate level. In terms of outreach activities and service to the research commnunit...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Project Outcomes Report:  NSF CAREER Grant CCF-0833228  Project Title:  New Directions in Inapproximability and Probabilistically Checkable Proofs  PI:  Subhash Khot  Theoretical computer science studies the power and limits of efficient computation: determining which important computational problems have fast algorithms, and which do not. The preeminent problem is the P vs. NP question, which is now considered one of the central questions of  mathematics. The class P contains all problems having fast algorithms, while the class NP contains numerous problems of interest in science and industry. If P = NP, then all the latter problems have fast algorithms, creating a scientific utopia. Most experts believe that P not= NP, that is some problems in NP have no fast algorithms, but this remains unproven despite 40 years of research.  Lacking such proof, what criterion should serve as a certificate of hardness? The notion of NP-completeness, namely being "the hardest" among all NP problems, stands as the best criterion.  This notion turns out to be extremely fruitful: numerous problems throughout science and industry are proved NP-complete. However, most problems of interest in science and industry are optimization problems, and the above only provides evidence that they are hard to solve optimally. In practice, good approximations usually suffice, and the next natural question is: for such problems, how accurate are the approximate solutions that efficient algorithms can find? A breakthrough came in the early æ90s with the Probabilistically Checkable Proofs (PCP) Theorem, creating a tool to systematically prove that even some approximation problems are NP-complete. Further developments led to the realization that for some problems, there is a sharp dividing line in approximation quality, below which approximation is achievable efficiently, and above which it is NP-complete.  This is the line of research in which PI's work on the CAREER grant fits in. The PI has obtained strong inapproximability results for  NP-complete problems arising from varied domains such as combinatorial optimization, scheduling,  clustering, cryptography, coding theory, circuit design,  and learning theory.  These results provide an insight into computationally hard instances and often into structural properties of mathematical structures (i.e. graphs, metric spaces, lattices, boolean functions) involved. PI's work has  immediate connections to some areas in mathematics, such as analysis and metric geometry. More generally, PI's work fits under the umbrella of "computational intractability", which is a phenomenon that affects almost every branch of science including mathematics, physics and biology (e.g. is it really intractable to break cryptosystems? can a quantum computer be built? can the best way to fold proteins be efficiently computed? is computational intractability a fundamental constraint on the workings of nature?).  Deeper understanding of computational intractability is likely to have a broad influence on science in general.   PI's work on the CAREER grant has resulted in 21 publications in the top peer-reviewed conferences in theoretical computer science. Many new methods and research directions have been developed which are likely to have impact on future research. The work has contributed to the Ph.D. thesis of three students (two at Georgia Tech and one at NYU) and development of four research courses at graduate level. In terms of outreach activities and service to the research commnunity, the PI has served on committees of several conferences, served on the editorial board of a journal, written survey articles towards dissemination of the research,  given several talks at  focussed conferences and workshops in computer science and mathematics, co-organized two workshops, participated in a summer research program for highschool students, and advised a research project of a highschool student. Specific products of PI's activities (papers, s...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:   Programming Models, Compiles, and Runtimes for High-end Computing on Manycore Processors</AwardTitle>
<AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
</ProgramOfficer>
<AbstractNarration>The High End Computing (HEC) field is at a major crossroads due to the advent of many-core technology --- integration of tens and hundred processors (cores) on a single chip, heading to 1000 cores per chip in Exascale systems in the 2015-2020 timeframe. Unlike previous generations of hardware evolution, this shift in the hardware road-map will have a profound impact on future HEC software. First, the programmer will be faced with the scalability challenge of expressing and managing parallelism at the scale of millions to one billion threads in a single system. Second, the programmer will be faced with the locality challenge of optimizing data movement in a highly non-uniform system structure with order-of-magnitude gaps in bandwidth and latency between adjacent levels of the memory hierarchy. &lt;br/&gt;&lt;br/&gt;The specific focus of this project is on developing programming models, compilers, and runtimes to address the above challenges of future HEC systems, guided by a specific many-core architecture to ensure practicality. The research will deliver results in the following areas: 1) new parallel programming constructs for many-core architectures such as asynchronous activities, places, and phasers that build on past experiences with the X10 language, but will be manifested in C/C++ instead of Java in this research; 2) new parallel intermediate representations (PIR?s) and compiler optimizations for parallelism and locality; 3) a new thread virtual machine with two levels of parallelism, Synchronous Coarse-Grain Threads (SCTs) and Asynchronous Fine-Grain Threads (AFTs); and 4) evaluation of the programming model, compiler, and runtime on a Cyclops C64 many-core system that directly exemplifies the parallelism and locality challenges facing future HEC systems.</AbstractNarration>
<MinAmdLetterDate>07/31/2008</MinAmdLetterDate>
<MaxAmdLetterDate>07/31/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0833122</AwardID>
<Investigator>
<FirstName>Guang</FirstName>
<LastName>Gao</LastName>
<EmailAddress>ggao@udel.edu</EmailAddress>
<StartDate>07/31/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Delaware</Name>
<CityName>Newark</CityName>
<ZipCode>197160099</ZipCode>
<PhoneNumber>3028312136</PhoneNumber>
<StreetAddress>210 Hullihen Hall</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Delaware</StateName>
<StateCode>DE</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7583</Code>
<Text>ITR-HECURA</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

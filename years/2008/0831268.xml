<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CT-ISG:   Advanced Techniques to Detect Kernel-Level Rootkits</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>450001</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Jeremy Epstein</SignBlockName>
<PO_EMAI>jepstein@nsf.gov</PO_EMAI>
<PO_PHON>7032928338</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The integrity of commodity operating system kernels is threatened by rootkits&lt;br/&gt;that modify key kernel data structures to achieve a variety of malicious goals.&lt;br/&gt;While rootkits have historically been known to affect control data in the&lt;br/&gt;kernel, recent work demonstrates rootkits that affect system security by&lt;br/&gt;modifying non-control data, such as linked lists used to manage bookkeeping&lt;br/&gt;information and metadata used for memory management. Existing techniques fail&lt;br/&gt;to detect such rootkits effectively.&lt;br/&gt;&lt;br/&gt;This project is developing techniques to provide real-time protection against&lt;br/&gt;rootkits by detecting anomalies in both control and non-control kernel data&lt;br/&gt;behavior using automatically-generated integrity specifications. This goal is&lt;br/&gt;being achieved in two steps.  First, a technique to mine specifications of&lt;br/&gt;kernel data structure integrity is being developed. These specifications are be&lt;br/&gt;mined automatically as data structure invariants.  Second, these techniques are&lt;br/&gt;being extended using operating system support to provide real-time detection.&lt;br/&gt;&lt;br/&gt;Impacts and Results: The techniques developed in this project will defend&lt;br/&gt;against the next generation of rootkits, and will enable real-time detection of&lt;br/&gt;such rootkits.  In addition, techniques to infer kernel invariants &lt;br/&gt;may also find applications in operating system reliability, fault tolerance and&lt;br/&gt;software engineering. The PIs will disseminate the results by releasing the &lt;br/&gt;tools developed.  The results of this project will equip the workforce with an&lt;br/&gt;inter-disciplinary toolkit, that combines operating systems, computer security,&lt;br/&gt;and software engineering, to address the challenges posed by the next&lt;br/&gt;generation of stealth malware.  &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/18/2008</MinAmdLetterDate>
<MaxAmdLetterDate>09/15/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0831268</AwardID>
<Investigator>
<FirstName>Liviu</FirstName>
<LastName>Iftode</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Liviu Iftode</PI_FULL_NAME>
<EmailAddress>iftode@cs.rutgers.edu</EmailAddress>
<PI_PHON>7324452001</PI_PHON>
<NSF_ID>000189646</NSF_ID>
<StartDate>08/18/2008</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Vinod</FirstName>
<LastName>Ganapathy</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Vinod Ganapathy</PI_FULL_NAME>
<EmailAddress>vinodganapathy@gmail.com</EmailAddress>
<PI_PHON>8484458039</PI_PHON>
<NSF_ID>000502351</NSF_ID>
<StartDate>08/18/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Rutgers University New Brunswick</Name>
<CityName>Piscataway</CityName>
<ZipCode>088543925</ZipCode>
<PhoneNumber>8489320150</PhoneNumber>
<StreetAddress>33 Knightsbridge Road</StreetAddress>
<StreetAddress2><![CDATA[2nd Floor East Wing]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NJ06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001912864</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RUTGERS, THE STATE UNIVERSITY OF NEW JERSEY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001912864</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Rutgers University New Brunswick]]></Name>
<CityName>Piscataway</CityName>
<StateCode>NJ</StateCode>
<ZipCode>088543925</ZipCode>
<StreetAddress><![CDATA[33 Knightsbridge Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NJ06</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7371</Code>
<Text>CYBER TRUST</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~400000</FUND_OBLG>
<FUND_OBLG>2010~50001</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project developed new techniques to detect malicious software that infects the operating system kernel. Such malicious software are also called kernel-level rootkits (or simply, rootkits), and are particularly dangerous because they can remain steathly for extended periods of time. By directly infecting the operating system kernel, rootkits are able to evade detection by user-space security monitors such as commercial anti-virus tools. As a consequence, attackers are increasingly beginning to use rootkits as a stepping stone to deploy and hide sophisticated forms of malicious software (e.g., the Torpig and Storm botnets used rootkits to hide the presence of malicious user-space agents).</p> <p>This project developed Gibraltar, a novel rootkit detector that uses data structure invariants as the core mechanism to detect infections. The main intuition underlying Gibraltar is that the data structures used by a benign (i.e., uninfected) operating system kernel often follow certain properties that hold for the lifetime of the data structure -- these properties are called data structure invariants. Rootkits that maliciously modify the kernel tend to achieve their malicious goals by modifying data structures, thereby violating invariants. For example, a rootkit that injects malicious code must modify a kernel function pointer to reference the injected code, thereby violating the invariant that the function pointer must reference only pre-loaded kernel code.</p> <p>Gibraltar developed techniques to both infer data structure invariants in uninfected operating system kernels, as well as to enforce (i.e., check) invariants in potentially rootkit-infected operating system kernels. Gibraltar was used to detect 25 previously-known rootkits. The work describing Gibraltar was awarded outstanding student paper at the 24th Annual Computer Security Applications Conference (ACSAC 2008).</p> <p>This project also investigated the threats of rootkits on personal computing devices such as smartphones. In a HotMobile 2010 article, the PIs together with their students demonstrated several rootkits that were targetted towards smartphones, and explored the possibility of using these rootits to steal personal information, such as conversations, location, etc. This work received wide-spread publiclity in the popular press, in addition to being the subject of an NSF press release and meet-the-press event in April 2010.</p> <p>In response to the threat of rootkits on mobile devices, this project explored the applicability of tools such as GIbraltar to mobile devices. This work explored the energy and security tradeoffs involved in executing a rootkit detection tool such as Gibraltar on a mobile device. The main findings were that directly applying a tool such as Gibraltar to a smartphone would cut the battery life of the smartphone by 50% (i.e., battery life reduces to half). Consequently, the project also developed new techniques to navigate the energy-security tradeoff curve by investigating the possibility of reducing energy consumption by scanning fewer data structures and scanning less often. The main finding was that with an appropriate choice of parameters, Gibraltar could be configured to detect as many as 96% of known rootkits while consuming just 14% additional energy.</p> <p>Another research direction explored by the project was on new architectures to isolate rootkit detectors such as Gibraltar from malicious software. Traditional isolation techniques rely on the use of virtual machine monitors or on a separate physical machine with DMA access to the target machine to be monitored. This research direction explored the use of heterogeneous multicore processors to isolate rootkit detectors. In particular, the project developed a new machine architecture called Limited Local Memory (LLM). LLM leverages recent advances in multi-core processor technology to isolate rootkit detectors su...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project developed new techniques to detect malicious software that infects the operating system kernel. Such malicious software are also called kernel-level rootkits (or simply, rootkits), and are particularly dangerous because they can remain steathly for extended periods of time. By directly infecting the operating system kernel, rootkits are able to evade detection by user-space security monitors such as commercial anti-virus tools. As a consequence, attackers are increasingly beginning to use rootkits as a stepping stone to deploy and hide sophisticated forms of malicious software (e.g., the Torpig and Storm botnets used rootkits to hide the presence of malicious user-space agents).  This project developed Gibraltar, a novel rootkit detector that uses data structure invariants as the core mechanism to detect infections. The main intuition underlying Gibraltar is that the data structures used by a benign (i.e., uninfected) operating system kernel often follow certain properties that hold for the lifetime of the data structure -- these properties are called data structure invariants. Rootkits that maliciously modify the kernel tend to achieve their malicious goals by modifying data structures, thereby violating invariants. For example, a rootkit that injects malicious code must modify a kernel function pointer to reference the injected code, thereby violating the invariant that the function pointer must reference only pre-loaded kernel code.  Gibraltar developed techniques to both infer data structure invariants in uninfected operating system kernels, as well as to enforce (i.e., check) invariants in potentially rootkit-infected operating system kernels. Gibraltar was used to detect 25 previously-known rootkits. The work describing Gibraltar was awarded outstanding student paper at the 24th Annual Computer Security Applications Conference (ACSAC 2008).  This project also investigated the threats of rootkits on personal computing devices such as smartphones. In a HotMobile 2010 article, the PIs together with their students demonstrated several rootkits that were targetted towards smartphones, and explored the possibility of using these rootits to steal personal information, such as conversations, location, etc. This work received wide-spread publiclity in the popular press, in addition to being the subject of an NSF press release and meet-the-press event in April 2010.  In response to the threat of rootkits on mobile devices, this project explored the applicability of tools such as GIbraltar to mobile devices. This work explored the energy and security tradeoffs involved in executing a rootkit detection tool such as Gibraltar on a mobile device. The main findings were that directly applying a tool such as Gibraltar to a smartphone would cut the battery life of the smartphone by 50% (i.e., battery life reduces to half). Consequently, the project also developed new techniques to navigate the energy-security tradeoff curve by investigating the possibility of reducing energy consumption by scanning fewer data structures and scanning less often. The main finding was that with an appropriate choice of parameters, Gibraltar could be configured to detect as many as 96% of known rootkits while consuming just 14% additional energy.  Another research direction explored by the project was on new architectures to isolate rootkit detectors such as Gibraltar from malicious software. Traditional isolation techniques rely on the use of virtual machine monitors or on a separate physical machine with DMA access to the target machine to be monitored. This research direction explored the use of heterogeneous multicore processors to isolate rootkit detectors. In particular, the project developed a new machine architecture called Limited Local Memory (LLM). LLM leverages recent advances in multi-core processor technology to isolate rootkit detectors such as Gibraltar without requiring virtualization technology, and without requiring physical ...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

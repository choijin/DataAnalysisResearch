<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative:  CSR-DMSS, TM:  Live Updates of Scientific Workflows</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>700000.00</AwardTotalIntnAmount>
<AwardAmount>715600</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Live Updates of Scientifc Workflows&lt;br/&gt; &lt;br/&gt;ABSTRACT&lt;br/&gt;Computer systems are being applied to increasingly demanding cross disciplinary applications. The environments in which they function and the resources they manage &lt;br/&gt;are gradually more diverse, distributed and dynamic. This is particularly observed for &lt;br/&gt;biomedical applications where the need for flexible, dynamic, data intensive computing&lt;br/&gt;functionalities are substancially critical. This revolution of modern medicine requires &lt;br/&gt;novel and efficient approaches to support resource integration and scientific workflows&lt;br/&gt;(SWF) that capture, analyze, retrieve, integrate, and produce molecular  information &lt;br/&gt;including biological specimens derived from tissue, cells, or blood combined with&lt;br/&gt;medical records or clinical trial data. Such workflows are increasingly used in e-science&lt;br/&gt;discovery and are characterized by frequent changes that are part of the scientific &lt;br/&gt;discovery process. The research develops a uniform approach to support live updates of &lt;br/&gt;scientific workflows accessing distributed resources. The goal of live updates is to allow &lt;br/&gt;continuous execution in the presence of changes. The research supports updates of &lt;br/&gt;both the structure and nature of SWFs processes and the data they access and create&lt;br/&gt;(produce and consume). The research divides the live update problem for SWFs into four&lt;br/&gt;main technical aims: software update, persistent storage update, workflow update, and &lt;br/&gt;evaluation and testing. It develops the mechanisms for updates as well as automatic &lt;br/&gt;checks for the safety of a planned update. The research impacts information-based&lt;br/&gt;drug discovery and development, and healthcare decision support systems.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/25/2008</MinAmdLetterDate>
<MaxAmdLetterDate>07/28/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0849980</AwardID>
<Investigator>
<FirstName>Rida</FirstName>
<LastName>Bazzi</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rida A Bazzi</PI_FULL_NAME>
<EmailAddress>bazzi@asu.edu</EmailAddress>
<PI_PHON>4809652796</PI_PHON>
<NSF_ID>000165152</NSF_ID>
<StartDate>08/25/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Arizona State University</Name>
<CityName>TEMPE</CityName>
<ZipCode>852816011</ZipCode>
<PhoneNumber>4809655479</PhoneNumber>
<StreetAddress>ORSPA</StreetAddress>
<StreetAddress2><![CDATA[660 South Mill Avenue, Suite 310]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<StateCode>AZ</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>AZ09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>943360412</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>ARIZONA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>806345658</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Arizona State University]]></Name>
<CityName>TEMPE</CityName>
<StateCode>AZ</StateCode>
<ZipCode>852816011</ZipCode>
<StreetAddress><![CDATA[ORSPA]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>AZ09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramElement>
<Code>7793</Code>
<Text>DATA-INTENSIVE COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~190000</FUND_OBLG>
<FUND_OBLG>2009~350000</FUND_OBLG>
<FUND_OBLG>2010~160000</FUND_OBLG>
<FUND_OBLG>2011~15600</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Overview of the Project</strong></p> <p>The project aimed at developing techniques and tools for <em>dynamic software update.&nbsp;</em>Unlike the software update that many are familiar with and typically requires restarting the software application or even the device for the update to take effect, dynamic software update updates a software application while it is running. Our study was not confined to traditional software application, but also looked at updates of <em>scientific workflows</em>. A scientific workflow typically consists of many software components that can be developed by different developers and that are put together in a workflow to achieve a scientific analysis. The execution of scientific workflows is time consuming and there is a need to support experimentation with scientific workflows in which modified versions of the same workflow are executed in order to find the best way to analyze scientific data.</p> <p>An important goal of the work was to expose students in computer science to work with scientists from the general biotechnology field through internships at the Translational Genomics Institute.</p> <p><strong>Outcomes</strong></p> <p>We have been successful in achieving many of the project goals.</p> <ol> <li><strong><strong>Publications</strong>. </strong>Ten publications in conferences and workshops resulted from this project with some additional publications in preparation.<strong><br /></strong></li> <li><strong>Development of a general mechanism for dynamic software update</strong>. We have developed a general approach and software tool for updating programs while they are executing. We call the tool UpStare. It is a general dynamic software update tool and it is available together with a user manual for upload and use by other researchers.</li> <li><strong>Identification of the inherent overhead introduced by dynamic software update</strong>. We have shown that any general dynamic software update tool that does not place limitation on when an update can occur must introduce overhead to the execution of a program even when the program is not being updated. We have proposed, but not implemented, a mechanism whose overhead would be the lowest possible.</li> <li><strong><span class="h3_red">Improvement of the S</span>tructural&nbsp;<span class="h3_red">P</span>rediction for pRotein&nbsp;f<span class="h3_red">O</span>lding&nbsp;<span class="h3_red">UT</span>ility&nbsp;<span class="h3_red">S</span>ystem (SPROUTS).</strong>&nbsp;SPROUTS was supported by a&nbsp;previous NSF grant and is available to scientists to compare and integrate various analyses for protein folding. SPROUTS was made much more useable and significant improvements were made to the ability to compare multiple analyses as part of effort under this project. As the results of the improvements, SPROUTS' collection grew to 900 entries for various proteins.</li> <li><strong>Involvement of undergraduate students in research</strong>. Five undergrdauate students worked on research related to the project. The work lead to one student being a co-author on a workshop paper. Another student who has started working on the project before the expiration of the grant is continuing to work on the topic of dynamic database update. A high school student was also hosted at ASU as part of the PI's outreach effort to local high schools.</li> <li><strong>Training of workforce</strong>. Three computer science and engineering students working on the grant got the chance to work with life scientists and help in making it easier for the scientists to solve their scientific problems. One PhD student and one Masters student already graduated and one PhD and one Masters student are expected to graduate in 2014. One computer science student spent part of a summer in France working with French scientists.</li> <li><strong>Identification of conditions under which a dynamic software update can b...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Overview of the Project  The project aimed at developing techniques and tools for dynamic software update. Unlike the software update that many are familiar with and typically requires restarting the software application or even the device for the update to take effect, dynamic software update updates a software application while it is running. Our study was not confined to traditional software application, but also looked at updates of scientific workflows. A scientific workflow typically consists of many software components that can be developed by different developers and that are put together in a workflow to achieve a scientific analysis. The execution of scientific workflows is time consuming and there is a need to support experimentation with scientific workflows in which modified versions of the same workflow are executed in order to find the best way to analyze scientific data.  An important goal of the work was to expose students in computer science to work with scientists from the general biotechnology field through internships at the Translational Genomics Institute.  Outcomes  We have been successful in achieving many of the project goals.  Publications. Ten publications in conferences and workshops resulted from this project with some additional publications in preparation.  Development of a general mechanism for dynamic software update. We have developed a general approach and software tool for updating programs while they are executing. We call the tool UpStare. It is a general dynamic software update tool and it is available together with a user manual for upload and use by other researchers. Identification of the inherent overhead introduced by dynamic software update. We have shown that any general dynamic software update tool that does not place limitation on when an update can occur must introduce overhead to the execution of a program even when the program is not being updated. We have proposed, but not implemented, a mechanism whose overhead would be the lowest possible. Improvement of the Structural Prediction for pRotein fOlding UTility System (SPROUTS). SPROUTS was supported by a previous NSF grant and is available to scientists to compare and integrate various analyses for protein folding. SPROUTS was made much more useable and significant improvements were made to the ability to compare multiple analyses as part of effort under this project. As the results of the improvements, SPROUTS' collection grew to 900 entries for various proteins. Involvement of undergraduate students in research. Five undergrdauate students worked on research related to the project. The work lead to one student being a co-author on a workshop paper. Another student who has started working on the project before the expiration of the grant is continuing to work on the topic of dynamic database update. A high school student was also hosted at ASU as part of the PI's outreach effort to local high schools. Training of workforce. Three computer science and engineering students working on the grant got the chance to work with life scientists and help in making it easier for the scientists to solve their scientific problems. One PhD student and one Masters student already graduated and one PhD and one Masters student are expected to graduate in 2014. One computer science student spent part of a summer in France working with French scientists. Identification of conditions under which a dynamic software update can be applied safely.  Typical updates that are made to computer software are made with the assumption that the update will not be applied dynamically and such updates might not work as expected if they are applied dynamically. We have identified conditions under which an update can be safely applied dynamically.  Development of an approach for efficient execution of multiple versions of a scientific workflow. We have formally defined the data reuse problem in which data produced by one version of a workflow can be reused to s...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:   CT-M: Hardware Containers for Software Components - Detection and Recovery at the Hardware/Software Interface</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/01/2009</AwardEffectiveDate>
<AwardExpirationDate>12/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>135000.00</AwardTotalIntnAmount>
<AwardAmount>180000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Jeremy Epstein</SignBlockName>
<PO_EMAI>jepstein@nsf.gov</PO_EMAI>
<PO_PHON>7032928338</PO_PHON>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;This project focuses on hardware features &lt;br/&gt;to improve the security of software systems.&lt;br/&gt;By refining the coarse-grained protections available in&lt;br/&gt;today's architectures, the project will aim to protect&lt;br/&gt;the integrity of individual software objects or components.&lt;br/&gt;The hardware mechanisms force tight controls on &lt;br/&gt;the execution of software components, which&lt;br/&gt;programmers can define to be as large as entire&lt;br/&gt;applications or as small as individual objects. &lt;br/&gt;The goal is to rapidly detect and also recover from attacks that&lt;br/&gt;improperly access memory or take over the CPU.&lt;br/&gt;The approach also includes hardware-supervised&lt;br/&gt;recovery, to enable systems to return to normal &lt;br/&gt;operation after an attack and to protect the recovery &lt;br/&gt;process itself from attacks.&lt;br/&gt;&lt;br/&gt;The benefits of this project include the ability to &lt;br/&gt;thwart a large class of attacks and the potential of&lt;br/&gt;developing more robust software systems in the future.&lt;br/&gt;Recovery, which has received somewhat less attention than&lt;br/&gt;attack prevention or detection, is especially important for &lt;br/&gt;embedded systems that do not have the luxury of intervention &lt;br/&gt;by human operators.&lt;br/&gt;&lt;br/&gt;The project will be used to train graduate students and to &lt;br/&gt;feed material into graduate courses taught at the three &lt;br/&gt;participating universities. Modules will also be developed for &lt;br/&gt;use in K-12 education with the aim of drawing students into &lt;br/&gt;considering careers in computer science and engineering. &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/15/2008</MinAmdLetterDate>
<MaxAmdLetterDate>05/06/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0830927</AwardID>
<Investigator>
<FirstName>Alok</FirstName>
<LastName>Choudhary</LastName>
<PI_MID_INIT>N</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Alok N Choudhary</PI_FULL_NAME>
<EmailAddress>choudhar@ece.northwestern.edu</EmailAddress>
<PI_PHON>8474674129</PI_PHON>
<NSF_ID>000101070</NSF_ID>
<StartDate>08/15/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northwestern University</Name>
<CityName>Chicago</CityName>
<ZipCode>606114579</ZipCode>
<PhoneNumber>3125037955</PhoneNumber>
<StreetAddress>750 N. Lake Shore Drive</StreetAddress>
<StreetAddress2><![CDATA[Rubloff 7th Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>160079455</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTHWESTERN UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>005436803</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Northwestern University]]></Name>
<CityName>Chicago</CityName>
<StateCode>IL</StateCode>
<ZipCode>606114579</ZipCode>
<StreetAddress><![CDATA[750 N. Lake Shore Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7371</Code>
<Text>CYBER TRUST</Text>
</ProgramElement>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~45000</FUND_OBLG>
<FUND_OBLG>2009~90000</FUND_OBLG>
<FUND_OBLG>2011~45000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Security is a very important aspect of cyberinfrastructure. Cybersecurity requires hardware and software solutions at multiple levels. The project focuses on hardware solutions to support component-driven software development for security. In particular, the project addresses the problem of securing execution of modern software, which is developed by integrating libraries and components. Thus, the development of hardware features that can isolate these components&nbsp; from each other and also determine if software has been tempered with is an important problem.</p> <p>In this research project, we proposed a system for detecting information leakage attacks through hardware Trojans or malicious processors. The high economic cost of fabrication is pushing semiconductor companies to move their fabrication technology to overseas locations, or to go completely fab-less and outsource fabrication to other companies. Moreover there is an increasing trend of using third-party Intellectual Property (IP) cores and tools. These developments suggest that modern microchips are designed and fabricated in a less trusted environment. A security breach in the fabrication and masking stages can lead to what is called a hidden circuit or a Trojan hardware attack.</p> <p>The insertion of malicious hardware is potentially the most troublesome threat, given that this hardware could be used in order to (i) break encryption, (ii) broadcast sensitive information, (iii) circumvent authentication mechanisms, or (iv) disable or modify intended software execution. This added functionality might be small in terms of design complexity, be it lines of code or number of transistors, and as the malicious hardware will fall outside the predetermined range of testing parameters, it is thought to be inherently undetectable via traditional visual and functional chip verification methodologies.</p> <p>The principal finding in this project is that malicious leakage detection can be achieved by replicating the memory operations in an application. Specifically, for a stream of memory accesses (data reads or writes) in a given application, an equivalent stream can be generated which emulates the memory access behavior. By doing this, one can determine automatically if there are deveations from normal expected patters of an applicaiton execution. The project developed designs of protocols and bus architecture that helps accomplish the tempering of an applicaiton.</p><br> <p>            Last Modified: 04/15/2014<br>      Modified by: Alok&nbsp;N&nbsp;Choudhary</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Security is a very important aspect of cyberinfrastructure. Cybersecurity requires hardware and software solutions at multiple levels. The project focuses on hardware solutions to support component-driven software development for security. In particular, the project addresses the problem of securing execution of modern software, which is developed by integrating libraries and components. Thus, the development of hardware features that can isolate these components  from each other and also determine if software has been tempered with is an important problem.  In this research project, we proposed a system for detecting information leakage attacks through hardware Trojans or malicious processors. The high economic cost of fabrication is pushing semiconductor companies to move their fabrication technology to overseas locations, or to go completely fab-less and outsource fabrication to other companies. Moreover there is an increasing trend of using third-party Intellectual Property (IP) cores and tools. These developments suggest that modern microchips are designed and fabricated in a less trusted environment. A security breach in the fabrication and masking stages can lead to what is called a hidden circuit or a Trojan hardware attack.  The insertion of malicious hardware is potentially the most troublesome threat, given that this hardware could be used in order to (i) break encryption, (ii) broadcast sensitive information, (iii) circumvent authentication mechanisms, or (iv) disable or modify intended software execution. This added functionality might be small in terms of design complexity, be it lines of code or number of transistors, and as the malicious hardware will fall outside the predetermined range of testing parameters, it is thought to be inherently undetectable via traditional visual and functional chip verification methodologies.  The principal finding in this project is that malicious leakage detection can be achieved by replicating the memory operations in an application. Specifically, for a stream of memory accesses (data reads or writes) in a given application, an equivalent stream can be generated which emulates the memory access behavior. By doing this, one can determine automatically if there are deveations from normal expected patters of an applicaiton execution. The project developed designs of protocols and bus architecture that helps accomplish the tempering of an applicaiton.       Last Modified: 04/15/2014       Submitted by: Alok N Choudhary]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

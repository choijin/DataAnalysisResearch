<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Algorithmic Support for Power Management</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2008</AwardEffectiveDate>
<AwardExpirationDate>12/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>299906.00</AwardTotalIntnAmount>
<AwardAmount>299906</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Balasubramanian Kalyanasundaram</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Power is now widely recognized as a first class architectural design constraint at all levels of computing, from the level of processor chips to the level of data centers.  There are at least three distinct common goals for power management: energy conservation, temperature management, and limiting maximum power.  The most commonly used power management technique is speed scaling, which involves changing the speed of the processor.  Essentially all currently produced general purpose processors may be run at multiple speeds, and all leading processor manufacturers produce associated software that manages power by scaling processor speed.  However, speed scaling as a power management technique, has to date mostly been applied in a reactive fashion in that it is usually only invoked in response to abnormal conditions, and its application is largely decoupled from the scheduling policies in that they are working independently of each other.  It is widely accepted that integrated proactive power management and scheduling policies will result in better power management than simple reactive strategies.&lt;br/&gt;&lt;br/&gt;The proposed research investigates algorithmic problems related to integrated power management and and scheduling.  The resulting optimization problems have dual objectives, since one seeks to optimize both some quality-of-service measure of the schedule, and some power related criteria.  In general these objectives are conflicting in that the more power that one uses, the better quality of service that can be provided.  The algorithmic solutions to these problem then involve increasing power when the improvement in the scheduling objective justifies the increased cost in the power management objective.  The goals of the research are threefold.  The first goal is to develop algorithms that could form the basis for future power management software.  The second goal is to build a toolkit of widely applicable algorithmic methods for power management problems.  The third goal is help increase the computing community's ability to abstractly reason about power, energy and temperature.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/21/2008</MinAmdLetterDate>
<MaxAmdLetterDate>06/17/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0830558</AwardID>
<Investigator>
<FirstName>Kirk</FirstName>
<LastName>Pruhs</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kirk Pruhs</PI_FULL_NAME>
<EmailAddress>kirk@cs.pitt.edu</EmailAddress>
<PI_PHON>4126248844</PI_PHON>
<NSF_ID>000388694</NSF_ID>
<StartDate>07/21/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pittsburgh</Name>
<CityName>Pittsburgh</CityName>
<ZipCode>152133203</ZipCode>
<PhoneNumber>4126247400</PhoneNumber>
<StreetAddress>300 Murdoch Building</StreetAddress>
<StreetAddress2><![CDATA[3420 Forbes Avenue]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>004514360</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF PITTSBURGH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004514360</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pittsburgh]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133203</ZipCode>
<StreetAddress><![CDATA[300 Murdoch Building]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~196531</FUND_OBLG>
<FUND_OBLG>2010~103375</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Energy-efficient computing and power management are two important focus areas within green computing, and green computing is in turn part of society&rsquo;s desire/need for sustainable technologies An algorithmic problem arising from this green computing revolution involves directly managing power, energy or temperature as a computational resource.&nbsp; Many computational devices can be operated at different powers and speeds, with high power delivering better performance but being less energy efficient.&nbsp; The resulting optimization problems have dual objectives, since one seeks to optimize quality-of-service measure, and some power related criteria (say energy or temperature). The algorithmic solutions to these problem then involve increasing power when the improvement in the scheduling objective justifies the increased cost in the power management objective. This requires being able to reason about energy as a computational resource.<br /><br />A long term goal is to build a science of algorithmic power management to support the computing community&rsquo;s ability to abstractly reason about power, energy and temperature. The ascension of power, to join time and space, to the top ranks of scarce computational resources is relatively recent. Over the last several decades, when time and space were the key computational resources, computer science researchers developed many techniques for designing time and space efficient algorithms, and for analyzing the time and space required by particular algorithms on simple models of a computer. These techniques are commonly taught in algorithms classes that are required for computer scientists.&nbsp; The ability to reason abstractly about time and space in a simple computational model is undoubtedly a valuable skill for software engineers.&nbsp; It is fair to say that computer scientists are generally less adept at reasoning about power, energy, and temperature than at reasoning about time and space. It is my expectation that a science of power management, of which algorithmics will play a significant part, will be taught to future software engineers. This science will serve these software engineers, when faced with problems in which power/energy/temperature is the key scarce resource, just as the science of algorithms serves them when they are concerned with the resources of time and space.<br /><br />We developed two techniques to reason about energy in power heterogeneous settings. The first technique involves using a potential function. The potential function can be thought of as a battery, a bank account, storing the energy that the management algorithm has saved in the past, and might spend in the future.&nbsp; Generally the hard part of this approach is to find an algebraic expression that is simultaneously sufficiently accurate, but also sufficiently simple to be easily manipulated.&nbsp; We have identified a common algebraic expression that has these properties for a wide array of energy management management problems arising in power heterogeneous devices.<br /><br />However, there are cases where it seems impossible to satisfying these conflicting goals of accuracy and simplicity. To handle these cases we have developed a another technique that does not require an algebraic expression for the energy savings. In these cases, we using convex programming duality.&nbsp; By managing the energy is a local optimal way, and setting the dual variables in a particular way to mirror this local management strategy, we are able to provide a clean understanding and analysis of these natural local energy management algorithms.<br /><br /><br /><br /></p><br> <p>            Last Modified: 01/29/2013<br>      Modified by: Kirk&nbsp;Pruhs</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Energy-efficient computing and power management are two important focus areas within green computing, and green computing is in turn part of societyÃ†s desire/need for sustainable technologies An algorithmic problem arising from this green computing revolution involves directly managing power, energy or temperature as a computational resource.  Many computational devices can be operated at different powers and speeds, with high power delivering better performance but being less energy efficient.  The resulting optimization problems have dual objectives, since one seeks to optimize quality-of-service measure, and some power related criteria (say energy or temperature). The algorithmic solutions to these problem then involve increasing power when the improvement in the scheduling objective justifies the increased cost in the power management objective. This requires being able to reason about energy as a computational resource.  A long term goal is to build a science of algorithmic power management to support the computing communityÃ†s ability to abstractly reason about power, energy and temperature. The ascension of power, to join time and space, to the top ranks of scarce computational resources is relatively recent. Over the last several decades, when time and space were the key computational resources, computer science researchers developed many techniques for designing time and space efficient algorithms, and for analyzing the time and space required by particular algorithms on simple models of a computer. These techniques are commonly taught in algorithms classes that are required for computer scientists.  The ability to reason abstractly about time and space in a simple computational model is undoubtedly a valuable skill for software engineers.  It is fair to say that computer scientists are generally less adept at reasoning about power, energy, and temperature than at reasoning about time and space. It is my expectation that a science of power management, of which algorithmics will play a significant part, will be taught to future software engineers. This science will serve these software engineers, when faced with problems in which power/energy/temperature is the key scarce resource, just as the science of algorithms serves them when they are concerned with the resources of time and space.  We developed two techniques to reason about energy in power heterogeneous settings. The first technique involves using a potential function. The potential function can be thought of as a battery, a bank account, storing the energy that the management algorithm has saved in the past, and might spend in the future.  Generally the hard part of this approach is to find an algebraic expression that is simultaneously sufficiently accurate, but also sufficiently simple to be easily manipulated.  We have identified a common algebraic expression that has these properties for a wide array of energy management management problems arising in power heterogeneous devices.  However, there are cases where it seems impossible to satisfying these conflicting goals of accuracy and simplicity. To handle these cases we have developed a another technique that does not require an algebraic expression for the energy savings. In these cases, we using convex programming duality.  By managing the energy is a local optimal way, and setting the dual variables in a particular way to mirror this local management strategy, we are able to provide a clean understanding and analysis of these natural local energy management algorithms.           Last Modified: 01/29/2013       Submitted by: Kirk Pruhs]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

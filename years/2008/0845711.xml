<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Building Virtual Devices with QoS Assurance in a Consolidated Storage Infrastructure</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/15/2009</AwardEffectiveDate>
<AwardExpirationDate>01/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>412000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;A growing and inevitable trend in the use and management of storage resources is the consolidation of distributed storage into a large data center to reduce the rapidly growing administration cost and to improve resource utilization. Despite its compelling advantages and years of efforts on research and product development, a critical challenge in turning this promising technology into reality remains to be addressed, which is that the quality of the I/O services (QoS) cannot be conveniently presented and efficiently guaranteed for users who outsource their dedicated storages to the shared system. To this end, a performance interface, or specification of required service quality, must be able to allow a diverse set of users to easily relate each of their I/O QoS requirements to their respective application performance and enable efficient system implementation to meet the QoS requirements. Currently, the QoS requirements are usually presented in the form of service-level agreements (SLAs) to bound latency and throughput of I/O requests. SLA is not suitable for I/O requests from application servers to storage servers because users have difficulties in using the performance interface and resources allocation can be misguided by the SLA measures, which do not consistently reflect users' resource demands.&lt;br/&gt;&lt;br/&gt;To address this critical issue, the investigator will develop a reference (or virtual) storage device as performance interface and will implement consolidated storage service based on the interface. In this way, a user is guaranteed to receive an I/O service whose quality is at least as good as that on the reference system regardless of variations and instantaneous changes of data access patterns. The research project aims to remove the significant barrier for users and system administrators to communicate I/O performance requirements and pave the road to wide acceptance of the storage consolidation technology.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>02/18/2009</MinAmdLetterDate>
<MaxAmdLetterDate>03/13/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0845711</AwardID>
<Investigator>
<FirstName>Song</FirstName>
<LastName>Jiang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Song Jiang</PI_FULL_NAME>
<EmailAddress>song.jiang@uta.edu</EmailAddress>
<PI_PHON>4699963465</PI_PHON>
<NSF_ID>000240353</NSF_ID>
<StartDate>02/18/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Wayne State University</Name>
<CityName>Detroit</CityName>
<ZipCode>482023622</ZipCode>
<PhoneNumber>3135772424</PhoneNumber>
<StreetAddress>5057 Woodward</StreetAddress>
<StreetAddress2><![CDATA[6th Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001962224</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WAYNE STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001962224</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Wayne State University]]></Name>
<CityName>Detroit</CityName>
<StateCode>MI</StateCode>
<ZipCode>482023622</ZipCode>
<StreetAddress><![CDATA[5057 Woodward]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~67949</FUND_OBLG>
<FUND_OBLG>2010~71428</FUND_OBLG>
<FUND_OBLG>2011~91098</FUND_OBLG>
<FUND_OBLG>2012~95992</FUND_OBLG>
<FUND_OBLG>2013~85533</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The project aims to provide a performance interface for various storage systems. This interface allows users to conveniently convey their requirements on I/O performance to the storage systems, in which various resource allocation and request scheduling schemes are implemented to meet the requirements. &nbsp;</p> <p>&nbsp;</p> <p>A growing and inevitable trend in the use and management of storage resources is the consolidation of distributed storage into a large data center, which provides shared data access service. However, the shared storage service is difficult to be adopted by the market without a performance interface for users to specify their QoS needs and for system administrators to manage system resources for ensuring service quality. This research addresses this critical issue. It proposes and implements the concept of reference storage device by leveraging the machine learning technique to learn and reveal performance requirements on specific storage devices of particular performance characteristics. The performance interface has been studied and implemented on various underlying storage systems and models, including (distributed) file systems, key-value stores/caches, and virtualized storage systems. Extensive experiments have been conducted to validate the design and demonstrate its performance advantages.</p> <p>&nbsp;</p> <p>Some highlights of the research outcomes include: (1) the machine learning model can accurately estimate performance requirements on a reference storage device with a relative error less than 15%; (2) when the storage system is a key-value store, the proposed technique (LSM-trie) can improve the read and write throughputs of Google&rsquo;s LevelDB by up to 10 and 20 times, respectively; &nbsp;and (3) when the storage system is a key-value cache, the proposed technique (zExpander) can increase memcached&rsquo;s effective cache size by up to 2 times and reduce miss ratio by up to 46%. Memcached is a state-of-the-art key-value cache system.</p> <p>&nbsp;</p> <p>The broader impacts of the project are demonstrated by the prototyped systems, publications, as well as human resource training produced during execution of the project. In particular, the PI and his team prototyped four systems, one based on file systems (YouChoose), one based on key-value store (LSM-trie), and two based on key-value cache (Hippos and zExpander). All the systems have seen substantial performance advantages in their respective evaluations. The project has produced many papers published on IEEE, ACM, and USENIX conferences. These include two best student papers (one on MSST&rsquo;11 and one on IFIP Performance 2014).&nbsp; At Wayne State University two Ph.D students and one Master student used this project as the major parts of their thesis work. All had successfully defended their theses and graduated. Three undergraduate students under-represented in today's CSE discipline (all are African-Americans) participated in the project. They learned skills for selecting and running benchmarks as well as collecting and analyzing measurements. A graduate-level topic course &ldquo;ECE 7650 Scalable and Secure Internet Services and Architecture&rdquo; was significantly revised to cover research results from this project.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 04/30/2016<br>      Modified by: Song&nbsp;Jiang</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The project aims to provide a performance interface for various storage systems. This interface allows users to conveniently convey their requirements on I/O performance to the storage systems, in which various resource allocation and request scheduling schemes are implemented to meet the requirements.       A growing and inevitable trend in the use and management of storage resources is the consolidation of distributed storage into a large data center, which provides shared data access service. However, the shared storage service is difficult to be adopted by the market without a performance interface for users to specify their QoS needs and for system administrators to manage system resources for ensuring service quality. This research addresses this critical issue. It proposes and implements the concept of reference storage device by leveraging the machine learning technique to learn and reveal performance requirements on specific storage devices of particular performance characteristics. The performance interface has been studied and implemented on various underlying storage systems and models, including (distributed) file systems, key-value stores/caches, and virtualized storage systems. Extensive experiments have been conducted to validate the design and demonstrate its performance advantages.     Some highlights of the research outcomes include: (1) the machine learning model can accurately estimate performance requirements on a reference storage device with a relative error less than 15%; (2) when the storage system is a key-value store, the proposed technique (LSM-trie) can improve the read and write throughputs of GoogleÆs LevelDB by up to 10 and 20 times, respectively;  and (3) when the storage system is a key-value cache, the proposed technique (zExpander) can increase memcachedÆs effective cache size by up to 2 times and reduce miss ratio by up to 46%. Memcached is a state-of-the-art key-value cache system.     The broader impacts of the project are demonstrated by the prototyped systems, publications, as well as human resource training produced during execution of the project. In particular, the PI and his team prototyped four systems, one based on file systems (YouChoose), one based on key-value store (LSM-trie), and two based on key-value cache (Hippos and zExpander). All the systems have seen substantial performance advantages in their respective evaluations. The project has produced many papers published on IEEE, ACM, and USENIX conferences. These include two best student papers (one on MSSTÆ11 and one on IFIP Performance 2014).  At Wayne State University two Ph.D students and one Master student used this project as the major parts of their thesis work. All had successfully defended their theses and graduated. Three undergraduate students under-represented in today's CSE discipline (all are African-Americans) participated in the project. They learned skills for selecting and running benchmarks as well as collecting and analyzing measurements. A graduate-level topic course "ECE 7650 Scalable and Secure Internet Services and Architecture" was significantly revised to cover research results from this project.           Last Modified: 04/30/2016       Submitted by: Song Jiang]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

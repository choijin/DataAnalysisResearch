<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CPA-SEL-T:   Collaborative Research: Traceability+:   a Service Oriented Framework to Support Value-Added Software Traceability</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2008</AwardEffectiveDate>
<AwardExpirationDate>07/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>250000.00</AwardTotalIntnAmount>
<AwardAmount>281700</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Proposals: P0811140/P0810924/P0811021&lt;br/&gt;&lt;br/&gt;Title: Traceability+: a Service Oriented Framework to Support Value-Added Software Traceability&lt;br/&gt;&lt;br/&gt;PIs: Jane Hayes, Jane Huang, and Jonathan Maletic&lt;br/&gt;&lt;br/&gt;Traceability plays an important role in the development and assurance of software systems that permeate our society. It helps to assure that an as-built system correctly implements all requirements by supporting change impact assessment, re-engineering of applications, and other critical software engineering activities. Although previous work has focused on delivering point solutions that address specific traceability issues, this research will develop a new, powerful traceability model, Traceability+, that will deliver value-added traceability services designed to support diverse stakeholders as they perform critical software engineering activities. To accomplish this, the investigators will develop a new traceability query language and associated query mechanism, identify stakeholders' traceability-related needs, develop traceability services to meet those needs, build a knowledge base of traceability tasks and related queries, and handle varied data formats.   If successful, the research could transform the community?s understanding of traceability and its benefits across the software engineering lifecycle.  The evaluation of the proposed framework and dissemination of results is enhanced by having industry personnel actively participate as senior staff on the project and by an already-established Center of Excellence for Software Traceability.</AbstractNarration>
<MinAmdLetterDate>07/08/2008</MinAmdLetterDate>
<MaxAmdLetterDate>07/30/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0811140</AwardID>
<Investigator>
<FirstName>Jane</FirstName>
<LastName>Hayes</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jane E Hayes</PI_FULL_NAME>
<EmailAddress>hayes@cs.uky.edu</EmailAddress>
<PI_PHON>8592573171</PI_PHON>
<NSF_ID>000293689</NSF_ID>
<StartDate>07/08/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Kentucky Research Foundation</Name>
<CityName>Lexington</CityName>
<ZipCode>405260001</ZipCode>
<PhoneNumber>8592579420</PhoneNumber>
<StreetAddress>109 Kinkead Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Kentucky</StateName>
<StateCode>KY</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>KY06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>939017877</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF KENTUCKY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>007400724</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Kentucky Research Foundation]]></Name>
<CityName>Lexington</CityName>
<StateCode>KY</StateCode>
<ZipCode>405260001</ZipCode>
<StreetAddress><![CDATA[109 Kinkead Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Kentucky</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>KY06</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~250000</FUND_OBLG>
<FUND_OBLG>2009~7900</FUND_OBLG>
<FUND_OBLG>2010~10000</FUND_OBLG>
<FUND_OBLG>2011~6900</FUND_OBLG>
<FUND_OBLG>2012~6900</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Society is ever more reliant on software systems to perform important tasks, perhaps protecting human life and the environment.&nbsp; We refer to such systems as safety- or mission-critical.&nbsp;&nbsp; For example, a pacemaker has software that helps it perform required pacing of the heart.&nbsp; The tasks of these systems are defined in safety standards and subsequently requirements.&nbsp; These requirements must be fully realized by the code that developers write.&nbsp; In addition, it is important that the code be tested to ensure that the requirements or safety standards have been met.&nbsp; To accomplish this, we must know how these various items (we call them artifacts) relate to each other.&nbsp; We need to know that a specific safety standard (such as &ldquo;the pacemaker will only pace the heart if an event has been detected&rdquo; &ndash; a made up example) has been described as a software requirement (such as &ldquo;the pacemaker will pace the heart within 10 milliseconds of a detected heart event&rdquo; &ndash; a made up example) and is implemented in the code and then tested by a test case (image1).&nbsp; We call the relationships between these items <em>trace links </em>(image6).&nbsp; We use traceability techniques to generate such links in an automated fashion.&nbsp; Analysts must vet the links generated by automated tools in the case of these critical software systems.</p> <p>There has been research undertaken to automatically generate trace links between software artifacts.&nbsp; These techniques suffer from some accuracy issues, and there has been a lack of adoption or use of these techniques.&nbsp; Also, when software developers or other practitioners use the techniques, they often fail to keep their trace links up to date.&nbsp; Changes occur frequently in software projects, and the value of trace links is lost when outdated.&nbsp; Our work on this grant set out to help add value to the trace links for practitioners.&nbsp; Specifically, we sought to understand the different types of practitioners who use trace links so that we could best address their traceability needs.&nbsp; An example of such a practitioner or stakeholder is a safety analyst.&nbsp; A safety analyst has the job of making sure that a safety-critical product, such as a pacemaker, has met all the safety standards before it is approved for use.&nbsp; The safety analyst would thus use the trace links to ensure that all safety standards have been implemented and that the test cases for all requirements have passed.&nbsp;</p> <p>Our work looked at a number of different types of stakeholders and developed techniques to assist them with their work.&nbsp; Our research also looked at how practitioners work with automated trace link generation tools to decide which links they will keep as trace links (image2).&nbsp; This is akin to a person surfing the web and deciding which returned web pages are actually of interest based on the search string submitted.&nbsp; We also undertook various studies to empirically validate our work.&nbsp; As part of this grant, we sought to provide training opportunities for students and others, as well as to develop materials that could be used after the grant ends.&nbsp; We address these different areas below.</p> <p>The grant provided advances in these areas to assist practitioners with their work:</p> <ul> <li>Developed a technique for analysts who must determine if requirements have been satisfied (image3) by other software artifacts (such as low level requirements, design, etc.)</li> <li>Developed numerous enhanced techniques for generating trace links (using methods such as simple swarm, pheromone swarm, reinforcement learning (image4), semantic role enhanced queries)</li> <li>Developed a thesaurus building tool to enhance trace link generation</li> <li>Developed a tool to assist with analyzing a trace matrix</li> <li>Developed an enhanced tracing too...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Society is ever more reliant on software systems to perform important tasks, perhaps protecting human life and the environment.  We refer to such systems as safety- or mission-critical.   For example, a pacemaker has software that helps it perform required pacing of the heart.  The tasks of these systems are defined in safety standards and subsequently requirements.  These requirements must be fully realized by the code that developers write.  In addition, it is important that the code be tested to ensure that the requirements or safety standards have been met.  To accomplish this, we must know how these various items (we call them artifacts) relate to each other.  We need to know that a specific safety standard (such as "the pacemaker will only pace the heart if an event has been detected" &ndash; a made up example) has been described as a software requirement (such as "the pacemaker will pace the heart within 10 milliseconds of a detected heart event" &ndash; a made up example) and is implemented in the code and then tested by a test case (image1).  We call the relationships between these items trace links (image6).  We use traceability techniques to generate such links in an automated fashion.  Analysts must vet the links generated by automated tools in the case of these critical software systems.  There has been research undertaken to automatically generate trace links between software artifacts.  These techniques suffer from some accuracy issues, and there has been a lack of adoption or use of these techniques.  Also, when software developers or other practitioners use the techniques, they often fail to keep their trace links up to date.  Changes occur frequently in software projects, and the value of trace links is lost when outdated.  Our work on this grant set out to help add value to the trace links for practitioners.  Specifically, we sought to understand the different types of practitioners who use trace links so that we could best address their traceability needs.  An example of such a practitioner or stakeholder is a safety analyst.  A safety analyst has the job of making sure that a safety-critical product, such as a pacemaker, has met all the safety standards before it is approved for use.  The safety analyst would thus use the trace links to ensure that all safety standards have been implemented and that the test cases for all requirements have passed.   Our work looked at a number of different types of stakeholders and developed techniques to assist them with their work.  Our research also looked at how practitioners work with automated trace link generation tools to decide which links they will keep as trace links (image2).  This is akin to a person surfing the web and deciding which returned web pages are actually of interest based on the search string submitted.  We also undertook various studies to empirically validate our work.  As part of this grant, we sought to provide training opportunities for students and others, as well as to develop materials that could be used after the grant ends.  We address these different areas below.  The grant provided advances in these areas to assist practitioners with their work:  Developed a technique for analysts who must determine if requirements have been satisfied (image3) by other software artifacts (such as low level requirements, design, etc.) Developed numerous enhanced techniques for generating trace links (using methods such as simple swarm, pheromone swarm, reinforcement learning (image4), semantic role enhanced queries) Developed a thesaurus building tool to enhance trace link generation Developed a tool to assist with analyzing a trace matrix Developed an enhanced tracing tool to study how analysts work with suggested or candidate trace links (image5)   The grant provided broader outcomes through information dissemination, training, professional development, and outreach:  Developed data sets that can be used by other researchers (www.coest.org) Developed ...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

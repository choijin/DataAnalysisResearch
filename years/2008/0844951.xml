<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Design Automation for High-Performance Reconfigurable Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/15/2009</AwardEffectiveDate>
<AwardExpirationDate>06/30/2016</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>495750</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>In a heterogeneous execution model, a general-purpose processor is accelerated by a special-purpose co-processor.  For many applications, this approach can yield significant performance improvement at a relatively low cost.  The most significant challenge for heterogeneous computing is the task of matching an arbitrary program to an effective co-processor architecture.  This project investigates top-down design automation techniques for analyzing and adapting existing software to the heterogeneous execution model.&lt;br/&gt;&lt;br/&gt;When adapting scientific software to a heterogeneous computing platform, the software?s most expensive computation is performed on the co-processor, which is usually a custom-designed architecture implemented on an FPGA.  This computation, referred to as the kernel, is usually a well-known numerical method or signal transformation.  Scientific applications that rely on more exotic or obscure algorithms are rarely adapted for heterogeneous execution.  One reason for this is that such applications may not have a well-defined kernel computation, making it difficult to determine which portions of the software, when mapped to the co-processor, will result in the highest overall performance improvement.  Another reason is that manually designing special-purpose hardware that performs complex, iterative behavior requires a high level of design effort as well as a high level of expertise in both hardware design and in the specifics of the target application.  To address these problems, this research develops a set of systematic techniques for analyzing the runtime behavior of software to determine which components of the software perform the most computation using the least volume of input and output data.  The results of this analysis are used to perform hardware/software partitioning and to resolve dynamic memory references.  In the next step, a compiler back-end will generate a finely-parallelized co-processor architecture.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/02/2009</MinAmdLetterDate>
<MaxAmdLetterDate>06/16/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0844951</AwardID>
<Investigator>
<FirstName>Jason</FirstName>
<LastName>Bakos</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jason D Bakos</PI_FULL_NAME>
<EmailAddress>jbakos@cse.sc.edu</EmailAddress>
<PI_PHON>8037778627</PI_PHON>
<NSF_ID>000284090</NSF_ID>
<StartDate>07/02/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University South Carolina Research Foundation</Name>
<CityName>COLUMBIA</CityName>
<ZipCode>292080001</ZipCode>
<PhoneNumber>8037777093</PhoneNumber>
<StreetAddress>1600 Hampton Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 414]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>South Carolina</StateName>
<StateCode>SC</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>SC06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>111310249</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>SOUTH CAROLINA RESEARCH FOUNDATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of South Carolina at Columbia]]></Name>
<CityName>COLUMBIA</CityName>
<StateCode>SC</StateCode>
<ZipCode>292080001</ZipCode>
<StreetAddress><![CDATA[Sponsored Awards Management]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>South Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>SC06</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramElement>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~264411</FUND_OBLG>
<FUND_OBLG>2010~36750</FUND_OBLG>
<FUND_OBLG>2012~91684</FUND_OBLG>
<FUND_OBLG>2013~74905</FUND_OBLG>
<FUND_OBLG>2014~12000</FUND_OBLG>
<FUND_OBLG>2015~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>During the course of this project the PI's team worked to advance the state of the art in several aspects of high performance reconfigurable computing.&nbsp; This project has yielded a book, a patent, 10 journal papers, 16 refereed conference papers (in total comprising at least 385 citations according to Google Scholar), and has supported the training and graduation of seven Ph.D. students, two M.S. students, and nine B.S. students (supported under REU supplements).&nbsp; This project also facilitated a funded collaboration between the PI's group and Texas Instruments Corporation, in which the PI's group leveraged work from this project to map and evaluate the same application set on TI's new Digital Signal Processor (DSP) technology.</p> <p>Intellectual Merits:&nbsp; This project's objective was to develop general purpose design synthesis methods to facilitate the practical usage of Field Programmable Gate Arrays (FPGAs) as an emerging processor technology to improve the performance and energy efficiency of high-performance scientific computing technology.&nbsp; Our approach was to develop these methods in tandem with mapping and evaluating applications on a variety of state-of-the-art FPGA-based computing platforms.</p> <p>The PI and his team developed and characterized FPGA architectures, as well as GPU and DSP codes for comparative evaluation, in the areas of linear algebra (see Figs. 1 and 2), graph algorithms, logic synthesis, frequent itemset mining (see Fig. 3), genomic analysis (see Fig. 4), and computer vision.&nbsp; From mapping these applications, the PI and his team developed design automation methods for optimizing memory-intensive designs, such as congestion-minimized pipeline synthesis (see Figs. 5 and 6), and memory interface synthesis for automating the DRAM scheduling, data reuse, and latency hiding.</p> <p>Broader Impacts:&nbsp; The PI leveraged the experiences gained from this project to develop courses in advanced computer architecture and embedded system design, as well as write a textbook on embedded systems programming.&nbsp; Students who have graduated from the PI's group have gone to successful careers at a U.S. National Lab and major corporations such as Google, Qualcomm, SK Hynix, Imagination Technology, and Altera.</p><br> <p>            Last Modified: 09/22/2016<br>      Modified by: Jason&nbsp;D&nbsp;Bakos</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561806072_fig1--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561806072_fig1--rgov-800width.jpg" title="Accumulator Design"><img src="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561806072_fig1--rgov-66x44.jpg" alt="Accumulator Design"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Design of a specialized floating-point accumulator that uses denormalized addition to reduce the critical path latency</div> <div class="imageCredit">Jason D. Bakos</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Jason&nbsp;D&nbsp;Bakos</div> <div class="imageTitle">Accumulator Design</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561881816_fig2--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561881816_fig2--rgov-800width.jpg" title="Floating-point accumulator"><img src="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561881816_fig2--rgov-66x44.jpg" alt="Floating-point accumulator"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Adaptive error compensation for floating-point summation</div> <div class="imageCredit">Jason D. Bakos</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Jason&nbsp;D&nbsp;Bakos</div> <div class="imageTitle">Floating-point accumulator</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561927982_fig3--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561927982_fig3--rgov-800width.jpg" title="FPGA-Based FIM Design"><img src="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561927982_fig3--rgov-66x44.jpg" alt="FPGA-Based FIM Design"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Frequent Itemset Mining (FIM) design:  uses compressed intermediate data stored on scratchmad memory</div> <div class="imageCredit">Jason D. Bakos</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Jason&nbsp;D&nbsp;Bakos</div> <div class="imageTitle">FPGA-Based FIM Design</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561989351_fig4--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561989351_fig4--rgov-800width.jpg" title="FPGA-Based Breakpoint Median"><img src="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474561989351_fig4--rgov-66x44.jpg" alt="FPGA-Based Breakpoint Median"></a> <div class="imageCaptionContainer"> <div class="imageCaption">FPGA architecture for calculating the lower bound in the breakpoint median algorithm, the core computation of parsimony-based phylogeny reconstruction of gene-order data</div> <div class="imageCredit">Jason D. Bakos</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Jason&nbsp;D&nbsp;Bakos</div> <div class="imageTitle">FPGA-Based Breakpoint Median</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474562044038_fig5--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474562044038_fig5--rgov-800width.jpg" title="Pipeline Synthesis"><img src="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474562044038_fig5--rgov-66x44.jpg" alt="Pipeline Synthesis"></a> <div class="imageCaptionContainer"> <div class="imageCaption">RTL structure of the same synthesized expression having the minium number of functional units but with different interconnect densities</div> <div class="imageCredit">Jason D. Bakos</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Jason&nbsp;D&nbsp;Bakos</div> <div class="imageTitle">Pipeline Synthesis</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474562118831_fig6--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474562118831_fig6--rgov-800width.jpg" title="Synthesis of MrBayes Pipeline"><img src="/por/images/Reports/POR/2016/0844951/0844951_10026916_1474562118831_fig6--rgov-66x44.jpg" alt="Synthesis of MrBayes Pipeline"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Fig. 6.  Data-flow graph (DFG) of the kernel function for Bayesian Phyolenegic Inferrence (left), corresponding synthesized RTL (right)</div> <div class="imageCredit">Jason D. Bakos</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Jason&nbsp;D&nbsp;Bakos</div> <div class="imageTitle">Synthesis of MrBayes Pipeline</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ During the course of this project the PI's team worked to advance the state of the art in several aspects of high performance reconfigurable computing.  This project has yielded a book, a patent, 10 journal papers, 16 refereed conference papers (in total comprising at least 385 citations according to Google Scholar), and has supported the training and graduation of seven Ph.D. students, two M.S. students, and nine B.S. students (supported under REU supplements).  This project also facilitated a funded collaboration between the PI's group and Texas Instruments Corporation, in which the PI's group leveraged work from this project to map and evaluate the same application set on TI's new Digital Signal Processor (DSP) technology.  Intellectual Merits:  This project's objective was to develop general purpose design synthesis methods to facilitate the practical usage of Field Programmable Gate Arrays (FPGAs) as an emerging processor technology to improve the performance and energy efficiency of high-performance scientific computing technology.  Our approach was to develop these methods in tandem with mapping and evaluating applications on a variety of state-of-the-art FPGA-based computing platforms.  The PI and his team developed and characterized FPGA architectures, as well as GPU and DSP codes for comparative evaluation, in the areas of linear algebra (see Figs. 1 and 2), graph algorithms, logic synthesis, frequent itemset mining (see Fig. 3), genomic analysis (see Fig. 4), and computer vision.  From mapping these applications, the PI and his team developed design automation methods for optimizing memory-intensive designs, such as congestion-minimized pipeline synthesis (see Figs. 5 and 6), and memory interface synthesis for automating the DRAM scheduling, data reuse, and latency hiding.  Broader Impacts:  The PI leveraged the experiences gained from this project to develop courses in advanced computer architecture and embedded system design, as well as write a textbook on embedded systems programming.  Students who have graduated from the PI's group have gone to successful careers at a U.S. National Lab and major corporations such as Google, Qualcomm, SK Hynix, Imagination Technology, and Altera.       Last Modified: 09/22/2016       Submitted by: Jason D Bakos]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

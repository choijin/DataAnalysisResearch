<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Efficient Graph Algorithms and Data Structures - Theory and Practice</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>158000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Balasubramanian Kalyanasundaram</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Algorithms are at the core of computer science.  The goal of this research is to design and analyze algorithms for a selection of important and interesting algorithmic problems, chosen primarily from the area of graphs and networks.  The ideal is to obtain algorithms that are efficient in theory and practice, and conceptually simple as well -- in short, "elegant" algorithms.  For each problem, a systematic exploration of possible solutions will be undertaken.  Specific problems to be studied will be selected from among dynamic topological ordering and related problems, planarity testing and related graph problems and data structures, maximum and minimum cost network flow problems, amortized efficiency of binary search trees and related data structures, finding dominators and related problems, and others.  The broad impact of the research will be to shed new light on the design space of solutions for specific algorithmic problems and families of problems, to produce new algorithmic and analytical techniques, to provide efficient implementations of old and new algorithms, and to produce comparisions of their empirical performance.  In addition, new members of the research and teaching community in the field of algorithm  design will be trained, and new approaches and new materials for communicating the important concepts in the field will be developed.</AbstractNarration>
<MinAmdLetterDate>07/22/2008</MinAmdLetterDate>
<MaxAmdLetterDate>05/10/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0830676</AwardID>
<Investigator>
<FirstName>Robert</FirstName>
<LastName>Tarjan</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Robert E Tarjan</PI_FULL_NAME>
<EmailAddress>ret@cs.princeton.edu</EmailAddress>
<PI_PHON>6092584797</PI_PHON>
<NSF_ID>000464998</NSF_ID>
<StartDate>07/22/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<StreetAddress2><![CDATA[P.O. Box 36]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NJ12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>002484665</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF PRINCETON UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002484665</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Princeton University]]></Name>
<CityName>Princeton</CityName>
<StateCode>NJ</StateCode>
<ZipCode>085442020</ZipCode>
<StreetAddress><![CDATA[Off. of Research &amp; Proj. Adm]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NJ12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~150000</FUND_OBLG>
<FUND_OBLG>2010~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project was part of ongoing work by the P.I. to systematically explore the design space of fundamental computer algorithms and data structures, with the goal of developing the simplest and most efficient methods and making these methods available to practitioners through courses, publications, and course materials. &nbsp;The research resulted in the discovery of new, better foms of search trees, which underly all database systems. &nbsp;It also produced new analytical tools for analyzing the efficiency of search trees and other kinds of data structures. &nbsp;These methods show that the new kinds of search trees are especially suitable for high-performance, concurrent implementation, since most of the updating takes place near the leaves of the tree, far from the root.</p> <p>The work also produced a new, simpler form of heap (priority queue), a data structure useful in simulation event systems, sorting, and other applications. &nbsp; This data structure is appropriate for use in simulation event systems, which keep track of the flow of events as time passes.</p> <p>In addition to new data structures, several new graph algorithms were developed. &nbsp;Thse included algorithms for testing for cyclic dependencies in a set of binary dependencies that is changing over time. &nbsp;This problem arises in verification systems based on satisfiability solvers, and in project analysis (a circular dependency among subprojects indicates that the overall project cannot be completed).</p> <p>Another graph problem studied was the maximum flow-minimum cut problem, for which a new algorithm was developed. &nbsp;This algorithm uses an incremental form of graph searching, which may be useful in other applications. &nbsp;The maximum flow algorithm is especially suited for vision applications, of which there are many.</p> <p>The data structures, algorithms, and analysis methods developed with the support of this grant have been included in courses and course materials at Princeton University.&nbsp;</p><br> <p>            Last Modified: 12/19/2011<br>      Modified by: Robert&nbsp;E&nbsp;Tarjan</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project was part of ongoing work by the P.I. to systematically explore the design space of fundamental computer algorithms and data structures, with the goal of developing the simplest and most efficient methods and making these methods available to practitioners through courses, publications, and course materials.  The research resulted in the discovery of new, better foms of search trees, which underly all database systems.  It also produced new analytical tools for analyzing the efficiency of search trees and other kinds of data structures.  These methods show that the new kinds of search trees are especially suitable for high-performance, concurrent implementation, since most of the updating takes place near the leaves of the tree, far from the root.  The work also produced a new, simpler form of heap (priority queue), a data structure useful in simulation event systems, sorting, and other applications.   This data structure is appropriate for use in simulation event systems, which keep track of the flow of events as time passes.  In addition to new data structures, several new graph algorithms were developed.  Thse included algorithms for testing for cyclic dependencies in a set of binary dependencies that is changing over time.  This problem arises in verification systems based on satisfiability solvers, and in project analysis (a circular dependency among subprojects indicates that the overall project cannot be completed).  Another graph problem studied was the maximum flow-minimum cut problem, for which a new algorithm was developed.  This algorithm uses an incremental form of graph searching, which may be useful in other applications.  The maximum flow algorithm is especially suited for vision applications, of which there are many.  The data structures, algorithms, and analysis methods developed with the support of this grant have been included in courses and course materials at Princeton University.        Last Modified: 12/19/2011       Submitted by: Robert E Tarjan]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ExPert: dynamic analysis based fault location via Execution Perturbations</AwardTitle>
<AwardEffectiveDate>01/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2011</AwardExpirationDate>
<AwardAmount>196051</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Krishna Kant</SignBlockName>
</ProgramOfficer>
<AbstractNarration>ExPert: dynamic analysis based fault location via Execution Perturbations&lt;br/&gt;&lt;br/&gt;Abstract&lt;br/&gt;&lt;br/&gt;This project is studying dynamic characteristics of runs of faulty programs and&lt;br/&gt;designing promising dynamic analysis techniques to identify executed program&lt;br/&gt;statements where a fault lies, i.e. the fault candidate set. To narrow the set of&lt;br/&gt;statements in the fault candidate set, an array of automated dynamic analyses are&lt;br/&gt;being used in conjunction with each other. These analyses consider not only the&lt;br/&gt;failed run but also execution perturbations of this faulty run. The goal of this&lt;br/&gt;work is to focus the users attention on a small subset of statements in the&lt;br/&gt;fault candidate state. Identification of fault candidate set is based upon&lt;br/&gt;uncovering of two types of evidence: negative evidence and positive evidence.  &lt;br/&gt;A negative evidence is considered as an indicator that leads to the conclusion &lt;br/&gt;that a value encountered during a failed program run is related to the program's &lt;br/&gt;failure. Positive evidence on the other hand indicates that some of the values &lt;br/&gt;computed during a failed run are in fact correct. Through a combination of negative&lt;br/&gt;and positive evidence we aim to produce a small fault candidate set. As part of &lt;br/&gt;this work we are identifying new sources of evidence. We are also carrying out a &lt;br/&gt;systematic integration of above dynamic analyses technology into a practical &lt;br/&gt;debugging environment.</AbstractNarration>
<MinAmdLetterDate>12/20/2007</MinAmdLetterDate>
<MaxAmdLetterDate>06/18/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0810906</AwardID>
<Investigator>
<FirstName>Rajiv</FirstName>
<LastName>Gupta</LastName>
<EmailAddress>gupta@cs.ucr.edu</EmailAddress>
<StartDate>12/20/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Riverside</Name>
<CityName>RIVERSIDE</CityName>
<ZipCode>925210217</ZipCode>
<PhoneNumber>9518275535</PhoneNumber>
<StreetAddress>Research &amp; Economic Development</StreetAddress>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
</Institution>
<ProgramElement>
<Code>7354</Code>
<Text>Computer Systems Research (CSR</Text>
</ProgramElement>
<ProgramReference>
<Code>2884</Code>
<Text>NEXT GENERATION SOFTWARE PROGR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

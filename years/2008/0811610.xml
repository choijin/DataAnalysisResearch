<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle> CPA-SEL: Better Tools for Software Understanding</AwardTitle>
<AwardEffectiveDate>07/01/2008</AwardEffectiveDate>
<AwardExpirationDate>06/30/2012</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>316000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>TITLE: Betters Tools for Software Understanding&lt;br/&gt;PI: Brad A. Myers, Carnegie Mellon University&lt;br/&gt;&lt;br/&gt;Understanding software is a prerequisite to taking any action to change it, and this remains expensive and error-prone.  Research with programmers in the field has identified significant barriers to understanding.  Lab and field studies of usability barriers in understanding and using APIs will result in models of how developers understand the design of the objects.  These results will lead to new software tools for API exploration and understanding.  Work on enabling people to better understand and fix bugs through new visualizations and interaction techniques will allow them to ask "Why" and "Why Not" questions about their code, with the answer visualizing the responsible code and dataflow.  New tools will support understanding code by others during reverse engineering activities, focusing on how data and control can flow through large and complex programs.  Using static analysis techniques and a new "WhatTree" visualization will allow programmers to investigate the update paths of their programs, while supporting the programmers in collecting and keeping track of facts and hypotheses about how the program operates.  The results will improve programmer success and thus their overall productivity.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/06/2008</MinAmdLetterDate>
<MaxAmdLetterDate>04/10/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0811610</AwardID>
<Investigator>
<FirstName>Brad</FirstName>
<LastName>Myers</LastName>
<EmailAddress>bam@cs.cmu.edu</EmailAddress>
<StartDate>06/06/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

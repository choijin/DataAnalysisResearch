<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:  Scalable and Systematic Test Authoring and Maintenance</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2009</AwardEffectiveDate>
<AwardExpirationDate>12/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>425000.00</AwardTotalIntnAmount>
<AwardAmount>425000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The most commonly used methodology for validating the quality of software is testing.  Conceptually, testing is simple.  In practice, however, testing has two key limitations: it is expensive, often amounting to over a half of the development cost, and ineffective, often failing to find crucial bugs that can cause significant damage.&lt;br/&gt;&lt;br/&gt;This project addresses these limitations by developing a novel test automation framework based on test summaries -- abstract properties of desired tests.  Developers write summaries as logical constraints that define desired inputs and properties to check, and the tools perform testing against dense suites that are likely to find many bugs.  The project develops: (1) core algorithms for effective systematic testing, which generate high quality inputs, perform deep white-box checking, and synthesize executable test oracles; (2) optimization strategies for efficient systematic testing, which scale it to large applications; (3) incremental techniques for supporting evolution, which provide efficient test updates with respect to code changes; and (4) infrastructure support for enhancing usability, which assists developers with writing test summaries.  Case studies using a variety of applications are used for evaluation.&lt;br/&gt;&lt;br/&gt;Systematic testing using test summaries will substantially increase test coverage and accuracy, which will significantly improve software quality. The PI's industrial collaborations and participation in UT's Executive Masters program enable a swift technology transfer to industry.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/28/2009</MinAmdLetterDate>
<MaxAmdLetterDate>07/02/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0845628</AwardID>
<Investigator>
<FirstName>Sarfraz</FirstName>
<LastName>Khurshid</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sarfraz Khurshid</PI_FULL_NAME>
<EmailAddress>khurshid@ece.utexas.edu</EmailAddress>
<PI_PHON>5124718244</PI_PHON>
<NSF_ID>000095313</NSF_ID>
<StartDate>07/28/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName>Austin</CityName>
<StateCode>TX</StateCode>
<ZipCode>787595316</ZipCode>
<StreetAddress><![CDATA[3925 W Braker Lane, Ste 3.340]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~85000</FUND_OBLG>
<FUND_OBLG>2010~85000</FUND_OBLG>
<FUND_OBLG>2011~85000</FUND_OBLG>
<FUND_OBLG>2012~85000</FUND_OBLG>
<FUND_OBLG>2013~85000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This CAREER project developed and evaluated novel techniques and tools for more effective and efficient testing of software systems using test summaries, i.e., abstract properties of desired tests. &nbsp;Test summaries enable a systematic, intent-driven approach that allows the developers to focus on the creative aspect of designing tests and test strategies (based on, for example, the source code or their intuition) while the tools perform the tedious tasks, such as creating and running concrete tests. &nbsp;The project findings include the following: (1) test summaries can be written in notations that are flexible, intuitive, and based on familiar constructs, and analyzed automatically; (2) automated test generation can find subtle bugs in a variety of programs, such as analysis tools, web browsers, and SSL/TLS validation libraries; and (3) incremental techniques can enable more efficient systematic analysis as the systems evolve.</p> <p>This project provided a foundation for: (1) 10 completed PhD dissertations (including 2 by female students) and 9 Masters theses (including 5 by female students), which were (co-)supervised by the PI; (2) course material for testing and verification classes taught by the PI to more than 600 undergraduate and graduate students at the University of Texas at Austin (UT), including over 170 practitioners who enrolled in UT's executive Masters program in software engineering; and (3) over 60 peer-reviewed publications at software engineering, software testing, programming languages, and security venues, including ASE, FSE, ICSE, ICST, ISSTA, OOPSLA, PLDI, S&amp;P (Oakland), TACAS, TOSEM, and TSE; two of these publications won awards at ICSE 2010 and at S&amp;P (Oakland) 2014. &nbsp;Moreover, two of PI's co-authored papers that formed the basis of this project's proposal were recognized by the research community for their influence, and received the 2012 ACM SIGSOFT Impact Paper Award and 2015 Automated Software Engineering Most Influential Paper Award.</p><br> <p>            Last Modified: 05/03/2016<br>      Modified by: Sarfraz&nbsp;Khurshid</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This CAREER project developed and evaluated novel techniques and tools for more effective and efficient testing of software systems using test summaries, i.e., abstract properties of desired tests.  Test summaries enable a systematic, intent-driven approach that allows the developers to focus on the creative aspect of designing tests and test strategies (based on, for example, the source code or their intuition) while the tools perform the tedious tasks, such as creating and running concrete tests.  The project findings include the following: (1) test summaries can be written in notations that are flexible, intuitive, and based on familiar constructs, and analyzed automatically; (2) automated test generation can find subtle bugs in a variety of programs, such as analysis tools, web browsers, and SSL/TLS validation libraries; and (3) incremental techniques can enable more efficient systematic analysis as the systems evolve.  This project provided a foundation for: (1) 10 completed PhD dissertations (including 2 by female students) and 9 Masters theses (including 5 by female students), which were (co-)supervised by the PI; (2) course material for testing and verification classes taught by the PI to more than 600 undergraduate and graduate students at the University of Texas at Austin (UT), including over 170 practitioners who enrolled in UT's executive Masters program in software engineering; and (3) over 60 peer-reviewed publications at software engineering, software testing, programming languages, and security venues, including ASE, FSE, ICSE, ICST, ISSTA, OOPSLA, PLDI, S&amp;P (Oakland), TACAS, TOSEM, and TSE; two of these publications won awards at ICSE 2010 and at S&amp;P (Oakland) 2014.  Moreover, two of PI's co-authored papers that formed the basis of this project's proposal were recognized by the research community for their influence, and received the 2012 ACM SIGSOFT Impact Paper Award and 2015 Automated Software Engineering Most Influential Paper Award.       Last Modified: 05/03/2016       Submitted by: Sarfraz Khurshid]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

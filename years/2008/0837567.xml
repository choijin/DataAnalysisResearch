<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Integrating Functional Program Verification Techniques to Computer Science Programs</AwardTitle>
<AwardEffectiveDate>05/15/2009</AwardEffectiveDate>
<AwardExpirationDate>04/30/2013</AwardExpirationDate>
<AwardTotalIntnAmount>149959.00</AwardTotalIntnAmount>
<AwardAmount>149959</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Paul Tymann</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Computer Science (31)&lt;br/&gt;&lt;br/&gt;The fundamental goal of this project is to raise the competence of software developers to create and verify reliable software by improving the ability of undergraduate computer science students in reasoning about the correctness of computer programs. To reach this goal, this project has one technical objective and two educational objectives. The technical research objective is to develop practical verification techniques suitable for teaching in undergraduate computer science courses. The educational research objectives are to develop and disseminate learning modules and materials on program verification and to integrate formal program verification - reasoning based on mathematics - into the undergraduate computer science and engineering curriculum.&lt;br/&gt;&lt;br/&gt;The mathematics to achieve this project's educational goals of integrating program verification into the undergraduate curriculum is through the use of sets and functions. An annotation notation incorporating recent advances in specification languages is developed to document programs as functions from input values to output values. The annotation notation supports a spectrum of formality, from informal to fully mathematical, to assist an incremental integration into the curriculum. A functional verification approach, which supports a natural, intuitive, forward reasoning, is extended for modular verification of object-oriented programs, and lightweight tools are developed for teaching and learning functional specification and verification. An incremental integration to the curriculum is achieved by first delivering an experimental course on program verification and then, using this experience as a guide, introducing problem-based learning modules throughout undergraduate courses. The approach is demonstrated by integrating modules into the undergraduate computer science curriculum from the introductory courses to the senior capstone course.</AbstractNarration>
<MinAmdLetterDate>05/08/2009</MinAmdLetterDate>
<MaxAmdLetterDate>05/08/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0837567</AwardID>
<Investigator>
<FirstName>Steven</FirstName>
<LastName>Roach</LastName>
<EmailAddress>sroach@utep.edu</EmailAddress>
<StartDate>05/08/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Yoonsik</FirstName>
<LastName>Cheon</LastName>
<EmailAddress>ycheon@utep.edu</EmailAddress>
<StartDate>05/08/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at El Paso</Name>
<CityName>El Paso</CityName>
<ZipCode>799680001</ZipCode>
<PhoneNumber>9157475680</PhoneNumber>
<StreetAddress>ADMIN BLDG RM 209</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
</Institution>
<FoaInformation>
<Code>0116000</Code>
<Name>Human Subjects</Name>
</FoaInformation>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7494</Code>
<Text>CCLI-Type 1 (Exploratory)</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
</Award>
</rootTag>

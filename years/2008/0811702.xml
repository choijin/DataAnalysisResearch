<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CPA-CSA:   Accelerating Architectural-level, Full-system Multiprocessor Simulations using FPGAs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/15/2008</AwardEffectiveDate>
<AwardExpirationDate>06/30/2012</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>314000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ahmed Louri</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;The programmability challenges to general-purpose parallel computing desperately need computer hardware and software researchers to work together on the solutions. However, the unacceptably slow speed of current full-system simulators limits the multiprocessor/multi-core research.&lt;br/&gt;&lt;br/&gt;The proposed ProtoFlex project develops an FPGA-accelerated simulation technology to deliver the necessary simulation performance to enable full-scale software research on top of simulated experimental architectures. ProtoFlex simulators are not FPGA prototypes. The ProtoFlex simulation architecture relies on hardware virtualization to achieve full-system fidelity and system scalability, while mitigating the complexities associated with conventional FPGA prototyping.  This project will develop a hybrid simulation with transplanting and with interleaving of multiple processor contexts, with the goal to decouple the required complexity of the hardware construction from the complexity of a very large target multiprocessor system.  This project will also investigate in-hardware techniques for real-time, deep instrumentation and analysis of simulation events.   &lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/17/2008</MinAmdLetterDate>
<MaxAmdLetterDate>05/21/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0811702</AwardID>
<Investigator>
<FirstName>James</FirstName>
<LastName>Hoe</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>James Hoe</PI_FULL_NAME>
<EmailAddress>jhoe@cmu.edu</EmailAddress>
<PI_PHON>4122684259</PI_PHON>
<NSF_ID>000464902</NSF_ID>
<StartDate>06/17/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie-Mellon University]]></Name>
<CityName>PITTSBURGH</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133815</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4715</Code>
<Text>COMPUTER SYSTEMS ARCHITECTURE</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~300000</FUND_OBLG>
<FUND_OBLG>2009~6000</FUND_OBLG>
<FUND_OBLG>2010~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Background</strong></p> <p>In the ProtoFlex project, we developed a practical approach to accelerate the simulation of a multicore processor using FPGAs. The ProtoFlex approach centers on the concept of &lsquo;virtualization&rsquo; to decouple the complexity of the emulated multicore target from the implementation complexity of its FPGA-accelerated simulator. &nbsp;In the current effort presented below, we extended the ProtoFlex approach by expanding our simulation capabilities and addressing new challenges in simulating the &ldquo;uncore&rdquo; portion of the multicore.&nbsp;</p> <p><strong>Instrumenting FPGA-based Simulations&nbsp;[CPN09]</strong></p> <p>The ProtoFlex simulation architecture offers significant advantages over conventional software-based simulation tools when high performance fine-grain instrumentation is necessary.&nbsp; While conventional software-based full-system simulators suffers dramatic slowdowns (of up to 10x or more), FPGAs offer a parallel substrate for carrying out such monitoring activity with minimal interference to the instruction execution performance.&nbsp;</p> <p>We developed new monitoring tools on top of the baseline ProtoFlex FPGA-accelerated simulator (which models a 16-way UltraSPARC III symmetric multiprocessor server on a single FPGA). The first form of instrumentation provides computer architects with the means to simulate realistic CMP functional cache configurations for the purposes of performance monitoring. In addition, such tool can also be used to provide checkpointing of state for accelerated sampling-based cycle-accurate simulations.&nbsp; We demonstrated that such instrumentation can be carried out at very high speeds with minimal impact on the baseline simulator performance (less than 10% overhead).</p> <p><strong>Accelerating Network-on-Chip Simulation&nbsp;&nbsp;[PHO11]</strong></p> <p>We developed an FPGA-accelerated uncore simulation framework to be used in conjunction with the ProtoFlex core models to support uncore design evaluation and exploration using realistic full-system application workloads. We have investigated a new hybrid analytical network-on-chip (NoC) simulation approach that delivers a desired level of accuracy at a high throughput and low implementation cost.</p> <p>At an abstract level, any type of interconnection network, regardless of topology, can be decomposed into a set of routers that are connected by a set of links. At this abstract level, all buffering and logic within the network is contained inside the network router, which can be viewed as a black box with a set of input and output ports. &nbsp; We borrow an idea from analytical network modeling where for a given configuration and traffic pattern, each network router is modeled only as a set of delay-load curves. These delay-load curves, obtained by off-line training using a high-fidelity software-based network simulator, relate the injection load at the input ports of a network router against the average latency of a packet going through this router. After a packet is injected at the edge of the network, it is processed by routing logic that determines which routers are traversed by this packet.&nbsp; The affected routers are updated to reflect the increased load caused by this packet.&nbsp; The packet is assigned a network latency by summing up the estimated delays returned by the affected routers.&nbsp;</p> <p>We have been able to obtain good correspondence between this analytical approach and a traditional high-fidelity network simulation in determining packet latency and network hotspots under different loads and traffic patterns.&nbsp; We have implemented both software and FPGA-accelerated versions of this hybrid analytical simulation model.&nbsp; We have shown by experimentation that the performance and accuracy of this hybrid analytical NoC simulation is very suitable for supporting system-level multicore performa...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Background  In the ProtoFlex project, we developed a practical approach to accelerate the simulation of a multicore processor using FPGAs. The ProtoFlex approach centers on the concept of ævirtualizationÆ to decouple the complexity of the emulated multicore target from the implementation complexity of its FPGA-accelerated simulator.  In the current effort presented below, we extended the ProtoFlex approach by expanding our simulation capabilities and addressing new challenges in simulating the "uncore" portion of the multicore.   Instrumenting FPGA-based Simulations [CPN09]  The ProtoFlex simulation architecture offers significant advantages over conventional software-based simulation tools when high performance fine-grain instrumentation is necessary.  While conventional software-based full-system simulators suffers dramatic slowdowns (of up to 10x or more), FPGAs offer a parallel substrate for carrying out such monitoring activity with minimal interference to the instruction execution performance.   We developed new monitoring tools on top of the baseline ProtoFlex FPGA-accelerated simulator (which models a 16-way UltraSPARC III symmetric multiprocessor server on a single FPGA). The first form of instrumentation provides computer architects with the means to simulate realistic CMP functional cache configurations for the purposes of performance monitoring. In addition, such tool can also be used to provide checkpointing of state for accelerated sampling-based cycle-accurate simulations.  We demonstrated that such instrumentation can be carried out at very high speeds with minimal impact on the baseline simulator performance (less than 10% overhead).  Accelerating Network-on-Chip Simulation  [PHO11]  We developed an FPGA-accelerated uncore simulation framework to be used in conjunction with the ProtoFlex core models to support uncore design evaluation and exploration using realistic full-system application workloads. We have investigated a new hybrid analytical network-on-chip (NoC) simulation approach that delivers a desired level of accuracy at a high throughput and low implementation cost.  At an abstract level, any type of interconnection network, regardless of topology, can be decomposed into a set of routers that are connected by a set of links. At this abstract level, all buffering and logic within the network is contained inside the network router, which can be viewed as a black box with a set of input and output ports.   We borrow an idea from analytical network modeling where for a given configuration and traffic pattern, each network router is modeled only as a set of delay-load curves. These delay-load curves, obtained by off-line training using a high-fidelity software-based network simulator, relate the injection load at the input ports of a network router against the average latency of a packet going through this router. After a packet is injected at the edge of the network, it is processed by routing logic that determines which routers are traversed by this packet.  The affected routers are updated to reflect the increased load caused by this packet.  The packet is assigned a network latency by summing up the estimated delays returned by the affected routers.   We have been able to obtain good correspondence between this analytical approach and a traditional high-fidelity network simulation in determining packet latency and network hotspots under different loads and traffic patterns.  We have implemented both software and FPGA-accelerated versions of this hybrid analytical simulation model.  We have shown by experimentation that the performance and accuracy of this hybrid analytical NoC simulation is very suitable for supporting system-level multicore performance studies.  Cycle-Accurate NoC Models for FPGA Accelerated Simulation [Pap11]  In addition to the hybrid analytical model above, we developed a parameterized generator of register-transfer-level NoC models that can be synthesized for FPGA-accelerated cy...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

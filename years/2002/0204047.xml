<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Integrating Software Architecture and Software Development</AwardTitle>
<AwardEffectiveDate>09/01/2002</AwardEffectiveDate>
<AwardExpirationDate>02/28/2006</AwardExpirationDate>
<AwardTotalIntnAmount>270000.00</AwardTotalIntnAmount>
<AwardAmount>270000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Integrating Software Architecture and Software Development Craig Chambers &lt;br/&gt;The goal of the research is to extend the benefits of software architecture from design into later stages of the software lifecycle by ensuring a rigorous connection between architecture and implementation code.  Existing architecture description languages are not tightly coupled to implementation languages in a way that ensures that the implementation code conforms to the architectural specification.  To overcome this limitation, this project is developing ArchJava, a simple extension to Java that allows programmers to express software architecture within their implementation.  The language is flexible, supporting dynamically changing software architectures as well as common object-oriented implementation idioms, but it also rigorously guarantees that the program semantics conform to the constraints in the architectural specification.  A system's design can be expressed in ArchJava before any implementation exists; this design can then be fleshed out incrementally into a complete implementation.  At all times, conformance between the architecture and the (partial) implementation can be mechanically verified.  By extending the benefits of software architecture throughout the software lifecycle and by allowing developers to trust the accuracy of the architecture, this work has the potential to make software architecture a much more effective and commonly used tool.</AbstractNarration>
<MinAmdLetterDate>07/24/2002</MinAmdLetterDate>
<MaxAmdLetterDate>09/21/2004</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0204047</AwardID>
<Investigator>
<FirstName>Craig</FirstName>
<LastName>Chambers</LastName>
<EmailAddress>chambers@cs.washington.edu</EmailAddress>
<StartDate>07/24/2002</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Washington</Name>
<CityName>Seattle</CityName>
<ZipCode>981950001</ZipCode>
<PhoneNumber>2065434043</PhoneNumber>
<StreetAddress>4333 Brooklyn Ave NE</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<StateCode>WA</StateCode>
</Institution>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

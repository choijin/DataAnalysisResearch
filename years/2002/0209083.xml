<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Distributed Access Control for Accountable Systems</AwardTitle>
<AwardEffectiveDate>09/01/2002</AwardEffectiveDate>
<AwardExpirationDate>08/31/2008</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>480000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Karl Levitt</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Assurance for distributed systems is based on constantly strengthening the protective boundaries that prevent and detect unauthorized access to computer systems. Accountability, ensuring that principals are liable for their actions, is an equally important issue. This project investigates a programming language approach to tracking accountability in distributed systems, specifically by extending the Java language to maintain a fine-grained audit trail for accountability purposes.&lt;br/&gt;&lt;br/&gt;The proposed approach is based on associating secrecy (access control) and integrity information with data as it is retrieved and copied over the network.  Distributed access control is not just enforced at one point in the network where the data is accessed, but may be enforced wherever a copy of the data is accessed.  Distributed information flow types enforce access rights and enforce a form of causality that supports tracking of tracking of accountability for principals.  In recognition of the fact that communication may be over an insecure network, sensitive data is assumed to be "virtually" signed or encrypted, for integrity and secrecy guarantees, respectively.  The computational burden of the ubiquitous application of cryptographic operations is avoided through the use of cryptographic types for static checking where possible.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/26/2002</MinAmdLetterDate>
<MaxAmdLetterDate>08/30/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0209083</AwardID>
<Investigator>
<FirstName>Dominic</FirstName>
<LastName>Duggan</LastName>
<EmailAddress>dduggan@stevens.edu</EmailAddress>
<StartDate>07/26/2002</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jan</FirstName>
<LastName>Vitek</LastName>
<EmailAddress>j.vitek@neu.edu</EmailAddress>
<StartDate>07/26/2002</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Stevens Institute of Technology</Name>
<CityName>HOBOKEN</CityName>
<ZipCode>070305991</ZipCode>
<PhoneNumber>2012168762</PhoneNumber>
<StreetAddress>CASTLE POINT ON HUDSON</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<ProgramElement>
<Code>2802</Code>
<Text>TRUSTED COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>1667</Code>
<Text>HIGH CONFIDENCE SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

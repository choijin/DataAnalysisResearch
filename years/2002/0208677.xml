<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Assist Thread Compilation for Multi-threaded Processors</AwardTitle>
<AwardEffectiveDate>09/01/2002</AwardEffectiveDate>
<AwardExpirationDate>05/31/2005</AwardExpirationDate>
<AwardTotalIntnAmount>249972.00</AwardTotalIntnAmount>
<AwardAmount>249972</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
</ProgramOfficer>
<AbstractNarration>The next generation of computers will be multi-threaded,&lt;br/&gt;allowing the simultaneous execution of several programs.&lt;br/&gt;Most computer workloads are difficult to recast into&lt;br/&gt;multi-threaded form, under-utilizing multi-threading capabilities.&lt;br/&gt;&lt;br/&gt;This research studies a new approach to program translation:&lt;br/&gt;Assist Threads.&lt;br/&gt;&lt;br/&gt;An assist thread is a specialized version of an application program that,&lt;br/&gt;when run as an independent thread, assists (and optimizes) the application.&lt;br/&gt;Roles for assist threads include program profiling, monitoring, pre-execution,&lt;br/&gt;and memory management.&lt;br/&gt;&lt;br/&gt;Experiments show that assist threads&lt;br/&gt;can effectively implement garbage collection.&lt;br/&gt;An assist thread mimics an application's execution,&lt;br/&gt;tracking memory accesses and recycling unused memory as it is recognized.&lt;br/&gt;The main application thread ignores memory management concerns,&lt;br/&gt;becoming simpler, faster and more reliable.&lt;br/&gt;&lt;br/&gt;Other varieties of assist threads execute slightly in advance of an&lt;br/&gt;application program, precomputing and preloading needed data values.&lt;br/&gt;&lt;br/&gt;This research makes both theoretical and practical contributions to&lt;br/&gt;compiler technology. It explores how to generate the computations&lt;br/&gt;necessary to implement assist threads. It also experiments with a variety&lt;br/&gt;of assist threads, evaluating their effectiveness and efficiency.&lt;br/&gt;&lt;br/&gt;In summary, this research opens new avenues of application for multi-threaded&lt;br/&gt;processors, making them more effective in supporting the needs of a wide&lt;br/&gt;variety of computer users.</AbstractNarration>
<MinAmdLetterDate>06/13/2002</MinAmdLetterDate>
<MaxAmdLetterDate>06/13/2002</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0208677</AwardID>
<Investigator>
<FirstName>Charles</FirstName>
<LastName>Fischer</LastName>
<EmailAddress>Fischer@CS.wisc.edu</EmailAddress>
<StartDate>06/13/2002</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
</Institution>
<ProgramElement>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramElement>
<ProgramReference>
<Code/>
<Text/>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EHS: Composable Execution Environments: A Foundation for Building Robust Embedded Systems</AwardTitle>
<AwardEffectiveDate>07/01/2002</AwardEffectiveDate>
<AwardExpirationDate>06/30/2005</AwardExpirationDate>
<AwardTotalIntnAmount>310431.00</AwardTotalIntnAmount>
<AwardAmount>310431</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Lepreau, Jay&lt;br/&gt;CCR-0209185 &lt;br/&gt;"Composable Execution Environments:   A Foundation for Building Robust Embedded Systems"&lt;br/&gt;       &lt;br/&gt;Real-time and embedded systems are built using a wide variety of "execution models"---collections of rules for sequencing actions and mediating access to shared resources.  In general, systems developed using restricted execution models are easier to understand, debug, and test than are systems developed using powerful models.  They are also more efficient and permit stronger properties to be proven about them&lt;br/&gt;with less effort, such as non-violation of timing constraints and freedom from deadlock, livelock, or race conditions.&lt;br/&gt;&lt;br/&gt;The instantiation of an execution model with a specific set of tasks and their associated timing and resource sharing requirements is called an "execution environment."  The central premise of this project is that it is feasible and useful to structure embedded systems as hierarchical compositions of execution environments.  If successful, this research will result in a new way to develop embedded systems software that permits developers to make use of powerful compositions of execution environments without sacrificing the software engineering benefits of individual, more restricted environments.&lt;br/&gt;&lt;br/&gt;To accomplish this, the researchers must solve a number of research problems.  First, compositions of execution environments must be analyzed and mapped to threads and schedulers in such a way that no&lt;br/&gt;real-time deadlines or other constraints of the individual environments are violated.  This will be accomplished by leveraging the researchers' experience with hierarchical real-time scheduling, with&lt;br/&gt;constraint checking for component systems, and with flexible execution models in operating systems.  Second, compositions of execution environments must not suffer from undue or unexpected degrees of inefficiency and unpredictability. The researchers will accomplish this by leveraging their experience in developing and optimizing component-based operating systems.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/03/2002</MinAmdLetterDate>
<MaxAmdLetterDate>07/27/2004</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0209185</AwardID>
<Investigator>
<FirstName>Jay</FirstName>
<LastName>Lepreau</LastName>
<EmailAddress>lepreau@cs.utah.edu</EmailAddress>
<StartDate>07/03/2002</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>John</FirstName>
<LastName>Regehr</LastName>
<EmailAddress>regehr@cs.utah.edu</EmailAddress>
<StartDate>07/03/2002</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
</Institution>
<ProgramElement>
<Code>2801</Code>
<Text>EMBEDDED &amp; HYBRID SYSTEMS(EHS)</Text>
</ProgramElement>
<ProgramReference>
<Code/>
<Text/>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

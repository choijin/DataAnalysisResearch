<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Programming Languages for Secure and Reliable Computing</AwardTitle>
<AwardEffectiveDate>03/15/2003</AwardEffectiveDate>
<AwardExpirationDate>02/29/2008</AwardExpirationDate>
<AwardTotalIntnAmount>400030.00</AwardTotalIntnAmount>
<AwardAmount>412030</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010500</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>ABSTRACT&lt;br/&gt;CCR-0238328&lt;br/&gt;David Walker&lt;br/&gt;Princeton University&lt;br/&gt;&lt;br/&gt;This research develops advanced program analysis techniques that increase the security and reliability of component software systems.  In particular, the researchers design, implement and analyze programming languages that contain both of the following complementary technologies.&lt;br/&gt;&lt;br/&gt;1) Effective Type Refinements (ETR) that conservatively extend modern type systems. ETR allow programmers to specify fine-grained invariants about contents of component data structures and the ordering and effect of operations in a computation.  ETR guarantee properties of programs when they are written and as they evolve through the software development cycle.&lt;br/&gt;&lt;br/&gt;2) Run-time Program Monitors (RPM).  RPM execute in parallel with an untrusted application, monitoring, auditing and modifying the untrusted application's actions so that it obeys critical security and resource usage policies.  RPM complement ETR by enforcing those properties at run-time that cannot be enforced at compile-time.&lt;br/&gt;&lt;br/&gt;Together effective type refinements and run-time program monitors provide a cohesive language-based framework for improving the reliability and security of large-scale software systems.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>03/13/2003</MinAmdLetterDate>
<MaxAmdLetterDate>08/03/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0238328</AwardID>
<Investigator>
<FirstName>David</FirstName>
<LastName>Walker</LastName>
<EmailAddress>dpw@cs.princeton.edu</EmailAddress>
<StartDate>03/13/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2802</Code>
<Text>TRUSTED COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

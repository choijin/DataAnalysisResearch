<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR/SY: QoS-Aware Execution Environments for Multi-tier Network Services</AwardTitle>
<AwardEffectiveDate>09/01/2002</AwardEffectiveDate>
<AwardExpirationDate>08/31/2007</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>171942</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>David Du</SignBlockName>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;Modern, componentized Internet services allow server consolidation &lt;br/&gt;by sharing common service components. &lt;br/&gt;Such sharing can potentially reduce the installation cost, &lt;br/&gt;space, and energy consumption.  However, to date, services &lt;br/&gt;are seldom shared across server applications to avoid&lt;br/&gt;possible interference between them.  Service providers often run&lt;br/&gt;multiple instances of shared services, one for each frontend&lt;br/&gt;service. The only benefit gained thus far, from the deployment of&lt;br/&gt;multi-tier services is that new services can be composed quickly using&lt;br/&gt;existing service components. Since these service&lt;br/&gt;components may execute on different machines, each optimally configured&lt;br/&gt;for its services, multi-tiered services tend to be more&lt;br/&gt;scalable than monolithic counterparts.&lt;br/&gt;&lt;br/&gt;The proposed research aims to address the shortcoming of current&lt;br/&gt;OSs in executing multi-tiered services. We will focus on OS extensions &lt;br/&gt;that correlate and trace service activities across the tiers of a &lt;br/&gt;multi-tiered server farm. We will develop mechanisms for online&lt;br/&gt;classification of activities (e.g., premium vs.~basic service classes), &lt;br/&gt;as well as mechanisms that allow system administrators to insulate &lt;br/&gt;(performance-wise) different service classes even when the &lt;br/&gt;activities of different service classes may overlap and &lt;br/&gt;share backend services. &lt;br/&gt;&lt;br/&gt;The same OS mechanisms that are used to manage multi-tiered &lt;br/&gt;services can be used to analyze the interactions between different &lt;br/&gt;tiers and the interferences between different service classes. &lt;br/&gt;We will show that a combination of service interaction analysis &lt;br/&gt;and service policing minimizes performance invasiveness &lt;br/&gt;between services/applications. &lt;br/&gt;We will also investigate how to improve insulation between &lt;br/&gt;services in this environment. &lt;br/&gt;We will explore how service implementations may take &lt;br/&gt;advantage of an improved OS infrastructure for multi-tiered</AbstractNarration>
<MinAmdLetterDate>08/26/2002</MinAmdLetterDate>
<MaxAmdLetterDate>09/22/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0216977</AwardID>
<Investigator>
<FirstName>Kang</FirstName>
<LastName>Shin</LastName>
<EmailAddress>kgshin@eecs.umich.edu</EmailAddress>
<StartDate>08/26/2002</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Regents of the University of Michigan - Ann Arbor</Name>
<CityName>Ann Arbor</CityName>
<ZipCode>481091274</ZipCode>
<PhoneNumber>7347636438</PhoneNumber>
<StreetAddress>3003 South State St. Room 1062</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
</Institution>
<ProgramElement>
<Code>1686</Code>
<Text>ITR SMALL GRANTS</Text>
</ProgramElement>
<ProgramReference>
<Code>1652</Code>
<Text>HIGH END COMPUTATION AND INFRASTRUCTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

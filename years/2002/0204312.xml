<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Flexible Fair Scheduling on Multiprocessors</AwardTitle>
<AwardEffectiveDate>09/01/2002</AwardEffectiveDate>
<AwardExpirationDate>08/31/2005</AwardExpirationDate>
<AwardTotalIntnAmount>267002.00</AwardTotalIntnAmount>
<AwardAmount>267002</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Brett D. Fleisch</SignBlockName>
</ProgramOfficer>
<AbstractNarration>There has been much recent work on scheduling techniques that&lt;br/&gt;ensure fairness, temporal isolation, and timeliness among&lt;br/&gt;applications multiplexed on the same resource.  Many systems that&lt;br/&gt;could benefit from the use of fair scheduling principles have&lt;br/&gt;workloads that necessitate the use of multiple processors; consider,&lt;br/&gt;for example, the proliferation of Internet service providers that&lt;br/&gt;host third-party websites on multiprocessor servers.  Unfortunately,&lt;br/&gt;most prior work on multiprocessor fair scheduling has been rooted&lt;br/&gt;in task models that are too rigid to apply in many settings.  The&lt;br/&gt;little research on more flexible models that has been done has been&lt;br/&gt;almost entirely experimental in nature, with little or no formal&lt;br/&gt;analysis of the scheduling algorithms being tested.&lt;br/&gt;&lt;br/&gt;In this project, fair scheduling algorithms based on rate-based&lt;br/&gt;scheduling principles will be developed and analyzed, both formally&lt;br/&gt;and experimentally.  Specific project objectives include the&lt;br/&gt;development of (i) fair scheduling algorithms that minimize task&lt;br/&gt;migrations; (ii) extensions to these algorithms that allow tasks to&lt;br/&gt;synchronize and share resources; (iii) extensions that allow real-time&lt;br/&gt;and non-real-time applications to execute under a common framework;&lt;br/&gt;and (iv) techniques for managing dynamically-changing workloads in&lt;br/&gt;which tasks may join and leave the system.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>04/01/2002</MinAmdLetterDate>
<MaxAmdLetterDate>07/14/2004</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0204312</AwardID>
<Investigator>
<FirstName>James</FirstName>
<LastName>Anderson</LastName>
<EmailAddress>anderson@cs.unc.edu</EmailAddress>
<StartDate>04/01/2002</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Sanjoy</FirstName>
<LastName>Baruah</LastName>
<EmailAddress>Baruah@wustl.edu</EmailAddress>
<StartDate>04/01/2002</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of North Carolina at Chapel Hill</Name>
<CityName>CHAPEL HILL</CityName>
<ZipCode>275991350</ZipCode>
<PhoneNumber>9199663411</PhoneNumber>
<StreetAddress>104 AIRPORT DR STE 2200</StreetAddress>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
</Institution>
<ProgramElement>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

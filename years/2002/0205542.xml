<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR:  A Framework for Rapid Development of Reliable Robotics Software</AwardTitle>
<AwardEffectiveDate>09/01/2002</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>510344.00</AwardTotalIntnAmount>
<AwardAmount>510344</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Taha, Walid&lt;br/&gt;CCR-0205542&lt;br/&gt;"ITR:  A Framework for Rapid Development of Reliable Robotics Software"&lt;br/&gt;&lt;br/&gt;Robots are entering daily life.  Commercially available systems are&lt;br/&gt;delivering medication to patients in hospitals, mowing lawns, vacuuming&lt;br/&gt;floors, and finding wide applications in the entertainment industry.  In the future, they will play a more substantial role in areas such as space exploration, health care, and search and rescue.  But as&lt;br/&gt;these applications grow, so does the complexity of these robots, making&lt;br/&gt;the reliability of their software and the productivity of their&lt;br/&gt;programmers a priority. It is not clear that current techniques for&lt;br/&gt;programming robots are sufficient for building systems that are orders of magnitude more complex than the ones available today.  The vast majority of programming methods in current use focus on high-level planning and task and behavioral aspects.  By contrast, there are no widely-accepted specialized software processes or programming languages for the integrated development of robotics applications.&lt;br/&gt;&lt;br/&gt;This project explores the impact of state-of-the-art programming languages techniques in a small-scale robotics setting.  The project applies domain-specific languages methods and automatic program generation techniques.  The framework exploits core technologies such as multi-stage programming with simple, high-level annotations&lt;br/&gt;to avoid unnecessary runtime overheads yet provide a natural and algorithmic approach to program generation, where generation occurs in a first stage, and the execution of the synthesized program occurs in a second stage. Because (even when the final goal is embedded software) the first stage does not need to be resource-bounded, conventional programming techniques can be used. &lt;br/&gt;&lt;br/&gt;The challenge, then, becomes ensuring that the generated programs are suitable for execution on an embedded platform. Multi-stage languages already provide significant safety guarantees. For example, a program generator written in such a language not only is type-safe in the traditional sense, but we are guaranteed that any generated program will also be type safe.  This provides a noteworthy degree of assurance about the quality of the generated code.  But like most traditional high-level programming techniques, multi-stage programming was designed to satisfy functional requirements rather than operational ones, and existing multi-stage languages do not provide any guarantees about the behavior of programs in the presence of bounded resources.  The focus of this project is ways to address this problem by strengthening&lt;br/&gt;``traditional'' multi-stage type systems using a number of state-of-the-art techniques from type theory and functional reactive programming (FRP) to create resource-aware multi-stage programming. Linear and alias types (in conjunction with dependent typing) will be used to ensure space-boundedness, new typing techniques are used to ensure time-boundedness, and signals and behaviors from FRP allow for a natural style of reactive programming.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/31/2002</MinAmdLetterDate>
<MaxAmdLetterDate>07/23/2003</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0205542</AwardID>
<Investigator>
<FirstName>Paul</FirstName>
<LastName>Hudak</LastName>
<EmailAddress>paul.hudak@yale.edu</EmailAddress>
<StartDate>10/11/2002</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Walid</FirstName>
<LastName>Taha</LastName>
<EmailAddress>maroneal@gmail.com</EmailAddress>
<StartDate>07/31/2002</StartDate>
<EndDate>10/11/2002</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Valery</FirstName>
<LastName>Trifonov</LastName>
<EmailAddress>valery.trifonov@yale.edu</EmailAddress>
<StartDate>07/31/2002</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Brian</FirstName>
<LastName>Scassellati</LastName>
<EmailAddress>brian.scassellati@yale.edu</EmailAddress>
<StartDate>07/31/2002</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Yale University</Name>
<CityName>New Haven</CityName>
<ZipCode>065208327</ZipCode>
<PhoneNumber>2037854689</PhoneNumber>
<StreetAddress>Office of Sponsored Projects</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<StateCode>CT</StateCode>
</Institution>
<ProgramElement>
<Code>1687</Code>
<Text>ITR MEDIUM (GROUP) GRANTS</Text>
</ProgramElement>
<ProgramReference>
<Code>1667</Code>
<Text>HIGH CONFIDENCE SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

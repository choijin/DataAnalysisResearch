<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR: Application Partitioning Without Programming</AwardTitle>
<AwardEffectiveDate>09/01/2002</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>299634.00</AwardTotalIntnAmount>
<AwardAmount>299634</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>    Application partitioning is the task of breaking up the&lt;br/&gt;    functionality of an application into distinct entities that can&lt;br/&gt;    operate independently, usually in a distributed setting. As&lt;br/&gt;    networking changes the computing landscape, application&lt;br/&gt;    partitioning is becoming an increasingly common form of distributed&lt;br/&gt;    programming. This project examines the possibility of automating the&lt;br/&gt;    partitioning of a software application. Instead of hand re-coding,&lt;br/&gt;    higher-level tools allow the user to express how the application is&lt;br/&gt;    to be partitioned. The tools can then rewrite the existing&lt;br/&gt;    application code to replace local data exchange (e.g. function&lt;br/&gt;    calls, data sharing through pointers) with remote communication&lt;br/&gt;    (e.g. remote function calls, remote pointers or mobile objects).&lt;br/&gt;    The tools are based on a novel static analysis and translation&lt;br/&gt;    algorithm. The potential impact of this work is in significantly&lt;br/&gt;    simplifying distributed program construction, a prime&lt;br/&gt;    intellectual and practical challenge of computer science.&lt;br/&gt;    Automatic partitioning can revolutionize the way a large class of&lt;br/&gt;    distributed programs is developed. Additionally, the proposed&lt;br/&gt;    tools have a high educational value: they can be used for&lt;br/&gt;    illustrating crucial concepts in both programming languages and&lt;br/&gt;    distributed systems, while minimizing distractions due to low-level&lt;br/&gt;    complexity.</AbstractNarration>
<MinAmdLetterDate>08/28/2002</MinAmdLetterDate>
<MaxAmdLetterDate>08/28/2002</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0220248</AwardID>
<Investigator>
<FirstName>Yannis</FirstName>
<LastName>Smaragdakis</LastName>
<EmailAddress>yannis@cs.umass.edu</EmailAddress>
<StartDate>08/28/2002</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia Tech Research Corporation</Name>
<CityName>Atlanta</CityName>
<ZipCode>303320420</ZipCode>
<PhoneNumber>4048944819</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
</Institution>
<ProgramElement>
<Code>1686</Code>
<Text>ITR SMALL GRANTS</Text>
</ProgramElement>
<ProgramReference>
<Code/>
<Text/>
</ProgramReference>
<ProgramReference>
<Code>1652</Code>
<Text>HIGH END COMPUTATION AND INFRASTRUCTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

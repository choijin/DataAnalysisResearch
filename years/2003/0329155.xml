<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:     Visualization:     Overlay Network Support for Remote Visualization of Time-Varying Data</AwardTitle>
<AwardEffectiveDate>09/01/2003</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>280000.00</AwardTotalIntnAmount>
<AwardAmount>286000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Lawrence Rosenblum</SignBlockName>
</ProgramOfficer>
<AbstractNarration>In this project, we address issues related to providing system support for remote visualization of time-varying data. A majority of the existing remote visualization systems have adopted the client-server model. The server may become a bottleneck due to the centralized data access and visualization computation. In addition, the network can be easily overloaded because of the large volume of visualization data to be transmitted. To overcome these problems, researchers have proposed various methods to decentralize the remote visualization computation by shifting workload to the clients. The effect of such a workload migration however, is limited since the client 92s computation power is often constrained.  Another alternative to reduce the server bottleneck is to deploy multiple servers in the network. However, deployment and management of multiple servers is very expensive, and may raise some policy issues.&lt;br/&gt;&lt;br/&gt;Our objective is to develop a scalable, lightweight, and easily deployable architecture, which is capable of providing a certain degree of quality of services (QoS) to remote visualization of time-varying data. To achieve this objective, we propose a Peer-to-peer (P2P) system-based architecture. Generally speaking, each node in a P2P system is considered equal, and hence this model is technically different from the client-server one.  The highlights of our architecture are (1)  Server data and workload are distributed to the groups of volunteer nodes in the Internet which are willing to share their resources. These nodes compose multiple virtual servers.  (2) The client is allowed access to the server group via anycast service.  Anycast automatically finds the best server in the group, and returns the data to the requesting client.  The best server is supposed to provide the best quality of services (i.e. in terms of the minimum delay in data access). (3) A spatio temporal multi-resolution data structure, called Time-Space Partitioning (TSP) tree, where multiple resolution blocks are stored and the data on the sub-trees are independent of each other, is employed.  By storing multiple resolution blocks in the tree, a client is permitted more choices in making the selection of best server, which may vary with the system dynamics.&lt;br/&gt;&lt;br/&gt;In this project, we plan to fully design, analyze, implement, and evaluate the P2P-based&lt;br/&gt;architecture for remote visualization of time-varying data. We will carry out the following research tasks (1) design, analysis, and implementation of QoS-aware anycast services in the overlay networks; (2) enhancement of the TSP tree structure, especially its data encoding schemes;  (3) design, evaluation, and realization of an efficient algorithm for distribution of time-varying data among the volunteer nodes; (4) construction and evaluation of a prototype system based on the proposed architecture. &lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/12/2003</MinAmdLetterDate>
<MaxAmdLetterDate>07/11/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0329155</AwardID>
<Investigator>
<FirstName>Han-Wei</FirstName>
<LastName>Shen</LastName>
<EmailAddress>hwshen@cse.ohio-state.edu</EmailAddress>
<StartDate>08/12/2003</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Dong</FirstName>
<LastName>Xuan</LastName>
<EmailAddress>xuan@cse.ohio-state.edu</EmailAddress>
<StartDate>08/12/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Ohio State University Research Foundation -DO NOT USE</Name>
<CityName>Columbus</CityName>
<ZipCode>432101016</ZipCode>
<PhoneNumber>6146888734</PhoneNumber>
<StreetAddress>1960 KENNY RD</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
</Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4080</Code>
<Text>ADVANCED COMP RESEARCH PROGRAM</Text>
</ProgramElement>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramElement>
<Code>7453</Code>
<Text>GRAPHICS &amp; VISUALIZATION</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

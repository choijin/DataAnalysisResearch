<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR: Probabilistic Checking of Proofs</AwardTitle>
<AwardEffectiveDate>09/01/2003</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardAmount>306000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Richard Beigel</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Understanding the nature of theorems and proofs has been a &lt;br/&gt;central quest in the foundations of computer science.  The &lt;br/&gt;design of the modern computer owes its origins to this quest,&lt;br/&gt;and this quest has continued to play a pivotal role in &lt;br/&gt;developing a theory of computing.  This research project &lt;br/&gt;investigates new questions in the context of verifying proofs. &lt;br/&gt;It investigates the capacity of proofs to be verified &lt;br/&gt;probabilistically, trading off a small possibility of incorrect &lt;br/&gt;verification for a huge advantage in the time taken to verify &lt;br/&gt;proofs.  Research in the recent past (last ten years or so) &lt;br/&gt;has shown that probabilistic verification of proofs is a &lt;br/&gt;feasible goal and can lead to surprisingly efficient verifiability. &lt;br/&gt;However the results have not been of practical use so far. The &lt;br/&gt;main obstacle to practical utility is that the probabilistically &lt;br/&gt;verifiable proofs are much longer than classical proofs. This &lt;br/&gt;project investigates the tradeoff between the size of a &lt;br/&gt;probabilistically checkable proof and the complexity of verifying &lt;br/&gt;it.  It will also investigate new applications of such proof &lt;br/&gt;systems, and in particular, to the task of automatic verification &lt;br/&gt;of correct execution of computer programs.  For broader impact, &lt;br/&gt;the project will also foster understanding and interest into &lt;br/&gt;the foundations of information and computation to a wide audience &lt;br/&gt;via educational and outreach activities.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/21/2003</MinAmdLetterDate>
<MaxAmdLetterDate>05/18/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0312575</AwardID>
<Investigator>
<FirstName>Madhu</FirstName>
<LastName>Sudan</LastName>
<EmailAddress>madhu@cs.harvard.edu</EmailAddress>
<StartDate>07/21/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1686</Code>
<Text>ITR SMALL GRANTS</Text>
</ProgramElement>
<ProgramElement>
<Code>9199</Code>
<Text>Unallocated Program Costs</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>RES EXPER FOR UNDERGRAD-SUPPLT</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

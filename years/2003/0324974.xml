<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR/NGS:  Transactions Everywhere</AwardTitle>
<AwardEffectiveDate>09/15/2003</AwardEffectiveDate>
<AwardExpirationDate>08/31/2005</AwardExpirationDate>
<AwardAmount>650000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Frederica Darema</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This vertically integrated research project refocuses on Herlihy and Moss's original proposal of HTM, but adopting the point of view that transactions, rather than occurring infrequently in code, should be the rule, not the exception. That is, user code should almost always be executing within some transaction. The researchers contend that the transactions-everywhere approach can simplify parallel programming dramatically and that hardware support can make overheads negligible. To test their hypothesis, they plan to develop an FPGA prototype processor and memory system for HTM, a linguistic framework for C-like languages, compiler support for transactions everywhere, debuggers and other software-engineering tools, theoretical foundations for semantics and performance, and ultithreaded applications that demonstrate the advantages of a transactions-everywhere environment.  The proposed research will leverage existing infrastructure already developed within the MIT Laboratory for Computer Science. The FPGA prototype will contribute to a fast hardware-prototyping facility being developed by several research groups within LCS. The linguistic and compiler research will exploit the software technologies already developed for Cilk, a multithreaded C language with a provably good runtime system.  Transactions everywhere potentially represents a big step towards making parallel computing practical and ubiquitous. &lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/12/2003</MinAmdLetterDate>
<MaxAmdLetterDate>08/19/2004</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0324974</AwardID>
<Investigator>
<FirstName>Charles</FirstName>
<LastName>Leiserson</LastName>
<EmailAddress>cel@csail.mit.edu</EmailAddress>
<StartDate>09/12/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Bradley</FirstName>
<LastName>Kuszmaul</LastName>
<EmailAddress>bradley@mit.edu</EmailAddress>
<StartDate>09/12/2003</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>1687</Code>
<Text>ITR MEDIUM (GROUP) GRANTS</Text>
</ProgramElement>
<ProgramReference>
<Code>1652</Code>
<Text>HIGH END COMPUTATION AND INFRASTRUCTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>2884</Code>
<Text>NEXT GENERATION SOFTWARE PROGR</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

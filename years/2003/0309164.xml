<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>FaultFinder: Improving the Availability of Multiprocessor Servers</AwardTitle>
<AwardEffectiveDate>07/15/2003</AwardEffectiveDate>
<AwardExpirationDate>06/30/2006</AwardExpirationDate>
<AwardAmount>114422</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010300</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Timothy M. Pinkston</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Fault Finder: Improving the Availability of Multiprocessor Servers&lt;br/&gt;&lt;br/&gt;Abstract&lt;br/&gt;&lt;br/&gt;The Duke FaultFinder Project seeks to provide the first hardware mechanisms for dynamically verifying the correctness - not just necessary properties - of shared  memory multiprocessor systems. The memory consistency model determines the correctness of a design.  FaultFinder will dynamically detect violations of the specified memory consistency model, which is the highest level of error detection possible in hardware. FaultFinder mechanisms will detect hardware errors at the system level (e.g., violation of consistency), unlike existing schemes that only detect localized errors (e.g., bit flip on message). Combining FaultFinder error detection with existing hardware mechanisms for checkpoint/recovery of shared memory multiprocessor systems enables the system to guarantee correct behavior.&lt;br/&gt;&lt;br/&gt;As society has increasingly relied upon computer systems to provide important infrastructure, computer engineers have not correspondingly improved the ability to detect faults in these systems. While recent advances in hardware checkpoint/recovery have improved computer system availability, a system recovery mechanism can only recover from those errors that are detected. Currently, computer systems cannot detect whether a memory system is behaving correctly.  The Duke FaultFinder Project seeks to provide the first hardware mechanisms for comprehensive error detection in computer systems.  Achieving this goal would provide a qualitative benefit to a society that depends on computer availability.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/11/2003</MinAmdLetterDate>
<MaxAmdLetterDate>07/11/2003</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0309164</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Sorin</LastName>
<EmailAddress>sorin@ee.duke.edu</EmailAddress>
<StartDate>07/11/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Duke University</Name>
<CityName>Durham</CityName>
<ZipCode>277054010</ZipCode>
<PhoneNumber>9196843030</PhoneNumber>
<StreetAddress>2200 W. Main St, Suite 710</StreetAddress>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
</Institution>
<ProgramElement>
<Code>4715</Code>
<Text>COMPUTER SYSTEMS ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Policy Modularity: Toward a Science of Socially-Embedded System Design</AwardTitle>
<AwardEffectiveDate>09/01/2003</AwardEffectiveDate>
<AwardExpirationDate>08/31/2005</AwardExpirationDate>
<AwardTotalIntnAmount>74999.00</AwardTotalIntnAmount>
<AwardAmount>74999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010500</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration> ABSTRACT&lt;br/&gt;0344004&lt;br/&gt;Potts, Colin&lt;br/&gt;Georgia Tech Research Corp&lt;br/&gt;&lt;br/&gt;Software is nothing but rules, some of which correspond directly to codes of conduct or policies that govern human action (e.g. administrative rules, restrictions, rights and responsibilities). Designing the software for any complex system unavoidably involves the design and regulation of the human conduct that the system engages. Typically, however, the software code that formalizes such codes of conduct is not highlighted or treated specially in the design process. Such rules lose transparency and cannot be called into question or changed easily. As a result, computer-based systems often regiment human behavior unnecessarily, reducing decision-making discretion and flexibility.&lt;br/&gt;Before we can hope to improve design practice so that these shortcomings are addressed by reliable design principles, it is necessary to to understand better how policies become formalized in the first place, what organizational principles in software architecture can be exploited to uncover and modularize policy, and what are the effects of such policy embedding on the flexibility and autonomy of human organizations. These are fundamentally scientific questions whose object of study are the design of the artificial normative&lt;br/&gt;systems that we call software-intensive systems. Accordingly, the goal of this project is to conduct such a scientific investigation with the aim of informing design practice as a future, not immediate goal.</AbstractNarration>
<MinAmdLetterDate>08/25/2003</MinAmdLetterDate>
<MaxAmdLetterDate>03/07/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0344004</AwardID>
<Investigator>
<FirstName>Colin</FirstName>
<LastName>Potts</LastName>
<EmailAddress>potts@cc.gatech.edu</EmailAddress>
<StartDate>08/25/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia Tech Research Corporation</Name>
<CityName>Atlanta</CityName>
<ZipCode>303320420</ZipCode>
<PhoneNumber>4048944819</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
</Institution>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code/>
<Text/>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9237</Code>
<Text>SMALL GRANTS-EXPLORATORY RSRCH</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

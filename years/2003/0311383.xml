<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Analysis of Cycle Stealing and Other Multi-Server Problems via New Dimensionality Reduction Approach</AwardTitle>
<AwardEffectiveDate>08/01/2003</AwardEffectiveDate>
<AwardExpirationDate>07/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010100</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Richard Beigel</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Stochastic processes are a very powerful tool for analyzing the performance of computer systems.  However there are still some very fundamental computer systems problems which remain largely intractable.  One example is the simple cycle stealing problem, where one server can steal another server's idle cycles under a switching cost overhead.  Cycle stealing pervades applications ranging from Webserver farms, to networks of workstations, to disk arrays, to databaseserver clusters, and yet very simple questions like quantifying the benefit of cycle stealing, or understanding under what conditions cycle stealing is profitable are not yet understood.  Another example is the long standing open problem of finding and analyzing the optimal policy for task assignment in a server farm.  Interestingly, these problems and other open fundamental computer systems problems are difficult for the same reason: they all have a Markov chain representation which grows infinitely in two or more dimensions (2D). While a one-dimensional (1D) infinite Markov chain with repeating structure can be solved via computational approaches, these 2D infinite chains can not.&lt;br/&gt;&lt;br/&gt;This project proposes a new approach for attacking problems such as those above, resulting in a 2D infinite Markov chain.  The idea is to transform the 2D infinite chain into a 1D infinite chain which can be analyzed, without removing the relevant problem information.  This is achieved by using Markov chain transitions to denote the durations of various types of busy periods.  The project will entail a mathematical exploration of the general applicability of this technique, the application of the technique to specific problems, and the implementation of the analytical solutions within real systems.&lt;br/&gt;&lt;br/&gt;Broader impacts resulting from the proposed activity include: a workshop on scheduling in server farms; online availability of all source code generated from the work along with documentation; a highly-accessible set of lecture notes on queueing theory applications which evolves yearly to reflect the current research aims of the author; collaborations with the Pittsburgh Supercomputer Center to implement ideas in this proposal; and undergraduate research opportunities in scheduling.  The project involves 1 faculty member (1summer month only) and 0.5 graduate students over the course of 3years.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/23/2003</MinAmdLetterDate>
<MaxAmdLetterDate>07/23/2003</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0311383</AwardID>
<Investigator>
<FirstName>Mor</FirstName>
<LastName>Harchol-Balter</LastName>
<EmailAddress>harchol@cs.cmu.edu</EmailAddress>
<StartDate>07/23/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code/>
<Text/>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

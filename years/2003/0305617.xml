<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NGS:Collaborative Proposal:Structural and Composable Performance Simulation of Complex Systems</AwardTitle>
<AwardEffectiveDate>09/15/2003</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>879503.00</AwardTotalIntnAmount>
<AwardAmount>879503</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Frederica Darema</SignBlockName>
</ProgramOfficer>
<AbstractNarration>The most prevalent modeling methodology for computational systems employed today,&lt;br/&gt;hand-writing monolithic simulators in sequential programming languages, yields simulators that are&lt;br/&gt;difficult to retarget or integrate with one another. The proposed solution, the Liberty Simulation Environment (LSE), automatically constructs simulators&lt;br/&gt;from machine descriptions that closely resemble the structure of hardware. This structural resemblance&lt;br/&gt;to the hardware provides confidence in the model and frees systems researchers to think about systems, not&lt;br/&gt;simulator coding concerns. LSE's strict but general component communication contract enables the creation&lt;br/&gt;of highly reusable component libraries and eases the task of rapidly exploring ever more exotic designs. LSE&lt;br/&gt;components and descriptions can be hierarchically composed of other components and can exist at any level&lt;br/&gt;of abstraction (statistical to gate-level). This choice of abstraction level combined with partial specification&lt;br/&gt;support allow models to be iteratively refined; descriptions generate fully functional simulators from the&lt;br/&gt;very start, allowing users to specify and validate precise models incrementally. Through observing current&lt;br/&gt;and future users of LSE, we will continually refine the framework to arrive at the most effective design of&lt;br/&gt;these features in practice.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/10/2003</MinAmdLetterDate>
<MaxAmdLetterDate>06/08/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0305617</AwardID>
<Investigator>
<FirstName>Sharad</FirstName>
<LastName>Malik</LastName>
<EmailAddress>sharad@princeton.edu</EmailAddress>
<StartDate>09/10/2003</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>David</FirstName>
<LastName>August</LastName>
<EmailAddress>august@cs.princeton.edu</EmailAddress>
<StartDate>09/10/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Li-Shiuan</FirstName>
<LastName>Peh</LastName>
<EmailAddress>peh@mit.edu</EmailAddress>
<StartDate>09/10/2003</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>2884</Code>
<Text>NEXT GENERATION SOFTWARE PROGR</Text>
</ProgramElement>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

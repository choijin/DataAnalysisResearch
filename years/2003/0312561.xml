<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR:    Architectural Support for Service Level Agreements</AwardTitle>
<AwardEffectiveDate>08/01/2003</AwardEffectiveDate>
<AwardExpirationDate>07/31/2007</AwardExpirationDate>
<AwardAmount>220004</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Timothy M. Pinkston</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Lebeck&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Architectural Support for Service Level Agreements&lt;br/&gt;&lt;br/&gt;Abstract&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Data centers comprise an integral part of today's internet-based computing infrastructure upon which society relies.  Applications ranging from e-commerce and web servers to grid computing for scientific research use the computation and storage provided by data centers. By consolidating resources, including hardware and system administration, data center customers can reduce expenses. However, customers expect a reasonable level of service from data centers, even with varying demand for the services these systems provide. To maximize service across all customers, a data center can provide differentiated service levels to various applications (customers) based on a contracted Service Level Agreement (SLA).&lt;br/&gt;&lt;br/&gt;SLAs specify requirements in terms of agreed upon metrics (e.g., performance, availability, output bandwidth, server load), and they usually include several price points for different service levels. Unfortunately, with multithreaded system models (e.g., multiprocessors) simple extensions to conventional uniprocessor metrics can be misleading.  The challenge is to develop metrics that bridge the gap between low-level hardware behavior and high-level metrics.&lt;br/&gt;&lt;br/&gt;The proposed research addresses this need by exploring a design space that includes SLA metrics, system models, hardware-level metrics, and implementations. The project will develop hardware-level metrics by considering both the system model and the intended use of the metric. Once the metric is defined, various hardware implementations can be explored. A case study SLA performance metric and a corresponding hardware metric called Critical Instructions Per Cycle (CIPC) have been developed. Preliminary results with full-system simulation and commercial workloads reinforce the hypothesis that metrics must capture the behavior of low-level hardware.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/01/2003</MinAmdLetterDate>
<MaxAmdLetterDate>06/09/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0312561</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Sorin</LastName>
<EmailAddress>sorin@ee.duke.edu</EmailAddress>
<StartDate>08/01/2003</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Alvin</FirstName>
<LastName>Lebeck</LastName>
<EmailAddress>alvy@cs.duke.edu</EmailAddress>
<StartDate>08/01/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Duke University</Name>
<CityName>Durham</CityName>
<ZipCode>277054010</ZipCode>
<PhoneNumber>9196843030</PhoneNumber>
<StreetAddress>2200 W. Main St, Suite 710</StreetAddress>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
</Institution>
<ProgramElement>
<Code>1686</Code>
<Text>ITR SMALL GRANTS</Text>
</ProgramElement>
<ProgramReference>
<Code>1686</Code>
<Text>ITR SMALL GRANTS</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

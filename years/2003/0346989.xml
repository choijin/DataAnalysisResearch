<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Programming Languages for Reliable and Secure Low-level Systems</AwardTitle>
<AwardEffectiveDate>06/01/2004</AwardEffectiveDate>
<AwardExpirationDate>05/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>550000.00</AwardTotalIntnAmount>
<AwardAmount>550000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sajal Das</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Many critical systems, including operating systems, embedded systems, and communications systems, are low-level.  That is, they require careful control over hardware resources to implement needed functionality and to perform well.  Low-level software is increasingly common, so it must be reliable and secure, but its increasing complexity makes doing so quite difficult.&lt;br/&gt;&lt;br/&gt;This project is working to develop, implement, apply, and evaluate programming language technologies to ensure the security and reliability of low-level systems.  The approach is to employ novel static analysis techniques, mostly novel type checking and inference systems, for automatically checking proper usage of idioms common to low-level software. These idioms include manual memory management, concurrency, and dynamic reconfiguration; their incorrect usage can lead to service failures, data corruption, and security exploits.  For assessment, the new techniques are being incorporated into a new C-like programming language called Cyclone, which is then used to build or port real low-level software, including device drivers, network packet processors and servers, and embedded control software.  These systems are experimentally compared against traditionally-developed systems to evaluate their flexibility, usability, and performance.&lt;br/&gt;&lt;br/&gt;This work will result in new tools and methodologies for building more reliable and secure low-level systems.  By validating these techniques on real low-level software, they will have strong relevance and impact.  All results will be presented in public forums (conferences and journals) and as part of graduate and undergraduate education.  All developed software will be freely available, and usable to non-experts in industry and education.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>03/30/2004</MinAmdLetterDate>
<MaxAmdLetterDate>03/30/2004</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0346989</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Hicks</LastName>
<EmailAddress>mwh@cs.umd.edu</EmailAddress>
<StartDate>03/30/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0104</Code>
</Appropriation>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:     The Least-Squares Meshfree Particle Finite Element Method</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2003</AwardEffectiveDate>
<AwardExpirationDate>06/30/2006</AwardExpirationDate>
<AwardTotalIntnAmount>120000.00</AwardTotalIntnAmount>
<AwardAmount>120000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040100</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Junping Wang</SignBlockName>
<PO_EMAI>jwang@nsf.gov</PO_EMAI>
<PO_PHON>7032924488</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Although the finite element method has been astonishingly successful in solving various problems in engineering and science, it has significant drawbacks: mesh generation and remeshing are very difficult and time-consuming. Meshfree methods may avoid these difficulties by constructing approximation functions entirely in terms of a set of nodes. Most meshfree methods are based on the Galerkin principle and employ moving least-squares approximation for the construction of shape functions. Although there is no need for an explicit mesh in the construction of moving least-squares shape functions, a separate background mesh is required to integrate the weak form, so they are not truly meshfree methods. Due to the non-interpolative character of the moving least-squares approximation, the enforcement of essential boundary conditions in the Galerkin formulation is quite awkward. Moreover, the moving least-squares approximation is more expensive computationally than the finite element interpolation. In the proposed research, we will develop a least-squares meshfree particle finite element method which combines the features of the least-squares finite element method and the meshfree particle method. The least-squares finite element method (LSFEM), based on minimization of the L2 norm of the residuals of a first-order system of differential equations, is a simple, efficient and robust technique, and can solve almost any kind of partial differential equation with the same mathematical/computational formulation.  Since the least-squares method doesn't make use of the integration by parts for converting domain integration into boundary integration, and the meshfree particle method employs the usual finite element interpolations based on particles, all troubles that plague the Garlerkin-based meshfree methods disappear. The least-squares meshfree particle finite element method always leads to a symmetric positive definite system of linear algebraic equations. The matrix-free particle-by-particle conjugate gradient method can be used to solve very large problems on parallel computers, and the implementation is straightforward.. &lt;br/&gt;&lt;br/&gt;The purpose of this project is to develop a new computer method to simulate complicated engineering designs and sophisticated multi-physical processes with much greater accuracy and efficiency. Achievements of this project would enable numerical simulations beyond current capabilities in many important applications of national interest, including car crash safety analysis, noise reduction of cars, energy efficiency in full cells, heat reduction in semiconductor devices, etc. &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/19/2003</MinAmdLetterDate>
<MaxAmdLetterDate>06/19/2003</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0310609</AwardID>
<Investigator>
<FirstName>Bo-Nan</FirstName>
<LastName>Jiang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Bo-Nan Jiang</PI_FULL_NAME>
<EmailAddress>bjiang@oakland.edu</EmailAddress>
<PI_PHON>2483703446</PI_PHON>
<NSF_ID>000369472</NSF_ID>
<StartDate>06/19/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Oakland University</Name>
<CityName>Rochester</CityName>
<ZipCode>483094401</ZipCode>
<PhoneNumber>2483704116</PhoneNumber>
<StreetAddress>530 Wilson Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>11</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI11</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041808262</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OAKLAND UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041808262</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Oakland University]]></Name>
<CityName>Rochester</CityName>
<StateCode>MI</StateCode>
<ZipCode>483094401</ZipCode>
<StreetAddress><![CDATA[530 Wilson Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>11</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI11</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>1271</Code>
<Text>COMPUTATIONAL MATHEMATICS</Text>
</ProgramElement>
<ProgramReference>
<Code>0000</Code>
<Text>UNASSIGNED</Text>
</ProgramReference>
<ProgramReference>
<Code>9263</Code>
<Text>COMPUTATIONAL SCIENCE &amp; ENGING</Text>
</ProgramReference>
<ProgramReference>
<Code>OTHR</Code>
<Text>OTHER RESEARCH OR EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0103</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2003~120000</FUND_OBLG>
</Award>
</rootTag>

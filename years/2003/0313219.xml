<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR:    Efficient Algorithms with Implicit Input Data</AwardTitle>
<AwardEffectiveDate>09/01/2003</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Richard Beigel</SignBlockName>
</ProgramOfficer>
<AbstractNarration>The main objective of this research is to establish methods for&lt;br/&gt;theoretical study of algorithms for which the access to the input data is&lt;br/&gt;provided in an implicit way. Such models of computations arise naturally&lt;br/&gt;in the context of algorithms working with large data sets. The implicit&lt;br/&gt;input may correspond either to a partial data in situations when the&lt;br/&gt;entire data cannot be directly accessed (for example, because it is&lt;br/&gt;prohibitively expensive), or it may correspond to compressed or coded&lt;br/&gt;data. It happens when only such data is stored in the system and no direct&lt;br/&gt;access to the real data is provided or is available.&lt;br/&gt;&lt;br/&gt;Traditionally, complexity theory deals with the classical definition of&lt;br/&gt;the explicitly given input data: the input is given explicitly and the&lt;br/&gt;generally accepted standard is to search for algorithms having the&lt;br/&gt;complexity linear, or at least polynomial in terms of the input size. Such&lt;br/&gt;algorithms are viewed usually as the most efficient. However, this&lt;br/&gt;significantly changes if we deal with massive data. It is sometimes&lt;br/&gt;necessary to find good algorithms which deal with implicitly given data&lt;br/&gt;and access only small part of the data (e.g., a random sample), or small&lt;br/&gt;compressed or encoded representation of the data. The information which we&lt;br/&gt;have about the data is now of size which would be substantially much&lt;br/&gt;smaller than the size of the whole original input. In the extreme&lt;br/&gt;situations it can be even constant (small sample sufficiently well&lt;br/&gt;approximating, with high probability, the exact output).&lt;br/&gt;&lt;br/&gt;The main theme of this research is to understand the relation between the&lt;br/&gt;complexity of the problems in the classical model (where the access to&lt;br/&gt;data is given explicitly) and the problems in the model in which the&lt;br/&gt;access to the input is implicit. The main focus is on study algorithms for&lt;br/&gt;one- and two-dimensional compressed texts, algorithms for property&lt;br/&gt;testing, and sampling-based approximation algorithms. In case of texts the&lt;br/&gt;implicit input is the compressed version of the input and in the case of&lt;br/&gt;property testing the reduced input is usually a small sample of the input.&lt;br/&gt;In the latter case, the we also deal with the problems on preprocessed&lt;br/&gt;input: an oracle provides fast answers to some basic structures underlying&lt;br/&gt;the input data, e.g., (in geometric setting) orthogonal range queries. In&lt;br/&gt;this case the implicit access to the input is constrained by range of&lt;br/&gt;allowable queries and by the input data representation. The goals for this&lt;br/&gt;research are to advance the state-of-the art in algorithms with restricted&lt;br/&gt;access to the input data in general, in particular algorithms for&lt;br/&gt;compressed texts and sampling-based property testing and approximation&lt;br/&gt;algorithms.&lt;br/&gt;&lt;br/&gt;The intellectual merit of this proposal is wide and it involves advances&lt;br/&gt;in computational complexity of new classes of problems: pattern-matching&lt;br/&gt;in compressed or fully compressed one and two-dimensional texts, property&lt;br/&gt;testing with access only to a small portion of the input data and abstract&lt;br/&gt;combinatorial algorithms dealing with implicit input data. It is a belief&lt;br/&gt;of the investigators that new aspects of the algorithmic efficiency&lt;br/&gt;explored in this research may initiate an important and novel area of&lt;br/&gt;computer science. This would be of great importance in time and space&lt;br/&gt;effective processing of massive data, as well as of great importance in&lt;br/&gt;pure theory. The end-result of this research effort are an understanding&lt;br/&gt;of the effects of special access to the input data on the efficiency of&lt;br/&gt;related algorithms.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/15/2003</MinAmdLetterDate>
<MaxAmdLetterDate>06/05/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0313219</AwardID>
<Investigator>
<FirstName>Artur</FirstName>
<LastName>Czumaj</LastName>
<EmailAddress>aczumaj@acm.org</EmailAddress>
<StartDate>06/05/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Wojciech</FirstName>
<LastName>Rytter</LastName>
<EmailAddress>rytter@oak.njit.edu</EmailAddress>
<StartDate>07/15/2003</StartDate>
<EndDate>06/05/2006</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Artur</FirstName>
<LastName>Czumaj</LastName>
<EmailAddress>aczumaj@acm.org</EmailAddress>
<StartDate>07/15/2003</StartDate>
<EndDate>06/05/2006</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>New Jersey Institute of Technology</Name>
<CityName>Newark</CityName>
<ZipCode>071021982</ZipCode>
<PhoneNumber>9735965275</PhoneNumber>
<StreetAddress>University Heights</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<ProgramElement>
<Code>1686</Code>
<Text>ITR SMALL GRANTS</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

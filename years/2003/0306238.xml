<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Hybrid External/Built-In Self-Test Techniques</AwardTitle>
<AwardEffectiveDate>06/15/2003</AwardEffectiveDate>
<AwardExpirationDate>05/31/2007</AwardExpirationDate>
<AwardTotalIntnAmount>250000.00</AwardTotalIntnAmount>
<AwardAmount>250000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010600</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
</ProgramOfficer>
<AbstractNarration>As the amount of test data required to test new generations of complex system-on-chip (SOC) designs continues to grow rapidly, conventional external testing approaches where all test data is stored on the tester and transferred to/from the chip is becoming increasingly difficult.   Testers have limited speed, memory, and I/O channels.  The limited test data bandwidth between the tester and the chip is becoming a major bottleneck that is projected to become much worse.  This project involves developing hybrid schemes that combine external testing and self-testing approaches in novel ways to ease the burden on the external tester. Such techniques can provide the best of both worlds.  The overhead and fault coverage limitations of self-test approaches can be overcome by intelligently making use of deterministic data from the tester to guide the self-test hardware, while the test data bandwidth and storage requirements for the external tester can be reduced by orders of magnitude.  Some of the questions to be answered in this research include: &lt;br/&gt;&lt;br/&gt;1. What are the most efficient ways to use deterministic data from the tester to guide test pattern generation hardware on the chip.&lt;br/&gt;2. How to minimize the hardware under a constraint on test data bandwidth&lt;br/&gt;from the tester.&lt;br/&gt;3. For a system-on-chip (SOC) with multiple cores, what is the best way to&lt;br/&gt;configure the hybrid test hardware for each core.&lt;br/&gt;4. How can deterministic data from the tester be used to reduce power&lt;br/&gt;dissipation during self-test.&lt;br/&gt;5. How can delay fault coverage be improved with a hybrid scheme.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/13/2003</MinAmdLetterDate>
<MaxAmdLetterDate>02/25/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0306238</AwardID>
<Investigator>
<FirstName>Nur</FirstName>
<LastName>Touba</LastName>
<EmailAddress>touba@ece.utexas.edu</EmailAddress>
<StartDate>06/13/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
</Institution>
<ProgramElement>
<Code>4710</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYS</Text>
</ProgramElement>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

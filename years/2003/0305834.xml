<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:  Compositional Verification of Software Product Lines as Open Systems</AwardTitle>
<AwardEffectiveDate>09/01/2003</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>134000.00</AwardTotalIntnAmount>
<AwardAmount>134000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010500</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>0305950&lt;br/&gt;Krishnamurthi, Shriram, -&lt;br/&gt;Brown University&lt;br/&gt;Collaborative Research: Compositional Verification of Software Product&lt;br/&gt;Lines as Open Systems&lt;br/&gt;&lt;br/&gt;0305834&lt;br/&gt;Fisler, Kathryn, -&lt;br/&gt;Worcester Polytechnic Institute&lt;br/&gt;Collaborative Research: Compositional Verification of Software Product&lt;br/&gt;Lines as Open Systems&lt;br/&gt;&lt;br/&gt;A product line is a family of related software products built from a common set of components, where each component typically implements a distinguishable feature.  While product lines have many demonstrated&lt;br/&gt;software engineering benefits, they pose a nontrivial challenge for traditional methods of testing and validation.  Prior work, including case studies, has developed compositional techniques for automated&lt;br/&gt;verification of temporal logic formulae over product lines.  The case studies have revealed the need for techniques that handle open system verification sensitive to (a) propositions that evolve over time and&lt;br/&gt;across features, and (b) propositions that behave differently depending on whether they model control or data.  This project, a collaboration between Brown University and Worcester Polytechnic Institute, extends prior work to handle these issues using a particular combination of propositional, temporal, and 3-valued logic constraints.  The combined representations lead to lightweight preservation checks, a crucial part of keeping product-line verification tractable.  The work includes both theoretical work and&lt;br/&gt;experimental validation.  The project both contributes to advancing an important software development methodology and narrows the gap between the areas of software engineering and computer-aided&lt;br/&gt;verification.  The work involves undergraduate students and will have impact through classroom contact at several levels.  &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/24/2003</MinAmdLetterDate>
<MaxAmdLetterDate>09/15/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0305834</AwardID>
<Investigator>
<FirstName>Kathryn</FirstName>
<LastName>Fisler</LastName>
<EmailAddress>kathryn_fisler@brown.edu</EmailAddress>
<StartDate>08/24/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Worcester Polytechnic Institute</Name>
<CityName>WORCESTER</CityName>
<ZipCode>016092247</ZipCode>
<PhoneNumber>5088315000</PhoneNumber>
<StreetAddress>100 INSTITUTE RD</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code/>
<Text/>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

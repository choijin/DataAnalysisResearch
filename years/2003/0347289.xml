<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:     Type-Directed Programming in Object-Oriented Languages</AwardTitle>
<AwardEffectiveDate>12/15/2003</AwardEffectiveDate>
<AwardExpirationDate>11/30/2009</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>0347289&lt;br/&gt;CAREER: Type-Directed Programming in Object-Oriented Languages&lt;br/&gt;Stephanie Weirich&lt;br/&gt;University of Pittsburgh&lt;br/&gt;&lt;br/&gt;Type-directed programming is an important paradigm in the design of software. By using this form of programming to analyze the structure of data, many operations, such as serialization, equality and iterators may be defined once, for all types of data.  As software evolves, these operations need not be updated---they will automatically adapt to new data forms.  Although object-oriented languages are widely used in the implementation of modern software systems, they have only primitive support for type-directed programming. Therefore, this project proposes to adapt and extend the mechanisms for type-directed programming to those languages. &lt;br/&gt;&lt;br/&gt;The specific goals of the project are threefold. The first goal is to extend the existing theory of type-directed programming to object-oriented programming languages.  The second is to validate and refine that theory by developing an implementation of an   object-oriented language that supports type-directed programming. Finally, the third goal is to use this implementation to investigate new patterns of type-directed programming to inspire new developments in language support for these patterns.  Experiments with type-directed programming will be included to better understand its role in programming in the context of object-oriented languages.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>12/15/2003</MinAmdLetterDate>
<MaxAmdLetterDate>01/14/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0347289</AwardID>
<Investigator>
<FirstName>Stephanie</FirstName>
<LastName>Weirich</LastName>
<EmailAddress>sweirich@cis.upenn.edu</EmailAddress>
<StartDate>12/15/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pennsylvania</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191046205</ZipCode>
<PhoneNumber>2158987293</PhoneNumber>
<StreetAddress>Research Services</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

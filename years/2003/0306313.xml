<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Efficient Logical Frameworks</AwardTitle>
<AwardEffectiveDate>07/01/2003</AwardEffectiveDate>
<AwardExpirationDate>06/30/2007</AwardExpirationDate>
<AwardTotalIntnAmount>318662.00</AwardTotalIntnAmount>
<AwardAmount>318662</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010200</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Robert B Grafton</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Logical frameworks are languages for specifying logics and reasoning with them formally, with machine support.  Examples are logics to prove the safety of programs or authenticate access rights to protected data. The project investigates theoretical foundations and efficient implementation techniques for logical frameworks.  Specifically, the project addresses performance bottlenecks in current, large-scale applications of the Twelf logical framework aimed at improving safety and security of mobile code within the national cyber infrastructure. The techniques include methods for proof compression based on intrinsic redundancy, and methods to increase the degree of automation in proof search and verification.&lt;br/&gt;&lt;br/&gt;Logic is a key discipline in computer science because it allows us to make definitive judgments such as "yes, this program is safe to run" or "yes, this agent is allowed to access these data".  The critical notion is that of a formal proof, which can convince a code recipient of its safety or an operating system of access rights.  Logical frameworks represent such proofs as data structures.  This project investigates methods to manipulate these data structures efficiently so they can be used in realistic, large-scale applications.  The system under construction is also used to teach undergraduates the concepts of formal logic as they are applied in computer science and mathematics.</AbstractNarration>
<MinAmdLetterDate>06/24/2003</MinAmdLetterDate>
<MaxAmdLetterDate>04/01/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0306313</AwardID>
<Investigator>
<FirstName>Frank</FirstName>
<LastName>Pfenning</LastName>
<EmailAddress>fp@cs.cmu.edu</EmailAddress>
<StartDate>06/24/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<ProgramElement>
<Code>2865</Code>
<Text>NUMERIC, SYMBOLIC &amp; GEO COMPUT</Text>
</ProgramElement>
<ProgramReference>
<Code/>
<Text/>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

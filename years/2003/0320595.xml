<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SGER: Discrete Event Simulation of Self-Assembly Kinetics</AwardTitle>
<AwardEffectiveDate>04/01/2003</AwardEffectiveDate>
<AwardExpirationDate>08/31/2004</AwardExpirationDate>
<AwardTotalIntnAmount>99649.00</AwardTotalIntnAmount>
<AwardAmount>99649</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Mitra Basu</SignBlockName>
</ProgramOfficer>
<AbstractNarration>EIA-0320595&lt;br/&gt;Russell Schwartz&lt;br/&gt;Carnegie Mellon University&lt;br/&gt;&lt;br/&gt;Project Summary: Discrete Event Simulation of Self-Assembly Kinetics &lt;br/&gt; &lt;br/&gt;The goal of this project is to develop a novel computational tool for simulating generalized self-&lt;br/&gt;assembly systems. Self-assembly systems consist of many small components, or subunits, that &lt;br/&gt;spontaneously arrange themselves into larger structures under appropriate conditions.  Among the &lt;br/&gt;many medically important self-assembly systems are viral protein shells, or capsids, which form &lt;br/&gt;protective coats around the genetic material of viruses; amyloids, fibrous agglomerations of &lt;br/&gt;proteins that are implicated in Alzheimer.s disease, Huntington.s disease, and the prion diseases; &lt;br/&gt;and irregular protein aggregates.  For all of these systems, the process of assembly is only &lt;br/&gt;partially understood.  In addition, self-assembly has attracted recent interest as a means of &lt;br/&gt;constructing man-made devices and materials on the nanometer scale.  Due to the small size, &lt;br/&gt;speed, and complexity of many self-assembly processes, they have proven difficulty to analyze &lt;br/&gt;experimentally.  Simulation approaches have therefore emerged as a crucial avenue for gaining &lt;br/&gt;insight into the self-assembly process.  This project seeks to build on the prior work in the area by &lt;br/&gt;creating a model of the self-assembly process sufficiently versatile to capture a wide variety of &lt;br/&gt;self-assembly systems, yet fast enough to handle realistic simulation sizes in a reasonable time. &lt;br/&gt; &lt;br/&gt;The basic methodology will involve combining techniques developed in prior modeling work on &lt;br/&gt;this problem with a computational method that has not previously been used for self-assembly &lt;br/&gt;simulation.  The simulator will use a model of self-assembly dynamics based largely on the prior &lt;br/&gt;.local rules dynamics. model, which provided a versatile representation of high-level self-&lt;br/&gt;assembly behavior in terms of low-level subunit interactions.  It will be efficiently implemented &lt;br/&gt;using a computational data structure called a .discrete event priority queue,. which will allow the &lt;br/&gt;simulator to step between changes in discrete state (such as subunits binding to one another) &lt;br/&gt;without the need for explicit integration over all time steps.  The result will be faster simulation of &lt;br/&gt;a highly general self-assembly model than was possible with prior methods.  The simulator will &lt;br/&gt;be implemented in Java to facilitate ease of development, extensibility, and portability.  &lt;br/&gt;Implementation will be conducted through distinct phases devoted to developing an object model &lt;br/&gt;(which specifies how pieces of computer code interact with one another), coding and testing a &lt;br/&gt;prototype simulator, and finalizing an optimized and well documented release-quality version.  &lt;br/&gt;The end result will be both a stand-alone simulation tool and a set of computational classes &lt;br/&gt;available for extension and use in other programs.  This work will require innovation primarily in &lt;br/&gt;mathematical models of self-assembly processes and in algorithms for their efficient simulation &lt;br/&gt;by a discrete event queue methodology.  Further innovation will be needed in the integration of &lt;br/&gt;existing knowledge from such areas as biophysics, algorithms, software engineering, and user &lt;br/&gt;interface design to produce a versatile, easy-to-use graphical simulation tool. &lt;br/&gt; &lt;br/&gt;The project can be expected to yield several benefits.  Its impact will be primarily on the field of &lt;br/&gt;self-assembly, by providing a general tool that can be used by researchers throughout the field for &lt;br/&gt;modeling known systems across size and time scales, developing computational prototypes of &lt;br/&gt;novel systems, and experimenting with interventions in both.  It will also provide new methods &lt;br/&gt;and experience to the general field of biophysical simulation through the development of a novel &lt;br/&gt;simulation methodology, its implementation in a computational simulator, and optimization of &lt;br/&gt;algorithms for this problem.  The cross-disciplinary nature of the project will enhance its impact &lt;br/&gt;by providing for the computational community new variations on problems to be found in &lt;br/&gt;biophysical systems and providing for the biophysics community new computational techniques &lt;br/&gt;that can be brought to bear on other problems.  The work will also have educational value by &lt;br/&gt;providing interdisciplinary research experience to students, including two undergraduates, and by &lt;br/&gt;providing a simulator that can be used as both a research and a teaching tool.</AbstractNarration>
<MinAmdLetterDate>03/10/2003</MinAmdLetterDate>
<MaxAmdLetterDate>02/18/2004</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0320595</AwardID>
<Investigator>
<FirstName>Russell</FirstName>
<LastName>Schwartz</LastName>
<EmailAddress>russells@andrew.cmu.edu</EmailAddress>
<StartDate>03/10/2003</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>1705</Code>
<Text>BIOLOGY &amp; INFORMATION TECHNOLO</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9237</Code>
<Text>SMALL GRANTS-EXPLORATORY RSRCH</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

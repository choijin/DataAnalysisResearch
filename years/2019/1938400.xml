<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase I:  Neural Component Architecture to Accelerate Modeling &amp; Simulation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2020</AwardEffectiveDate>
<AwardExpirationDate>01/31/2021</AwardExpirationDate>
<AwardTotalIntnAmount>224676.00</AwardTotalIntnAmount>
<AwardAmount>224676</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Peter Atherton</SignBlockName>
<PO_EMAI>patherto@nsf.gov</PO_EMAI>
<PO_PHON>7032928772</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The broader impact of this Small Business Innovation Research (SBIR) Phase I project will result from enabling significant cost and time savings in developing new, more efficient designs in broad fields such as engineering and healthcare. If successful, the project will enable simulations of everything from automobiles to aerospace components and pharmaceuticals to run up to 100 times faster by representing a physical component of a system with an advanced digital analogue.  To date, software incompatibilities have limited the development of this kind of modeling. This project will solve this problem through advanced computational and compiler techniques, and thereby demonstrate the feasibility of a new kind of design process with significant cost reductions.   &lt;br/&gt;&lt;br/&gt;This Small Business Innovation Research Phase I project will demonstrate the feasibility of using neural components in a modular system.  We will combine the successes of surrogate model optimization and neural ODEs to allow for component-based differential-algebraic equation models with automated model order reduction through a latent diffeq. The idea is to build complex models as an assembly of modular pre-designed simulation components using our recent advances in differential programming and learning software to allow for automated training of neural model order reduction for accelerating the solution of large acausal models. Two machine learning methods have promising prospects for accelerating traditional mechanistic modeling workflows: surrogate optimization and neural differential equations.  In this project, we will integrate these components into a prototype system.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>01/21/2020</MinAmdLetterDate>
<MaxAmdLetterDate>01/21/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1938400</AwardID>
<Investigator>
<FirstName>Keno</FirstName>
<LastName>Fischer</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Keno Fischer</PI_FULL_NAME>
<EmailAddress>grants.keno@juliacomputing.com</EmailAddress>
<PI_PHON>6172017055</PI_PHON>
<NSF_ID>000804242</NSF_ID>
<StartDate>01/21/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Julia Computing Inc</Name>
<CityName>Newton Center</CityName>
<ZipCode>024591709</ZipCode>
<PhoneNumber>6172017055</PhoneNumber>
<StreetAddress>20 Garland Rd</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>079397053</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>JULIA COMPUTING, INC.</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>876875494</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Julia Computing, Inc.]]></Name>
<CityName>Newton</CityName>
<StateCode>MA</StateCode>
<ZipCode>024591709</ZipCode>
<StreetAddress><![CDATA[20 Garland Rd]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5371</Code>
<Text>SBIR Phase I</Text>
</ProgramElement>
<ProgramReference>
<Code>8032</Code>
<Text>Software Services and Applications</Text>
</ProgramReference>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2020~224676</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Modeling and Simulation are key to modern engineering and bio-engineering. Increasingly complex models are built and simulated by engineers - but today&rsquo;s modeling software falls short of meeting the bioengineer&rsquo;s expectations - whether it is synthesizing synthetic biocircuits or biofuel pathways, analyzing drug targets via quantitative systems pharmacology, etc. We are leveraging differentiable programming to enhance the productivity of bioengineers in their quest towards next generation technologies.</p> <p>Through the combination of a new class of differential equation based machine learning algorithms with GPUs (the Julia SciML stack), we have advanced the capabilities of Modelica-like acausal modeling environments and provide a &gt;100x performance improvement. This is made possible by spending extreme amounts of training time to build ML surrogates of physical models. These surrogates are built in a way that they can be directly shipped to scientists pre-trained, meaning the 100x performance improvement is a direct improvement to the speed of drug design, cardiac pathology identification, biofuel pathways analysis, and more.</p> <p><span>In what we consider as a shining achievement of our efforts, engineers at NASA Launch Services were able to achieve a 15,000x improvement in performance over their existing tools for simulation of space payload.</span></p> <p><span><span>The MIT undergraduate course 18.S191 and graduate course 18.337 demonstrate a large portion of the SciML tools built and enhanced as part of this project. These courses have had a notably wide reach, with one of the lectures reaching more than 250,000 views on Youtube. Many trainings and workshops have already been given on these tools at large conferences, with the &ldquo;Doing Scientific Machine Learning&rdquo; 3 hour workshop at JuliaCon 2020 reaching over 20,000 views. Discussions of the software and methods behind this work have been featured at the top of tech news aggregation sites like Hacker News, such as the release of the Symbolics.jl and ModelingToolkit.jl symbolic modeling languages.</span><br /></span></p><br> <p>            Last Modified: 03/25/2021<br>      Modified by: Keno&nbsp;Fischer</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Modeling and Simulation are key to modern engineering and bio-engineering. Increasingly complex models are built and simulated by engineers - but today’s modeling software falls short of meeting the bioengineer’s expectations - whether it is synthesizing synthetic biocircuits or biofuel pathways, analyzing drug targets via quantitative systems pharmacology, etc. We are leveraging differentiable programming to enhance the productivity of bioengineers in their quest towards next generation technologies.  Through the combination of a new class of differential equation based machine learning algorithms with GPUs (the Julia SciML stack), we have advanced the capabilities of Modelica-like acausal modeling environments and provide a &gt;100x performance improvement. This is made possible by spending extreme amounts of training time to build ML surrogates of physical models. These surrogates are built in a way that they can be directly shipped to scientists pre-trained, meaning the 100x performance improvement is a direct improvement to the speed of drug design, cardiac pathology identification, biofuel pathways analysis, and more.  In what we consider as a shining achievement of our efforts, engineers at NASA Launch Services were able to achieve a 15,000x improvement in performance over their existing tools for simulation of space payload.  The MIT undergraduate course 18.S191 and graduate course 18.337 demonstrate a large portion of the SciML tools built and enhanced as part of this project. These courses have had a notably wide reach, with one of the lectures reaching more than 250,000 views on Youtube. Many trainings and workshops have already been given on these tools at large conferences, with the "Doing Scientific Machine Learning" 3 hour workshop at JuliaCon 2020 reaching over 20,000 views. Discussions of the software and methods behind this work have been featured at the top of tech news aggregation sites like Hacker News, such as the release of the Symbolics.jl and ModelingToolkit.jl symbolic modeling languages.        Last Modified: 03/25/2021       Submitted by: Keno Fischer]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

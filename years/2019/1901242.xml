<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Medium: Principled Co-Reasoning of Software and Natural-Language Artifacts</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/15/2019</AwardEffectiveDate>
<AwardExpirationDate>06/30/2023</AwardExpirationDate>
<AwardTotalIntnAmount>900000.00</AwardTotalIntnAmount>
<AwardAmount>692005</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Software is pervasive. Software typically contains a large volume of artifacts written in natural languages (NL), including code comments, change logs, manual pages, constant strings in code, and variable and function names.  Software NL artifacts contain a wealth of semantic information that is often missing in code artifacts.  There has been substantial existing work on analyzing NL artifacts and leveraging them in a wide range of software-engineering applications.  However, most existing work is ad hoc, and is limited in its generality.  Existing work typically considers NL artifacts as sources for additional information instead of first-class objects on which analysis operates (like variable types in program analysis), missing the opportunity to take full advantage of software NL artifacts. Thus, this project develops co-analysis of code and NL artifacts, which treats NL artifacts as  first-class objects.  In addition to advancing the state of the art, the principles, infrastructure, and techniques developed in the project are transformative, providing educational and practical tools to generate high-quality source code and software documents. These techniques improve program analysis, software maintenance, software reliability, and engineering productivity, for lower software development cost and better work and recreational lives, where software is indispensable.&lt;br/&gt;&lt;br/&gt;The project develops a principled and sophisticated software reasoning method that couples NL analysis and program analysis. It automatically models and classifies various kinds of NL artifacts, and attributes them to the related code elements. As such, they become first-class objects just like other classic objects in program analysis (e.g., variables and statements). They can be inferred, propagated, updated, associated, and formally reasoned about, to maximize the utilization of their rich semantics (e.g., comments can be propagated to code elements that are not previously commented through program analysis). The project activities include (1) modeling, classifying, and attributing NL artifacts, through developing domain-specific language models to process, model, classify NL artifacts and attribute them to the corresponding code elements, (2) building uniform representation, propagation, and co-reasoning of NL artifacts and code artifacts, (3) producing highly accurate and scalable probabilistic inference, by leveraging probabilistic graph models to perform the uniform reasoning of both code and NL artifacts, and (4) exploring new applications of co-analysis in domains including software testing.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>07/03/2019</MinAmdLetterDate>
<MaxAmdLetterDate>05/19/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1901242</AwardID>
<Investigator>
<FirstName>Xiangyu</FirstName>
<LastName>Zhang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xiangyu Zhang</PI_FULL_NAME>
<EmailAddress>xyzhang@cs.purdue.edu</EmailAddress>
<PI_PHON>7654944600</PI_PHON>
<NSF_ID>000494973</NSF_ID>
<StartDate>07/03/2019</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Lin</FirstName>
<LastName>Tan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Lin Tan</PI_FULL_NAME>
<EmailAddress>lintan@purdue.edu</EmailAddress>
<PI_PHON>7654946010</PI_PHON>
<NSF_ID>000787841</NSF_ID>
<StartDate>07/03/2019</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName>West Lafayette</CityName>
<StateCode>IN</StateCode>
<ZipCode>479072114</ZipCode>
<StreetAddress><![CDATA[155 South Grant Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0121</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2019~441001</FUND_OBLG>
<FUND_OBLG>2020~227004</FUND_OBLG>
<FUND_OBLG>2021~24000</FUND_OBLG>
</Award>
</rootTag>

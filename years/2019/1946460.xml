<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Hiding structure in geometric data exchange formats</AwardTitle>
<AwardEffectiveDate>03/01/2020</AwardEffectiveDate>
<AwardExpirationDate>02/28/2022</AwardExpirationDate>
<AwardTotalIntnAmount>201946.00</AwardTotalIntnAmount>
<AwardAmount>201946</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Phillip Regalia</SignBlockName>
</ProgramOfficer>
<AbstractNarration>A fundamental algorithmic/software issue in 3D printing, visualization, and geometric computing is incompatible file-exchange formats. For instance, 3D printing data is usually stored in a format called STL, but there are numerous geometric tools which use other (incompatible) formats (some well-known extensions being: STH, RPI, and STEP, to name just a few). This project will pursue a novel direction to improve compatibility and efficiency in geometric computing: restructuring files, in their native format, without translating them into a new format. This will enable faster checking of 3D models and processing. A key novelty is that this work will use existing file formats rather than create a new one. Potential impact include faster modeling of complex geometric data and  real-time remote collaboration on complex designs, such as mechanical parts or architectural data. &lt;br/&gt;&lt;br/&gt;The restructuring and preservation of native file formats is technically quite involved, and leads to several interesting research directions: (1) How much additional geometric information can be ``hidden'' in a file simply by reordering the data? (2) What is the most useful geometric information that should be ``hidden'', (3) What is the most effective way to pack information for an application while still preserving the file format? A key example to keep in mind is how STL redundantly stores vertices of facets, and that this enables one to introduce a new ordering of the redundant data without disrupting the underlying file format. Answering these questions can also help support streaming of geometric data.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>03/17/2020</MinAmdLetterDate>
<MaxAmdLetterDate>03/17/2020</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1946460</AwardID>
<Investigator>
<FirstName>Jack</FirstName>
<LastName>Snoeyink</LastName>
<EmailAddress>Snoeyink@cs.unc.edu</EmailAddress>
<StartDate>03/17/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of North Carolina at Chapel Hill</Name>
<CityName>CHAPEL HILL</CityName>
<ZipCode>275991350</ZipCode>
<PhoneNumber>9199663411</PhoneNumber>
<StreetAddress>104 AIRPORT DR STE 2200</StreetAddress>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
</Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramElement>
<Code>7797</Code>
<Text>Comm &amp; Information Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7929</Code>
<Text>COMPUTATIONAL GEOMETRY</Text>
</ProgramReference>
<ProgramReference>
<Code>7935</Code>
<Text>COMM &amp; INFORMATION THEORY</Text>
</ProgramReference>
</Award>
</rootTag>

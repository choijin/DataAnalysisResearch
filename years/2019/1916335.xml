<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase I:  Encrypted Databases: From Theory to Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2019</AwardEffectiveDate>
<AwardExpirationDate>02/28/2021</AwardExpirationDate>
<AwardTotalIntnAmount>224997.00</AwardTotalIntnAmount>
<AwardAmount>224997</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Peter Atherton</SignBlockName>
<PO_EMAI>patherto@nsf.gov</PO_EMAI>
<PO_PHON>7032928772</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase I project consists of (1) preventing server-level data breaches; and (2) increasing adoption of cloud computing; especially in sectors that inherently deal with sensitive data and are subject to regulation. This includes the healthcare and finance industries as well as government agencies. Data breaches are occurring at an alarming rate and affecting every industry and sector of government. This project enables customers to search and query data without ever needing to decrypt it, effectively protecting data against server-level breaches. Potential customers from the financial and healthcare industries said in interviews that their adoption of cloud computing had been slowed due to the sensitivity of some of their data. Their inability to use the cloud to store and analyze highly sensitive data is very costly since they have to build and maintain on-premise infrastructures to handle it. The outcome of this project will enable customers to make use of and benefit from cloud computing even for their most sensitive data. From a societal standpoint, this project increases user security and privacy and helps achieve regulatory compliance while investing less in cybersecurity.&lt;br/&gt;&lt;br/&gt;This Small Business Innovation Research (SBIR) Phase I project aims to design, build and evaluate a commercially viable encrypted relational database system. The project will tackle a variety of technical challenges that need to be overcome before this technology can see widespread adoption. The first is integration with existing database management systems (DBMSs). Commercial database systems benefit from over 40 years of research, optimization and engineering breakthroughs. While the new cryptographic techniques proposed for this project have many advantages in terms of security and efficiency, it is not a-priori clear how to integrate them into a standard DBMS without a complete re-design. To address this challenge, this project leverages a new algorithmic paradigm called emulation that seamlessly integrates these new cryptographic techniques with standard commercial DBMSs. The second challenge this project addresses is concrete real-world efficiency. The theoretical analysis of the proposed solution shows that it is asymptotically efficient. The proposed work, however, will show that it is also efficient in practice on real data and against real database benchmarks.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>06/10/2019</MinAmdLetterDate>
<MaxAmdLetterDate>02/12/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1916335</AwardID>
<Investigator>
<FirstName>Tarik</FirstName>
<LastName>Moataz</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tarik Moataz</PI_FULL_NAME>
<EmailAddress>tarik@sifrsystems.com</EmailAddress>
<PI_PHON>4014997326</PI_PHON>
<NSF_ID>000794931</NSF_ID>
<StartDate>06/10/2019</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SIFR SYSTEMS, INC.</Name>
<CityName>PROVIDENCE</CityName>
<ZipCode>029065018</ZipCode>
<PhoneNumber>4014997326</PhoneNumber>
<StreetAddress>32 WINFIELD RD</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<StateCode>RI</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>RI01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>116856629</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>SIFR SYSTEMS, INC.</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[SIFR SYSTEMS, INC.]]></Name>
<CityName>Providence</CityName>
<StateCode>RI</StateCode>
<ZipCode>029065018</ZipCode>
<StreetAddress><![CDATA[32 Winfield Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>RI01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5371</Code>
<Text>SBIR Phase I</Text>
</ProgramElement>
<ProgramReference>
<Code>5371</Code>
<Text>SMALL BUSINESS PHASE I</Text>
</ProgramReference>
<ProgramReference>
<Code>8032</Code>
<Text>Software Services and Applications</Text>
</ProgramReference>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2019~224997</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-d5018fd8-7fff-ad1d-98bd-518a0aac2279"> </span></p> <p dir="ltr"><span>The goal of this project was (1) to design a new generation of end-to-end encrypted databases that can prevent server-level data breaches; and (2) increase adoption of cloud computing; especially in sectors that inherently deal with sensitive data and are subject to regulation. This includes the healthcare and finance industries as well as government agencies.&nbsp;</span></p> <p dir="ltr"><span>More specifically, the project looks at the technical feasibility of allowing customers to encrypt their data and be able to query it without ever needing to decrypt it. This new paradigm allows a customer to completely offload its data management to an untrusted server while retaining complete security. The project tackled a variety of technical challenges and solved several open questions. In particular, we were able to show for the first time that advanced cryptographic primitives can be used to build encrypted databases without requiring any modifications to the backend (i.e., the database server). This new technique, called emulation, retains the same security guarantees of the underlying encrypted search solution. Our system is based on structured encryption (STE) which is a type of encryption scheme that encrypts arbitrary structures in a way that they can be queried and updated privately. While the project initially started with a focus on relational databases (e.g., PostgreSQL), we quickly expanded our scope to non-relational databases. The backends we worked on include: AWS DynamoDB, Elasticsearch and MongoDB. In particular, we were able to design new schemes that support expressive queries including exact, range, prefix, suffix and substring search over encrypted data.&nbsp;</span></p> <p dir="ltr"><span>One of the challenges of this project was to assess the concrete real-world efficiency of our schemes and systems. Even though our designs are asymptotically efficient, we had to show that their implementations are also efficient in practice on real data and against real database benchmarks. In the relational setting, we implemented our prototype on top of PostgreSQL. Our analysis shows that the setup of an encrypted PostgreSQL database is around 10x the setup time of a plaintext PostgreSQL database. With respect to the storage overhead, we incur 9x more storage. For 82% of the queries in TPC-H the overhead of an encrypted query vs the same plaintext query was less than 100x. More precisely, 36% of the queries had overhead between 1x and 20x; 46% had overhead between 20x and 100x , and 18% had overhead larger than 100x. The minimum overhead was 1x, the maximum was 1876x and the median was 31x.&nbsp;</span></p> <p dir="ltr"><span>In the non-relational setting, we implemented three prototypes. Here, we only highlight the results for AWS DynamoDB. For the setup time, it takes less than 38 minutes to store 1 million rows; which is x1.68 the cost of setting up 1 million rows in a plaintext AWS DynamoDB instance. For single keyword and range queries, our prototype is 2.6x and 2.8x slower than plaintext DynamoDB, respectively. For update operations, depending on whether the update is an addition, a modification or a delete, our prototype is 1.5x to 2.6x slower than plaintext DynamoDB.</span></p> <p dir="ltr"><span>The results of NSF-SBIR Phase 1 show that the design of efficient and scalable end-to-end encrypted relational and non-relational databases is possible. The efficiency numbers we obtained in or both settings are very encouraging; especially for the non-relational setting.&nbsp;</span></p> <p>&nbsp;</p><br> <p>            Last Modified: 03/26/2021<br>      Modified by: Tarik&nbsp;Moataz</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   The goal of this project was (1) to design a new generation of end-to-end encrypted databases that can prevent server-level data breaches; and (2) increase adoption of cloud computing; especially in sectors that inherently deal with sensitive data and are subject to regulation. This includes the healthcare and finance industries as well as government agencies.  More specifically, the project looks at the technical feasibility of allowing customers to encrypt their data and be able to query it without ever needing to decrypt it. This new paradigm allows a customer to completely offload its data management to an untrusted server while retaining complete security. The project tackled a variety of technical challenges and solved several open questions. In particular, we were able to show for the first time that advanced cryptographic primitives can be used to build encrypted databases without requiring any modifications to the backend (i.e., the database server). This new technique, called emulation, retains the same security guarantees of the underlying encrypted search solution. Our system is based on structured encryption (STE) which is a type of encryption scheme that encrypts arbitrary structures in a way that they can be queried and updated privately. While the project initially started with a focus on relational databases (e.g., PostgreSQL), we quickly expanded our scope to non-relational databases. The backends we worked on include: AWS DynamoDB, Elasticsearch and MongoDB. In particular, we were able to design new schemes that support expressive queries including exact, range, prefix, suffix and substring search over encrypted data.  One of the challenges of this project was to assess the concrete real-world efficiency of our schemes and systems. Even though our designs are asymptotically efficient, we had to show that their implementations are also efficient in practice on real data and against real database benchmarks. In the relational setting, we implemented our prototype on top of PostgreSQL. Our analysis shows that the setup of an encrypted PostgreSQL database is around 10x the setup time of a plaintext PostgreSQL database. With respect to the storage overhead, we incur 9x more storage. For 82% of the queries in TPC-H the overhead of an encrypted query vs the same plaintext query was less than 100x. More precisely, 36% of the queries had overhead between 1x and 20x; 46% had overhead between 20x and 100x , and 18% had overhead larger than 100x. The minimum overhead was 1x, the maximum was 1876x and the median was 31x.  In the non-relational setting, we implemented three prototypes. Here, we only highlight the results for AWS DynamoDB. For the setup time, it takes less than 38 minutes to store 1 million rows; which is x1.68 the cost of setting up 1 million rows in a plaintext AWS DynamoDB instance. For single keyword and range queries, our prototype is 2.6x and 2.8x slower than plaintext DynamoDB, respectively. For update operations, depending on whether the update is an addition, a modification or a delete, our prototype is 1.5x to 2.6x slower than plaintext DynamoDB. The results of NSF-SBIR Phase 1 show that the design of efficient and scalable end-to-end encrypted relational and non-relational databases is possible. The efficiency numbers we obtained in or both settings are very encouraging; especially for the non-relational setting.           Last Modified: 03/26/2021       Submitted by: Tarik Moataz]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

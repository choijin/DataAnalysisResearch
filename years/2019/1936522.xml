<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: EAGER: Towards Self-Adaptive Dynamic Analysis for Distributed Software</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2019</AwardEffectiveDate>
<AwardExpirationDate>07/31/2022</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>166000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Due to growing demands for computing performance and scalability, distributed software systems are increasingly developed and deployed. Most of the critical software and services being used today, such as financial systems and medical networks, are distributed systems in nature. The quality, including various factors (e.g., reliability and security), of these systems is thus of paramount importance to the modern society and economy. Dynamic program analysis, a  methodology that models and reasons about the behavior of programs using their execution information, has been a key enabler for powerful quality assurance tool support. However, conventional dynamic analysis is known to suffer from scalability challenges due to its substantial overheads. It also has been a standing challenge to balance the effectiveness (e.g., precision) and cost (e.g., time) of the analysis, as reflected in many analysis techniques that are efficient but do not provide a practically useful level of precision and those that are usefully precise but at unacceptable cost. To dynamic analysis of distributed software, these challenges are exacerbated because of the typically large code size and greater complexity of those software systems, in addition to unbounded execution information as a result of the fact that distributed systems commonly run as continuous (uninterrupted) services. This project will address these challenges by investigating self-adaptive dynamic analysis, a fundamentally new paradigm of dynamic program analysis, which continuously adapts its cost and effectiveness to the optimal tradeoff within user-specified budget bounds. The state of the art in dynamic analysis will be significantly advanced by this new paradigm and its superior scalability and cost-effectiveness optimality, especially in the challenging context of distributed software. &lt;br/&gt;&lt;br/&gt;This project will develop the foundational underpinning of self-adaptive dynamic analysis, including (1) the formulation of an integrated dynamic analysis infrastructure featured by hybrid dependence modeling and a built-in cost-benefit model, and (2) the design of self-adaptive and distributed dynamic-analysis algorithms focusing on dependence abstraction as empowered by the infrastructure and guided by the cost-benefit model. Compared to conventional dynamic analysis, which commonly adopts a fixed algorithmic configuration throughout the entire analysis, the studied framework exploits differences in the complexity, and accordingly those in the analysis overheads (for the same level of precision), of different regions of programs and different segments of program executions. These differences will be sensed through various monitoring utilities in the infrastructure and leveraged to adjust the algorithmic configuration (e.g., granularity and selection of the dynamic data used by the analysis). With intelligent uses of assorted program information and analysis configurations, the new framework will provide flexible cost-effectiveness balances to meet diverse budgetary needs. Meanwhile, it will attain high scalability through automatic, distributed control of the distributed analysis. By making smart decisions at runtime, the analysis will achieve and sustain optimal cost-benefit tradeoffs with respect to given constraints (e.g., resources limits) and changing run-time environment conditions during continuous system executions.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>07/30/2019</MinAmdLetterDate>
<MaxAmdLetterDate>06/08/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1936522</AwardID>
<Investigator>
<FirstName>Haipeng</FirstName>
<LastName>Cai</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Haipeng Cai</PI_FULL_NAME>
<EmailAddress>haipeng.cai@wsu.edu</EmailAddress>
<PI_PHON>5093357114</PI_PHON>
<NSF_ID>000736543</NSF_ID>
<StartDate>07/30/2019</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Washington State University</Name>
<CityName>PULLMAN</CityName>
<ZipCode>991641060</ZipCode>
<PhoneNumber>5093359661</PhoneNumber>
<StreetAddress>280 Lighty</StreetAddress>
<StreetAddress2><![CDATA[PO BOX 641060]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<StateCode>WA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041485301</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WASHINGTON STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041485301</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Washington State University]]></Name>
<CityName>PULLMAN</CityName>
<StateCode>WA</StateCode>
<ZipCode>991641060</ZipCode>
<StreetAddress><![CDATA[280 Lighty]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>025Z</Code>
<Text>SaTC: Secure and Trustworthy Cyberspace</Text>
</ProgramReference>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0121</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2019~150000</FUND_OBLG>
<FUND_OBLG>2021~16000</FUND_OBLG>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CDS&amp;E: Compiler/Runtime Support for Developing Scalable Parallel Multi-Scale Multi-Physics</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2019</AwardEffectiveDate>
<AwardExpirationDate>06/30/2020</AwardExpirationDate>
<AwardTotalIntnAmount>70867.00</AwardTotalIntnAmount>
<AwardAmount>70867</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tevfik Kosar</SignBlockName>
<PO_EMAI>tkosar@nsf.gov</PO_EMAI>
<PO_PHON>7032927992</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The dramatic strides in computer speed and performance over the last few decades make it feasible to accurately model increasingly complex phenomena. However, achieving high performance on massively parallel supercomputers is an extremely challenging task. With deepening memory hierarchies, significantly higher degrees of per-chip multi-core parallelism, the task of programming compute-intensive engineering applications to attain high performance on a large scale cluster system has become increasingly difficult. It is often the case that the time and effort required to develop effective and efficient software has become the bottleneck in advancing many areas of science and engineering. This challenge can be overcome by advances in compile-time/runtime systems that can ease the burden on the programmer while delivering a high performance portable instantiation of the particular application on modern and emerging high performance platforms.&lt;br/&gt;&lt;br/&gt;To address this challenge, this project is developing a novel framework for transforming irregular scientific/engineering applications in a global address space framework. The research is grounded in a very different and complementary research direction to most current efforts in addressing the challenge of enhancing programmer productivity, maintaining portability, and achieving good performance on scalable distributed-memory parallel systems. The project will advance compiler/runtime techniques so that users can develop annotated sequential programs, to be automatically transformed by our system for efficient execution on distributed-memory parallel systems. This approach is motivated by the success of the popular OpenMP and OpenACC pragma based approaches to transforming annotated sequential programs for parallel execution on multicore and GPU/accelerator systems, respectively. An annotation based OpenAPP (APP - Asynchronous Partitioned Parallelism) framework is proposed for source-to-source transformation of an important class of scientific/engineering programs using the inspector/executor paradigm for execution on distributed-memory parallel systems. The proposed framework will be validated using several medium to large scale applications.&lt;br/&gt;&lt;br/&gt;The project seeks to significantly lower the entry barrier associated with effective use of scalable distributed-memory computers, which are essential if more than 100x performance improvement over sequential codes is sought. A successful outcome of this project will be transformative for computational and domain scientists and engineers who seek to use next generation parallel systems for their simulation and modeling. The developed tools will be made publicly available to the community under an open source license. The project will also organize workshops that bring together compiler/runtime experts and computational scientists developing massively parallel scientific/engineering applications.</AbstractNarration>
<MinAmdLetterDate>09/23/2019</MinAmdLetterDate>
<MaxAmdLetterDate>09/23/2019</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1940789</AwardID>
<Investigator>
<FirstName>Ponnuswamy</FirstName>
<LastName>Sadayappan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ponnuswamy Sadayappan</PI_FULL_NAME>
<EmailAddress>saday@cs.utah.edu</EmailAddress>
<PI_PHON>6142164213</PI_PHON>
<NSF_ID>000182536</NSF_ID>
<StartDate>09/23/2019</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<StreetAddress2><![CDATA[Second Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009095365</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF UTAH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009095365</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Utah]]></Name>
<CityName>Salt Lake City</CityName>
<StateCode>UT</StateCode>
<ZipCode>841128930</ZipCode>
<StreetAddress><![CDATA[School of Computing]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8084</Code>
<Text>CDS&amp;E</Text>
</ProgramElement>
<ProgramReference>
<Code>026Z</Code>
<Text>NSCI: National Strategic Computing Initi</Text>
</ProgramReference>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8084</Code>
<Text>CDS&amp;E</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~70866</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The primary goal of the project was to advance compiler/runtime techniques to enable high productivity of application developers in developing high-performance parallel applications. Towards this end, new compiler optimization methodologies were developed, as well as efficient implementations of key computational library primitives for sparse matrix/tensor computations. The main outcomes were:</p> <p>1) Development of an optimizing "inspector/executor" compiler for automatically transforming a class of irregular sequential programs (that use array-based computations via indirection arrays) to efficient distributed-memory parallel programs for execution on a cluster.</p> <p>2) Development of <span>new data locality optimization abstractions for recursive programs operating on tree data structures, incorporated into&nbsp;</span>a domain-specific compiler for a parallel multiresolution adaptive numerical simulation environment, which demonstrated significant performance enhancement for the computational science application MADNESS.</p> <p>3) Implementation of a communication-optimal distributed parallel implementation of a key integral transform code (four-index transform), which was incorporated into the NWChem software suite from Pacific Northwest National Laboratory.</p> <p>4) Development of efficient parallel implementations of several key sparse matrix/tensor primitives for multicore CPUs and GPUs, including SpGEMM (sparse-sparse matrix-matrix multiplication), SpMM (sparse-dense matrix-matrix multiplication), and MTTKRP (matricized tensor times Khatri Rao product).</p> <p>5) Development of a new analytical tile-size optimization methodology that enables comprehensive design space exploration over all tile loop permutations and tile sizes for minimizing data movement overhead in multi-level tiled execution of arbitrary dimensional tensor contractions.</p><br> <p>            Last Modified: 06/09/2021<br>      Modified by: Ponnuswamy&nbsp;Sadayappan</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The primary goal of the project was to advance compiler/runtime techniques to enable high productivity of application developers in developing high-performance parallel applications. Towards this end, new compiler optimization methodologies were developed, as well as efficient implementations of key computational library primitives for sparse matrix/tensor computations. The main outcomes were:  1) Development of an optimizing "inspector/executor" compiler for automatically transforming a class of irregular sequential programs (that use array-based computations via indirection arrays) to efficient distributed-memory parallel programs for execution on a cluster.  2) Development of new data locality optimization abstractions for recursive programs operating on tree data structures, incorporated into a domain-specific compiler for a parallel multiresolution adaptive numerical simulation environment, which demonstrated significant performance enhancement for the computational science application MADNESS.  3) Implementation of a communication-optimal distributed parallel implementation of a key integral transform code (four-index transform), which was incorporated into the NWChem software suite from Pacific Northwest National Laboratory.  4) Development of efficient parallel implementations of several key sparse matrix/tensor primitives for multicore CPUs and GPUs, including SpGEMM (sparse-sparse matrix-matrix multiplication), SpMM (sparse-dense matrix-matrix multiplication), and MTTKRP (matricized tensor times Khatri Rao product).  5) Development of a new analytical tile-size optimization methodology that enables comprehensive design space exploration over all tile loop permutations and tile sizes for minimizing data movement overhead in multi-level tiled execution of arbitrary dimensional tensor contractions.       Last Modified: 06/09/2021       Submitted by: Ponnuswamy Sadayappan]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

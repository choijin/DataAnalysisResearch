<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AitF: Collaborative Research: Foundations of Intent-based Networking</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2016</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>60011.00</AwardTotalIntnAmount>
<AwardAmount>60011</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy Kimbrel</SignBlockName>
<PO_EMAI>tkimbrel@nsf.gov</PO_EMAI>
<PO_PHON>7032927924</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computer networks play an essential role in the day-to-day operations of businesses, organizations, and governments: they facilitate access to services and information as well as help protect against some types of cyberattacks.  Unfortunately, current networks require highly-skilled network operators to provide detailed specifications of how the network should behave.  This is a tedious and error prone process that limits how easily a network can evolve to meet emerging business needs and opens the door for subtle errors that can have a drastic impact on network availability, performance, and security.  The goal of this project is to automatically produce the detailed specifications required by networking hardware from a set of high-level security and performance objectives specified by individuals who may have limited networking background.  In other words, this project aims to allow administrators to focus on what the network should do rather than how it should be achieved.  The broader impact of this project is to pave the way for increased network stability and security, and also to aid in training the next generation of network professionals.&lt;br/&gt;&lt;br/&gt;Automatically producing network configurations that satisfy a set of high-level policies and objectives (collectively referred to as "intent") requires both a language for network administrators to formally specify their intents and a mechanism for generating optimal and correct configurations for various types of networking hardware.  To satisfy these requirements, the PIs plan to explore how program synthesis techniques can be applied and extended to network configurations.  The project will lead to the design of synthesis techniques for generating specific types of intent implementations (e.g., traditional control plane configurations), as well as introduce domain-specific refinements to the chosen synthesis algorithms to ensure the time required for synthesis is practical and the resulting data and control planes are optimal (e.g., the configurations have minimal complexity).  The algorithms produced by this research will advance the state of the art of program synthesis and provide new insights into how to apply program synthesis to other domains.</AbstractNarration>
<MinAmdLetterDate>08/23/2016</MinAmdLetterDate>
<MaxAmdLetterDate>08/23/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1637427</AwardID>
<Investigator>
<FirstName>Aaron</FirstName>
<LastName>Gember-Jacobson</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Aaron Gember-Jacobson</PI_FULL_NAME>
<EmailAddress>agemberjacobson@colgate.edu</EmailAddress>
<PI_PHON>3152286298</PI_PHON>
<NSF_ID>000717883</NSF_ID>
<StartDate>08/23/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Colgate University</Name>
<CityName>Hamilton</CityName>
<ZipCode>133461398</ZipCode>
<PhoneNumber>3152287457</PhoneNumber>
<StreetAddress>13 Oak Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY22</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>002253615</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>COLGATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002253615</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Colgate University]]></Name>
<CityName/>
<StateCode>NY</StateCode>
<ZipCode>133461398</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY22</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7239</Code>
<Text>Algorithms in the Field</Text>
</ProgramElement>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~60011</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-e4044d8d-7fff-6346-63ce-b984d222d51a"> <p dir="ltr"><span>Modern networks, including campus, data center, and wide area networks, must satisfy increasingly complex security, availability, and performance requirements. Satisfying these requirements is difficult due (in part) to the low level of abstraction exposed by network devices: network devices must be configured at the granularity of individual nodes, links, and protocols, whereas functional requirements express high-level, end-to-end behaviors. Consequently, functional deficiencies are common.</span></p> <p dir="ltr"><span>This project focused on simplifying the task of satisfying functional requirements and eliminating errors by reducing the need for network engineers to interface with network devices at a low level of abstraction. Fusing ideas from networking and formal analysis led to the development of two innovative systems that (partially) automate the task of repairing erroneous configurations. These systems advance the state-of-the-art in intent-based networking by allowing network engineers to focus on </span><span>what</span><span> the network should do (e.g., allow communication between two groups of hosts), rather than </span><span>how</span><span> these requirements are realized (e.g., which routing protocols and link weights are used).</span></p> <p dir="ltr"><strong>Intellectual Merit:&nbsp;</strong></p> <p dir="ltr"><span>One of the major outcomes of this project is </span><span>CPR</span><span> (Control Plane Repair), the first system to automatically repair distributed network configurations. Instead of directly manipulating configuration syntax, CPR uses a hierarchical abstraction representation of configurations&rsquo; semantic and formulates a maximum satisfiability modulo theory (MaxSMT) problem to compute minimal repairs to the abstraction. These repairs directly translate to minimal configuration patches that guarantee the network satisfies all functional requirements for all traffic classes under arbitrary failures.</span></p> <p dir="ltr"><span>Another major outcome of this project is </span><span>CEL</span><span> (Configuration Error Localizer), the first system to precisely identify </span><span>which</span><span> configuration statements contribute to the violation of one or more functional requirements. Existing configuration can detect whether or not a network&rsquo;s configurations contain errors, but CEL goes a step further by computing</span><span> minimal correction sets</span><span> for a carefully structured system of satisfiability modulo theory (SMT) constraints that separately encode a network&rsquo;s configurations, control plane logic, and functional requirements. The constraints in the correction sets are used to flag configuration segments that contribute to the violation of functional requirements.</span></p> <p dir="ltr"><strong>Broader Impact:&nbsp;</strong></p> <p dir="ltr"><span>This project has also had a significant impact on education. The PI involved a diverse group of undergraduate students in this research, including students from underrepresented groups. The PI mentored students in all aspects of the research process, and encouraged the students to pursue advanced degrees. Additionally, the PI developed a new undergraduate course&mdash;</span><span>The Unreliable Internet</span><span>&mdash;for the university&rsquo;s core curriculum. In the course, students learned how the Internet works, explored Internet design flaws and operational limitations, and compared various technology- and policy-based solutions to these challenges.</span></p> <p dir="ltr"><span>Finally, the software developed as part of this project has been made open source to allow network engineers to benefit from this research, as well as allow other researchers to expand on these innovations.</span></p> </span></p><br> <p>            Last Modified: 10/16/2019<br>      Modified by: Aaron&nbsp;Gember-Jacobson</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Modern networks, including campus, data center, and wide area networks, must satisfy increasingly complex security, availability, and performance requirements. Satisfying these requirements is difficult due (in part) to the low level of abstraction exposed by network devices: network devices must be configured at the granularity of individual nodes, links, and protocols, whereas functional requirements express high-level, end-to-end behaviors. Consequently, functional deficiencies are common. This project focused on simplifying the task of satisfying functional requirements and eliminating errors by reducing the need for network engineers to interface with network devices at a low level of abstraction. Fusing ideas from networking and formal analysis led to the development of two innovative systems that (partially) automate the task of repairing erroneous configurations. These systems advance the state-of-the-art in intent-based networking by allowing network engineers to focus on what the network should do (e.g., allow communication between two groups of hosts), rather than how these requirements are realized (e.g., which routing protocols and link weights are used). Intellectual Merit:  One of the major outcomes of this project is CPR (Control Plane Repair), the first system to automatically repair distributed network configurations. Instead of directly manipulating configuration syntax, CPR uses a hierarchical abstraction representation of configurations? semantic and formulates a maximum satisfiability modulo theory (MaxSMT) problem to compute minimal repairs to the abstraction. These repairs directly translate to minimal configuration patches that guarantee the network satisfies all functional requirements for all traffic classes under arbitrary failures. Another major outcome of this project is CEL (Configuration Error Localizer), the first system to precisely identify which configuration statements contribute to the violation of one or more functional requirements. Existing configuration can detect whether or not a network?s configurations contain errors, but CEL goes a step further by computing minimal correction sets for a carefully structured system of satisfiability modulo theory (SMT) constraints that separately encode a network?s configurations, control plane logic, and functional requirements. The constraints in the correction sets are used to flag configuration segments that contribute to the violation of functional requirements. Broader Impact:  This project has also had a significant impact on education. The PI involved a diverse group of undergraduate students in this research, including students from underrepresented groups. The PI mentored students in all aspects of the research process, and encouraged the students to pursue advanced degrees. Additionally, the PI developed a new undergraduate course&mdash;The Unreliable Internet&mdash;for the university?s core curriculum. In the course, students learned how the Internet works, explored Internet design flaws and operational limitations, and compared various technology- and policy-based solutions to these challenges. Finally, the software developed as part of this project has been made open source to allow network engineers to benefit from this research, as well as allow other researchers to expand on these innovations.        Last Modified: 10/16/2019       Submitted by: Aaron Gember-Jacobson]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

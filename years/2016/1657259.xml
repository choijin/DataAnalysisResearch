<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRII: III: RUI: Adaptive Query Processing for Crowd-Powered Database Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2017</AwardEffectiveDate>
<AwardExpirationDate>05/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>175000.00</AwardTotalIntnAmount>
<AwardAmount>175000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Hector Munoz-Avila</SignBlockName>
<PO_EMAI>hmunoz@nsf.gov</PO_EMAI>
<PO_PHON>7032924481</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Database systems provide users with the ability to ask questions, or queries, about collections of data that the system stores (e.g., find employees who had worked in the company for at least 2 years) and provide the answers very fast. People are better equipped than computers to tackle problems that require judgement or data interpretation due to their real-world experience and perception. A crowd-powered database system uses groups of people called "the crowd" to help with answering users' queries by recruiting them to process data using criteria that are subjective and/or require visual or semantic interpretation. For example, a user may want to find a set of faculty job postings in which the job description discusses a commitment to diversity and for which the school is in a safe location; interpreting each job description and researching crime statistics are tasks well-suited for people to perform. The system can coordinate crowd workers to process data more efficiently than the user alone could, which is advantageous when there are more than a handful of data items to process. While queries processed by the crowd may take hours or days to complete, crowd-powered database systems enable the processing of complex queries. For example, queries such as determining which research articles about a certain medical device contain experimental results comparing this and other devices, or finding out which of a set of jewelers only use ethically sourced metals and stones and also ship to Alaska. Database systems are designed to optimize the efficiency of query processing of individual users. A query often involves multiple parts, e.g., for the job postings query these are (1) filter out jobs that do not describe a commitment to diversity and (2) filter out jobs for schools in an unsafe location. A job that does not meet the first criterion does not need to be processed for the second one, and vice versa. The processing order for the parts of the query influences how much computation is needed and how long the query will take to process. Traditional database systems have information about how long parts of a query will take and the likelihood of items satisfying filters; they use this information to choose an efficient processing ordering for a query. However, this information is not known for crowd-powered database systems. The usefulness of optimizers for crowd-powered database systems hinges on their ability to find an efficient way to process a user's query when this information is unknown before processing the query. The aim of this research project is to tackle this challenge by developing a system to process queries involving multiple filtering criteria that observes the execution environment and adjusts its processing strategy as the query executes. This project will have broad impact by yielding a query processing system that will empower users to ask more interesting questions about data, advancing research in allocating human computation resources in dynamic environments, as well as training a group of undergraduate students both in research and in the principles of systems design.&lt;br/&gt;&lt;br/&gt;The goal of this research is to build a cost-based query optimizer for crowd-powered filter queries for which important statistics used in optimization are unknown at query time. These statistics include traditional metrics such as filter selectivity as well as new contributors to query cost such as the time it takes crowd workers to complete a unit of work and the number of workers needed to reach consensus for a subjective evaluation. The project takes an adaptive approach to query processing: while the query is running, the system observes cost and selectivity information and periodically reorders the query plan operators to reduce overall query cost. The researchers will demonstrate that their query optimizer yields query costs that are comparable to costs from the optimal crowd-based query plan for which selectivity and subjectivity information is known a priori. Source code, papers, and presentations are available on the project web site (https://www.cs.hmc.edu/~beth/adaptivecrowd.shtml).</AbstractNarration>
<MinAmdLetterDate>02/28/2017</MinAmdLetterDate>
<MaxAmdLetterDate>02/28/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1657259</AwardID>
<Investigator>
<FirstName>Katherine</FirstName>
<LastName>Trushkowsky</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Katherine E Trushkowsky</PI_FULL_NAME>
<EmailAddress>beth@cs.hmc.edu</EmailAddress>
<PI_PHON>9096218121</PI_PHON>
<NSF_ID>000727209</NSF_ID>
<StartDate>02/28/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Harvey Mudd College</Name>
<CityName>CLAREMONT</CityName>
<ZipCode>917115901</ZipCode>
<PhoneNumber>9096218121</PhoneNumber>
<StreetAddress>301 Platt Boulevard</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>27</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA27</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>066691130</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>HARVEY MUDD COLLEGE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>066691130</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Harvey Mudd College]]></Name>
<CityName>Claremont</CityName>
<StateCode>CA</StateCode>
<ZipCode>917115901</ZipCode>
<StreetAddress><![CDATA[301 Platt Blvd]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>27</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA27</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>026Y</Code>
<Text>CRII CISE Research Initiation</Text>
</ProgramElement>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>8228</Code>
<Text>CISE Resrch Initiatn Initiatve</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<ProgramReference>
<Code>9229</Code>
<Text>RES IN UNDERGRAD INST-RESEARCH</Text>
</ProgramReference>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2017~175000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Human beings can use their real-world knowledge, experience, and perception to help computer systems process data. In this project, we looked at efficiently incorporating human input into a data processing system. Human workers were paid to answer questions about the data. The project focused on leveraging human input to filter data to find the items that satisfy several constraints that are subjective or are better suited for a human to assess instead of a computer.</p> <p>The practicality of such a hybrid human/machine data processing system depends on using human input efficiently. For example, if an item fails to satisfy one constraint, that item doesn't need to be evaluated for a second or third constraint. Furthermore, some constraints may require more worker effort to assess. The system can save worker cost and time by having workers first process constraints that are easier and that eliminate many items, reducing future work to be done by other constraints. A key challenge in this project is that the information about constraint difficulty and likelihood of eliminating many items are unknown.&nbsp;</p> <p>To address this challenge and complete the goals of our project, we devised an algorithm that observes workers processing constraints and learns the most efficient way to order those constraints. Our algorithm is adaptive: before any items have been evaluated, each constraint is assumed to be equally difficult and likely to eliminate items. Workers are then asked to evaluate some items for all the constraints, with each constraint being evaluated for an equal number of items. Over time, as more items are evaluated, the system gives each constraint a relative weight: constraints that are easier and more likely to eliminate items are given more weight. Remaining items are then first assessed for higher weighted constraints. Experimental results show that our adaptive algorithm outperforms a baseline algorithm that randomly chooses an ordering for the constraints. Our algorithm also approaches the performance of the "ideal" ordering for the constraints, i.e., if the difficulty and likelihood of eliminating items were actually known beforehand.&nbsp;</p> <p>The design, implementation, and experimental results for this project were all done by undergraduate students. As part of their research experience, these students attended academic conferences and presented their work in both conference talks and poster sessions.</p><br> <p>            Last Modified: 09/27/2020<br>      Modified by: Katherine&nbsp;E&nbsp;Trushkowsky</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Human beings can use their real-world knowledge, experience, and perception to help computer systems process data. In this project, we looked at efficiently incorporating human input into a data processing system. Human workers were paid to answer questions about the data. The project focused on leveraging human input to filter data to find the items that satisfy several constraints that are subjective or are better suited for a human to assess instead of a computer.  The practicality of such a hybrid human/machine data processing system depends on using human input efficiently. For example, if an item fails to satisfy one constraint, that item doesn't need to be evaluated for a second or third constraint. Furthermore, some constraints may require more worker effort to assess. The system can save worker cost and time by having workers first process constraints that are easier and that eliminate many items, reducing future work to be done by other constraints. A key challenge in this project is that the information about constraint difficulty and likelihood of eliminating many items are unknown.   To address this challenge and complete the goals of our project, we devised an algorithm that observes workers processing constraints and learns the most efficient way to order those constraints. Our algorithm is adaptive: before any items have been evaluated, each constraint is assumed to be equally difficult and likely to eliminate items. Workers are then asked to evaluate some items for all the constraints, with each constraint being evaluated for an equal number of items. Over time, as more items are evaluated, the system gives each constraint a relative weight: constraints that are easier and more likely to eliminate items are given more weight. Remaining items are then first assessed for higher weighted constraints. Experimental results show that our adaptive algorithm outperforms a baseline algorithm that randomly chooses an ordering for the constraints. Our algorithm also approaches the performance of the "ideal" ordering for the constraints, i.e., if the difficulty and likelihood of eliminating items were actually known beforehand.   The design, implementation, and experimental results for this project were all done by undergraduate students. As part of their research experience, these students attended academic conferences and presented their work in both conference talks and poster sessions.       Last Modified: 09/27/2020       Submitted by: Katherine E Trushkowsky]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

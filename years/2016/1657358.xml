<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRII: SHF: Distributed Systems With Verified Complexity By Design</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2017</AwardEffectiveDate>
<AwardExpirationDate>02/29/2020</AwardExpirationDate>
<AwardTotalIntnAmount>174980.00</AwardTotalIntnAmount>
<AwardAmount>190980</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Distributed systems, which coordinate multiple networked computers to meet a shared goal, are critical to the nation's digital infrastructure. Yet they are also notoriously difficult to get right, especially in the face of computer and network faults. Previous research efforts have used tools from formal methods, such as theorem provers, to build distributed systems with formally verified correctness guarantees. This project advances the state-of-the-art by attacking the complementary problem of formally verifying performance guarantees for a class of distributed systems representable as games: distributed routers, load balancers, and others. Such performance guarantees are useful in a wide variety of settings, from real-time systems to low-latency web applications. The project additionally supports curricular development at both the undergraduate and graduate levels, as well as activities such as the investigator's "Coq Bootcamp", a twice-weekly summer seminar on formal verification for undergraduates.&lt;br/&gt;&lt;br/&gt;The investigator's technical methodology combines tools from programming languages, such as domain-specific languages (DSLs) for correct-by-construction programming in Coq, with recent work in algorithmic game theory: Roughgarden?s smooth games and an implementation of games called multiplicative weights. By composing a DSL for smooth games with a verified implementation of multiplicative weights, this project formally bounds the time within which a smooth game converges, and the quality of the resulting state wrt. optimal. To recover guarantees against a network model that permits faults, the project uses a quantified version of the Verdi system's verified system transformers to wrap smooth games in implementations of common distributed design patterns such as sequence numbering.</AbstractNarration>
<MinAmdLetterDate>02/21/2017</MinAmdLetterDate>
<MaxAmdLetterDate>04/25/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1657358</AwardID>
<Investigator>
<FirstName>James</FirstName>
<LastName>Stewart</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>James Stewart</PI_FULL_NAME>
<EmailAddress>gstewart@ohio.edu</EmailAddress>
<PI_PHON>7405931578</PI_PHON>
<NSF_ID>000728551</NSF_ID>
<StartDate>02/21/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Ohio University</Name>
<CityName>ATHENS</CityName>
<ZipCode>457012979</ZipCode>
<PhoneNumber>7405932857</PhoneNumber>
<StreetAddress>108 CUTLER HL</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>15</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH15</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041077983</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OHIO UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041077983</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Ohio University]]></Name>
<CityName>Athens</CityName>
<StateCode>OH</StateCode>
<ZipCode>457012979</ZipCode>
<StreetAddress><![CDATA[355 Stocker Center]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>15</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH15</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>026Y</Code>
<Text>CRII CISE Research Initiation</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>8206</Code>
<Text>Formal Methods and Verification</Text>
</ProgramReference>
<ProgramReference>
<Code>8228</Code>
<Text>CISE Resrch Initiatn Initiatve</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2017~174980</FUND_OBLG>
<FUND_OBLG>2018~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project applied ideas from algorithmic game theory -- the study of the mechanisms and dynamics that govern competitive play -- to the design and implementation of distributed protocols. In particular, it applied no-regret algorithms such as Multiplicative Weights Update (MW), a procedure for optimal turn-by-turn play against an adversary, to build distributed protocols with verified performance guarantees, e.g., in how long they take produce near optimal solutions. The project's main technical methodology was to use Coq, a computer program for verifying the correctness of mathematical proofs and software, to build an implementation of the ideas outlined above as the basis for computer-verified distributed protocols. Applications of the software and techniques resulted in research that addressed the formal verification of neural network-based learning and the formalization and inference in Coq of probabilistic systems.<br /><br />The project had broader impacts across both research and education. In research, it resulted in four publications at scholarly venues, including one paper at a top conference in artificial intelligence. All the published papers were co-authored by graduate students. Research software developed as part of this project was published online and in one case, packaged as a reusable library for easy installation using a software management system popular in the Coq community. The project partially supported the educations of a number of graduate students. As a connected outreach effort, the principal investigator led an organized week-long summer camp to introduce the basics of computer science to a group of local high school students. Through the NSF Research Experience for Undergraduates (REU) program, this project supported the involvement of two undergraduates in computer science research.</p><br> <p>            Last Modified: 04/14/2020<br>      Modified by: James&nbsp;Stewart</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project applied ideas from algorithmic game theory -- the study of the mechanisms and dynamics that govern competitive play -- to the design and implementation of distributed protocols. In particular, it applied no-regret algorithms such as Multiplicative Weights Update (MW), a procedure for optimal turn-by-turn play against an adversary, to build distributed protocols with verified performance guarantees, e.g., in how long they take produce near optimal solutions. The project's main technical methodology was to use Coq, a computer program for verifying the correctness of mathematical proofs and software, to build an implementation of the ideas outlined above as the basis for computer-verified distributed protocols. Applications of the software and techniques resulted in research that addressed the formal verification of neural network-based learning and the formalization and inference in Coq of probabilistic systems.  The project had broader impacts across both research and education. In research, it resulted in four publications at scholarly venues, including one paper at a top conference in artificial intelligence. All the published papers were co-authored by graduate students. Research software developed as part of this project was published online and in one case, packaged as a reusable library for easy installation using a software management system popular in the Coq community. The project partially supported the educations of a number of graduate students. As a connected outreach effort, the principal investigator led an organized week-long summer camp to introduce the basics of computer science to a group of local high school students. Through the NSF Research Experience for Undergraduates (REU) program, this project supported the involvement of two undergraduates in computer science research.       Last Modified: 04/14/2020       Submitted by: James Stewart]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

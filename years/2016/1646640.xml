<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Multi-Stream Graph Mining</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2016</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>99999.00</AwardTotalIntnAmount>
<AwardAmount>99999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>jun huan</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Graphs, or networks of nodes and links, have proven to be effective for discovering patterns in many applications where data are generated from multiple and connected sources. In complex real-world applications, graphs are typically collected over time, known as graph stream data. Existing graph-based approaches for knowledge discovery are computationally challenging, particularly when analyzing large amounts of graph streams. In addition, a better understanding of intrinsic patterns typically cannot be obtained through mining a single graph stream. This project aims to investigate a new approach capable of scalable knowledge discovery in multiple graph streams, called multi-stream graph mining. The approach is novel and potentially transformative in how knowledge is discovered from multiple data streams. The project will have significant impact by providing efficient and effective tools for detecting patterns in heterogeneous data that can lead to new discoveries in a variety of domains where large amounts of dynamic data are available, including cyber-security and social media.&lt;br/&gt; &lt;br/&gt;This project will investigate a group of data mining approaches for mining patterns from multiple graph streams in real-time. The methods perform different amounts and types of individual-stream pre-processing in order to effectively reduce the size and arrival-rate of the data. These methods are: (1) sampling the data streams, (2) compressing the data streams based on known patterns, (3) mining individual streams first and then utilizing the mined patterns for performing multiple stream fusion. The methods will be evaluated using both artificial and real-world multi-stream graph data, and results will be disseminated via software releases and publications. This research will advance our knowledge and understanding of how to efficiently process multiple data streams represented as graphs in order to learn structural patterns in real time. The methods developed under this project represent a new level of scalability that is necessary to address today's big data challenges, as well as users' needs to quickly discover actionable intelligence.</AbstractNarration>
<MinAmdLetterDate>08/01/2016</MinAmdLetterDate>
<MaxAmdLetterDate>08/01/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1646640</AwardID>
<Investigator>
<FirstName>Lawrence</FirstName>
<LastName>Holder</LastName>
<PI_MID_INIT>B</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Lawrence B Holder</PI_FULL_NAME>
<EmailAddress>holder@wsu.edu</EmailAddress>
<PI_PHON>5093356138</PI_PHON>
<NSF_ID>000309257</NSF_ID>
<StartDate>08/01/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Washington State University</Name>
<CityName>PULLMAN</CityName>
<ZipCode>991641060</ZipCode>
<PhoneNumber>5093359661</PhoneNumber>
<StreetAddress>280 Lighty</StreetAddress>
<StreetAddress2><![CDATA[PO BOX 641060]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<StateCode>WA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041485301</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WASHINGTON STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041485301</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Washington State University]]></Name>
<CityName>Pullman</CityName>
<StateCode>WA</StateCode>
<ZipCode>991643140</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~99999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In today&rsquo;s online, connected world of information, data streams are generated in a variety of domains, including news feeds, social media, and network traffic. Representing these data streams as graphs has proven effective for uncovering patterns in their respective domains. However, graph-based approaches to knowledge discovery are computationally challenging, particularly when analyzing large amounts of data, or data that is represented across multiple streams. In this project we investigated new techniques capable of scalable knowledge discovery in multiple graph streams, or what we call multi-stream graph mining.</p> <p>We developed three new methods that are designed to operate on streaming graph data. The first is GraphZip, which discovers patterns in streams based on the patterns ability to compress the stream, similar to the method used by ZIP for file compression. GraphZip was designed in collaboration with an undergraduate REU student, and a paper on the research has been published. The second method is a sampling method called RangeSampleAndHold that identifies ranges of edge types that can safely be ignored without significant loss in accuracy on the targeted graph mining task. We have tested the method on several domains and found that up to 80% of the graph can be pruned with only a 5% loss in accuracy on frequent subgraph mining and community detection tasks. The method was designed in collaboration with a PhD student supported by this project, and a paper on the research has been published. Third, we implemented a new version of the Subdue graph mining system in Python. One new feature added to this version is the ability to discover temporal patterns, i.e., in addition to instances of a pattern having to match based on structure and node/edge attributes, they also have to match in terms of the node and edge arrival order. These types of patterns are important to capture the evolution of networks when the order of arrival of information is a key factor in the pattern.</p> <p>For testing these methods, and other methods developed by the community, we created two new resources. First, we constructed a real-world data source that combines news feed data and Twitter data. This data represents the collection of two heterogeneous data sources that have a known relationship, i.e., the twitter handle mentioned in the news stories. The data collected in this set consists of news stories over a four month period, and associated tweets that occurred ten days before and after the corresponding news story, based upon the twitter account (handle) mentioned in the body of the news. Second, we developed a synthetic graph multi-stream generator. The Graph Stream Generator (GSG) generates multiple streams of graph nodes and edges according to subgraph patterns that can be distributed across different streams. These new data resources can be used to evaluate multi-stream graph mining algorithms, and provide valuable resources for the community.</p> <p>In addition to the development of significant new multi-stream graph data sources and mining algorithms, we were able to verify one of the key hypotheses of this project, i.e., that mining individual streams first, and then fusing only the discovered pattern instances (mine-then-fuse), was more efficient and equally accurate to fusing all the streams first, and then mining the entire fused network (fuse-then-mine). Using the GSG and new Python version of Subdue, we generated several synthetic datasets in which the three edges of a triangle pattern where distributed across three different streams, along with some additional noisy edges. The mine-then-fuse approach achieved a 20% speedup over the fuse-then-mine approach using Subdue, while discovering the same patterns.</p> <p>This research has advanced our knowledge and understanding of how to efficiently process multiple data streams represented as a graph in order to learn structural temporal patterns in real time. The algorithms developed under this project represent a new level of scalability that is necessary to address today&rsquo;s big data environments, as well as users&rsquo; needs to quickly discover patterns in streaming data.</p> <p>This research has resulted in numerous contributions to the body of scientific knowledge in the areas of computer science, data mining and machine learning, as well as the training of scientists in these areas. The research has been widely disseminated via six peer-reviewed publications. The project developed three new graph mining methods, one synthetic streaming graph data generator, and one real-world multi-stream dataset, all publicly available online. The project supported the training of four graduate students and one undergraduate student.</p> <p>This research benefits society by providing efficient and effective tools for detecting patterns in heterogeneous data that can lead to new discoveries in a variety of domains where large amounts of streaming data are available, including cyber-security, internet-of-things, and social media.</p> <p>More information about the project, including links to publications, software and data, can be found on the project&rsquo;s website at <a href="http://www.eecs.wsu.edu/~holder/msgm">http://www.eecs.wsu.edu/~holder/msgm</a>.</p><br> <p>            Last Modified: 12/30/2017<br>      Modified by: Lawrence&nbsp;B&nbsp;Holder</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In today?s online, connected world of information, data streams are generated in a variety of domains, including news feeds, social media, and network traffic. Representing these data streams as graphs has proven effective for uncovering patterns in their respective domains. However, graph-based approaches to knowledge discovery are computationally challenging, particularly when analyzing large amounts of data, or data that is represented across multiple streams. In this project we investigated new techniques capable of scalable knowledge discovery in multiple graph streams, or what we call multi-stream graph mining.  We developed three new methods that are designed to operate on streaming graph data. The first is GraphZip, which discovers patterns in streams based on the patterns ability to compress the stream, similar to the method used by ZIP for file compression. GraphZip was designed in collaboration with an undergraduate REU student, and a paper on the research has been published. The second method is a sampling method called RangeSampleAndHold that identifies ranges of edge types that can safely be ignored without significant loss in accuracy on the targeted graph mining task. We have tested the method on several domains and found that up to 80% of the graph can be pruned with only a 5% loss in accuracy on frequent subgraph mining and community detection tasks. The method was designed in collaboration with a PhD student supported by this project, and a paper on the research has been published. Third, we implemented a new version of the Subdue graph mining system in Python. One new feature added to this version is the ability to discover temporal patterns, i.e., in addition to instances of a pattern having to match based on structure and node/edge attributes, they also have to match in terms of the node and edge arrival order. These types of patterns are important to capture the evolution of networks when the order of arrival of information is a key factor in the pattern.  For testing these methods, and other methods developed by the community, we created two new resources. First, we constructed a real-world data source that combines news feed data and Twitter data. This data represents the collection of two heterogeneous data sources that have a known relationship, i.e., the twitter handle mentioned in the news stories. The data collected in this set consists of news stories over a four month period, and associated tweets that occurred ten days before and after the corresponding news story, based upon the twitter account (handle) mentioned in the body of the news. Second, we developed a synthetic graph multi-stream generator. The Graph Stream Generator (GSG) generates multiple streams of graph nodes and edges according to subgraph patterns that can be distributed across different streams. These new data resources can be used to evaluate multi-stream graph mining algorithms, and provide valuable resources for the community.  In addition to the development of significant new multi-stream graph data sources and mining algorithms, we were able to verify one of the key hypotheses of this project, i.e., that mining individual streams first, and then fusing only the discovered pattern instances (mine-then-fuse), was more efficient and equally accurate to fusing all the streams first, and then mining the entire fused network (fuse-then-mine). Using the GSG and new Python version of Subdue, we generated several synthetic datasets in which the three edges of a triangle pattern where distributed across three different streams, along with some additional noisy edges. The mine-then-fuse approach achieved a 20% speedup over the fuse-then-mine approach using Subdue, while discovering the same patterns.  This research has advanced our knowledge and understanding of how to efficiently process multiple data streams represented as a graph in order to learn structural temporal patterns in real time. The algorithms developed under this project represent a new level of scalability that is necessary to address today?s big data environments, as well as users? needs to quickly discover patterns in streaming data.  This research has resulted in numerous contributions to the body of scientific knowledge in the areas of computer science, data mining and machine learning, as well as the training of scientists in these areas. The research has been widely disseminated via six peer-reviewed publications. The project developed three new graph mining methods, one synthetic streaming graph data generator, and one real-world multi-stream dataset, all publicly available online. The project supported the training of four graduate students and one undergraduate student.  This research benefits society by providing efficient and effective tools for detecting patterns in heterogeneous data that can lead to new discoveries in a variety of domains where large amounts of streaming data are available, including cyber-security, internet-of-things, and social media.  More information about the project, including links to publications, software and data, can be found on the project?s website at http://www.eecs.wsu.edu/~holder/msgm.       Last Modified: 12/30/2017       Submitted by: Lawrence B Holder]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

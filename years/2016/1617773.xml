<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NeTS: Small: Collaborative Research: Enabling Application-Level Performance Predictability in Public Clouds</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2016</AwardEffectiveDate>
<AwardExpirationDate>09/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>238500.00</AwardTotalIntnAmount>
<AwardAmount>238500</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>State-of-the-art resource sharing mechanisms in today's datacenters and compute clouds are agnostic to application-level performance requirements, resulting in unpredictable performance. This is especially true for the network. Unlike, CPU, memory, or disk, cloud operators do not provide any guarantees for the network. Many tenants rely on over-provisioning and static allocation for performance isolation, which results in low utilization and increased cost and environmental impacts. This project aims to build a set of solutions to achieve short- and long-term performance predictability with high resource utilization. The goal is to enable coexisting applications from different tenants to meet a variety of performance objectives including obtaining timely responses and minimizing variance of successive responses, while adhering to organizational hierarchies of individual tenants. The key technical challenges in this project include developing short- and long-term resource allocation algorithms, accurate demand estimation, as well as fast and efficient enforcement, all of which are compounded by the multi-resource and shared nature of the network. Two key techniques guide the proposed work: (i) temporal scheduling ensures predictable performance through short- and long-term performance isolation, and (ii) spatial placement ensures higher utilization through initial placement and periodic migration of tenants' virtual machines.&lt;br/&gt;&lt;br/&gt;Predictable, efficient data analytics will have significant socio-economic ramifications. It will also enable mission-critical applications, e.g., anomaly detection, fraud protection, autonomous vehicles, and robotics-- that require a highly consistent and reliable level of performance to coexist with the less sensitive ones. Algorithms and software from the project will be incorporated into existing open-source big data stacks for public reuse.  By leveraging ongoing relationships with the industry, artifacts from this project will be converted from research into practice in a fast manner. The project has significant educational and outreach components, which include introducing new courses at both graduate and undergraduate levels based on the outcomes of this project as well as arranging cloud computing boot camps aimed at students from high schools and involving women and under-represented minorities.</AbstractNarration>
<MinAmdLetterDate>08/29/2016</MinAmdLetterDate>
<MaxAmdLetterDate>08/29/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1617773</AwardID>
<Investigator>
<FirstName>Mosharaf</FirstName>
<LastName>Chowdhury</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mosharaf Chowdhury</PI_FULL_NAME>
<EmailAddress>mosharaf@umich.edu</EmailAddress>
<PI_PHON>7346478221</PI_PHON>
<NSF_ID>000702601</NSF_ID>
<StartDate>08/29/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Regents of the University of Michigan - Ann Arbor</Name>
<CityName>Ann Arbor</CityName>
<ZipCode>481091274</ZipCode>
<PhoneNumber>7347636438</PhoneNumber>
<StreetAddress>3003 South State St. Room 1062</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>073133571</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF MICHIGAN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>073133571</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Michigan Ann Arbor]]></Name>
<CityName>Ann Arbor</CityName>
<StateCode>MI</StateCode>
<ZipCode>481092121</ZipCode>
<StreetAddress><![CDATA[2260 Hayward]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~238500</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>State-of-the-art resource sharing mechanisms in today's cloud datacenters are agnostic to application-level performance requirements, resulting in unpredictable performance. This is as true for the network as it is for CPU, memory, or disk. Many tenants rely on over-provisioning and static allocation for performance isolation, which results in low utilization and increased cost and environmental impacts.</p> <p>The overarching goal of this project was to build a set of solutions to achieve short&shy; and long&shy;-term performance predictability with high resource utilization and improved application-level performance. As part of this project, we built a suite of solutions -- that span the entire cloud stack -- to enable coexisting applications from different tenants to meet a variety of performance objectives including obtaining timely responses and minimizing variance of successive responses, while adhering to organizational hierarchies of individual tenants.</p> <p>In terms of networking, we have designed and developed a datacenter load balancing solution (Hermes) as well as an end-host latency optimization mechanism (Leap). Hermes is a transport layer-aware load balancing solution that&nbsp;detects path conditions via comprehensive sensing using transport-level signals such as ECN and RTT.&nbsp;To further improve visibility, Hermes employs active probing &ndash; guided by the power of two choices technique &ndash; that can effectively increase the scope of sensing at minimal probing cost. Overall, it outperforms the state-of-the-art by more than 30%. Leap, in contrast, focuses on improving the data path inside the Linux kernel by removing unnecessary queueing and by proposing a new data prefetching algorithm. It improves the performance of low-latency, memory-intensive applications by up to 10X.</p> <p>In terms of resource management, we have designed two solutions: one that handles heterogeneous requests with throughput and latency constraints (BoPF) and one that handles heterogeneous compute resources such as CPU and GPU (AlloX). BoPF&nbsp;relies on the observation that throughput-sensitive tenants do not care about allocated resources in the short term, as long as the long-term averaged resource share remains the same. This temporal flexibility allows us to accommodate bursts of latency-sensitive tenants without hurting throughput-sensitive ones. It outperforms existing solutions by more than 5X in terms of performance while providing the same level of fairness. AlloX focuses on carefully&nbsp;picking CPU and GPU combinations for deep learning training jobs. The key idea is leveraging the interchangeability of computation resources. By judiciously combining both, AlloX can improve average training time by as much as 95% in comparison to existing solutions that ignore resource interchangeability.&nbsp;</p> <p>Finally, in the application level, we explored cloud applications are designed to interact with their data: is it via a key-value (KV) store or via remote procedure call (RPC).&nbsp;We observed that the root cause behind this choice -- and subsequent dichotomy between the two views -- is the shifting balance between CPU and network bottlenecks of a workload. One can improve throughput while satisfying service-level objectives (SLOs) by judiciously employing both at the same.&nbsp;We have proposed a fully decentralized algorithm (Kayak) that runs only on the client side and dynamically chooses the best option based on the shifting balance. Overall, Kayak can improve throughput by 35% by combining the best of both worlds.</p> <p>All software developed as part of this project are based on established open-source systems such as Kubernetes, and we have and continue to open-source our works at&nbsp;<a href="https://github.com/symbioticlab">https://github.com/symbioticlab</a>. Research papers summarizing our works have been published or are under submission in top venues in networking and systems including SIGCOMM and NSDI. Some of the works have been incorporated into course contents in graduate- and undergraduate-level systems and networking courses at the University of Michigan. Last but not the least, three PhD students at the University of Michigan have worked on different pieces of our contributions, and this grant has helped in partly supporting their education and training.&nbsp;</p><br> <p>            Last Modified: 02/06/2020<br>      Modified by: Mosharaf&nbsp;Chowdhury</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ State-of-the-art resource sharing mechanisms in today's cloud datacenters are agnostic to application-level performance requirements, resulting in unpredictable performance. This is as true for the network as it is for CPU, memory, or disk. Many tenants rely on over-provisioning and static allocation for performance isolation, which results in low utilization and increased cost and environmental impacts.  The overarching goal of this project was to build a set of solutions to achieve short&shy; and long&shy;-term performance predictability with high resource utilization and improved application-level performance. As part of this project, we built a suite of solutions -- that span the entire cloud stack -- to enable coexisting applications from different tenants to meet a variety of performance objectives including obtaining timely responses and minimizing variance of successive responses, while adhering to organizational hierarchies of individual tenants.  In terms of networking, we have designed and developed a datacenter load balancing solution (Hermes) as well as an end-host latency optimization mechanism (Leap). Hermes is a transport layer-aware load balancing solution that detects path conditions via comprehensive sensing using transport-level signals such as ECN and RTT. To further improve visibility, Hermes employs active probing &ndash; guided by the power of two choices technique &ndash; that can effectively increase the scope of sensing at minimal probing cost. Overall, it outperforms the state-of-the-art by more than 30%. Leap, in contrast, focuses on improving the data path inside the Linux kernel by removing unnecessary queueing and by proposing a new data prefetching algorithm. It improves the performance of low-latency, memory-intensive applications by up to 10X.  In terms of resource management, we have designed two solutions: one that handles heterogeneous requests with throughput and latency constraints (BoPF) and one that handles heterogeneous compute resources such as CPU and GPU (AlloX). BoPF relies on the observation that throughput-sensitive tenants do not care about allocated resources in the short term, as long as the long-term averaged resource share remains the same. This temporal flexibility allows us to accommodate bursts of latency-sensitive tenants without hurting throughput-sensitive ones. It outperforms existing solutions by more than 5X in terms of performance while providing the same level of fairness. AlloX focuses on carefully picking CPU and GPU combinations for deep learning training jobs. The key idea is leveraging the interchangeability of computation resources. By judiciously combining both, AlloX can improve average training time by as much as 95% in comparison to existing solutions that ignore resource interchangeability.   Finally, in the application level, we explored cloud applications are designed to interact with their data: is it via a key-value (KV) store or via remote procedure call (RPC). We observed that the root cause behind this choice -- and subsequent dichotomy between the two views -- is the shifting balance between CPU and network bottlenecks of a workload. One can improve throughput while satisfying service-level objectives (SLOs) by judiciously employing both at the same. We have proposed a fully decentralized algorithm (Kayak) that runs only on the client side and dynamically chooses the best option based on the shifting balance. Overall, Kayak can improve throughput by 35% by combining the best of both worlds.  All software developed as part of this project are based on established open-source systems such as Kubernetes, and we have and continue to open-source our works at https://github.com/symbioticlab. Research papers summarizing our works have been published or are under submission in top venues in networking and systems including SIGCOMM and NSDI. Some of the works have been incorporated into course contents in graduate- and undergraduate-level systems and networking courses at the University of Michigan. Last but not the least, three PhD students at the University of Michigan have worked on different pieces of our contributions, and this grant has helped in partly supporting their education and training.        Last Modified: 02/06/2020       Submitted by: Mosharaf Chowdhury]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

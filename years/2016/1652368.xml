<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Lineage-driven Fault Injection</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2017</AwardEffectiveDate>
<AwardExpirationDate>02/28/2022</AwardExpirationDate>
<AwardTotalIntnAmount>475000.00</AwardTotalIntnAmount>
<AwardAmount>483000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Matt Mutka</SignBlockName>
<PO_EMAI>mmutka@nsf.gov</PO_EMAI>
<PO_PHON>7032927344</PO_PHON>
</ProgramOfficer>
<AbstractNarration>With each passing day, Americans become more dependent on large-scale, cloud-based distributed systems for everything from commerce (e.g., shopping for groceries) to transportation (e.g. booking a cab) to communication (e.g., making plans via a chat app) to storage (e.g., archiving baby photos).  These systems operate at a scale where machine crashes and network interruptions are the rule rather than the exception.  Unfortunately, writing fault tolerant software -- programs that attempt to detect and mitigate such failures, in order to prevent data loss or system unavailability -- remains an art form.  Application programmers, data analysts and mobile developers have few tools to help them implement, maintain and debug fault-tolerant systems. To address these needs, we introduce lineage-driven fault injection (LDFI), a novel bug-finding methodology that uses data lineage to reason backwards (from effects to causes) about combinations of faults could prevented desired system outcomes. If the project succeeds, it will improve the overall availability and resiliency of these increasingly critical systems. It will also provide a new class of tools for the distributed programmers who must build and maintain cloud systems, identifying and explaining bugs at all stages of the development process, from specification to post-production.  &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;LDFI combines ideas from database theory, distributed systems, formal methods, optimization, reliability and data visualization. By exercising only the faults that it can prove could have affected a known good outcome, LDFI can identify invariant violations and user-visible failures using orders of magnitude fewer executions than conventional techniques such as random or heuristic fault injection. LDFI generalizes the notion of data lineage beyond data management , using it to explain large-scale system outcomes and to identify redundant computations that can mask faults. Given a model of a system's built-in redundancy, LDFI can use state-of-the-art solvers to generate hypotheses to exercise via fault injection infrastructures. This project engenders new research in areas such as query explanations, low-overhead system tracing, and how-to analysis.</AbstractNarration>
<MinAmdLetterDate>01/25/2017</MinAmdLetterDate>
<MaxAmdLetterDate>03/01/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1652368</AwardID>
<Investigator>
<FirstName>Peter</FirstName>
<LastName>Alvaro</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Peter A Alvaro</PI_FULL_NAME>
<EmailAddress>palvaro@ucsc.edu</EmailAddress>
<PI_PHON>4156738931</PI_PHON>
<NSF_ID>000727366</NSF_ID>
<StartDate>01/25/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Santa Cruz</Name>
<CityName>Santa Cruz</CityName>
<CountyName>SANTA CRUZ</CountyName>
<ZipCode>950641077</ZipCode>
<PhoneNumber>8314595278</PhoneNumber>
<StreetAddress>1156 High Street</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA20</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>125084723</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, SANTA CRUZ</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Santa Cruz]]></Name>
<CityName>Santa Cruz</CityName>
<CountyName>SANTA CRUZ</CountyName>
<StateCode>CA</StateCode>
<ZipCode>950641077</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA20</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0121</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2017~190000</FUND_OBLG>
<FUND_OBLG>2019~103000</FUND_OBLG>
<FUND_OBLG>2020~95000</FUND_OBLG>
<FUND_OBLG>2021~95000</FUND_OBLG>
</Award>
</rootTag>

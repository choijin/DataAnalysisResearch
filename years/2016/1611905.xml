<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: LEGO-Based Active Learning Activities for Software Engineering Education</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2016</AwardEffectiveDate>
<AwardExpirationDate>06/30/2020</AwardExpirationDate>
<AwardTotalIntnAmount>161351.00</AwardTotalIntnAmount>
<AwardAmount>161351</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040000</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Paul Tymann</SignBlockName>
<PO_EMAI>ptymann@nsf.gov</PO_EMAI>
<PO_PHON>7032922832</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Software engineering, which plays a significant role in preparing students for becoming a part of the professional workforce, requires the pairing of in-depth disciplinary knowledge with a robust set of soft skills, such as teamwork and communication abilities. Given the engineering nature of the discipline, one of the best ways to study software engineering principles is to apply them in active learning contexts, such as case studies or hands-on exercises. When teaching undergraduates, it is crucial to make a clear connection between these learning contexts and related theoretical material, while designing active learning activities in a way that students would find easy to relate to.&lt;br/&gt; &lt;br/&gt;The goal of this project is to develop and establish the effectiveness of using kinesthetic learning modules leveraging LEGO as a tangible manipulative to improve student learning and engagement in undergraduate software engineering education. This project will demonstrate that compared to traditional classroom instructional techniques, the use of LEGO tangible manipulatives will improve student knowledge in software engineering and improve student engagement with coursework by using a framework of active learning activities. This project will develop curricular support materials for educators at universities and high schools to incorporate software engineering topics into their courses via the active learning modules. The study design will utilize a pre-post test control group design without random assignment of students to course sections.  The same study design and the same instruments will be used at both participating institutions.</AbstractNarration>
<MinAmdLetterDate>06/27/2016</MinAmdLetterDate>
<MaxAmdLetterDate>06/27/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1611905</AwardID>
<Investigator>
<FirstName>Stan</FirstName>
<LastName>Kurkovsky</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Stan Kurkovsky</PI_FULL_NAME>
<EmailAddress>kurkovskysta@ccsu.edu</EmailAddress>
<PI_PHON>8608322720</PI_PHON>
<NSF_ID>000066993</NSF_ID>
<StartDate>06/27/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Central Connecticut State University</Name>
<CityName>New Britain</CityName>
<ZipCode>060504010</ZipCode>
<PhoneNumber>8608322365</PhoneNumber>
<StreetAddress>1615 Stanley Street</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<StateCode>CT</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CT05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>168558364</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CONNECTICUT STATE UNIVERSITY SYSTEM</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020452210</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Central Connecticut State University]]></Name>
<CityName>New Britain</CityName>
<StateCode>CT</StateCode>
<ZipCode>060504010</ZipCode>
<StreetAddress><![CDATA[1615 Stanley Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CT05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1998</Code>
<Text>IUSE</Text>
</ProgramElement>
<ProgramReference>
<Code>8209</Code>
<Text>Improv Undergrad STEM Ed(IUSE)</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0416</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~161351</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project establishes the effectiveness of using kinesthetic learning modules leveraging LEGO as a tangible manipulative to improve student learning and engagement in Software Engineering and related areas of computing. Compared to traditional classroom instructional techniques, the use of LEGO helps improve student knowledge in Software Engineering, as well as increasing student engagement with coursework. LEGO-based learning modules include detailed instructions, videos, tips, and details on the required materials. These deliverables are available at the project website at&nbsp;https://web.ccsu.edu/lego-se/. They provide higher education and K-12 instructors with the means to include the kinesthetic learning activities into their computing or software engineering curriculum.</p> <p>This project addresses a number of critical needs of Software Engineering education. Most students joining the industry upon graduating with Computer Science and related degrees join the workforce as software engineers. This makes Software Engineering a crucial area of study that plays a vital role in preparing students for becoming a part of the professional workforce, which requires the pairing of in-depth disciplinary knowledge with a robust set of soft skills, such as teamwork and communication abilities. Software Engineering courses often serve as an integrative experience where students apply programming and design skills together with their knowledge of many Computer Science areas. However, studying Software Engineering must be more than just participating in a capstone course where existing knowledge and skills are put to practice. There are many important principles and concepts that are central to the practice of modern Software Engineering, which usually are not covered in other courses forming the traditional computing curriculum. These include requirements engineering, emergent properties, socio-technical systems, etc. Given the engineering nature of the discipline, one of the best ways to study these principles is to apply them in active learning contexts, e.g. via case studies or hands-on exercises. When teaching undergraduates, it is crucial to make a clear connection between the case studies and related theoretical material, while designing active learning activities in a way that students would find easy to relate to. Additionally, some Software Engineering concepts related to various processes, e.g. requirements elicitation and verification, are often better illustrated using case studies framed as an exercise simulating that process while allowing the students to directly participate in the process.&nbsp;</p> <p>This project resulted in a comprehensive suite of kinesthetic learning modules based on LEGO tangible manipulatives aimed to strengthen student disciplinary knowledge in Software Engineering, improve student engagement with the course material, and solidify their soft skills. Introducing tangible manipulatives into the learning process helps create a highly participative environment for brainstorming, playing out scenarios, and discussing complex ideas. As a form of serious play, this approach has a strong theoretical background rooted in constructionist learning theory.&nbsp;</p> <p>The kinesthetic approach to learning Software Engineering concepts provides support for students who need additional learning scaffolding that lecture or reading cannot provide. As such, this work supports a more diverse range of learners providing students with improved training in Software Engineering concepts as they enter the workforce. Most of the developed activities are also team-based, encouraging diverse perspectives to be integrated into the teams' solutions.</p><br> <p>            Last Modified: 07/08/2020<br>      Modified by: Stan&nbsp;Kurkovsky</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project establishes the effectiveness of using kinesthetic learning modules leveraging LEGO as a tangible manipulative to improve student learning and engagement in Software Engineering and related areas of computing. Compared to traditional classroom instructional techniques, the use of LEGO helps improve student knowledge in Software Engineering, as well as increasing student engagement with coursework. LEGO-based learning modules include detailed instructions, videos, tips, and details on the required materials. These deliverables are available at the project website at https://web.ccsu.edu/lego-se/. They provide higher education and K-12 instructors with the means to include the kinesthetic learning activities into their computing or software engineering curriculum.  This project addresses a number of critical needs of Software Engineering education. Most students joining the industry upon graduating with Computer Science and related degrees join the workforce as software engineers. This makes Software Engineering a crucial area of study that plays a vital role in preparing students for becoming a part of the professional workforce, which requires the pairing of in-depth disciplinary knowledge with a robust set of soft skills, such as teamwork and communication abilities. Software Engineering courses often serve as an integrative experience where students apply programming and design skills together with their knowledge of many Computer Science areas. However, studying Software Engineering must be more than just participating in a capstone course where existing knowledge and skills are put to practice. There are many important principles and concepts that are central to the practice of modern Software Engineering, which usually are not covered in other courses forming the traditional computing curriculum. These include requirements engineering, emergent properties, socio-technical systems, etc. Given the engineering nature of the discipline, one of the best ways to study these principles is to apply them in active learning contexts, e.g. via case studies or hands-on exercises. When teaching undergraduates, it is crucial to make a clear connection between the case studies and related theoretical material, while designing active learning activities in a way that students would find easy to relate to. Additionally, some Software Engineering concepts related to various processes, e.g. requirements elicitation and verification, are often better illustrated using case studies framed as an exercise simulating that process while allowing the students to directly participate in the process.   This project resulted in a comprehensive suite of kinesthetic learning modules based on LEGO tangible manipulatives aimed to strengthen student disciplinary knowledge in Software Engineering, improve student engagement with the course material, and solidify their soft skills. Introducing tangible manipulatives into the learning process helps create a highly participative environment for brainstorming, playing out scenarios, and discussing complex ideas. As a form of serious play, this approach has a strong theoretical background rooted in constructionist learning theory.   The kinesthetic approach to learning Software Engineering concepts provides support for students who need additional learning scaffolding that lecture or reading cannot provide. As such, this work supports a more diverse range of learners providing students with improved training in Software Engineering concepts as they enter the workforce. Most of the developed activities are also team-based, encouraging diverse perspectives to be integrated into the teams' solutions.       Last Modified: 07/08/2020       Submitted by: Stan Kurkovsky]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

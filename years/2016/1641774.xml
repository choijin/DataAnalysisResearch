<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER:   Stream500: A New Benchmark and Infrastructure for Streaming Analytics</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2016</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>119544.00</AwardTotalIntnAmount>
<AwardAmount>119544</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Large-scale data analytics is essential to the National Strategic Computing Initiative (NSCI) and NSF's scientific discovery mission. Data-intensive supercomputing applications are increasingly important for high performance computing workloads. Current benchmarks and performance metrics do not provide useful information on suitability of computing systems for data-intensive applications. &lt;br/&gt;This research effort will produce a new Stream500 benchmark, complementary to Graph500, that replicates streaming analytics workload. The current benchmark capabilities will be expanded by enabling the exiting web-based infrastructure to accept submissions for multiple benchmarks.</AbstractNarration>
<MinAmdLetterDate>07/28/2016</MinAmdLetterDate>
<MaxAmdLetterDate>07/28/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1641774</AwardID>
<Investigator>
<FirstName>Timothy</FirstName>
<LastName>Andersen</LastName>
<PI_MID_INIT>L</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Timothy L Andersen</PI_FULL_NAME>
<EmailAddress>tim@cs.boisestate.edu</EmailAddress>
<PI_PHON>2084265768</PI_PHON>
<NSF_ID>000425175</NSF_ID>
<StartDate>07/28/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Richard</FirstName>
<LastName>Murphy</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Richard Murphy</PI_FULL_NAME>
<EmailAddress>RichardMurphy620@boisestate.edu</EmailAddress>
<PI_PHON>2084261574</PI_PHON>
<NSF_ID>000710981</NSF_ID>
<StartDate>07/28/2016</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Boise State University</Name>
<CityName>Boise</CityName>
<ZipCode>837250001</ZipCode>
<PhoneNumber>2084261574</PhoneNumber>
<StreetAddress>1910 University Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Idaho</StateName>
<StateCode>ID</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>ID02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072995848</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>BOISE STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072995848</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Boise State University]]></Name>
<CityName/>
<StateCode>ID</StateCode>
<ZipCode>837251135</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Idaho</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>ID02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>P275</Code>
<Text/>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>8237</Code>
<Text>CISE Interagency Agreements</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~119544</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Project Summary:&nbsp;</p> <p>Stream500 builds on the work of the Graph500 community to advance the state of the art in the High Performance Computing (HPC) ecosystem for scientific discovery by creating a new streaming analytics benchmark to augment the Graph500, funding the creation of a unified infrastructure for analyzing Graph500, Top500 and the new Stream500 benchmark, and enabling the incubation of new HPC benchmarks.</p> <p>The reference implementation of the HPC benchmark created by the Stream500 project is based on the well-known graph problem of determining whether or not two vertices in a graph are reachable from each other, or in other words connected in some way. Reachability in graph structures can be used to model and answer many types of real world problems, for example relationships between entities in social networks, such as friends on Facebook, the semantic web, journal co-authorship relationships, and etc.&nbsp; &nbsp;</p> <p>The streaming version of the reachability problem intersperses the high-volume addition of vertices and edges with reachability queries on randomly selected pairs of existing vertices.&nbsp; Since the graph changes over time in the streaming analytics case, reachability queries on two vertices may change from a no answer at time t (not reachable), to a yes answer at some later time step. Real-time analytics requires the HPC system that is tracking reachability to efficiently and rapidly update its internal state in order to accurately return the correct answer given the prior time-dependent pattern of vertice/edge additions. If there is a significant lag between when a new edge is received by the system and the system updating its internal state, then the system may incorrectly respond to reachability queries during this lag.</p> <p>A key component of the Stream500 benchmark reference implementation is the synthetic generation of edges/graph structure.&nbsp; The Stream500 benchmark works by utilizing a synthetic graph Generator to produce high-volume streams of edges via 3 different graph generation mechanisms (Kronecker, Erdos-Renyi, and basic Power Law mechanisms are supported). &nbsp;At a user-configurable frequency, the Generator intersperses graph edge generation with the sending of reachability queries. The Responder is responsible for processing all incoming edges and maintaining reachability status among all received vertices. When the Responder receives a query from the Generator, it determines the reachability status of the two vertices at the time of the query and immediately reports this status to the Generator.</p> <p>Intellectual Merit:</p> <p>Tensor500 will provide a new machine learning-relevant, streaming HPC benchmark in support of the National Strategic Computing Initiative (NSCI) which replicates real-world data intensive workloads. Large-scale data analytics is essential to the NSCI and NSF's scientific discovery mission. Data-intensive supercomputing applications are increasingly important for high performance computing workloads. Current benchmarks and performance metrics do not provide useful information on suitability of computing systems for data-intensive applications.</p> <p>Broader Impacts</p> <p>The Graph500/Stream500 benchmarks and website serve as a nexus of collaboration for the high performance data analytic community. Stream500 enhances the Graph500 community benchmark with a streaming benchmark in support of large-scale data analytics workloads for the NSCI, leveraging the existing Graph500 infrastructure and communities, using an open approach to create additional streaming benchmarks in support of the NSCI.</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/27/2019<br>      Modified by: Timothy&nbsp;L&nbsp;Andersen</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Project Summary:   Stream500 builds on the work of the Graph500 community to advance the state of the art in the High Performance Computing (HPC) ecosystem for scientific discovery by creating a new streaming analytics benchmark to augment the Graph500, funding the creation of a unified infrastructure for analyzing Graph500, Top500 and the new Stream500 benchmark, and enabling the incubation of new HPC benchmarks.  The reference implementation of the HPC benchmark created by the Stream500 project is based on the well-known graph problem of determining whether or not two vertices in a graph are reachable from each other, or in other words connected in some way. Reachability in graph structures can be used to model and answer many types of real world problems, for example relationships between entities in social networks, such as friends on Facebook, the semantic web, journal co-authorship relationships, and etc.     The streaming version of the reachability problem intersperses the high-volume addition of vertices and edges with reachability queries on randomly selected pairs of existing vertices.  Since the graph changes over time in the streaming analytics case, reachability queries on two vertices may change from a no answer at time t (not reachable), to a yes answer at some later time step. Real-time analytics requires the HPC system that is tracking reachability to efficiently and rapidly update its internal state in order to accurately return the correct answer given the prior time-dependent pattern of vertice/edge additions. If there is a significant lag between when a new edge is received by the system and the system updating its internal state, then the system may incorrectly respond to reachability queries during this lag.  A key component of the Stream500 benchmark reference implementation is the synthetic generation of edges/graph structure.  The Stream500 benchmark works by utilizing a synthetic graph Generator to produce high-volume streams of edges via 3 different graph generation mechanisms (Kronecker, Erdos-Renyi, and basic Power Law mechanisms are supported).  At a user-configurable frequency, the Generator intersperses graph edge generation with the sending of reachability queries. The Responder is responsible for processing all incoming edges and maintaining reachability status among all received vertices. When the Responder receives a query from the Generator, it determines the reachability status of the two vertices at the time of the query and immediately reports this status to the Generator.  Intellectual Merit:  Tensor500 will provide a new machine learning-relevant, streaming HPC benchmark in support of the National Strategic Computing Initiative (NSCI) which replicates real-world data intensive workloads. Large-scale data analytics is essential to the NSCI and NSF's scientific discovery mission. Data-intensive supercomputing applications are increasingly important for high performance computing workloads. Current benchmarks and performance metrics do not provide useful information on suitability of computing systems for data-intensive applications.  Broader Impacts  The Graph500/Stream500 benchmarks and website serve as a nexus of collaboration for the high performance data analytic community. Stream500 enhances the Graph500 community benchmark with a streaming benchmark in support of large-scale data analytics workloads for the NSCI, leveraging the existing Graph500 infrastructure and communities, using an open approach to create additional streaming benchmarks in support of the NSCI.          Last Modified: 11/27/2019       Submitted by: Timothy L Andersen]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

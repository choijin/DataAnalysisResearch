<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Automated Protocol Design and Refinement</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2016</AwardEffectiveDate>
<AwardExpirationDate>07/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>399995.00</AwardTotalIntnAmount>
<AwardAmount>407995</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Online security relies on communication protocols that establish trust and authentication. New protocols are created regularly, such as when Software-as-a-Service companies expose their software through new Web services. In the ideal case, network engineers and protocol experts collaborate to develop a protocol: one responsible for its efficiency and the other for its security. Unfortunately, this ideal is rarely realized. Protocol experts are rare and their techniques are too complicated for solo network engineers to use, who instead just follow informal "best practices." As a result, most of these protocols end up with security problems. This research investigates an automated protocol expert that provides the network engineer with the service normally given by the human protocol expert. The availability of this open-source expert will broadly impact the trustworthiness of cyberspace by increasing the security and reliability of the online services that use it.&lt;br/&gt;&lt;br/&gt;The PI will construct this expert after three technical advances: first, a new security property specification language based on protocol goals, as opposed to the details of the operation of a protocol, for use by network engineers; second, a new theory of protocol construction based on the composition of disjoint authentication protocols with restrictions from linear logic used to limit the sharing of sensitive information; and third, a theory of protocol optimization based on the attack calculus already used to prove that protocols are secure. These three new theories advance their respective sub-fields and coalesce into the necessary foundation for the automated protocol expert.</AbstractNarration>
<MinAmdLetterDate>08/22/2016</MinAmdLetterDate>
<MaxAmdLetterDate>03/02/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1617307</AwardID>
<Investigator>
<FirstName>Jay</FirstName>
<LastName>McCarthy</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jay A McCarthy</PI_FULL_NAME>
<EmailAddress>jay.mccarthy@gmail.com</EmailAddress>
<PI_PHON>8013610732</PI_PHON>
<NSF_ID>000510364</NSF_ID>
<StartDate>08/22/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Massachusetts Lowell</Name>
<CityName>Lowell</CityName>
<ZipCode>018543692</ZipCode>
<PhoneNumber>9789344170</PhoneNumber>
<StreetAddress>Office of Research Admin.</StreetAddress>
<StreetAddress2><![CDATA[600 Suffolk Street - Suite 212]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>956072490</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MASSACHUSETTS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>079520631</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Massachusetts Lowell]]></Name>
<CityName>Lowell</CityName>
<StateCode>MA</StateCode>
<ZipCode>018542874</ZipCode>
<StreetAddress><![CDATA[One University Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>025Z</Code>
<Text>SaTC: Secure and Trustworthy Cyberspace</Text>
</ProgramReference>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~399995</FUND_OBLG>
<FUND_OBLG>2020~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project investigated the automatic synthesis of cryptographic protocols using linear logic as a fundamental architecture. We used the finite-ness of linear logic proofs to limit the search space of protocol designs and could successfully derive basic protocols. We extended this work with a programming language for specifying finite computations. These programs are automatically verifiable, which facilitates their use in cryptographic contexts, where the correctness of programs is paramount. This project funded multiple graduate students, as well as undergraduate research assistants. The results of this project are being used by commercial interests in the domains of cryptographic protocols and blockchain applications.&nbsp;This project led to multiple peer-reviewed research publications; specifically:</p> <p>Radha Nakade, Eric Mercer, Peter Aldous, Kyle Storey, Benjamin Ogles, Joshua Hooker, Sheridan Jacob Powell, and Jay McCarthy. &ldquo;Model Checking Task Parallel Programs for Data-race&rdquo;.&nbsp;<span class="emph">Innovations in Systems and Software Engineering 2019</span>.&nbsp;</p> <p>Kimball Germane, Jay McCarthy, Michael Adams, and Matthew Might. &ldquo;Demand Control-Flow Analysis&rdquo;.&nbsp;<span class="emph">VMCAI 2019</span>.</p> <p><span>Max S. New, Burke Fetscher, Jay McCarthy, and Robert Bruce Findler. &ldquo;Fair Enumeration Combinators&rdquo;.&nbsp;</span><span class="emph">Journal of Functional Programming 27, e19, 2017</span><span>.&nbsp;</span></p> <p><span><span>Jay McCarthy, Burke Fetscher, Max New, Daniel Felty, and Robert Bruce Findler. &ldquo;A Coq Library For Internal Verification of Running-Times&rdquo;.&nbsp;</span><span class="emph">Science of Computer Programming 2017</span><span>.</span><br /></span></p><br> <p>            Last Modified: 11/27/2020<br>      Modified by: Jay&nbsp;A&nbsp;Mccarthy</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project investigated the automatic synthesis of cryptographic protocols using linear logic as a fundamental architecture. We used the finite-ness of linear logic proofs to limit the search space of protocol designs and could successfully derive basic protocols. We extended this work with a programming language for specifying finite computations. These programs are automatically verifiable, which facilitates their use in cryptographic contexts, where the correctness of programs is paramount. This project funded multiple graduate students, as well as undergraduate research assistants. The results of this project are being used by commercial interests in the domains of cryptographic protocols and blockchain applications. This project led to multiple peer-reviewed research publications; specifically:  Radha Nakade, Eric Mercer, Peter Aldous, Kyle Storey, Benjamin Ogles, Joshua Hooker, Sheridan Jacob Powell, and Jay McCarthy. "Model Checking Task Parallel Programs for Data-race". Innovations in Systems and Software Engineering 2019.   Kimball Germane, Jay McCarthy, Michael Adams, and Matthew Might. "Demand Control-Flow Analysis". VMCAI 2019.  Max S. New, Burke Fetscher, Jay McCarthy, and Robert Bruce Findler. "Fair Enumeration Combinators". Journal of Functional Programming 27, e19, 2017.   Jay McCarthy, Burke Fetscher, Max New, Daniel Felty, and Robert Bruce Findler. "A Coq Library For Internal Verification of Running-Times". Science of Computer Programming 2017.        Last Modified: 11/27/2020       Submitted by: Jay A Mccarthy]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSE: PAPI Unifying Layer for Software-Defined Events (PULSE)</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>11/01/2016</AwardEffectiveDate>
<AwardExpirationDate>10/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>499997.00</AwardTotalIntnAmount>
<AwardAmount>499997</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Seung-Jong Park</SignBlockName>
<PO_EMAI>spark@nsf.gov</PO_EMAI>
<PO_PHON>7032924383</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Leading scientific domains, such as physics, chemistry, climate science, and advanced materials design, utilize high-performance computing (HPC) to understand and solve problems of unprecedented complexity. Overcoming such challenges requires the ability to perform advanced scientific and engineering simulations, and to analyze the extreme amount of data these computer models involve. But the ever increasing scale of these problems also means that the complexity of software systems needed to address them is rising, and this fact raises new challenges for the scientific application communities that require HPC in order to achieve their goals. In particular, HPC application developers who want to understand the performance characteristics of their application had previously been able to monitor the way it interacted with the underlying hardware, but they had no access to a standardized way of accessing the behavior of the complex software stack that their application depends on. The PULSE project will fill this major software infrastructure gap. It offers an integrated solution that enables different layers of a complex software stack to communicate with one another and provide information about their internal behavior. Thus, PULSE makes it possible for the scientific applications of the future to harness ever increasing amounts of computing power, despite anticipated increases in the complexity of both future hardware and software technologies. By providing the infrastructure that developers need in order to achieve an analytical understanding of the behavior of whole programs, it will substantially improve the insight computational scientists have into how various modern software systems interact with one another and the underlying hardware technologies. &amp;#8232;&lt;br/&gt;&lt;br/&gt;The abstraction and standardization layer provided by the Performance Application Programming Interface (PAPI) has played a critical role in enabling application profiling for over a decade. It has enabled performance conscious developers to gain insights about their application by simply instrumenting their code using a handful of PAPI functions that interoperate across different hardware substrates. At the same time, the abstraction layer offered by PAPI has enabled sophisticated profiling toolkits to focus on combining, organizing and visualizing information in a way that is useful to the end user, instead of re-implementing the hardware access layer for every new platform that comes to market. However, this abstraction layer that PAPI offers has been limited to profiling information generated by hardware. Information regarding the behavior of the software stack underneath the application that is being profiled has to be acquired either through low level binary instrumentation, or through custom APIs. Now, through this PULSE project, abstraction and unification layer for profiling software events has emerged. PULSE will extend the abstraction and unification layer that PAPI has provided to hardware events to also encompass software events. On one end, it will provide a standard, well defined and well documented API that high level profiling software can utilize to acquire and present to application developers performance information about the libraries used by their application. On the other end, it will provide standard APIs that library and runtime writers can utilize to communicate to higher software layers information about the behavior of their software. The project is expected to have a direct influence on the state of the art in whole program profiling and understanding. The success of PULSE will substantially improve the insight of computational scientists and engineers into the way that different modules of modern software interact with one another and the underlying hardware. Broadening the applicability of PAPI, as proposed under PULSE, is expected to dramatically increase PAPI's impact in this area.</AbstractNarration>
<MinAmdLetterDate>09/08/2016</MinAmdLetterDate>
<MaxAmdLetterDate>09/08/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1642440</AwardID>
<Investigator>
<FirstName>Anthony</FirstName>
<LastName>Danalis</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Anthony Danalis</PI_FULL_NAME>
<EmailAddress>adanalis@icl.utk.edu</EmailAddress>
<PI_PHON>8659743466</PI_PHON>
<NSF_ID>000553008</NSF_ID>
<StartDate>09/08/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Heike</FirstName>
<LastName>Jagode</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Heike Jagode</PI_FULL_NAME>
<EmailAddress>jagode@icl.utk.edu</EmailAddress>
<PI_PHON>8659743466</PI_PHON>
<NSF_ID>000673781</NSF_ID>
<StartDate>09/08/2016</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Tennessee Knoxville</Name>
<CityName>Knoxville</CityName>
<ZipCode>379163801</ZipCode>
<PhoneNumber>8659743466</PhoneNumber>
<StreetAddress>1331 CIR PARK DR</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<StateCode>TN</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TN02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003387891</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TENNESSEE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003387891</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Tennessee Knoxville]]></Name>
<CityName/>
<StateCode>TN</StateCode>
<ZipCode>379960003</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TN02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>026Z</Code>
<Text>NSCI: National Strategic Computing Initi</Text>
</ProgramReference>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8005</Code>
<Text>Scientific Software Elements</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~499997</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-0329484e-7fff-5f2a-1a2e-56c0e1f7b947"> </span></p> <p dir="ltr"><span>The abstraction and standardization layer provided by the Performance API (PAPI) project has played a critical role in understanding the performance of applications for two decades. PULSE has extended the abstraction and unification layer that PAPI provides for hardware events to also encompass software events. Specifically, PULSE has provided a standard, well defined, and well documented API that library writers can utilize to communicate to higher software layers information about the performance of their library. Furthermore, the interface for reading this new information, which originates inside libraries and other software elements, is the same interface that PAPI has always provided, preserving the compatibility of PAPI with existing performance analysis software. As a result, PULSE enables deeper insights into how software elements interact with the hardware and one another, enabling users to tune their applications to be more efficient in their mapping of the software elements to the computational resources.</span></p> <p dir="ltr"><span>As computing becomes increasingly woven into the fabric of our society, the work performed under the PULSE project, which has broadened PAPI &rsquo;s applicability by enabling a new class of software-defined events, can have significant economic and social benefits for applications that are critical to parts of our economy and society.</span></p> <p>&nbsp;</p><br> <p>            Last Modified: 01/12/2021<br>      Modified by: Anthony&nbsp;Danalis</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   The abstraction and standardization layer provided by the Performance API (PAPI) project has played a critical role in understanding the performance of applications for two decades. PULSE has extended the abstraction and unification layer that PAPI provides for hardware events to also encompass software events. Specifically, PULSE has provided a standard, well defined, and well documented API that library writers can utilize to communicate to higher software layers information about the performance of their library. Furthermore, the interface for reading this new information, which originates inside libraries and other software elements, is the same interface that PAPI has always provided, preserving the compatibility of PAPI with existing performance analysis software. As a result, PULSE enables deeper insights into how software elements interact with the hardware and one another, enabling users to tune their applications to be more efficient in their mapping of the software elements to the computational resources. As computing becomes increasingly woven into the fabric of our society, the work performed under the PULSE project, which has broadened PAPI ’s applicability by enabling a new class of software-defined events, can have significant economic and social benefits for applications that are critical to parts of our economy and society.          Last Modified: 01/12/2021       Submitted by: Anthony Danalis]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

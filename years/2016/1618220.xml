<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: SMALL: Evolution of Self-adaptive Systems using Stochastic Search</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2016</AwardEffectiveDate>
<AwardExpirationDate>08/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>499948.00</AwardTotalIntnAmount>
<AwardAmount>550825</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Software systems are becoming more ubiquitous and critical to the functioning of our lives. An increasingly important requirement is to maintain high availability of these systems even in the face of changing requirements, faults, and resources. To address that concern, system developers today incorporate hand-written run-time adaptation strategies to automatically keep a system functioning effectively. However, as software systems grow in both complexity and ubiquity, and as the rate of technological change continues to increase, manual approaches cannot keep up. We must instead treat the evolution of adaptation strategies as a first-order concern.  This research develops new mechanisms to automatically adapt and evolve the adaptation strategies themselves.  Our high-level approach is to reuse previous domain or expert knowledge to inform the construction of flexible strategies, able to adapt to unanticipated changes and to various potential dimensions of system or environmental change.&lt;br/&gt;&lt;br/&gt;Future-generation software systems will need to automatically optimize for multiple interacting, difficult-to-measure, and evolving qualities, properties, and priorities.  Existing work provides methods for constructing complex software systems that can adapt to the changing of certain circumstances such as changing environmental conditions, infrastructure availability, or user demands,&lt;br/&gt;while continuing to provide service at required quality levels.  Our motivating insight is that stochastic search methods are especially promising for&lt;br/&gt;self-adaptive software systems, and in particular for tackling the evolution of self-adaptation strategies, as evidenced in part by recent work that scales such techniques to complex source-level software problems. This research develops a principled foundation for the evolution of adaptation strategies in the self-adaptive domain, using stochastic search.  The resulting family of techniques reuses, recombines, and otherwise builds upon previous knowledge about a given system to adapt to four major potential change dimensions: (1) the system's architecture and deployment; (2) the tactics that can be deployed in an adaptation scenario, including mechanisms to choose between them and information regarding their applicability, costs, effects, success likelihood, etc.; (3) the system's quality goals, and their relative priorities; and (4) the environmental assumptions that control the context in which the system is deployed. The unifying factor in each of these strategies is the existence of previous domain or expert knowledge that can be leveraged for evolving adaptive strategies moving forward.</AbstractNarration>
<MinAmdLetterDate>05/20/2016</MinAmdLetterDate>
<MaxAmdLetterDate>06/16/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1618220</AwardID>
<Investigator>
<FirstName>David</FirstName>
<LastName>Garlan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>David Garlan</PI_FULL_NAME>
<EmailAddress>garlan@cs.cmu.edu</EmailAddress>
<PI_PHON>4122685056</PI_PHON>
<NSF_ID>000437302</NSF_ID>
<StartDate>05/20/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Claire</FirstName>
<LastName>Le Goues</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Claire Le Goues</PI_FULL_NAME>
<EmailAddress>clegoues@cs.cmu.edu</EmailAddress>
<PI_PHON>4122689527</PI_PHON>
<NSF_ID>000654066</NSF_ID>
<StartDate>05/20/2016</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie Mellon University]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133890</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~499948</FUND_OBLG>
<FUND_OBLG>2017~9525</FUND_OBLG>
<FUND_OBLG>2018~9352</FUND_OBLG>
<FUND_OBLG>2019~16000</FUND_OBLG>
<FUND_OBLG>2020~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span class="im"> <p>Self-adaptive and autonomous systems are designed to automatically adapt themselves in specific ways in response to a changing environment by invoking designed-in adaptation strategies. However, such systems have no mechanisms to&nbsp;<em>evolve their own adaptation strategies</em>&nbsp;in the presence of unexpected changes to the system, its requirements, or its environment. To overcome this limitation we developed two novel techniques.</p> <p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The use of stochastic search (and genetic algorithms, specifically) to evolve existing strategies when unexpected changes occur. Key to this technique is the ability to improve the efficiency and effectiveness of this evolution by judiciously reusing plan fragments extracted from existing adaptation strategies.</p> </span></p> <p>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A new approach to self-adaptation in the presence of security attacks that takes into account the &ldquo;observability&rdquo; of actions within an adaptation strategy, and provides algorithms based on game theory for determining optimal strategies which make appropriate tradeoffs between being detected (observed) by the adversary and achieving the desired outcomes.</p> <p>These approaches were validated in the context of realistic system contexts, including (a) large-scale enterprise systems subject to a variety of unexpected changes in requirements, capabilities, and system architectures and (b) attack scenarios based on advanced persistent threat attacks on commercial systems that are publicly documented.</p><br> <p>            Last Modified: 12/29/2020<br>      Modified by: Claire&nbsp;Le Goues</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Self-adaptive and autonomous systems are designed to automatically adapt themselves in specific ways in response to a changing environment by invoking designed-in adaptation strategies. However, such systems have no mechanisms to evolve their own adaptation strategies in the presence of unexpected changes to the system, its requirements, or its environment. To overcome this limitation we developed two novel techniques.  1.       The use of stochastic search (and genetic algorithms, specifically) to evolve existing strategies when unexpected changes occur. Key to this technique is the ability to improve the efficiency and effectiveness of this evolution by judiciously reusing plan fragments extracted from existing adaptation strategies.   2.       A new approach to self-adaptation in the presence of security attacks that takes into account the "observability" of actions within an adaptation strategy, and provides algorithms based on game theory for determining optimal strategies which make appropriate tradeoffs between being detected (observed) by the adversary and achieving the desired outcomes.  These approaches were validated in the context of realistic system contexts, including (a) large-scale enterprise systems subject to a variety of unexpected changes in requirements, capabilities, and system architectures and (b) attack scenarios based on advanced persistent threat attacks on commercial systems that are publicly documented.       Last Modified: 12/29/2020       Submitted by: Claire Le Goues]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase I:  Entity recognition for enabling interactions among connected things</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2016</AwardEffectiveDate>
<AwardExpirationDate>06/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>224953.00</AwardTotalIntnAmount>
<AwardAmount>224953</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rick Schwerdtfeger</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase I project is providing better method for connected systems and devices to interact with each other. Current solutions require many months of development and cost of development and maintenance can be overwhelming.  The proposed technology offers a way for interaction between systems and devices to be configured rather than programmed. The technology also provides a way for services to be configured by the user, rather than relying on developers to create nodes or connectors.  This is made possible through abstracting out the interaction layer of software stack and creating a generic algorithm for interaction to be configured. Much like when routers first came out, technology of abstracting out a portion of software stack opens up opportunity for market to perform tasks that once were programmer dependent.  Abstraction of router code enabled growth of Internet. We believe abstraction of Interaction code will enable IoT to be widely deployed. Societal impact is achieved through large number of interactive solution being created, and exponentially growing number of sensors and devices to be utilized in full.&lt;br/&gt;&lt;br/&gt;This Small Business Innovation Research (SBIR) Phase I project is to solve the problem of creating interaction between services being programmer dependent. In order for services to interact, they need to be able to connect, communicate, and then interact. Industry has done a great job in abstracting out various components of application layers to provide connectivity and communication between two services. However, interaction logic has always been software developed. It is the single largest bottleneck in Internet of Things (IoT) solution creation, deployment, and operation. All available tools for integration are development tools. New method of creating solutions is being proposed where a solution is designed and deployed around configured interaction logic. This is different to many development tools that allow communication between services through custom service bus, messaging protocols, and APIs. Interaction logic sits on top of communication and connectivity layers. Technology involves methods and apparatus to enable interaction between all connected things, and for enabling dynamic mapping of interactions through service elements. The technology will provide easy, rapid, and cost effective proliferation of IoT solutions. Since IoT solutions are mostly interaction between devices and applications, abstracted out interaction logic allows entire solutions to be created through configuration of interaction logic.</AbstractNarration>
<MinAmdLetterDate>06/17/2016</MinAmdLetterDate>
<MaxAmdLetterDate>06/17/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1622248</AwardID>
<Investigator>
<FirstName>Sang Duck</FirstName>
<LastName>Jung</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sang Duck Jung</PI_FULL_NAME>
<EmailAddress>david@pulzzesystems.com</EmailAddress>
<PI_PHON>4087819384</PI_PHON>
<NSF_ID>000698570</NSF_ID>
<StartDate>06/17/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Pulzze Systems, Inc.</Name>
<CityName>Saratoga</CityName>
<ZipCode>950706081</ZipCode>
<PhoneNumber>4087819384</PhoneNumber>
<StreetAddress>14641 Big Basin Way</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>079780127</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PULZZE SYSTEMS, INC.</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Pulzze Systems, Inc.]]></Name>
<CityName>Santa Clara</CityName>
<StateCode>CA</StateCode>
<ZipCode>950504309</ZipCode>
<StreetAddress><![CDATA[1400 coleman ave #G27]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA17</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5371</Code>
<Text>SBIR Phase I</Text>
</ProgramElement>
<ProgramReference>
<Code>033E</Code>
<Text>Smart and responsive structures</Text>
</ProgramReference>
<ProgramReference>
<Code>152E</Code>
<Text>Cyber-Physical Systems</Text>
</ProgramReference>
<ProgramReference>
<Code>5371</Code>
<Text>SMALL BUSINESS PHASE I</Text>
</ProgramReference>
<ProgramReference>
<Code>8033</Code>
<Text>Hardware Software Integration</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~224953</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Today, solutions are difficult and expensive since they are created through software engineering process either through a grounds up approach or by stitching together stacks of software pieces. This is especially so for growing industries such as IoT, and, many times, this difficulty is a major inhibiting factor for growth of such industry.</p> <div>The Entity recognition technology and solution development approach based on interaction that has been developed through the research, for deployments that include resource constrained environments, has impacted the principal disciplinary field&nbsp;by further lowering the time, cost, and complexity of deploying IoT solutions. Research&rsquo;s approach is akin to creating configurable database products to solve data indexing challenges, and using routers/switches to solve packet forwarding needs. Same approach of creating configurable infrastructure product is applied to solve solution creation challenges.</div> <div></div> <div>The outcome of the research project is a configurable infrastructure product which has been created specifically to build solutions. Product is based on abstracting out solution logic based on an interaction focused configuration framework. Using the product, solutions that interact with multiple components can be created through few lines of configuration. Any change in the solution involves minor changes to the configuration. Configuration changes take effect immediately. Being a logic execution engine, entity recognition can be achieved through configuring entity recognition logic, taking an approach of deterministic configuration based recognition, rather than probabilistic recognition methods.</div> <div>As connectivity and communication problems are slowly being solved for IoT, industry is quickly realizing that creating IoT&nbsp;solutions is still difficult. This is because only people with specific skills can create IoT solutions&nbsp;today. Networking&nbsp;devices such as routers and switches enabled the networking industry to grow at a fast pace by opening up the industry to&nbsp;non&shy;-developers. Similarly, creating an apparatus that opens up IoT industry to non&shy;-developers can facilitate widespread&nbsp;adoption of IoT. Such apparatus would allow integrators to configure their IoT solutions, rather than coding them up.</div> <div></div> <div>Cost equation becomes orders of magnitude less since IoT solutions can be deployed like networks through configuration&nbsp;instead of having to go through the traditional method of solution development cycle.</div> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 07/21/2017<br>      Modified by: Sang Duck&nbsp;Jung</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2017/1622248/1622248_10433950_1500674205330_interactor_with_icon_blue--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1622248/1622248_10433950_1500674205330_interactor_with_icon_blue--rgov-800width.jpg" title="Interactor Logo"><img src="/por/images/Reports/POR/2017/1622248/1622248_10433950_1500674205330_interactor_with_icon_blue--rgov-66x44.jpg" alt="Interactor Logo"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Official logo of Interactor.Interactor is a registered trademark of Pulzze Systems, Inc.</div> <div class="imageCredit">Pulzze Systems, Inc.</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Sang Duck&nbsp;Jung</div> <div class="imageTitle">Interactor Logo</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Today, solutions are difficult and expensive since they are created through software engineering process either through a grounds up approach or by stitching together stacks of software pieces. This is especially so for growing industries such as IoT, and, many times, this difficulty is a major inhibiting factor for growth of such industry. The Entity recognition technology and solution development approach based on interaction that has been developed through the research, for deployments that include resource constrained environments, has impacted the principal disciplinary field by further lowering the time, cost, and complexity of deploying IoT solutions. Research?s approach is akin to creating configurable database products to solve data indexing challenges, and using routers/switches to solve packet forwarding needs. Same approach of creating configurable infrastructure product is applied to solve solution creation challenges.  The outcome of the research project is a configurable infrastructure product which has been created specifically to build solutions. Product is based on abstracting out solution logic based on an interaction focused configuration framework. Using the product, solutions that interact with multiple components can be created through few lines of configuration. Any change in the solution involves minor changes to the configuration. Configuration changes take effect immediately. Being a logic execution engine, entity recognition can be achieved through configuring entity recognition logic, taking an approach of deterministic configuration based recognition, rather than probabilistic recognition methods. As connectivity and communication problems are slowly being solved for IoT, industry is quickly realizing that creating IoT solutions is still difficult. This is because only people with specific skills can create IoT solutions today. Networking devices such as routers and switches enabled the networking industry to grow at a fast pace by opening up the industry to non&shy;-developers. Similarly, creating an apparatus that opens up IoT industry to non&shy;-developers can facilitate widespread adoption of IoT. Such apparatus would allow integrators to configure their IoT solutions, rather than coding them up.  Cost equation becomes orders of magnitude less since IoT solutions can be deployed like networks through configuration instead of having to go through the traditional method of solution development cycle.             Last Modified: 07/21/2017       Submitted by: Sang Duck Jung]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

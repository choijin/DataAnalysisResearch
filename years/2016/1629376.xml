<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: EXPL: Write Locality Theory and Optimization for Hybrid Memory</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2016</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>299999.00</AwardTotalIntnAmount>
<AwardAmount>349999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A limit on extreme scale computing is the capacity, speed, durability and most importantly, energy efficiency of memory. Persistent memory is a disruptive technology that drastically reduces memory cost and static power but introduces the problems of slow writes and limited write endurance. An effective solution is caching. However, existing caches have been designed for fast reads: they do not minimize the number of write backs from cache to memory.  The intellectual merits of this project are sufficient theories and efficient techniques for optimal write caching in future systems that use persistent memory.  Caching, in both software and hardware, is increasingly prevalent. Hardware caches serve most of the memory accesses on commodity machines as well as super computers. Software caches, e.g. Memcached used by Wikipedia and Facebook, serve most of the data requests from online users.  The project's broader significance and importance are the broad benefits of cache optimization in scientific and consumer computing.&lt;br/&gt;&lt;br/&gt;This project develops the formal concept of write locality and the theory and techniques to characterize locality and optimize the cache.  It has three parts.  The first is write locality modeling, which includes a set of metrics that can derive the amount of modified data in cache and the write backs from cache to memory in cache of all sizes and degrees of sharing.  The second is deductive optimization, which mathematically derives the cache performance of different task and data organizations and selects the best solution among a combinatorial number of choices. The last is system modeling and application optimization, which use write locality to model software and hardware cache and to optimize a program.</AbstractNarration>
<MinAmdLetterDate>07/11/2016</MinAmdLetterDate>
<MaxAmdLetterDate>04/02/2019</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1629376</AwardID>
<Investigator>
<FirstName>Chen</FirstName>
<LastName>Ding</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Chen Ding</PI_FULL_NAME>
<EmailAddress>cding@cs.rochester.edu</EmailAddress>
<PI_PHON>5852751373</PI_PHON>
<NSF_ID>000325741</NSF_ID>
<StartDate>07/11/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Rochester</Name>
<CityName>Rochester</CityName>
<ZipCode>146270140</ZipCode>
<PhoneNumber>5852754031</PhoneNumber>
<StreetAddress>518 HYLAN, RC BOX 270140</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY25</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041294109</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ROCHESTER</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041294109</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Rochester]]></Name>
<CityName/>
<StateCode>NY</StateCode>
<ZipCode>146270140</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~299999</FUND_OBLG>
<FUND_OBLG>2017~18000</FUND_OBLG>
<FUND_OBLG>2018~16000</FUND_OBLG>
<FUND_OBLG>2019~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This research has developed the theory and techniques for optimal write caching in computer systems that use persistent memory. &nbsp;Persistent memory is a disruptive technology that drastically reduces memory cost and static power but introduces the problems of slow writes and limited write endurance. An effective solution is caching. While past cache has been designed for fast reads, this project has focused on data writes from cache to memory.&nbsp;</p> <p><br /><strong>Intellectual Merit</strong></p> <p>It has developed the first set of write locality metrics and their use in reducing write-back traffic. &nbsp;It has devised efficient ways to measure the write locality, including not just traditional trace analysis but also hardware sampling and compiler analysis. &nbsp;Hardware sampling can be performed in near real time and is suitable for any program. &nbsp;For scientific code written in loops, a compiler can analyze the write locality without running a program. &nbsp;</p> <p>In addition, the project has developed the relational theory of locality and component models and techniques including models of exclusive cache and multi-level cache sharing and non-uniform data locality, cache associativity, sub-block cache; shared footprint, the theoretical locality bounds on interleaving, and application in saving energy on mobile devices and designs of software memory cache. &nbsp;</p> <p><strong>Broader Impacts</strong></p> <p>The broader impacts include the aforementioned papers (plus invited talks at conference and workshops) and the interests from industry. &nbsp;IBM Canada provided over $20,000 industry funding. &nbsp;Jacob Brock defended his dissertation titled "Pareto Optimization for Cache and Memory Management," Rahman Lavaee on "Profile-Guided Memory Layout: Theory and Practice", and Dong Chen on "Program Locality Analysis Based on Reuse Intervals,'' all significantly extended the depth, scope and application of locality theory and optimization. &nbsp;Peter Denning, who founded the field of locality research, was in the thesis committee of Jacob Brock and collaborated on the relation theory of locality.&nbsp;</p> <div class="page" title="Page 1"> <div class="layoutArea"> <div class="column">Multicore processors bring a tremendous increase in computing power to personal, scientific, and business computing platforms. Caching, in both software and hardware, is increasingly prevalent. Hardware cache serves most of the memory accesses on commodity machines as well as super computers. Software cache, e.g. Memcached used by Wikipedia and Facebook, serves most of the data requests from online users. Hence, cache optimization has broad benefits in scientific and consumer computing. The new theory and techniques developed in this project should enable optimal caching of data writes, which are critical to future memory systems.&nbsp;<ol> </ol></div> </div> </div> <p>&nbsp;</p><br> <p>            Last Modified: 01/08/2020<br>      Modified by: Chen&nbsp;Ding</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2020/1629376/1629376_10439207_1578365204743_writebackratiocurves--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1629376/1629376_10439207_1578365204743_writebackratiocurves--rgov-800width.jpg" title="Cache Writeback Ratio Curves"><img src="/por/images/Reports/POR/2020/1629376/1629376_10439207_1578365204743_writebackratiocurves--rgov-66x44.jpg" alt="Cache Writeback Ratio Curves"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Writeback ratio curves for 29 benchmark tests from SPEC 2006 suites, divided into three groups based on the sensitivity to cache size.</div> <div class="imageCredit">Drs. Dong Chen and Chencheng Ye, MEMSYS 2016</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Chen&nbsp;Ding</div> <div class="imageTitle">Cache Writeback Ratio Curves</div> </div> </li> <li> <a href="/por/images/Reports/POR/2020/1629376/1629376_10439207_1578365619572_motiffractalgoodturing--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1629376/1629376_10439207_1578365619572_motiffractalgoodturing--rgov-800width.jpg" title="Motif Compared with Multi-fractal and Good-Turing"><img src="/por/images/Reports/POR/2020/1629376/1629376_10439207_1578365619572_motiffractalgoodturing--rgov-66x44.jpg" alt="Motif Compared with Multi-fractal and Good-Turing"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Predication accuracy of the new model (Motif) compared with multi-fractal and Good-Turing</div> <div class="imageCredit">Zhizhou Zhang et al. MEMSYS 2018</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Chen&nbsp;Ding</div> <div class="imageTitle">Motif Compared with Multi-fractal and Good-Turing</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This research has developed the theory and techniques for optimal write caching in computer systems that use persistent memory.  Persistent memory is a disruptive technology that drastically reduces memory cost and static power but introduces the problems of slow writes and limited write endurance. An effective solution is caching. While past cache has been designed for fast reads, this project has focused on data writes from cache to memory.    Intellectual Merit  It has developed the first set of write locality metrics and their use in reducing write-back traffic.  It has devised efficient ways to measure the write locality, including not just traditional trace analysis but also hardware sampling and compiler analysis.  Hardware sampling can be performed in near real time and is suitable for any program.  For scientific code written in loops, a compiler can analyze the write locality without running a program.    In addition, the project has developed the relational theory of locality and component models and techniques including models of exclusive cache and multi-level cache sharing and non-uniform data locality, cache associativity, sub-block cache; shared footprint, the theoretical locality bounds on interleaving, and application in saving energy on mobile devices and designs of software memory cache.    Broader Impacts  The broader impacts include the aforementioned papers (plus invited talks at conference and workshops) and the interests from industry.  IBM Canada provided over $20,000 industry funding.  Jacob Brock defended his dissertation titled "Pareto Optimization for Cache and Memory Management," Rahman Lavaee on "Profile-Guided Memory Layout: Theory and Practice", and Dong Chen on "Program Locality Analysis Based on Reuse Intervals,'' all significantly extended the depth, scope and application of locality theory and optimization.  Peter Denning, who founded the field of locality research, was in the thesis committee of Jacob Brock and collaborated on the relation theory of locality.    Multicore processors bring a tremendous increase in computing power to personal, scientific, and business computing platforms. Caching, in both software and hardware, is increasingly prevalent. Hardware cache serves most of the memory accesses on commodity machines as well as super computers. Software cache, e.g. Memcached used by Wikipedia and Facebook, serves most of the data requests from online users. Hence, cache optimization has broad benefits in scientific and consumer computing. The new theory and techniques developed in this project should enable optimal caching of data writes, which are critical to future memory systems.              Last Modified: 01/08/2020       Submitted by: Chen Ding]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER:    Towards A New Microservices-based Architecture for Network Functions Virtualization</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2016</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>122752.00</AwardTotalIntnAmount>
<AwardAmount>122752</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Network functions virtualization (NFV) promises to allow network operators to deploy new network functions (NFs) rapidly, quickly respond to external events, and ensure high performance and robustness. Thus, NFV can offer greater agility, scalability and performance-optimality than legacy networking gear. Many entities---including data centers, Internet Service Providers, telcos, and cellular providers---are espousing NFV.  A key aspect that determines whether the promise of NFV can be fulfilled is the architecture used to realize NFV and the performance of its implementation. Current NFV architectures are closely following the trends corresponding to Web services where a popular approach is to use a microservices-based architecture: in this, network functions are deployed within light-weight containers running atop barebones operating systems, and managed using cluster schedulers. These microservices-based architecture is purported to offer agility and scale-out performance.  &lt;br/&gt;&lt;br/&gt;While microservices are well suited for Web services that are largely request-response based, they are a poor fit for NFV because of the impact on both control and data planes. High latency is a natural impediment in such microservices-based architectures. But, a variety of other problems pertaining to workload agility, availability and throughput, and isolation can also arise. In this project, the PI will conduct an in-depth empirical study of the trade-offs of existing microservices-based architectures. Based on these results, the PI will conduct research into two alternate architectures, a strawman based on stream processing, and a clean-slate approach based on an extensible exokernel-like design. Finally, the PI will develop mechanisms to specify network functions processing and runtime composition, NF addition, and deletion. &lt;br/&gt;  &lt;br/&gt;This project's intellectual merit lies in the fact that it will lead to key insights into the differences and commonalities between Web services and NFV when it comes to realizing them using microservices. Furthermore, it will lead to insights on how to create ground-up microservices-based frameworks that are optimized for NFV. The outcomes of this initial exploration can inform future research into the fundamentals of NFV including security and isolation in emerging NFV architectures, NFV programming languages, and verification.  &lt;br/&gt;&lt;br/&gt;Broader Impact:  &lt;br/&gt;&lt;br/&gt;The project will also have significant broader impact. The PI plans to engage a postdoctoral researcher in this research. Thus, the research will give rise to several professional development opportunities for the postdoctoral researcher involved.  Outcomes from this research will be made available as profiles on CloudLab (a public cloud testbed) for other researchers to leverage. The research will also be tightly integrated into courses at the University of Wisconsin-Madison.</AbstractNarration>
<MinAmdLetterDate>09/06/2016</MinAmdLetterDate>
<MaxAmdLetterDate>09/06/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1654843</AwardID>
<Investigator>
<FirstName>Aditya</FirstName>
<LastName>Akella</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Aditya Akella</PI_FULL_NAME>
<EmailAddress>akella@cs.utexas.edu</EmailAddress>
<PI_PHON>4128183779</PI_PHON>
<NSF_ID>000204197</NSF_ID>
<StartDate>09/06/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 6401]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WI02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>161202122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WISCONSIN SYSTEM</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041188822</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Wisconsin-Madison]]></Name>
<CityName/>
<StateCode>WI</StateCode>
<ZipCode>537061001</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WI02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~122752</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Modern network employ a variety of network functions (NFs). These are specialized custom packet processing engines that perform actions related to security, performance and compliance. While NFs were traditionally deployed in hardware, recent trends have made it possible to run them in software on commodity compute. Yet, a key impediment is authoring and managing the lifecycle of the NFs, which makes it hard to roll out upgrades and introduce innovative functions at a rapid pace. Recent advancements, however, offer hope. The "microservices" model of programming allows large monolithic pieces of code to be split up into little functions that interact with each other using narrow interfaces. Such functions can be deployed atop "serverless" platforms, where a user does not have to be concerned with deploying and configuring servers. Given the importance of NFs, this projects asks how NFs can leverage these two trends and run more efficiently and be more easy to deploy on commodity compute infrastructure.</p> <p>This project makes three main intellectual contributions. First, it develops new scheduling algorithms for the network interface cards of existing compute servers. These algorithms help application data from multiple network functions to effectively contend in a fair manner for limited network resources. Second, it develops a novel framework that allows components of network functions to be run on hardware accelerators on end hosts, e.g., programmable interface cards, that significantly improves the performance of network functions. Finally, itconducts a detailed analysis and a measurement-driven study of the potential fit of state-of-the-art serverless platforms with existing network functions, and suggest minimal changes to the platforms to support said functions. These form the core of the projects intellectual merit.</p> <p>On the broader impact front, the project improves the performance and efficiency of existing data center networks upon which we rely on running all our critical applications. It has lead to the training of a postdoctoral researcher and mentoring of several graduate students. Results from this research have been incorporated into graduate and undergraduate courses at UW-Madison.</p><br> <p>            Last Modified: 02/06/2018<br>      Modified by: Srinivasa&nbsp;A&nbsp;Akella</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Modern network employ a variety of network functions (NFs). These are specialized custom packet processing engines that perform actions related to security, performance and compliance. While NFs were traditionally deployed in hardware, recent trends have made it possible to run them in software on commodity compute. Yet, a key impediment is authoring and managing the lifecycle of the NFs, which makes it hard to roll out upgrades and introduce innovative functions at a rapid pace. Recent advancements, however, offer hope. The "microservices" model of programming allows large monolithic pieces of code to be split up into little functions that interact with each other using narrow interfaces. Such functions can be deployed atop "serverless" platforms, where a user does not have to be concerned with deploying and configuring servers. Given the importance of NFs, this projects asks how NFs can leverage these two trends and run more efficiently and be more easy to deploy on commodity compute infrastructure.  This project makes three main intellectual contributions. First, it develops new scheduling algorithms for the network interface cards of existing compute servers. These algorithms help application data from multiple network functions to effectively contend in a fair manner for limited network resources. Second, it develops a novel framework that allows components of network functions to be run on hardware accelerators on end hosts, e.g., programmable interface cards, that significantly improves the performance of network functions. Finally, itconducts a detailed analysis and a measurement-driven study of the potential fit of state-of-the-art serverless platforms with existing network functions, and suggest minimal changes to the platforms to support said functions. These form the core of the projects intellectual merit.  On the broader impact front, the project improves the performance and efficiency of existing data center networks upon which we rely on running all our critical applications. It has lead to the training of a postdoctoral researcher and mentoring of several graduate students. Results from this research have been incorporated into graduate and undergraduate courses at UW-Madison.       Last Modified: 02/06/2018       Submitted by: Srinivasa A Akella]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

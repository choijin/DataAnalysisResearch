<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Enabling Efficient Context Switching and Effective Latency Hiding in GPUs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2016</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>330000.00</AwardTotalIntnAmount>
<AwardAmount>330000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Yuanyuan Yang</SignBlockName>
<PO_EMAI>yyang@nsf.gov</PO_EMAI>
<PO_PHON>7032928067</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Graphics processing units (GPUs), initially designed for computer graphics, are becoming widely used for general purpose computing. This project addresses two important challenges in GPU computing. First, it investigates schemes to enable GPUs to be preempted efficiently, which is critical for GPUs to satisfy the quality of service (QOS) requirement in the cloud environment. Second, the project looks into approaches to significantly improve the latency hiding capability of GPUs. This interdisciplinary research has two practical uses, efficient preemption empowering GPUs as truly shared resource and effective latency hiding improving both the GPU performance and energy efficiency. Graduate student advising and industry collaboration are two key aspects of the project.&lt;br/&gt;&lt;br/&gt;The design philosophy of GPUs is to exploit very high degrees of data-level parallelism (DLP), expressed as thread-level parallelism (TLP), to hide long instruction latency. As a side effect, GPUs feature high amounts of on-chip resources to store the contexts or the architectural states of the large numbers of concurrent threads. The large contexts result in long latency for context switching, which makes it difficult for GPUs to be truly shared in cloud servers. This research project leverages the nature of the single-instruction multiple-thread (SIMT) execution model to drastically reduce and compress the GPU context size. Software and hardware approaches are integrated to enable instruction-level preemption for GPUs to meet the QOS requirements. Fast context switching is also used to switch out stalled threads and switch in new ones such that the otherwise idle computing resources can be utilized to provide much higher latency-hiding capability. It essentially achieves higher TLP on GPUs without enlarging their critical on-chip resources.</AbstractNarration>
<MinAmdLetterDate>07/27/2016</MinAmdLetterDate>
<MaxAmdLetterDate>07/27/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1618509</AwardID>
<Investigator>
<FirstName>Huiyang</FirstName>
<LastName>Zhou</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Huiyang Zhou</PI_FULL_NAME>
<EmailAddress>hzhou@ncsu.edu</EmailAddress>
<PI_PHON>9195137386</PI_PHON>
<NSF_ID>000250126</NSF_ID>
<StartDate>07/27/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Carolina State University</Name>
<CityName>Raleigh</CityName>
<ZipCode>276957514</ZipCode>
<PhoneNumber>9195152444</PhoneNumber>
<StreetAddress>2601 Wolf Village Way</StreetAddress>
<StreetAddress2><![CDATA[Admin. III, STE 240]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042092122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTH CAROLINA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>142363428</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[North Carolina State University]]></Name>
<CityName/>
<StateCode>NC</StateCode>
<ZipCode>276957911</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~330000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project improves upon the computing architecture of graphics processing units (GPUs) and has three main focuses. First, it develops both hardware and software schemes to enable prompt preemption for GPU such that the device can respond to user requests in time and support various scheduling algorithms. Second, it leverages hardware accelerated preemption to enable new latency hiding opportunities so as to enhance the efficiency of GPU program execution. Third, this project investigates the concurrent kernel execution paradigm, which enables multiple programs to share the GPU device, pinpoints its performance bottlenecks, and devises novel architectural approaches to improve the efficacy of concurrent kernel execution. The research scope of the project is further extended into GPU memory models for emerging non-volatile memory, side-channel-resistant crypto algorithm implementations on GPU, and code optimizations in OpenCL for FPGA.</p> <p>This project advances the state-of-the-art GPU architecture design and enables GPU devices to be utilized more efficiently. It features close collaboration between leading industry and academic researchers and offers the participating graduate students interdisciplinary research experiences in both hardware and software development. Research findings from this project have been published in premium conferences and journals in the computer architecture and supercomputing fields and incorporated in a graduate level course focusing on GPU architecture. Open source software has been also released for the reproducibility of the research results.</p><br> <p>            Last Modified: 09/01/2019<br>      Modified by: Huiyang&nbsp;Zhou</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project improves upon the computing architecture of graphics processing units (GPUs) and has three main focuses. First, it develops both hardware and software schemes to enable prompt preemption for GPU such that the device can respond to user requests in time and support various scheduling algorithms. Second, it leverages hardware accelerated preemption to enable new latency hiding opportunities so as to enhance the efficiency of GPU program execution. Third, this project investigates the concurrent kernel execution paradigm, which enables multiple programs to share the GPU device, pinpoints its performance bottlenecks, and devises novel architectural approaches to improve the efficacy of concurrent kernel execution. The research scope of the project is further extended into GPU memory models for emerging non-volatile memory, side-channel-resistant crypto algorithm implementations on GPU, and code optimizations in OpenCL for FPGA.  This project advances the state-of-the-art GPU architecture design and enables GPU devices to be utilized more efficiently. It features close collaboration between leading industry and academic researchers and offers the participating graduate students interdisciplinary research experiences in both hardware and software development. Research findings from this project have been published in premium conferences and journals in the computer architecture and supercomputing fields and incorporated in a graduate level course focusing on GPU architecture. Open source software has been also released for the reproducibility of the research results.       Last Modified: 09/01/2019       Submitted by: Huiyang Zhou]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

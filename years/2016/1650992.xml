<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: EAGER: Data Streaming with a View towards Cloud Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2016</AwardEffectiveDate>
<AwardExpirationDate>02/28/2019</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The ability to efficiently and effectively process big data is becoming central to modern life. Increasingly, much of this processing takes place "in the cloud", on large clusters of powerful servers, which provide computational power far exceeding those available on a weak client, e.g., an end-user's personal computer. Many big data problems require time-and-space-efficient processing of massive data streams generated almost continuously: examples include financial transactions, medical records, and scientific experimental&lt;br/&gt;data. Access to a cloud computing service makes tractable a number of data streaming problems that would otherwise be intractable for a weak client.&lt;br/&gt;&lt;br/&gt;Existing cloud computing services do not give clients a guarantee that their computations will be executed error-free. In the course of this project, the PI will work to design and study the theoretical foundations of techniques that would enable a weak client to trust results arrived at when working with&lt;br/&gt;such a service. New algorithms designed during this project could have an impact on the practice of cloud computing and data streaming systems. The project will enable the training of graduate and undergraduate students in theoretical computer science research and exposition, and in experimentally studying algorithmic ideas relevant to such trustworthy cloud computing.&lt;br/&gt;&lt;br/&gt;The project has two major threads. The first is about algorithm design, wherein the PI will seek new or improved algorithms (in terms of space usage and communication costs) in the above weak-client/powerful-server setting. In particular, the PI will revisit such fundamental problems as norm estimation and clustering. The second thread is complexity-theoretic: the PI will seek to understand the limitations of this computational setting, most likely through proving new lower bounds in communication complexity. This thread naturally leads to open questions about Arthur-Merlin communication, a topic long known to be difficult enough that even small advances could be significant breakthroughs.</AbstractNarration>
<MinAmdLetterDate>08/31/2016</MinAmdLetterDate>
<MaxAmdLetterDate>08/31/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1650992</AwardID>
<Investigator>
<FirstName>Amit</FirstName>
<LastName>Chakrabarti</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Amit Chakrabarti</PI_FULL_NAME>
<EmailAddress>Amit.Chakrabarti@Dartmouth.edu</EmailAddress>
<PI_PHON>6036461710</PI_PHON>
<NSF_ID>000202522</NSF_ID>
<StartDate>08/31/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Dartmouth College</Name>
<CityName>HANOVER</CityName>
<ZipCode>037551421</ZipCode>
<PhoneNumber>6036463007</PhoneNumber>
<StreetAddress>OFFICE OF SPONSORED PROJECTS</StreetAddress>
<StreetAddress2><![CDATA[11 ROPE FERRY RD #6210]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Hampshire</StateName>
<StateCode>NH</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NH02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041027822</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF DARTMOUTH COLLEGE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041027822</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Dartmouth College]]></Name>
<CityName>Hanover</CityName>
<StateCode>NH</StateCode>
<ZipCode>037553510</ZipCode>
<StreetAddress><![CDATA[6211 Sudikoff Lab Dartmouth Coll]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Hampshire</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NH02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~300000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The key outcomes of this foundational research project have been (1) the development of new algorithms for processing massive data streams and mathematical analysis of such algorithms; (2) publication of research papers presenting these results; and (3) partial support of a team of graduate students involved in much of this research.</p> <p><br />Recent results from this project provide algorithms for graph problems in commonly accepted theoretical models of cloud computing. One set of results enables space and communication-efficient mechanisms for a memory-bounded client computer to reason about big graph data with the aid of a cloud computing server, without the need to blindly trust the work done in the cloud. A different set of results provides new and simplified algorithms for performing certain graph computations in massively parallel architectures, a setup commonly used in cloud computing servers.&nbsp;</p> <p><br />Other outcomes of this project include algorithms for more traditional problems in data streaming, such as counting the number of triangles and finding good matchings in a large graph. These results make new progress on problems despite decades of existing research on them.</p> <p><br />Besides funding research directly, this project has also supported the continued development of two relatively new courses at Dartmouth, one on communication complexity, and one on data streaming algorithms. The project thus contributed to the education of two batches of Dartmouth students who have passed through these courses.</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/08/2019<br>      Modified by: Amit&nbsp;Chakrabarti</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The key outcomes of this foundational research project have been (1) the development of new algorithms for processing massive data streams and mathematical analysis of such algorithms; (2) publication of research papers presenting these results; and (3) partial support of a team of graduate students involved in much of this research.   Recent results from this project provide algorithms for graph problems in commonly accepted theoretical models of cloud computing. One set of results enables space and communication-efficient mechanisms for a memory-bounded client computer to reason about big graph data with the aid of a cloud computing server, without the need to blindly trust the work done in the cloud. A different set of results provides new and simplified algorithms for performing certain graph computations in massively parallel architectures, a setup commonly used in cloud computing servers.    Other outcomes of this project include algorithms for more traditional problems in data streaming, such as counting the number of triangles and finding good matchings in a large graph. These results make new progress on problems despite decades of existing research on them.   Besides funding research directly, this project has also supported the continued development of two relatively new courses at Dartmouth, one on communication complexity, and one on data streaming algorithms. The project thus contributed to the education of two batches of Dartmouth students who have passed through these courses.          Last Modified: 05/08/2019       Submitted by: Amit Chakrabarti]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

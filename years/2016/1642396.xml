<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSE: An Interactive Parallelization Tool</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>11/01/2016</AwardEffectiveDate>
<AwardExpirationDate>10/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>463302.00</AwardTotalIntnAmount>
<AwardAmount>463302</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Stefan Robila</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Many scientists, engineers, and students use the programming languages C, C++, and Fortran. Scientists who use these languages to conduct their experiments set up their programs to run in sequence -- what computer scientists call "serial processing."  In order to make the best use of the state-of-the-art High Performance Computing (HPC) platforms to run more efficient experiments or to run very large simulations, the programs written in these languages need to be able to run simultaneously, what computer scientists call "in parallel" as distinct from "serial".  Enabling the parallelization of the applications and software, however, remains a challenge. This project proposes deployment of an Interactive Parallelization Tool (IPT), which helps scientists, engineers, and students build on their customary use of C/C++/Fortran to create more efficient programs that can run on advanced HPC platforms. The IPT will be made available to the community through a web-portal for convenient code generation and testing on computational resources of the national cyberinfrastructure (CI).  &lt;br/&gt;&lt;br/&gt;The team has developed a prototype IPT to parallelize multiple design patterns written in C/C++ at a high-level of abstraction.  The proposed project will harden the IPT prototype into a production-quality tool and will extend support for the efficient parallelization of additional types of C/C++ applications.  The team will also prototype the parallelization of Fortran applications.  Carefully selected test cases will be provided with the IPT to engage and educate the users about the advantages and disadvantages of the various parallel programming strategies so that they can be appropriately applied in solving real-world problems.  The IPT can be extended to support additional parallel programming paradigms, applications classes, and languages.  It will be evaluated using code from multiple domains (e.g. biology, geosciences, civil engineering, and astronomy), and potential users will be engaged during the testing phase.  This will all be served through a web-based portal, and will enable a low-risk guided approach for researchers, practitioners, and students to incorporate HPC in their work.</AbstractNarration>
<MinAmdLetterDate>09/13/2016</MinAmdLetterDate>
<MaxAmdLetterDate>08/29/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1642396</AwardID>
<Investigator>
<FirstName>Ritu</FirstName>
<LastName>Ritu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ritu Ritu</PI_FULL_NAME>
<EmailAddress>ritu.arora@utsa.edu</EmailAddress>
<PI_PHON>5519987534</PI_PHON>
<NSF_ID>000623455</NSF_ID>
<StartDate>09/13/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName>Austin</CityName>
<StateCode>TX</StateCode>
<ZipCode>787121532</ZipCode>
<StreetAddress><![CDATA[101 E. 27th Street, Suite 5.300]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8005</Code>
<Text>Scientific Software Elements</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~244016</FUND_OBLG>
<FUND_OBLG>2017~219286</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The Interactive Parallelization Tool (IPT) helps in transforming multiple classes of C/C++ applications into parallel applications in a user-guided manner. The parallel programming paradigms currently supported by IPT include MPI, OpenMP, CUDA. A full-featured version of IPT is installed and is in use on the Stampede2 system at TACC. The performance of the parallel code generated using IPT is within 10% of the performance of the best available hand-written code for certain classes of parallel applications (such as, those having for-loops and stencil-based computation patterns). A version of IPT that can parallelize C applications has been made available for public use through the IPT web-portal (<a href="https://iptweb.tacc.utexas.edu/entry">https://iptweb.tacc.utexas.edu/entry</a>&nbsp;).&nbsp;</p> <p>This project has also resulted in a database of commonly seen logical errors in parallel programs and can be useful in teaching parallel code correctness. Additionally, the project has resulted in software assets for : (1) building science gateways that can support both batch and interactive computing modes (<a href="https://github.com/ritua2/gib">https://github.com/ritua2/gib</a>), and (2) a portable cloud-based filesystem named greyfish (<a href="https://github.com/ritua2/greyfish">https://github.com/ritua2/greyfish</a>). A Docker image of IPT is available from DockerHub.&nbsp;</p> <p>More than 500 students and domain-experts have been trained in parallel programming using IPT. This project has contributed in demystifying parallel programming for a broad community. IPT will continue to be actively developed even after the end of the project, and the project team will continue to enhance and maintain the IPT web portal.</p><br> <p>            Last Modified: 03/02/2020<br>      Modified by: Ritu&nbsp;Ritu</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The Interactive Parallelization Tool (IPT) helps in transforming multiple classes of C/C++ applications into parallel applications in a user-guided manner. The parallel programming paradigms currently supported by IPT include MPI, OpenMP, CUDA. A full-featured version of IPT is installed and is in use on the Stampede2 system at TACC. The performance of the parallel code generated using IPT is within 10% of the performance of the best available hand-written code for certain classes of parallel applications (such as, those having for-loops and stencil-based computation patterns). A version of IPT that can parallelize C applications has been made available for public use through the IPT web-portal (https://iptweb.tacc.utexas.edu/entry ).   This project has also resulted in a database of commonly seen logical errors in parallel programs and can be useful in teaching parallel code correctness. Additionally, the project has resulted in software assets for : (1) building science gateways that can support both batch and interactive computing modes (https://github.com/ritua2/gib), and (2) a portable cloud-based filesystem named greyfish (https://github.com/ritua2/greyfish). A Docker image of IPT is available from DockerHub.   More than 500 students and domain-experts have been trained in parallel programming using IPT. This project has contributed in demystifying parallel programming for a broad community. IPT will continue to be actively developed even after the end of the project, and the project team will continue to enhance and maintain the IPT web portal.       Last Modified: 03/02/2020       Submitted by: Ritu Ritu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

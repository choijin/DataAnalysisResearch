<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NeTS: Medium: Collaborative Research: An App-Centric Transport Architecture for the Internet</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>800000.00</AwardTotalIntnAmount>
<AwardAmount>800000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Deepankar Medhi</SignBlockName>
<PO_EMAI>dmedhi@nsf.gov</PO_EMAI>
<PO_PHON>7032922935</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The Transmission Control Protocol and its socket interface are used by most network applications today---viewed as a software program, it is likely the most popular one in the world. Over thirty years old, this program is now showing signs of age. Web, mobile, and embedded applications use it in unanticipated ways (many interacting flows of different lengths with different objectives); it does not properly support mobile devices with multiple networks; it does not allow an application to adapt quickly to changing network conditions; it does not work well in fast datacenter networks; and it has a fruitless, adversarial relationship with in-network "middleboxes".&lt;br/&gt;&lt;br/&gt;App-Centric Transport (ACT) aims to solve these problems. Unlike today's transport architecture, ACT takes application objectives into account in making its transmission decisions.  ACT uses a computer-generated transmission control program, which takes models of the workload and objectives to automatically synthesize protocols.  This program (Remy) serves both as a way to implement protocols and as a design tool to answer fundamental questions about congestion control. ACT explores centralized control over transmission and path selection for datacenters, and uses machine learning classifiers to select the best network on mobile devices. It aims to resolve tussles between endpoint transport and in-network middleboxes by viewing middlebox interposition as a generalization of multi-path transport. Project participants are collaborating with Facebook and Google on some of these ideas. The education plan introduces protocol design contests where students can run and measure their protocols over trace data and compare their protocols on a leaderboard.</AbstractNarration>
<MinAmdLetterDate>08/21/2014</MinAmdLetterDate>
<MaxAmdLetterDate>09/20/2019</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1407470</AwardID>
<Investigator>
<FirstName>Hari</FirstName>
<LastName>Balakrishnan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Hari Balakrishnan</PI_FULL_NAME>
<EmailAddress>hari@csail.mit.edu</EmailAddress>
<PI_PHON>6172538713</PI_PHON>
<NSF_ID>000489957</NSF_ID>
<StartDate>08/21/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName/>
<StateCode>MA</StateCode>
<ZipCode>021394301</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~240000</FUND_OBLG>
<FUND_OBLG>2015~210000</FUND_OBLG>
<FUND_OBLG>2016~200000</FUND_OBLG>
<FUND_OBLG>2017~150000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Today's Web, mobile, and embedded applications exercise transport protocols in unanticipated and stressful ways, and applications arefar more sensitive to both mean and tail performance than everbefore. This project developed protocols, methods, and architectures to modernize data transport and its congestion control methods.</p> <p><span style="text-decoration: underline;"><strong>Intellectual Merits</strong></span></p> <p><strong>A. Congestion Control</strong></p> <ol> <li><em>Computer-synthesized congestion control with Remy: </em>Remy pioneered the area of computer-synthesized congestion-control algorithms (CCAs). With Remy, human designers specify their prior knowledge and assumptions about the network and a goal to strive for. Remy then creates a CCA to run at the endpoints. The project studied when theyachieve higher performance and fairness than human-designed schemes,and determined when they don't. When the training regime includes theconditions under test, Remy outperformed human ones significantly, but failed otherwise, sometimes in surprising ways. Two SIGCOMM papers. Winstein's thesis recognized by the 2014 SIGCOMM dissertation award.</li> <li><em>Congestion Control Plane (CCP): </em>Developed CCP, a system to implement complex CCAs by placing themin a separate agent outside the packet datapath. Demonstrated 1) "Write-once, run-anywhere": can write a CCA once and run it on any datapath that supports the specified interface. 2) Several CCAs running on three datapaths: Linux kernel, mTCP/DPDK, and QUIC, and showed algorithms running for the first time on certain datapaths (Cubic on mTCP/DPDK, Copa on QUIC). 3) Higher pace of development: A CCA designer can focus on the algorithmic essentials without worrying about datapath details. 4) New capabilities: CCP enables algorithms that require sophisticated computation (signal processing, machine learning). Papers at HotNets and SIGCOMM.</li> <li><em>Accel-Brake Control (ABC): </em>A new explicit CCA for wireless networks. CCA on such paths is challenging because of the rapid time variations of the link capacity. In ABC, a wireless router marks each packet with one bit of feedback corresponding to either "accelerate" or "brake", based on a measured estimate of the current link rate. Upon receiving this feedback via an ACK, the sender increases its window by one on an accelerate, and decreases it by one on a brake. This simple mechanism allows the router to signal a large dynamic range of window size changes within one RTT: from throttling the window to 0, to doubling the window. Experiments showed that: (1) In Wi-Fi, ABC achieves 30-40% higher throughput with similar delays compared to several prior schemes. (2) Across eight different cellular links, ABC achieves 2? lower 95th percentile packet delay compared to XCP, a prior explicit protocol. Papers at HotNets and NSDI.</li> </ol> <p><strong>B. Web Transport</strong></p> <ol> <li><em>Polaris: </em>Loading a modern web page requires a browser to resolve a "dependency graph" of resources. Unfortunately, many edges in a page?sdependency graph are unobservable by today?s browsers. Polaris is a dynamic client-side scheduler that uses fine-grained dependency graphs to dynamically determine which objects to load, and when. Polaris can aggressively fetch objects in a way that minimizes network round trips. Experiments show that Polaris decreases median page load time by 34%, and by 59% at the 95th percentile. Paper at NSDI.</li> <li><em>Vesper: </em>Web optimizations focus on optimizing page load time. Prior metrics to measure it don't capture user-perceived performance well. We introduced a new metric, Ready Index, which considers both visibility and "above-the-fold" content. Experiments showed that prior metrics have a median 30% error in measuring loadtime. A Ready Index-based scheduler (Vesper) reduces median load timeby 33%.&nbsp; A user study showed that 84% of users prefered Vesper to prior methods. Paper at NSDI.</li> <li><em>Mahimahi: </em>A set of lightweight tools for browser developers, website authors, and network protocol designers that provides accurate measurements when recording and replaying HTTP content over emulated network conditions. Mahimahi is free software and is available on Ubuntu (version 14.04 or higher), and is now widely used in the community. Paper at USENIX ATC.</li> </ol> <p><span style="text-decoration: underline;"><strong>Broader Impacts</strong></span></p> <ol> <li>Remy (https://web.mit.edu/remy/ and open-sourced athttps://github.com/tcpexmachina/remy) helped inspire the community toward machine learning for CCA development.</li> <li>Mahimahi (https://mahimahi.mit.edu) is widely available in the Ubuntu distribution and used by numerous researchers and engineers.</li> <li>The Congestion Control Plane (CCP) is open-sourced (https://ccp-project.github.io/) and has been integrated into Facebook's <em>mvfst</em> library. It is being used for A/B tests between CCP-implemented algorithms and their native counterparts. Facebook plans to use CCP to experiment with algorithmsin production and collaborate with researchers.</li> <li>Polaris (http://web.mit.edu/polaris) has been open-sourced (https://www.github.com/ravinet/dependency_caching), and led to a change in the web request scheduler in the Chrome browser. Polaris deployed by over 50 content providers such as AmEx, 1-800-flowers,etc. Also received significant tech-press attention, and an article written by MIT News was the most-read article from all of MIT CSAIL in 2016.&nbsp;</li> <li>This grant graduated PhD students Ravi Netravali (Princeton), Anirudh Sivaraman (NYU), Keith Winstein (Stanford), and funded others who will graduate soon.</li> </ol><br> <p>            Last Modified: 05/16/2021<br>      Modified by: Hari&nbsp;Balakrishnan</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Today's Web, mobile, and embedded applications exercise transport protocols in unanticipated and stressful ways, and applications arefar more sensitive to both mean and tail performance than everbefore. This project developed protocols, methods, and architectures to modernize data transport and its congestion control methods.  Intellectual Merits  A. Congestion Control  Computer-synthesized congestion control with Remy: Remy pioneered the area of computer-synthesized congestion-control algorithms (CCAs). With Remy, human designers specify their prior knowledge and assumptions about the network and a goal to strive for. Remy then creates a CCA to run at the endpoints. The project studied when theyachieve higher performance and fairness than human-designed schemes,and determined when they don't. When the training regime includes theconditions under test, Remy outperformed human ones significantly, but failed otherwise, sometimes in surprising ways. Two SIGCOMM papers. Winstein's thesis recognized by the 2014 SIGCOMM dissertation award. Congestion Control Plane (CCP): Developed CCP, a system to implement complex CCAs by placing themin a separate agent outside the packet datapath. Demonstrated 1) "Write-once, run-anywhere": can write a CCA once and run it on any datapath that supports the specified interface. 2) Several CCAs running on three datapaths: Linux kernel, mTCP/DPDK, and QUIC, and showed algorithms running for the first time on certain datapaths (Cubic on mTCP/DPDK, Copa on QUIC). 3) Higher pace of development: A CCA designer can focus on the algorithmic essentials without worrying about datapath details. 4) New capabilities: CCP enables algorithms that require sophisticated computation (signal processing, machine learning). Papers at HotNets and SIGCOMM. Accel-Brake Control (ABC): A new explicit CCA for wireless networks. CCA on such paths is challenging because of the rapid time variations of the link capacity. In ABC, a wireless router marks each packet with one bit of feedback corresponding to either "accelerate" or "brake", based on a measured estimate of the current link rate. Upon receiving this feedback via an ACK, the sender increases its window by one on an accelerate, and decreases it by one on a brake. This simple mechanism allows the router to signal a large dynamic range of window size changes within one RTT: from throttling the window to 0, to doubling the window. Experiments showed that: (1) In Wi-Fi, ABC achieves 30-40% higher throughput with similar delays compared to several prior schemes. (2) Across eight different cellular links, ABC achieves 2? lower 95th percentile packet delay compared to XCP, a prior explicit protocol. Papers at HotNets and NSDI.   B. Web Transport  Polaris: Loading a modern web page requires a browser to resolve a "dependency graph" of resources. Unfortunately, many edges in a page?sdependency graph are unobservable by today?s browsers. Polaris is a dynamic client-side scheduler that uses fine-grained dependency graphs to dynamically determine which objects to load, and when. Polaris can aggressively fetch objects in a way that minimizes network round trips. Experiments show that Polaris decreases median page load time by 34%, and by 59% at the 95th percentile. Paper at NSDI. Vesper: Web optimizations focus on optimizing page load time. Prior metrics to measure it don't capture user-perceived performance well. We introduced a new metric, Ready Index, which considers both visibility and "above-the-fold" content. Experiments showed that prior metrics have a median 30% error in measuring loadtime. A Ready Index-based scheduler (Vesper) reduces median load timeby 33%.  A user study showed that 84% of users prefered Vesper to prior methods. Paper at NSDI. Mahimahi: A set of lightweight tools for browser developers, website authors, and network protocol designers that provides accurate measurements when recording and replaying HTTP content over emulated network conditions. Mahimahi is free software and is available on Ubuntu (version 14.04 or higher), and is now widely used in the community. Paper at USENIX ATC.   Broader Impacts  Remy (https://web.mit.edu/remy/ and open-sourced athttps://github.com/tcpexmachina/remy) helped inspire the community toward machine learning for CCA development. Mahimahi (https://mahimahi.mit.edu) is widely available in the Ubuntu distribution and used by numerous researchers and engineers. The Congestion Control Plane (CCP) is open-sourced (https://ccp-project.github.io/) and has been integrated into Facebook's mvfst library. It is being used for A/B tests between CCP-implemented algorithms and their native counterparts. Facebook plans to use CCP to experiment with algorithmsin production and collaborate with researchers. Polaris (http://web.mit.edu/polaris) has been open-sourced (https://www.github.com/ravinet/dependency_caching), and led to a change in the web request scheduler in the Chrome browser. Polaris deployed by over 50 content providers such as AmEx, 1-800-flowers,etc. Also received significant tech-press attention, and an article written by MIT News was the most-read article from all of MIT CSAIL in 2016.  This grant graduated PhD students Ravi Netravali (Princeton), Anirudh Sivaraman (NYU), Keith Winstein (Stanford), and funded others who will graduate soon.        Last Modified: 05/16/2021       Submitted by: Hari Balakrishnan]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NeTS: Small: Abstractions and Algorithms for Control of Network Services</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2014</AwardEffectiveDate>
<AwardExpirationDate>09/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>499581.00</AwardTotalIntnAmount>
<AwardAmount>499581</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Modern data-center networks use software-defined networking to control the flow of traffic among their systems. Current abstractions for software-defined networking assume that traffic traverses the network without being modified en route. In practice, however, many network operators utilize "middleboxes" to perform complex traffic processing operations, such as deep packet inspection, load balancing, WAN optimization, and caching. The goal of this project is to achieve a transformational shift in software-defined networks from today's limited "data transmission" view to a "data transmission and processing" view that more accurately reflects the reality of current and future networks in order to improve control and operational efficiently of the network infrastructure.&lt;br/&gt;&lt;br/&gt;The project aims to design and prototype novel mechanisms to describe, implement, and control advanced network services in networks with centralized and hybrid management. Specific objectives are to develop a novel control plane for network services, design novel control plane algorithms, explore dynamics in network traffic that affect the workload on middleboxes, and demonstrate the capabilities of our proposed control plane for network services in a realistic setting based on GENI. The results from this work will provide a novel approach to controlling network services within software-defined networks.&lt;br/&gt;&lt;br/&gt;The broader impacts of this project aim at improving network infrastructure, which makes up the Internet and is of critical importance to society. While software-defined networking simplifies and enhances the control that is exerted on networks, it falls short of considering middleboxes and network services, which are an integral part of today's network infrastructure. This project addresses this shortcoming and provides solutions that can make software-defined networks more useful in the future. This project will provide training to student in state-of-the-art networking technology, and results will be disseminated in the form of open-source toolsets and publications.</AbstractNarration>
<MinAmdLetterDate>09/05/2014</MinAmdLetterDate>
<MaxAmdLetterDate>02/27/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1421448</AwardID>
<Investigator>
<FirstName>Tilman</FirstName>
<LastName>Wolf</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tilman Wolf</PI_FULL_NAME>
<EmailAddress>wolf@umass.edu</EmailAddress>
<PI_PHON>4135450757</PI_PHON>
<NSF_ID>000394291</NSF_ID>
<StartDate>09/05/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Sriram</FirstName>
<LastName>Natarajan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sriram Natarajan</PI_FULL_NAME>
<EmailAddress>natarajan.sriram@gmail.com</EmailAddress>
<PI_PHON>6507137347</PI_PHON>
<NSF_ID>000663159</NSF_ID>
<StartDate>09/05/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Massachusetts Amherst</Name>
<CityName>Hadley</CityName>
<ZipCode>010359450</ZipCode>
<PhoneNumber>4135450698</PhoneNumber>
<StreetAddress>Research Administration Building</StreetAddress>
<StreetAddress2><![CDATA[100 Venture Way, Suite 201]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>153926712</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MASSACHUSETTS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>079520631</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Massachusetts Amherst]]></Name>
<CityName/>
<StateCode>MA</StateCode>
<ZipCode>010039242</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~499581</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project explored how to manage and control software-defined networks. This technology is very different from the original internet design. Many network operators utilize "middleboxes" to process network traffic for deep packet inspection, load balancing, WAN optimization, caching, etc. These "network services" are performed on nodes with stateful processing systems that perform complex operations. Thus, the classical "routing and packet forwarding" problem in networking has been transformed into a "routing, processing, and packet forwarding" problem. Our work looked at how to answer fundamental control questions, such as where to place a processing function for best performance, or how to determine state changes in the system. We also prototyped a technique for automatically inferencing sources of network misconfigurations.</p> <p>In our research, we designed a system that can track state changes in a software-defined network. The system is based on versioning different network states and attributing changes to sources in order to enable debugging. We developed a prototype system that can capture state information and make it easily accessible. In particular, the system is able to collect not only current network state information but also network configuration data. Only with configuration data, it is possible to understand the intent of a network operator. Thus, the combination of state and configuration information enables inferences on network faults.</p> <p>To address the function placement question, we formulated a problem statement for this area that considers flow placement with constraints, and we developed a solution that can compute such a path efficiently. The primary idea is to transform the traditional routing problem in networks by merely modifying the structure of the network graph. Using a suitable metric that combines both link costs and processing costs, conventional shortest path algorithms can be used to solve this problem. To reflect dynamics, we exploit the ability of software-defined network controllers to collect runtime statistics from switches in the network to assess dynamic loads. We use models from queuing theory to translate this information into dynamic cost values for the placement problem.</p> <p>Security issues were explored in the context of denial-of-service attacks on software-defined network controllers. We designed a defense mechanism, which requires systems wanting to connect through an SDN network to commit resources in the form of proof-of-work before an SDN controller commits resources for route computation and setup. Using this approach, an attacker needs to dedicate a large amount of computational resources in order to send large amounts of attack traffic that triggers route computation on the SDN controller, thus making an attack potentially prohibitively expensive.</p> <p>The increasing complexity of networks together with increasing amounts of control and state information require automated tools for initial analysis. We designed and prototyped an automated system that can infer context and semantics. Our approach, based on natural language processing, shows how concepts, such as collocations, can be applied to network management data. We demonstrated the effectiveness of our approach to detect route prefix and sub-prefix hijacks.</p> <p>We participated in an NSF I-Corps project based on ideas from this work. The team participated in the Summer 2016 Cohort #1 (Team #784 "NetCeption"). A later PFI:AIRTT proposal was a result of this training.</p> <p>The result of this work may enable new types of control mechanisms in software-defined networks. Future controller systems can leverage our placement algorithms, security features, and automated inference mechanisms. As a result, networks may operate more securely and robustly.</p> <p>Beyond the broad applicability of our research results to the design of network exchange points, this project has offered extensive graduate student training. Results from our work have been disseminated in the form of a patent application and publications in peer-reviewed conferences.</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 02/11/2019<br>      Modified by: Tilman&nbsp;Wolf</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project explored how to manage and control software-defined networks. This technology is very different from the original internet design. Many network operators utilize "middleboxes" to process network traffic for deep packet inspection, load balancing, WAN optimization, caching, etc. These "network services" are performed on nodes with stateful processing systems that perform complex operations. Thus, the classical "routing and packet forwarding" problem in networking has been transformed into a "routing, processing, and packet forwarding" problem. Our work looked at how to answer fundamental control questions, such as where to place a processing function for best performance, or how to determine state changes in the system. We also prototyped a technique for automatically inferencing sources of network misconfigurations.  In our research, we designed a system that can track state changes in a software-defined network. The system is based on versioning different network states and attributing changes to sources in order to enable debugging. We developed a prototype system that can capture state information and make it easily accessible. In particular, the system is able to collect not only current network state information but also network configuration data. Only with configuration data, it is possible to understand the intent of a network operator. Thus, the combination of state and configuration information enables inferences on network faults.  To address the function placement question, we formulated a problem statement for this area that considers flow placement with constraints, and we developed a solution that can compute such a path efficiently. The primary idea is to transform the traditional routing problem in networks by merely modifying the structure of the network graph. Using a suitable metric that combines both link costs and processing costs, conventional shortest path algorithms can be used to solve this problem. To reflect dynamics, we exploit the ability of software-defined network controllers to collect runtime statistics from switches in the network to assess dynamic loads. We use models from queuing theory to translate this information into dynamic cost values for the placement problem.  Security issues were explored in the context of denial-of-service attacks on software-defined network controllers. We designed a defense mechanism, which requires systems wanting to connect through an SDN network to commit resources in the form of proof-of-work before an SDN controller commits resources for route computation and setup. Using this approach, an attacker needs to dedicate a large amount of computational resources in order to send large amounts of attack traffic that triggers route computation on the SDN controller, thus making an attack potentially prohibitively expensive.  The increasing complexity of networks together with increasing amounts of control and state information require automated tools for initial analysis. We designed and prototyped an automated system that can infer context and semantics. Our approach, based on natural language processing, shows how concepts, such as collocations, can be applied to network management data. We demonstrated the effectiveness of our approach to detect route prefix and sub-prefix hijacks.  We participated in an NSF I-Corps project based on ideas from this work. The team participated in the Summer 2016 Cohort #1 (Team #784 "NetCeption"). A later PFI:AIRTT proposal was a result of this training.  The result of this work may enable new types of control mechanisms in software-defined networks. Future controller systems can leverage our placement algorithms, security features, and automated inference mechanisms. As a result, networks may operate more securely and robustly.  Beyond the broad applicability of our research results to the design of network exchange points, this project has offered extensive graduate student training. Results from our work have been disseminated in the form of a patent application and publications in peer-reviewed conferences.             Last Modified: 02/11/2019       Submitted by: Tilman Wolf]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

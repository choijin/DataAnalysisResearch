<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>I-Corps:  Secure and efficient outsourcing of computation on private data</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2014</AwardEffectiveDate>
<AwardExpirationDate>02/28/2015</AwardExpirationDate>
<AwardTotalIntnAmount>50000.00</AwardTotalIntnAmount>
<AwardAmount>50000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rathindra DasGupta</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Given society's dependence on information technology, the commercial impact of a variety of cryptographic products is clear.  The proposed 'homomorphic'encrypton methods can help companies and individuals protect privacy of their data in various electronic interactions, especially those carried out in a shared public infrastructure such as a Cloud.  The I-Corps team's proposed cryptographic encryption methods provide the security for Cloud users at a lower computation cost (hence, faster and cheaper) than existing methods.  Some of the potential segments that can be served by this project are: (1) hospital and medical providers or medical insurance companies who do not have the resources to maintain their own data storage but want to do statistical analysis, process billing, etc; and (2) manufacturers of small devices that outsource  computations or storage to the cloud.&lt;br/&gt;&lt;br/&gt;This project addresses privacy issues in the Cloud. In this project, this team forwards cryptographic encryption software that can integrate with clients' specific needs in two main areas: cloud storage/computing and cloud computing with 'vanishing' key.  The main goal of this proposal is to explore new avenues and new approaches for the construction of homomorphic encryption, with the primary motivation of designing schemes that would be substantially more efficient than the known ones, and therefore would have practical and commercial value. This is not just a matter of improving the existing schemes but requires a totally new and different approach, one that could lead to further insights and understanding of this research field.</AbstractNarration>
<MinAmdLetterDate>05/05/2014</MinAmdLetterDate>
<MaxAmdLetterDate>05/05/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1439374</AwardID>
<Investigator>
<FirstName>Vladimir</FirstName>
<LastName>Shpilrain</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Vladimir Shpilrain</PI_FULL_NAME>
<EmailAddress>shpilrain@yahoo.com</EmailAddress>
<PI_PHON>2126505158</PI_PHON>
<NSF_ID>000220150</NSF_ID>
<StartDate>05/05/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Delaram</FirstName>
<LastName>Kahrobaei</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Delaram Kahrobaei</PI_FULL_NAME>
<EmailAddress>delaram.kahrobaei@cuny.edu</EmailAddress>
<PI_PHON>9174949798</PI_PHON>
<NSF_ID>000078754</NSF_ID>
<StartDate>05/05/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Kumar</FirstName>
<LastName>Ramaswamy</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kumar Ramaswamy</PI_FULL_NAME>
<EmailAddress>kumar.ramaswamy@igolgi.com</EmailAddress>
<PI_PHON>6093345978</PI_PHON>
<NSF_ID>000661050</NSF_ID>
<StartDate>05/05/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ha</FirstName>
<LastName>Lam</LastName>
<PI_MID_INIT>T</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ha T Lam</PI_FULL_NAME>
<EmailAddress>hlam@gc.cuny.edu</EmailAddress>
<PI_PHON>2128177523</PI_PHON>
<NSF_ID>000665227</NSF_ID>
<StartDate>05/05/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>CUNY New York City College of Technology</Name>
<CityName>Brooklyn</CityName>
<ZipCode>112012902</ZipCode>
<PhoneNumber>7182605560</PhoneNumber>
<StreetAddress>300 Jay Street</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>611930657</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION OF THE CITY UNIVERSITY OF NEW YORK</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>073268849</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[New York City College of Technology]]></Name>
<CityName>Brooklyn</CityName>
<StateCode>NY</StateCode>
<ZipCode>112012902</ZipCode>
<StreetAddress><![CDATA[300 Jay Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8023</Code>
<Text>I-Corps</Text>
</ProgramElement>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~50000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="page" title="Page 3"> <div class="section"> <div class="layoutArea"> <div class="column"> <p><span>Given society's dependence on information technology, the importance of a variety of&nbsp;cryptographic products is clear. Homomorphic encryption, in particular, can help companies and individuals protect the privacy of their data in various electronic interactions, especially those carried out in a shared public infrastructure such as a Cloud. In this project, we aimed to develop a homomorphic cryptographic encryption software that can integrate with client's particular need. </span></p> <p><span>The main avenue of applications right now is cloud storage/computing. The client can encrypt their data using our software API (Application Programming Interface), then send the data to any cloud storage/computing service provider (e.g. Amazon Web Services, Google Cloud Platform, etc). When they need to do a database query or computation, our software will translate the function's parameters into appropriate parameters for the encrypted data, then the client can utilize the cloud computing service to perform computation. Our software will then decrypt that computation result into the correct solution. The security feature here is that the client's data is stored encrypted on the cloud, so even if the cloud service provider is compromised, client's data is safe.&nbsp;</span></p> <div class="page" title="Page 4"> <div class="section"> <div class="layoutArea"> <div class="column"> <p><span>Currently, there are a few open source implementations of homomorphic encryption schemes based on number theoretic approaches like the IBM's HELib, Scarab, thep. However, benchmarking of HElib, which is the predominant software in the market, has shown it to be slow; on a typical desktop computer, with 128&shy;bit security, encryption of 21824 bits took 5 seconds, addition took 41874 microseconds and multiplication took 366714 microseconds. Our cryptographic primitives, based on ideas from combinatorial algebra, is orders of magnitude more efficient in their implementation and consume less memory. Furthermore, the homomorphic encryption methods used in all of the above protocols accumulate noise over time as computations are done on encrypted data; thus, recryption (also known&nbsp;</span>as bootstrapping), a process that produces the equivalent ciphertext but with no noise, has to be performed repeatedly. Recryption is an expensive procedure, its cost can only be balance with a decrease in the depth of the functions that can be computed on encrypted data. Our approach, on the other hand, does not produce noise, and hence there is no need for expensive recryption.&nbsp;</p> </div> </div> </div> </div> <p>&nbsp;</p> </div> </div> </div> </div> <p>&nbsp;</p><br> <p>            Last Modified: 05/20/2015<br>      Modified by: Delaram&nbsp;Kahrobaei</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[     Given society's dependence on information technology, the importance of a variety of cryptographic products is clear. Homomorphic encryption, in particular, can help companies and individuals protect the privacy of their data in various electronic interactions, especially those carried out in a shared public infrastructure such as a Cloud. In this project, we aimed to develop a homomorphic cryptographic encryption software that can integrate with client's particular need.   The main avenue of applications right now is cloud storage/computing. The client can encrypt their data using our software API (Application Programming Interface), then send the data to any cloud storage/computing service provider (e.g. Amazon Web Services, Google Cloud Platform, etc). When they need to do a database query or computation, our software will translate the function's parameters into appropriate parameters for the encrypted data, then the client can utilize the cloud computing service to perform computation. Our software will then decrypt that computation result into the correct solution. The security feature here is that the client's data is stored encrypted on the cloud, so even if the cloud service provider is compromised, client's data is safe.       Currently, there are a few open source implementations of homomorphic encryption schemes based on number theoretic approaches like the IBM's HELib, Scarab, thep. However, benchmarking of HElib, which is the predominant software in the market, has shown it to be slow; on a typical desktop computer, with 128&shy;bit security, encryption of 21824 bits took 5 seconds, addition took 41874 microseconds and multiplication took 366714 microseconds. Our cryptographic primitives, based on ideas from combinatorial algebra, is orders of magnitude more efficient in their implementation and consume less memory. Furthermore, the homomorphic encryption methods used in all of the above protocols accumulate noise over time as computations are done on encrypted data; thus, recryption (also known as bootstrapping), a process that produces the equivalent ciphertext but with no noise, has to be performed repeatedly. Recryption is an expensive procedure, its cost can only be balance with a decrease in the depth of the functions that can be computed on encrypted data. Our approach, on the other hand, does not produce noise, and hence there is no need for expensive recryption.                      Last Modified: 05/20/2015       Submitted by: Delaram Kahrobaei]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Cooperative Developer Testing with Test Intentions</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>364274.00</AwardTotalIntnAmount>
<AwardAmount>364274</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This award is funded under the American Recovery and Reinvestment Act of 2009 (Public Law 111-5).&lt;br/&gt;&lt;br/&gt;Developer testing has been widely recognized as an important and valuable means of improving software reliability, partly due to its capabilities of exposing faults early in the software development life cycle. However, manual developer testing is often tedious and insufficient. Testing tools can be used to enable economical use of resources by reducing manual effort. To maximize the value of developer testing, effective and efficient support for cooperation between developers and tools is greatly needed and yet lacking in state-of-the-art research and practice. &lt;br/&gt;&lt;br/&gt;This research aims to create a systematic framework for cooperative developer testing that provides practical techniques and tools, with an integrated research and education plan. In particular, the research addresses fundamental research questions around specification of test intentions by developers to communicate their testing goals or guidance to tools, satisfaction of test intentions by tools, and explanation of intention satisfaction by tools. Test-intention satisfaction and its explanation assist developers in accomplishing not only their testing tasks but also debugging tasks. The framework also helps infer likely test intentions to reduce manual effort in specification of test intentions. Among the broader impacts of the project includes improvement of software reliability and collaboration with industry to transfer technology.</AbstractNarration>
<MinAmdLetterDate>03/04/2014</MinAmdLetterDate>
<MaxAmdLetterDate>03/04/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1434596</AwardID>
<Investigator>
<FirstName>Tao</FirstName>
<LastName>Xie</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tao Xie</PI_FULL_NAME>
<EmailAddress>taoxie@illinois.edu</EmailAddress>
<PI_PHON>2172445931</PI_PHON>
<NSF_ID>000430850</NSF_ID>
<StartDate>03/04/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>CHAMPAIGN</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207473</ZipCode>
<StreetAddress><![CDATA[SUITE A 1901 SOUTH FIRST ST.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramElement>
<Code>8010</Code>
<Text>Computing in the Cloud</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~93274</FUND_OBLG>
<FUND_OBLG>2011~101000</FUND_OBLG>
<FUND_OBLG>2012~85000</FUND_OBLG>
<FUND_OBLG>2013~85000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The main goal of the project was to develop a systematic framework for cooperative developer testing that provides practical techniques and tools, with an integrated research and education plan. The project explores synergistic cooperation between developers and testing tools to achieve higher software reliability with lower cost.</p> <p>The outcomes of this project were a set of new techniques&nbsp;and tools for cooperative developer testing. The project advanced understanding of fundamental issues related to cooperation between developers and testing tools to achieve higher software reliability with lower cost. The project explored new approaches that reduce developers&rsquo; cooperation cost by improving tools&rsquo; automation capability and by reducing tools&rsquo; false warnings for seeking cooperation from developers.</p> <p>More specifically, we have developed techniques and tools that precisely identify and report problems that prevent the tools from achieving high structural coverage in order to reduce developers&rsquo; guidance efforts. We have developed techniques and tools that generate proper method sequences to construct desired objects as method parameters in object-oriented unit test generation. We have developed a methodology that retrofits existing conventional unit tests to parameterized unit tests in order to improve fault-detection capability and code coverage. We have developed techniques and tools that generate various cloud states for achieving effective testing of cloud applications. We have developed techniques and tools that predict loops of workload-dependent performance bottlenecks under large workloads to reduce developers&rsquo; inspection effort for performance testing. We have conducted characteristic studies to address loop problems for dynamic symbolic execution to improve tools&rsquo; testing effectiveness.</p> <p>We have collaborated with Microsoft Research on improving an automatic test generation tool called Pex (which was shipped as IntelliTest in the Microsoft Visual Studio 2015 Enterprise Edition). We have collaborated with Microsoft Research on Code Hunt, a serious gaming platform for coding contests and practicing programming skills. Since 2014, Code Hunt has been used by over 350,000 players as of August 2016.</p> <p>We have disseminated our research results through publications in top venues such as highly-competitive conferences and journals, along with public tool and evaluation-artifact releases and research exchanges. We have successfully trained next-generation researchers via student training and mentoring, and trained next-generation software engineers through undergraduate-level and graduate-level education.</p> <p>&nbsp;</p><br> <p>            Last Modified: 01/29/2017<br>      Modified by: Tao&nbsp;Xie</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The main goal of the project was to develop a systematic framework for cooperative developer testing that provides practical techniques and tools, with an integrated research and education plan. The project explores synergistic cooperation between developers and testing tools to achieve higher software reliability with lower cost.  The outcomes of this project were a set of new techniques and tools for cooperative developer testing. The project advanced understanding of fundamental issues related to cooperation between developers and testing tools to achieve higher software reliability with lower cost. The project explored new approaches that reduce developers? cooperation cost by improving tools? automation capability and by reducing tools? false warnings for seeking cooperation from developers.  More specifically, we have developed techniques and tools that precisely identify and report problems that prevent the tools from achieving high structural coverage in order to reduce developers? guidance efforts. We have developed techniques and tools that generate proper method sequences to construct desired objects as method parameters in object-oriented unit test generation. We have developed a methodology that retrofits existing conventional unit tests to parameterized unit tests in order to improve fault-detection capability and code coverage. We have developed techniques and tools that generate various cloud states for achieving effective testing of cloud applications. We have developed techniques and tools that predict loops of workload-dependent performance bottlenecks under large workloads to reduce developers? inspection effort for performance testing. We have conducted characteristic studies to address loop problems for dynamic symbolic execution to improve tools? testing effectiveness.  We have collaborated with Microsoft Research on improving an automatic test generation tool called Pex (which was shipped as IntelliTest in the Microsoft Visual Studio 2015 Enterprise Edition). We have collaborated with Microsoft Research on Code Hunt, a serious gaming platform for coding contests and practicing programming skills. Since 2014, Code Hunt has been used by over 350,000 players as of August 2016.  We have disseminated our research results through publications in top venues such as highly-competitive conferences and journals, along with public tool and evaluation-artifact releases and research exchanges. We have successfully trained next-generation researchers via student training and mentoring, and trained next-generation software engineers through undergraduate-level and graduate-level education.          Last Modified: 01/29/2017       Submitted by: Tao Xie]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>III: Medium: SimSQL: A Database System Supporting Implementation and Execution of Distributed Machine Learning Codes</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>03/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>1200000.00</AwardTotalIntnAmount>
<AwardAmount>1200000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sylvia Spengler</SignBlockName>
<PO_EMAI>sspengle@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Statistical machine learning (ML) is a commonly-applied framework for analyzing very large data sets. In statistical ML, the goal is to learn a statistical model that can be used to understand the data, find patterns, or make predictions.  Thus, many new software systems have been designed to support easy implementation and fast execution of parallel/distributed ML computer codes over large data sets.  Almost all of those systems are "non-relational" in the sense that they utilize data and programming models that are very different from today's relational database management systems.  Still, the attractiveness of the relational or database-oriented approach to data processing persists. For example, codes running on top of a database are declarative, so a programmer need only be concerned with what he or she wants, and not how to obtain it. This makes it easier to write codes and get them to run in a distributed environment, enabling a strong separation between the code and the database data processing algorithms, storage, hardware, and indexing, and even from the database schema.  Further, much of the world's structured data sits in relational databases, and extracting anything more than a small subsample of a large data set for external use is typically a non-starter. Being able to execute a ML inference code within the database, using the database engine, would greatly increase applicability of statistical ML.  &lt;br/&gt;&lt;br/&gt;This project will perform the fundamental research necessary to make ML-in-the-database a mature technology. All of the ideas developed by the project will be prototyped, evaluated, and distributed within the context of SimSQL, which is a parallel, relational database system, augmented with the ability to perform "stochastic analytics". This means that SimSQL has special facilities that allow a user to define special database tables that have simulated data---these are data that are not actually stored in the database, but are produced by calls to statistical distributions.  Since tables of simulated data in SimSQL can have such recursive dependencies, it is easy to use SimSQL to run stochastic ML inference algorithms (such as MCMC) over "Big Data". Research tasks include increasing the level of performance of SimSQL by exploiting the optimization opportunities presented by large-scale, iterative, ML computations. They also include expanding the types of ML inference algorithms that can easily be specified in SimSQL's SQL dialect, making SimSQL applicable for various stochastic inference algorithms such as MCMC (Markov Chain Monte Carlo) and Monte Carlo EM (Expectation Maximization). Further, the project will investigate automatically compiling R and BUGS-like ML algorithm specifications into SimSQL SQL. All of the software developed by the project will be available open source under the Apache license.  The code can be downloaded from (and more information can be found at) http://cmj4.web.rice.edu/SimSQL/SimSQL.html</AbstractNarration>
<MinAmdLetterDate>08/11/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/23/2019</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1409543</AwardID>
<Investigator>
<FirstName>Christopher</FirstName>
<LastName>Jermaine</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Christopher M Jermaine</PI_FULL_NAME>
<EmailAddress>Christopher.m.jermaine@rice.edu</EmailAddress>
<PI_PHON>7133483028</PI_PHON>
<NSF_ID>000439407</NSF_ID>
<StartDate>08/11/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>William Marsh Rice University</Name>
<CityName>Houston</CityName>
<ZipCode>770051827</ZipCode>
<PhoneNumber>7133484820</PhoneNumber>
<StreetAddress>6100 MAIN ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>050299031</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WILLIAM MARSH RICE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>050299031</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[William Marsh Rice University]]></Name>
<CityName>Houston</CityName>
<StateCode>TX</StateCode>
<ZipCode>770051827</ZipCode>
<StreetAddress><![CDATA[6100 Main St]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~1200000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Over the life of the SimSQL project, machine learning has become more and more widely-used in both science and industry. While there exist popular computing systems to support machine learning (such as TensorFlow and PyTorch) these systems do not scale well, either in terms of supporting very large machine learning models, or in terms of supporting computations over large clusters of computers, or in terms of supporting learning over the largest data sets. In contrast, the SimSQL project has shown that, with a few minor design changes, a relational database system can be an excellent platform for large-scale machine learning. We have shown that common machine learning computations can easily be mapped to database computations. We have shown how a database can be modified to support the sort of "looping" computations that are ubiquitous in modern machine learning (such as gradient descent) where a data set is repeatedly processed to increase the model accuracy. And we have shown how database query optimization methods can be used to automatically choose how to partition very large data sets or very large models over sets of computers to facilitate efficient learning. We believe that the project findings will change how machine learning systems are constructed in the future, as database-style design choices and optimizations will be built into future machine learning systems.&nbsp;</p><br> <p>            Last Modified: 07/27/2020<br>      Modified by: Christopher&nbsp;M&nbsp;Jermaine</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Over the life of the SimSQL project, machine learning has become more and more widely-used in both science and industry. While there exist popular computing systems to support machine learning (such as TensorFlow and PyTorch) these systems do not scale well, either in terms of supporting very large machine learning models, or in terms of supporting computations over large clusters of computers, or in terms of supporting learning over the largest data sets. In contrast, the SimSQL project has shown that, with a few minor design changes, a relational database system can be an excellent platform for large-scale machine learning. We have shown that common machine learning computations can easily be mapped to database computations. We have shown how a database can be modified to support the sort of "looping" computations that are ubiquitous in modern machine learning (such as gradient descent) where a data set is repeatedly processed to increase the model accuracy. And we have shown how database query optimization methods can be used to automatically choose how to partition very large data sets or very large models over sets of computers to facilitate efficient learning. We believe that the project findings will change how machine learning systems are constructed in the future, as database-style design choices and optimizations will be built into future machine learning systems.        Last Modified: 07/27/2020       Submitted by: Christopher M Jermaine]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

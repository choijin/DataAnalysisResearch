<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:  Software Sustainability: an SI^2 PI Workshop</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/15/2014</AwardEffectiveDate>
<AwardExpirationDate>12/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>66224.00</AwardTotalIntnAmount>
<AwardAmount>66224</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Daniel Katz</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This award will support a 1.5 day workshop in Arlington, VA to bring together the community of SI2 awardees with the aims of: 1) serving as a forum for focused PI technical exchange, through an early evening poster session; 2) serving as a forum for discussion of topics of relevance to the PIs from topics emerging both from within NSF and from the broader community, by informing the attendees of emerging best practices, and stimulating thinking on new ways of achieving sustainability and of ensuring that the foundation laid by SI2 is preserved into the future; and 3) gathering experiences and a shared sense of best practice that results in a published workshop report.&lt;br/&gt; &lt;br/&gt;The workshop will bring together researchers who are a proto-community of NSF open source software developers. The meeting will examine the characteristics of the community, and consider whether the products from the program can be enhanced by giving the community a new identify and new way of looking at itself. The meeting will also address citation, attribution, and reproducibility, which are three related topics often discussed in the context of data, but less so in the context of software. The attendees will consider practical steps that could be taken to advance software citation and science reproducibility. Finally, sustainability of software is a major topic for NSF and for the SI2 PIs. The meeting will highlight new ways of thinking about software sustainability, drawing on experts in the field and on recent SI2 EAGER funded projects that are studying the community to help the workshop attendees in their thinking about sustainability.&lt;br/&gt;&lt;br/&gt;The community outputs of the workshop will be: posters developed by the SI2 PIs that will be shared amongst the attendees and shared more broadly on the workshop web site; an experiences report (licensed under a Creative Commons license) produced by the award PIs, distributed via the workshop web site, via email to participants who will be asked to disseminate among their project colleagues and peers, and via an archive repository through which it will be accessible through a persistent ID; and attendee journalism during the event in the form of a public Google doc and public Twitter stream.</AbstractNarration>
<MinAmdLetterDate>01/13/2014</MinAmdLetterDate>
<MaxAmdLetterDate>01/13/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1419131</AwardID>
<Investigator>
<FirstName>Beth</FirstName>
<LastName>Plale</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Beth Plale</PI_FULL_NAME>
<EmailAddress>plale@cs.indiana.edu</EmailAddress>
<PI_PHON>8128554373</PI_PHON>
<NSF_ID>000334472</NSF_ID>
<StartDate>01/13/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Indiana University</Name>
<CityName>Bloomington</CityName>
<ZipCode>474013654</ZipCode>
<PhoneNumber>3172783473</PhoneNumber>
<StreetAddress>509 E 3RD ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>006046700</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF INDIANA UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>006046700</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Indiana University]]></Name>
<CityName>bloomington</CityName>
<StateCode>IN</StateCode>
<ZipCode>474083912</ZipCode>
<StreetAddress><![CDATA[919 E. 10th St]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>7556</Code>
<Text>CONFERENCE AND WORKSHOPS</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~66224</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-c16a6470-725d-875d-1c2d-579785f4a206"> </span></p> <p dir="ltr"><span>Software in Science: &nbsp;a Report of Outcomes of the 2014 SI</span><span>2</span><span> PI Meeting</span></p> <p>&nbsp;</p> <p><span id="docs-internal-guid-c16a6470-725d-dd24-81b4-36a5d2bc95ed"> </span></p> <h3 dir="ltr">The second annual NSF Software Infrastructure for Sustained Innovation (SI2) PI meeting took place in Arlington, VA February 24-25, 2014. &nbsp;It was hosted by Beth Plale, Indiana University; Douglas Thain, University of Notre Dame; and Matt Jones, National Center for Ecological Analysis and Synthesis.</h3> <p>&nbsp;</p> <p><span id="docs-internal-guid-c16a6470-7261-2bad-d50e-93e53b650381"><span>As stated in <span id="docs-internal-guid-c16a6470-7261-8f10-61fb-91368c442848"><span>http://www.nsf.gov/pubs/2012/nsf12113/nsf12113.pdf, "s</span></span>oftware is fundamentally computer code. [...] Software must be reliable robust, and secure; able to produce trustable and reproducible scientific results; yet its architecture must be flexible enough to easily incorporate new scientific algorithms, new capabilities, and new opportunities provided by emerging technologies. &nbsp;Software also must be supported, maintained, developed and eventually replaced in part or in entirety, over its lifecycle."</span><span> </span></span></p> <p><span><span>The workshop identified challenges around the role and use of software in scientific research, and suggested ways forward. &nbsp;The workshop focused on four major topics: &nbsp; &nbsp;i) <strong>Attribution and Citation:</strong> &nbsp;<span id="docs-internal-guid-c16a6470-7264-bc3d-6123-61cabd5b8561"><span>How do software developers who create software that is used in and advances scientific research get credit for their products, parts of which could advance understanding in computer science as well? &nbsp;How is the impact and intellectual contribution of software developers measured? &nbsp;ii) Reproducibiilty, reusabiity, and preservation: &nbsp;<span id="docs-internal-guid-c16a6470-7266-8713-cc0d-54c38ff5eda5"><span>Software plays a central role in the long term repeatability and reproducibility of computationally-based science. &nbsp;But the mechanisms and best practices for handling the long term availability and usability of software that contributed, for instance to an important Nature article 20 years ago, are still in the early stages of development. &nbsp;iii) Sustainability: &nbsp;<span id="docs-internal-guid-c16a6470-7268-e7aa-9128-4c6a15f97bcd"><span>The long term availability of software that is still serving a useful purpose in scientific and scholarly research is an ongoing issue largely because much of the software developed for science use is grant funded. Additionally, software that is developed by domain experts who are able to write software but have not had formal training in software engineering can result in software that is hard to understand and maintain.</span></span>&nbsp;The workshop report presents several options for long term sustainability of research software. &nbsp;</span></span></span></span></span></span></p> <p><span><span><span id="docs-internal-guid-c16a6470-7264-bc3d-6123-61cabd5b8561"><span><span id="docs-internal-guid-c16a6470-7266-8713-cc0d-54c38ff5eda5"><span>Finally, the workshop considered the career trajectories of research programmers in academic and institutional research settings. &nbsp;</span></span></span></span></span></span>The research programmer is a software developer works in an academic or lab setting and develops software that is used in support of science and scholarship. &nbsp;The academic or lab setting may be oriented to software innovation, but is more likely oriented to non-IT research. The path that an individual takes to find themselves in the research programmer role is varied: &nbsp;&nbsp;1) He or she may come out of a science discipline and ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Software in Science:  a Report of Outcomes of the 2014 SI2 PI Meeting       The second annual NSF Software Infrastructure for Sustained Innovation (SI2) PI meeting took place in Arlington, VA February 24-25, 2014.  It was hosted by Beth Plale, Indiana University; Douglas Thain, University of Notre Dame; and Matt Jones, National Center for Ecological Analysis and Synthesis.     As stated in http://www.nsf.gov/pubs/2012/nsf12113/nsf12113.pdf, "software is fundamentally computer code. [...] Software must be reliable robust, and secure; able to produce trustable and reproducible scientific results; yet its architecture must be flexible enough to easily incorporate new scientific algorithms, new capabilities, and new opportunities provided by emerging technologies.  Software also must be supported, maintained, developed and eventually replaced in part or in entirety, over its lifecycle."   The workshop identified challenges around the role and use of software in scientific research, and suggested ways forward.  The workshop focused on four major topics:    i) Attribution and Citation:  How do software developers who create software that is used in and advances scientific research get credit for their products, parts of which could advance understanding in computer science as well?  How is the impact and intellectual contribution of software developers measured?  ii) Reproducibiilty, reusabiity, and preservation:  Software plays a central role in the long term repeatability and reproducibility of computationally-based science.  But the mechanisms and best practices for handling the long term availability and usability of software that contributed, for instance to an important Nature article 20 years ago, are still in the early stages of development.  iii) Sustainability:  The long term availability of software that is still serving a useful purpose in scientific and scholarly research is an ongoing issue largely because much of the software developed for science use is grant funded. Additionally, software that is developed by domain experts who are able to write software but have not had formal training in software engineering can result in software that is hard to understand and maintain. The workshop report presents several options for long term sustainability of research software.    Finally, the workshop considered the career trajectories of research programmers in academic and institutional research settings.  The research programmer is a software developer works in an academic or lab setting and develops software that is used in support of science and scholarship.  The academic or lab setting may be oriented to software innovation, but is more likely oriented to non-IT research. The path that an individual takes to find themselves in the research programmer role is varied:   1) He or she may come out of a science discipline and have taken an interest in technology so acquired software development skills.  These people have strong discipline knowledge, but do work that is of a software nature.  2) The person may come out of an informatics background, and have been trained in both discipline and computer science skills (e.g., the "bioinformatics" person).  3) The person may have come out of a computer science background, and have acquired enough expertise in one or a small number of science disciplines to be effective.  Regardless of how they got there, the data science research programmer is characterized by being one in an academic or lab setting where he/she architects, develops software and tools in support of science and scholarship.   The career of the  research programmer is frequently not stable over the long term.  Labs are grant funded, this person often does not hold a tenure track position, and may not even be a research faculty member (which may include a small commitment to providing bridge support should grant funding hit a dry spell.)    Coupled with this, the incentives for this career path are not well struc...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

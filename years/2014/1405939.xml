<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>II-New: A Cluster of Nodes with 32 Cores and 256-GB Memory to Enable Many-Core Systems Research and Education</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>286300.00</AwardTotalIntnAmount>
<AwardAmount>286300</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Research and education in many-core computing systems are of importance to the NSF CRI program as well as to the research community. This project targets performance, energy consumption, and scalability of many-core systems, which are important for the computer industry. The team is committed to releasing the research artifacts of the project as open-source software to be used by the research community as well.  This project will benefit graduate student research and help educational activities in undergraduate and graduate curricula. The project will support outreach activities sponsored by various centers at Purdue University via the involvement of the team in Purdue Computing Research Institute's High Performance Computing workshops, for example.&lt;br/&gt;&lt;br/&gt;This infrastructure will support research and education efforts in multiple areas: computer architecture, compilers, high-performance cloud computing, and run-times for managed languages. Computer architects will explore optimizations for performance, programmability and power of many-core architectures, on-chip networks, and disk optimizations. Compiler writers will explore shared memory optimizations and their scalability targeting shared-memory applications for distributed memory machines, and techniques to transform seemingly irregular memory access patterns into regular and parallel computations and memory accesses. Run-time researchers will pursue parallel garbage collection of large garbage-collected heaps and associated scalability issues. High performance computing researchers will explore the performance overhead of virtualization and cloud computing for cluster workloads, along with mechanisms for reducing overhead.</AbstractNarration>
<MinAmdLetterDate>07/31/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/31/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1405939</AwardID>
<Investigator>
<FirstName>Antony</FirstName>
<LastName>Hosking</LastName>
<PI_MID_INIT>L</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Antony L Hosking</PI_FULL_NAME>
<EmailAddress>hosking@cs.umass.edu</EmailAddress>
<PI_PHON>7654163068</PI_PHON>
<NSF_ID>000107257</NSF_ID>
<StartDate>07/31/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>T.</FirstName>
<LastName>Vijaykumar</LastName>
<PI_MID_INIT>N</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>T. N Vijaykumar</PI_FULL_NAME>
<EmailAddress>vijay@ecn.purdue.edu</EmailAddress>
<PI_PHON>7654940592</PI_PHON>
<NSF_ID>000337724</NSF_ID>
<StartDate>07/31/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Vijay</FirstName>
<LastName>Pai</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Vijay S Pai</PI_FULL_NAME>
<EmailAddress>vpai@purdue.edu</EmailAddress>
<PI_PHON>7654966610</PI_PHON>
<NSF_ID>000184842</NSF_ID>
<StartDate>07/31/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Mithuna</FirstName>
<LastName>Thottethodi</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mithuna S Thottethodi</PI_FULL_NAME>
<EmailAddress>mithuna@purdue.edu</EmailAddress>
<PI_PHON>7654944600</PI_PHON>
<NSF_ID>000253970</NSF_ID>
<StartDate>07/31/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Milind</FirstName>
<LastName>Kulkarni</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Milind Kulkarni</PI_FULL_NAME>
<EmailAddress>milind@purdue.edu</EmailAddress>
<PI_PHON>7654941742</PI_PHON>
<NSF_ID>000549148</NSF_ID>
<StartDate>07/31/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName/>
<StateCode>IN</StateCode>
<ZipCode>479072017</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7359</Code>
<Text>CCRI-CISE Cmnty Rsrch Infrstrc</Text>
</ProgramElement>
<ProgramReference>
<Code>7359</Code>
<Text>COMPUTING RES INFRASTRUCTURE</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~286300</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>This project includes</span>&nbsp;research and education efforts in computer architecture, compilers, run-times for managed languages, and distributed systems. The architecture research explore optimizations for performance, programmability and power of multicores, many-core architectures, and datacenters. The compiler writers explore techniques to transform seemingly irregular memory access patterns into regular and parallel computations and memory accesses. The run-time researchers pursue parallel garbage collection of large garbage-collected heaps and associated scalability issues. Specific efforts and their significant results are:&nbsp;</p> <ul> <li>&nbsp;unscaling of clock frequency to tackle slowing of Dennard's Scaling; 15% throughput improvement in many-core systems where voltage scaling has stopped (exceeding previously published "dark silicon performance limit"),</li> <li>exploiting value locality for soft-error tolerance; 75% soft-error coverage at 10% performance and 25% power overheads whereas redundancy-based schemes incur 80% power overhead,</li> <li>a&nbsp; novel 3-D cache architecture to reduce on-chip tag overhead while converting 3-D bandwidth advantage into performance; for under 1-MB of on-chip overhead, our&nbsp; 256-MB 3-D &nbsp;DRAM cache performs 15% better than the best previous design with similar on-chip tag.</li> <li>a novel cost-effective distributed system architecture for causal consistency; reduce the &nbsp;cost of a causally-consistent geo-replicated data store by 28-37% via partial replication while achieving the same performance as full replication,&nbsp;</li> <li>power and performance optimization of MapReduce via stratified sampling; improve average MapReduce perrformance by 40% while maintaining per-key error within 1%,</li> <li>optimizing datacenter power by exploiting latency tail in online data intensive applications; reduce datacenter energy by&nbsp;15% and 40% at 90% and 30% datacenter loading,</li> <li>a novel processing-near-memory (PNM) architectures for Big Data Machine learning;&nbsp;<span>improves performance and energy over GPGPU and a "sea of simple MIMD cores", respectively,&nbsp; by 145% and 20% and 37% and 34%&nbsp;</span><span>&nbsp;when all the three architectures have the same number of cores, on-die memory, and die-stacked bandwidth.&nbsp;</span></li> <li>addressing message buffer management and flow control for RDMA in datacenters;&nbsp;Our RDMA architecture either reduces buffer memory by three orders of magnitude under little programmer effort or achieves same buffer memory at much less programmer burden,</li> <li><span><span>implementing nested transactions for Java; our XJ prototype achieves good performance,&nbsp;</span><br /></span></li> <li><span>multicore scaling for garbage collection;&nbsp;<span>our&nbsp; implementation achieves scalable perofrmance,</span></span></li> <li><span><span><span>development of the machine-checked proof for a real-time concurrent collector, allowing parallelized execution of the proof script,</span><br /></span></span></li> <li><span><span><span><span>scalable global routing for HPC; achieves s<span>calable, global, Optimal-bandwidth via application-specific routing,&nbsp;</span></span><br /></span></span></span></li> <li><span><span><span>optimizing off-chip traffic of convolutional neural networks (CNNs) via&nbsp; a novel tiling strategy;&nbsp;<span>provably-optimal tiling for CNNs using a given on-chip cache capacity (2-10x fewer off-chip misses), and&nbsp;</span><br /></span></span></span></li> <li><span><span><span><span><span>new compiler optimizations of irregular applications led to performance improvements of up to 10x on data mining applications, and 70% for tree traversal applications like compiler passes.&nbsp;</span><br /></span></span></span></span></li> </ul> <p><span>This infrastructure has supported &nbsp;the &nbsp;research of more than eight graduate students who are being trained in one or more of computer architecture, compilers, distributed systems, and runtime systems via the above-mentioned efforts.&nbsp;&nbsp;<span>As part of their 'senior design project', an undergraduate team of four developed a DNN (deep neural network) based software infrastructure to automatically track student attendance in classrooms. The analysis of the large dataset for training and evaluation was facilitated by the CRI infrastructure. We expect continued participation of undergraduate students in this activity over the next few semesters.&nbsp;</span></span></p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/06/2017<br>      Modified by: T.&nbsp;N&nbsp;Vijaykumar</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project includes research and education efforts in computer architecture, compilers, run-times for managed languages, and distributed systems. The architecture research explore optimizations for performance, programmability and power of multicores, many-core architectures, and datacenters. The compiler writers explore techniques to transform seemingly irregular memory access patterns into regular and parallel computations and memory accesses. The run-time researchers pursue parallel garbage collection of large garbage-collected heaps and associated scalability issues. Specific efforts and their significant results are:    unscaling of clock frequency to tackle slowing of Dennard's Scaling; 15% throughput improvement in many-core systems where voltage scaling has stopped (exceeding previously published "dark silicon performance limit"), exploiting value locality for soft-error tolerance; 75% soft-error coverage at 10% performance and 25% power overheads whereas redundancy-based schemes incur 80% power overhead, a  novel 3-D cache architecture to reduce on-chip tag overhead while converting 3-D bandwidth advantage into performance; for under 1-MB of on-chip overhead, our  256-MB 3-D  DRAM cache performs 15% better than the best previous design with similar on-chip tag. a novel cost-effective distributed system architecture for causal consistency; reduce the  cost of a causally-consistent geo-replicated data store by 28-37% via partial replication while achieving the same performance as full replication,  power and performance optimization of MapReduce via stratified sampling; improve average MapReduce perrformance by 40% while maintaining per-key error within 1%, optimizing datacenter power by exploiting latency tail in online data intensive applications; reduce datacenter energy by 15% and 40% at 90% and 30% datacenter loading, a novel processing-near-memory (PNM) architectures for Big Data Machine learning; improves performance and energy over GPGPU and a "sea of simple MIMD cores", respectively,  by 145% and 20% and 37% and 34%  when all the three architectures have the same number of cores, on-die memory, and die-stacked bandwidth.  addressing message buffer management and flow control for RDMA in datacenters; Our RDMA architecture either reduces buffer memory by three orders of magnitude under little programmer effort or achieves same buffer memory at much less programmer burden, implementing nested transactions for Java; our XJ prototype achieves good performance,   multicore scaling for garbage collection; our  implementation achieves scalable perofrmance, development of the machine-checked proof for a real-time concurrent collector, allowing parallelized execution of the proof script,  scalable global routing for HPC; achieves scalable, global, Optimal-bandwidth via application-specific routing,   optimizing off-chip traffic of convolutional neural networks (CNNs) via  a novel tiling strategy; provably-optimal tiling for CNNs using a given on-chip cache capacity (2-10x fewer off-chip misses), and   new compiler optimizations of irregular applications led to performance improvements of up to 10x on data mining applications, and 70% for tree traversal applications like compiler passes.     This infrastructure has supported  the  research of more than eight graduate students who are being trained in one or more of computer architecture, compilers, distributed systems, and runtime systems via the above-mentioned efforts.  As part of their 'senior design project', an undergraduate team of four developed a DNN (deep neural network) based software infrastructure to automatically track student attendance in classrooms. The analysis of the large dataset for training and evaluation was facilitated by the CRI infrastructure. We expect continued participation of undergraduate students in this activity over the next few semesters.                    Last Modified: 11/06/2017       Submitted by: T. N Vijaykumar]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

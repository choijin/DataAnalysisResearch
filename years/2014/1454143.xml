<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>I-Corps:  Formal Specification Driven Verification and Validation Framework for Cyber-Physical Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>02/28/2015</AwardExpirationDate>
<AwardTotalIntnAmount>50000.00</AwardTotalIntnAmount>
<AwardAmount>50000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rathindra DasGupta</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Designing software for cyberphysical systems (CPS), such as modern airplanes, automobiles, and medical devices, using the software development tools available today is a challenge.  The software may be distributed with real time constraints and must interact with the physical environment in non-trivial ways. Multiple known accidents involving safety critical systems reinforce the need for testing and verification tools that provide a guaranteed level of confidence in the system correctness and robustness. As safety-critical CPS become ubiquitous, the need for design methods that guarantee correct system functionality and performance becomes more urgent. This project results in software tools for testing, verification and validation of complex CPS.&lt;br/&gt;&lt;br/&gt;This project aims to commercialize the academic tool S-TaLiRo, a software tool for the verification and testing of Cyber-Physical Systems (CPS). S-Taliro provides such capabilities by enabling automatic test generation and verification guided by formal specifications expressed in temporal logics. It can analyze large and complex Simulink models, user-defined functions and blackbox models. S-Taliro provides functionality for specification falsification, parameter estimation, conformance testing and runtime specification monitoring. Moreover, due to the modular architecture, S-Taliro can be extended to add further functionality in support of model-based design (MBD) processes. At its current prototype stage, S-Taliro can be integrated in Matlab/Simulink provided by Mathworks.</AbstractNarration>
<MinAmdLetterDate>08/03/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/03/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1454143</AwardID>
<Investigator>
<FirstName>Georgios</FirstName>
<LastName>Fainekos</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Georgios Fainekos</PI_FULL_NAME>
<EmailAddress>fainekos@asu.edu</EmailAddress>
<PI_PHON>4809655479</PI_PHON>
<NSF_ID>000542660</NSF_ID>
<StartDate>08/03/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Arizona State University</Name>
<CityName>TEMPE</CityName>
<ZipCode>852816011</ZipCode>
<PhoneNumber>4809655479</PhoneNumber>
<StreetAddress>ORSPA</StreetAddress>
<StreetAddress2><![CDATA[660 South Mill Avenue, Suite 310]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<StateCode>AZ</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>AZ09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>943360412</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>ARIZONA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>806345658</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Arizona State University]]></Name>
<CityName>Tempe</CityName>
<StateCode>AZ</StateCode>
<ZipCode>852876011</ZipCode>
<StreetAddress><![CDATA[P.O. Box 876011]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>AZ09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8023</Code>
<Text>I-Corps</Text>
</ProgramElement>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~50000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><br />Nowadays, embedded computing devices can be found in a variety of new systems that interact with the physical world. Automobiles, locomotives, aerospace systems, medical devices, manufacturing systems and robotics are all prime examples of such systems which are usually referred to as Cyber-Physical Systems (CPS). The benefits of embedding computational intelligence in our critical infrastructure and devices are overwhelming: improved levels of system efficiency, safety, cost reduction, customization and usability. These smart devices are becoming a reality through complex software. As the embedded intelligence increases so does the complexity of the software. As the complexity of the software increases so do the design and programming errors.&nbsp;</p> <p>CPS pose additional challenges over traditional software/hardware based systems. That is, humans cannot easily predict how the complex software/hardware interacts with the physical environment. The consequences are ominous. Both the automotive and the medical device industries issue multiple software-related recalls on a yearly basis. Many of these recalls can lead to life threatening situations. Examples range from cruise control systems that do not disengage under certain operating conditions to infusion pumps that may overdose patients.</p> <p>Safety critical systems must be accompanied by requirements and correctness specifications. Based on our previously NSF funded research, we have developed fully automatic test generation and verification methods for CPS using such specifications for guiding the test generation process. The test generation framework proved to be a success when applied to numerous applications ranging from automotive systems to medical devices. Our results have been implemented in the academic software tool called S-TaLiRo:&nbsp;</p> <p>https://sites.google.com/a/asu.edu/s-taliro/&nbsp;</p> <p>The development of a well maintained software toolbox gave the opportunity to few industrial collaborators to experiment with S-TaLiRo on real systems under development. In turn, this led us to believe that there can be a market for our software tools in the safety critical systems industry.&nbsp;</p> <p>Under funding and mentorship from the I-Corps program, we were able to investigate the needs of the market in testing and verification technologies. We contacted 90 interviews with various representatives from the industry and academia. There were two main outcomes from this process. First, the interviews indicated that the current needs in testing and verification in the safety critical systems domain are not met by existing products. Second, the team was able to identify new problems of interest to the industry and expand its research directions accordingly. The process of discovering the actual needs of the industry in terms of challenging unsolved problems could only have been possible through the training received from the I-Corps program. Based on the positive feedback, the team is now exploring the possibility of establishing a startup.</p> <p>Beyond the potential impact of this work on the safety-critical systems industry, the I-Corps training will also have impact on the PI's educational activities. The PI regularly mentors undergraduate students through capstone projects, honors projects and REU projects. Many of the students have entrepreneurial spirit and pursuits. The PI feels that the I-Corps experience will help the PI in mentoring undergraduate students toward such activities.</p> <p><br /><br /></p><br> <p>            Last Modified: 05/21/2015<br>      Modified by: Georgios&nbsp;Fainekos</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Nowadays, embedded computing devices can be found in a variety of new systems that interact with the physical world. Automobiles, locomotives, aerospace systems, medical devices, manufacturing systems and robotics are all prime examples of such systems which are usually referred to as Cyber-Physical Systems (CPS). The benefits of embedding computational intelligence in our critical infrastructure and devices are overwhelming: improved levels of system efficiency, safety, cost reduction, customization and usability. These smart devices are becoming a reality through complex software. As the embedded intelligence increases so does the complexity of the software. As the complexity of the software increases so do the design and programming errors.   CPS pose additional challenges over traditional software/hardware based systems. That is, humans cannot easily predict how the complex software/hardware interacts with the physical environment. The consequences are ominous. Both the automotive and the medical device industries issue multiple software-related recalls on a yearly basis. Many of these recalls can lead to life threatening situations. Examples range from cruise control systems that do not disengage under certain operating conditions to infusion pumps that may overdose patients.  Safety critical systems must be accompanied by requirements and correctness specifications. Based on our previously NSF funded research, we have developed fully automatic test generation and verification methods for CPS using such specifications for guiding the test generation process. The test generation framework proved to be a success when applied to numerous applications ranging from automotive systems to medical devices. Our results have been implemented in the academic software tool called S-TaLiRo:   https://sites.google.com/a/asu.edu/s-taliro/   The development of a well maintained software toolbox gave the opportunity to few industrial collaborators to experiment with S-TaLiRo on real systems under development. In turn, this led us to believe that there can be a market for our software tools in the safety critical systems industry.   Under funding and mentorship from the I-Corps program, we were able to investigate the needs of the market in testing and verification technologies. We contacted 90 interviews with various representatives from the industry and academia. There were two main outcomes from this process. First, the interviews indicated that the current needs in testing and verification in the safety critical systems domain are not met by existing products. Second, the team was able to identify new problems of interest to the industry and expand its research directions accordingly. The process of discovering the actual needs of the industry in terms of challenging unsolved problems could only have been possible through the training received from the I-Corps program. Based on the positive feedback, the team is now exploring the possibility of establishing a startup.  Beyond the potential impact of this work on the safety-critical systems industry, the I-Corps training will also have impact on the PI's educational activities. The PI regularly mentors undergraduate students through capstone projects, honors projects and REU projects. Many of the students have entrepreneurial spirit and pursuits. The PI feels that the I-Corps experience will help the PI in mentoring undergraduate students toward such activities.           Last Modified: 05/21/2015       Submitted by: Georgios Fainekos]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

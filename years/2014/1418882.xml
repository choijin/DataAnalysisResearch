<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Multiple preconditioners for saddle-point and other problems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Leland Jameson</SignBlockName>
<PO_EMAI>ljameson@nsf.gov</PO_EMAI>
<PO_PHON>7032924883</PO_PHON>
</ProgramOfficer>
<AbstractNarration>There are many problems in science and engineering where one deals with two completely different phenomena, but these two phenomena influence one another (or one influences the other). One example of this situation is fluid flow along two different kinds of media. One flow is free, as in water in a river, and the other is constrained by some porous media, as the fluid seeping through below the river bed. When one tries to describe these physical phenomena, one needs to use very different equations for each of the two, in addition to taking into account what happens in their interphase. In this project, the PI shall study the solution of systems of equations of the kind just described. The PI shall combine solution techniques developed for each of the two phenomena, so that the resulting combination gives us an efficient computational tool.&lt;br/&gt;&lt;br/&gt;Among the phenomena to which the PI wants to contribute better modeling and solution techniques is the so-called coupled Stokes-Darcy flow, with the differential equations discretized by finite elements, and in particular by discontinuous Galerkin in the Darcy region. The PI proposes to use new exact and inexact constraint-type (indefinite) preconditioners. The PI will study spectral (and field-of-values) equivalence bounds, which should provide mesh independence bounds on the GMRES convergence for these problems of saddle-point type. Multipreconditioning is another tool that the PI wants to develop for the solution of saddle-point and other problems. In the case of Multipreconditioned GMRES, the PI proposes to provide convergence analysis through the use of multivariate polynomials. In this approach, at each iteration, the method computes in an implicit manner the optimal combination of two preconditioners. For certain saddle-point problems this dynamical combination preconditioning is expected to be more efficient than either of the two original preconditioners.</AbstractNarration>
<MinAmdLetterDate>08/22/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/03/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1418882</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Szyld</LastName>
<PI_MID_INIT>B</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel B Szyld</PI_FULL_NAME>
<EmailAddress>szyld@temple.edu</EmailAddress>
<PI_PHON>2152047288</PI_PHON>
<NSF_ID>000188306</NSF_ID>
<StartDate>08/22/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Temple University</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191226003</ZipCode>
<PhoneNumber>2157077547</PhoneNumber>
<StreetAddress>1801 N. Broad Street</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>057123192</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TEMPLE UNIVERSITY-OF THE COMMONWEALTH SYSTEM OF HIGHER EDUCATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>057123192</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Temple University]]></Name>
<CityName>Philadelphia</CityName>
<StateCode>PA</StateCode>
<ZipCode>191226027</ZipCode>
<StreetAddress><![CDATA[1938 Liacouras Walk]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1271</Code>
<Text>COMPUTATIONAL MATHEMATICS</Text>
</ProgramElement>
<ProgramReference>
<Code>9263</Code>
<Text>COMPUTATIONAL SCIENCE &amp; ENGING</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~50000</FUND_OBLG>
<FUND_OBLG>2015~48611</FUND_OBLG>
<FUND_OBLG>2016~51389</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>When the river bed is composed of pebbles, for example, the flow of water has two parts: the free flow, and the flow below the bottom, which is called a porous medium. This flow is described in each of these two parts by two different equations, and there is a third equation connecting these two, corresponding to the interface. This situation is called a Stokes-Darcy flow (since the free flow is described by the Stokes equations, and the flow through the porous medium is called the Darcy flow). These equations, when discretized, together with the interface condition form what is called a saddle point problem. To efficiently solve this problem one needs a good preconditioner, that is a way to change the equations, in such a way that the solution (in this case the flow) is the same.<br /><br />During this project, we proved that a particular good preconditioner, called the constraint preconditioner, will indeed be effective for the iterative solution of the saddle point problem describing the Stokes-Darcy flow. Numerical experiments illustrate the theoretical results.<br /><br />In another part of the project, we proposed a methodology to use more than one preconditioner at the same time. This methodology essentially combined the preconditioners in an optimal manner. One application of this multipreconditioning approach is for problems arising in hydrology, where multiple wells are described.<br /><br />In yet another part of the project we studied parallel asynchronous iterations. These are iterations meant for example for the solution of differential equations on a domain. The domain is decomposed into multiple subdomains, and one can solve the same differential equation locally, that is in each subdomain. To that end, one needs information from the solutions of the neighboring subdomains (these are called artificial boundary conditions - artificial, since they are not part of the original problem). One proceeds iteratively, solving one subdomain, and using the information thus obtained for the boundary values in the next subdomain. At the end, not everything matches, and a new cycle starts, eventually converging to the solution everywhere. The method we studies is asynchronous in the sense that the processor working on a local problem completes its solution, and then repeats the process with whatever information has arrived from the neighboring subdomains, but without waiting for all of them to complete their tasks. Our theorems show that this methods indeed works, and our numerical experiments show that the asynchronous method can be faster than the synchronous counterpart.</p><br> <p>            Last Modified: 11/19/2017<br>      Modified by: Daniel&nbsp;B&nbsp;Szyld</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ When the river bed is composed of pebbles, for example, the flow of water has two parts: the free flow, and the flow below the bottom, which is called a porous medium. This flow is described in each of these two parts by two different equations, and there is a third equation connecting these two, corresponding to the interface. This situation is called a Stokes-Darcy flow (since the free flow is described by the Stokes equations, and the flow through the porous medium is called the Darcy flow). These equations, when discretized, together with the interface condition form what is called a saddle point problem. To efficiently solve this problem one needs a good preconditioner, that is a way to change the equations, in such a way that the solution (in this case the flow) is the same.  During this project, we proved that a particular good preconditioner, called the constraint preconditioner, will indeed be effective for the iterative solution of the saddle point problem describing the Stokes-Darcy flow. Numerical experiments illustrate the theoretical results.  In another part of the project, we proposed a methodology to use more than one preconditioner at the same time. This methodology essentially combined the preconditioners in an optimal manner. One application of this multipreconditioning approach is for problems arising in hydrology, where multiple wells are described.  In yet another part of the project we studied parallel asynchronous iterations. These are iterations meant for example for the solution of differential equations on a domain. The domain is decomposed into multiple subdomains, and one can solve the same differential equation locally, that is in each subdomain. To that end, one needs information from the solutions of the neighboring subdomains (these are called artificial boundary conditions - artificial, since they are not part of the original problem). One proceeds iteratively, solving one subdomain, and using the information thus obtained for the boundary values in the next subdomain. At the end, not everything matches, and a new cycle starts, eventually converging to the solution everywhere. The method we studies is asynchronous in the sense that the processor working on a local problem completes its solution, and then repeats the process with whatever information has arrived from the neighboring subdomains, but without waiting for all of them to complete their tasks. Our theorems show that this methods indeed works, and our numerical experiments show that the asynchronous method can be faster than the synchronous counterpart.       Last Modified: 11/19/2017       Submitted by: Daniel B Szyld]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

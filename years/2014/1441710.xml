<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SaTC: STARSS: FAME: Fault-attack Awareness using Microprocessor Enhancements</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2014</AwardEffectiveDate>
<AwardExpirationDate>09/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>307000.00</AwardTotalIntnAmount>
<AwardAmount>307000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sandip Kundu</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>With the tremendous growth of sensitive and security-critical processing on embedded and pervasive platforms, the threat model for secure electronics is expanding from software into hardware. A wide range of fault attacks, based on physical manipulation of the electronics operating environment, is now available to the adversary.&lt;br/&gt;&lt;br/&gt;The major outcome of this project is FAME, a collection of hardware techniques for microprocessor architectures to detect these fault injection attacks, and to mitigate fault analysis through an appropriate response in software. The FAME processor is developed both as an architecture concept as well as a chip prototype.&lt;br/&gt;&lt;br/&gt;The FAME processor uses fault countermeasures that combine fault detection in microprocessor hardware with fault response in the software application. The fault detection in hardware uses static (design-time) and dynamic (runtime) techniques for in-situ fault detection. These fault-detecting hardware extensions are optimized for power and cost, and they can be enabled from the software application. This flexibility allows FAME to support non-critical applications at full microprocessor performance, while still offering full fault countermeasures for security-critical applications. The FAME processor chip demonstrates these techniques, as well as novel forms of fault analysis that are investigated in tandem with the development of FAME.&lt;br/&gt;&lt;br/&gt;The impacts of this project are safer, more trustworthy microprocessors that are aware of their physical environment and the threats it poses to their internal processing. Such microprocessors offer the basis for cyber-security applications that can handle both logical as well as physical threats.</AbstractNarration>
<MinAmdLetterDate>09/08/2014</MinAmdLetterDate>
<MaxAmdLetterDate>09/08/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1441710</AwardID>
<Investigator>
<FirstName>Patrick</FirstName>
<LastName>Schaumont</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Patrick Schaumont</PI_FULL_NAME>
<EmailAddress>pschaumont@wpi.edu</EmailAddress>
<PI_PHON>5088316472</PI_PHON>
<NSF_ID>000488021</NSF_ID>
<StartDate>09/08/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Leyla</FirstName>
<LastName>Nazhandali</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Leyla Nazhandali</PI_FULL_NAME>
<EmailAddress>leyla@vt.edu</EmailAddress>
<PI_PHON>5402315281</PI_PHON>
<NSF_ID>000327514</NSF_ID>
<StartDate>09/08/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Virginia Polytechnic Institute and State University</Name>
<CityName>BLACKSBURG</CityName>
<ZipCode>240610001</ZipCode>
<PhoneNumber>5402315281</PhoneNumber>
<StreetAddress>Sponsored Programs 0170</StreetAddress>
<StreetAddress2><![CDATA[300 Turner Street NW, Suite 4200]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>VA09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003137015</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>VIRGINIA POLYTECHNIC INSTITUTE AND STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003137015</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Virginia Polytechnic Institute and State University]]></Name>
<CityName>Blacksburg</CityName>
<StateCode>VA</StateCode>
<ZipCode>240610001</ZipCode>
<StreetAddress><![CDATA[Durham Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>VA09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>8225</Code>
<Text>SaTC Special Projects</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~307000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>When software runs on a microprocessor, the software programmer implicitly assumes that the processor will execute every instruction correctly, precisely as it was written by the programmer.<br />In this project, we investigate fault attacks. A hacker can change the meaning of software instructions by introducing deliberate faults into the microprocessor. The hacker injects faults through manipulation of the microprocessor hardware environment, such by manipulating the power supply or the microprocessor clock. Such a hardware hacker hence uses defects of the hardware execution to introduce defects in software. The scenario of the hardware hacker is real and credible: it has been demonstrated to affect a broad range of computers. Furthermore, novel applications in the area of Cyber-Physical Systems and Internet of Things imply that the microprocessor hardware is often within easy reach of hackers, and that fault injection attacks a realistic threat.<br />The project has two main activities. First, we investigate the difficulty of performing these fault injection attacks on software. We use a simulation of a microprocessor, as well as a microprocessor prototype implementation. Second, we investigate how the microprocessor can be improved such that it can detect fault injection attacks, and respond to it. We use sensors that detect fault injection as it happens, and that alert the software of the security emergency.<br />The challenge of fault injection attacks on software is that it is hard to predict the effect of fault injection on the execution of software. Our work develops an attack called Differential Fault Intensity Analysis. It takes away the biggest factor of uncertainty in conduction fault injection, namely the requirement to understand the exact nature of the fault. We demonstrate DFIA on multiple hardware and software targets, including cryptographic software and system software.<br />We also develop two chips, FAME1 and FAME2, which demonstrate countermeasures against fault injection attacks. The chips have fault injection sensors that detect various methods of fault injection using electromagnetic pulses and power supply pulses. We demonstrate the operation of these chips and their correct response to fault injection.<br />This project supports the graduate research project of 2 PhD level students and 3 Master level students. The project results are written up in 4 Journal level papers, 10 Conference level papers and one Book Chapter. The FAME1 design won the Best Hardware Demo Award at the 2017 IEEE Hardware Oriented&nbsp;Security and Trust Symposium.</p><br> <p>            Last Modified: 10/30/2018<br>      Modified by: Patrick&nbsp;Schaumont</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540923045758_students--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540923045758_students--rgov-800width.jpg" title="Students at the 2017 HOST Symposium"><img src="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540923045758_students--rgov-66x44.jpg" alt="Students at the 2017 HOST Symposium"></a> <div class="imageCaptionContainer"> <div class="imageCaption">FAME1 won the Best Hardware Demonstration Award at the 2017 HOST Symposium</div> <div class="imageCredit">Virginia Tech</div> <div class="imagePermisssions">Royalty-free (restricted use - cannot be shared)</div> <div class="imageSubmitted">Patrick&nbsp;Schaumont</div> <div class="imageTitle">Students at the 2017 HOST Symposium</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540922939035_fame2--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540922939035_fame2--rgov-800width.jpg" title="FAME 2"><img src="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540922939035_fame2--rgov-66x44.jpg" alt="FAME 2"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Block Diagram of the FAME 2 chip</div> <div class="imageCredit">Virginia Tech</div> <div class="imagePermisssions">Royalty-free (unrestricted use)</div> <div class="imageSubmitted">Patrick&nbsp;Schaumont</div> <div class="imageTitle">FAME 2</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540922897344_fame1--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540922897344_fame1--rgov-800width.jpg" title="Fame 1"><img src="/por/images/Reports/POR/2018/1441710/1441710_10341142_1540922897344_fame1--rgov-66x44.jpg" alt="Fame 1"></a> <div class="imageCaptionContainer"> <div class="imageCaption">FAME v1 test PCB as a daughterboard on top of a SAKURA-G FPGA Board</div> <div class="imageCredit">Virginia Tech</div> <div class="imagePermisssions">Royalty-free (unrestricted use)</div> <div class="imageSubmitted">Patrick&nbsp;Schaumont</div> <div class="imageTitle">Fame 1</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ When software runs on a microprocessor, the software programmer implicitly assumes that the processor will execute every instruction correctly, precisely as it was written by the programmer. In this project, we investigate fault attacks. A hacker can change the meaning of software instructions by introducing deliberate faults into the microprocessor. The hacker injects faults through manipulation of the microprocessor hardware environment, such by manipulating the power supply or the microprocessor clock. Such a hardware hacker hence uses defects of the hardware execution to introduce defects in software. The scenario of the hardware hacker is real and credible: it has been demonstrated to affect a broad range of computers. Furthermore, novel applications in the area of Cyber-Physical Systems and Internet of Things imply that the microprocessor hardware is often within easy reach of hackers, and that fault injection attacks a realistic threat. The project has two main activities. First, we investigate the difficulty of performing these fault injection attacks on software. We use a simulation of a microprocessor, as well as a microprocessor prototype implementation. Second, we investigate how the microprocessor can be improved such that it can detect fault injection attacks, and respond to it. We use sensors that detect fault injection as it happens, and that alert the software of the security emergency. The challenge of fault injection attacks on software is that it is hard to predict the effect of fault injection on the execution of software. Our work develops an attack called Differential Fault Intensity Analysis. It takes away the biggest factor of uncertainty in conduction fault injection, namely the requirement to understand the exact nature of the fault. We demonstrate DFIA on multiple hardware and software targets, including cryptographic software and system software. We also develop two chips, FAME1 and FAME2, which demonstrate countermeasures against fault injection attacks. The chips have fault injection sensors that detect various methods of fault injection using electromagnetic pulses and power supply pulses. We demonstrate the operation of these chips and their correct response to fault injection. This project supports the graduate research project of 2 PhD level students and 3 Master level students. The project results are written up in 4 Journal level papers, 10 Conference level papers and one Book Chapter. The FAME1 design won the Best Hardware Demo Award at the 2017 IEEE Hardware Oriented Security and Trust Symposium.       Last Modified: 10/30/2018       Submitted by: Patrick Schaumont]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

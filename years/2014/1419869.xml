<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Split Virtual Machine Execution for Reliability and Security</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2014</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>200798.00</AwardTotalIntnAmount>
<AwardAmount>227574</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Data centers are the backbone of cloud computing, which has become an important computing paradigm due to its economic benefits.  Reliability and security aspects of cloud computing, however, still need more investigation.  In cloud computing, virtual machines (also called virtual servers or VMs) are one of the primary units of computation: customers lease VMs, each encapsulating an operating system and a customer's applications. In cloud computing data centers, many physical servers - each running hypervisor virtualization software - provide compute resources needed to run the virtual servers. In emergency situations like hardware failure or the security breach of a physical server, a VM needs to be immediately moved away from the affected physical server on which it is running. However, no single unaffected physical server may have the exact resources needed to run the VM at that exact instance in time.  Meanwhile, two or more servers may collectively have the resources needed to run the VM. This project aims to allow a VM to be split so it can be run on two or more servers together in such a situation. This has promise of increasing the reliability, security and utilization of private, commercial and government cloud computing providers.  &lt;br/&gt;&lt;br/&gt;This project will explore an innovative idea of Split-VM execution, a new technique that will allow for a VM to be broken up into smaller pieces and to continue executing as one, while the pieces are on different physical servers.  A particular focus of the project will be on splitting a VM into two pieces and showing that such operation can be done transparently and efficiently.  Issues of memory coherency and interrupt management among the split pieces of the VM residing on different physical severs will be addressed in this research as well.  New protocols for synchronizing and controlling the two pieces of the VM will be developed so that the underlying virtualization software running on different physical servers can manage the VMs while they are operating in the Split-VM mode enabling both pieces of a Split-VM to have same view of the memory, and events, such as interrupts, to be seamlessly delivered between the two.&lt;br/&gt;&lt;br/&gt;The broader impacts of this project will offer insight into transparently splitting a VM into parts that can run on separate physical servers.  These splitting mechanisms will be developed and prototyped on popular open-source Linux operating system and on open-source Xen virtualization software, with new code shared back to the community.  Performance of the splitting operation and also of the execution of the VM after splitting will be evaluated to give insights into the performance of the proposed idea and to help quantify its reliability and security benefits.  The proposed work will also be a stepping-stone to guide future research on splitting VMs into many pieces, not just two.  This Split-VM project is thus a first step towards improving cloud data center utilization, reliability and security by enabling commodity VMs to be transparently split among different physical servers.</AbstractNarration>
<MinAmdLetterDate>09/08/2014</MinAmdLetterDate>
<MaxAmdLetterDate>02/29/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1419869</AwardID>
<Investigator>
<FirstName>Jakub</FirstName>
<LastName>Szefer</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jakub Szefer</PI_FULL_NAME>
<EmailAddress>jakub.szefer@yale.edu</EmailAddress>
<PI_PHON>2172200073</PI_PHON>
<NSF_ID>000519676</NSF_ID>
<StartDate>09/08/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Yale University</Name>
<CityName>New Haven</CityName>
<ZipCode>065208327</ZipCode>
<PhoneNumber>2037854689</PhoneNumber>
<StreetAddress>Office of Sponsored Projects</StreetAddress>
<StreetAddress2><![CDATA[P.O. Box 208327]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<StateCode>CT</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CT03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>043207562</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>YALE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>043207562</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Yale University]]></Name>
<CityName>New Haven</CityName>
<StateCode>CT</StateCode>
<ZipCode>065208284</ZipCode>
<StreetAddress><![CDATA[10 Hillhouse Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CT03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~200798</FUND_OBLG>
<FUND_OBLG>2015~10000</FUND_OBLG>
<FUND_OBLG>2016~16776</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The objectives of this research project were to explore reliability and security aspects of cloud computing, focusing on virtual machines (VMs).&nbsp; In particular, data centers are the backbone of cloud computing, which has become an important computing paradigm due to its economic benefits.&nbsp; Users share resources of these data centers by running different virtual machines within the data center, and any threats to the virtual machines will undermine the computation or data stored in the cloud.&nbsp; To help improve virtual machine security, this project explored an innovative idea of Split-VM execution.&nbsp; Split-VM is a new technique that could allow for a VM to be broken up into smaller logical pieces and to continue executing as one whole VM, while the pieces are on different physical servers.&nbsp; The project focused on the Xen hypervisor and evaluating how virtual machines running on Xen could be broken up into the smaller logical pieces.&nbsp; Performance bottlenecks were evaluated during development of prototype software, focusing on memory and networking.&nbsp; Furthermore, interrupt subsystem of the Xen hypervisor was analyzed, and ideas of remote interrupts prototyped and examined.&nbsp; An additional topic pursued during this research involved performance counters and analysis of virtual machine behavior, to understand when it may be beneficial perform virtual machine splitting.&nbsp; The work and research has shed light on potential benefits of this approach and the inherent limitations of the virtual machine splitting methods.</p><br> <p>            Last Modified: 11/14/2017<br>      Modified by: Jakub&nbsp;Szefer</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The objectives of this research project were to explore reliability and security aspects of cloud computing, focusing on virtual machines (VMs).  In particular, data centers are the backbone of cloud computing, which has become an important computing paradigm due to its economic benefits.  Users share resources of these data centers by running different virtual machines within the data center, and any threats to the virtual machines will undermine the computation or data stored in the cloud.  To help improve virtual machine security, this project explored an innovative idea of Split-VM execution.  Split-VM is a new technique that could allow for a VM to be broken up into smaller logical pieces and to continue executing as one whole VM, while the pieces are on different physical servers.  The project focused on the Xen hypervisor and evaluating how virtual machines running on Xen could be broken up into the smaller logical pieces.  Performance bottlenecks were evaluated during development of prototype software, focusing on memory and networking.  Furthermore, interrupt subsystem of the Xen hypervisor was analyzed, and ideas of remote interrupts prototyped and examined.  An additional topic pursued during this research involved performance counters and analysis of virtual machine behavior, to understand when it may be beneficial perform virtual machine splitting.  The work and research has shed light on potential benefits of this approach and the inherent limitations of the virtual machine splitting methods.       Last Modified: 11/14/2017       Submitted by: Jakub Szefer]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

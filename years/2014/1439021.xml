<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: FULL:CCA: Extracting Scalable Parallelism by Relaxing the Contracts across the System Stack</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>850000.00</AwardTotalIntnAmount>
<AwardAmount>850000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Yuanyuan Yang</SignBlockName>
<PO_EMAI>yyang@nsf.gov</PO_EMAI>
<PO_PHON>7032928067</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Technology scaling trends have made parallelism the de-facto standard for enhancing performance across a spectrum of computing environments spanning from high-end computing  to embedded platforms. Yet, the software is woefully lagging in its ability to extract usable parallelism offered by the underlying hardware platforms primarily because of the compartmentalized contracts between the different layers of the system stack. Rigid contracts restrict the ability to leverage a rich design space of performance/power/correctness trade-offs within and across layers, that could be achievable by straying slightly from the contract. Although such a relaxed contract, referred to as approximate computing, has received attention recently, much of the work in this area is still compartmentalized and lacks a holistic cross-layer strategy to maximize parallelism, while adhering to power and correctness mandates.&lt;br/&gt;                           &lt;br/&gt;Thus, the motivation of this project is to explore a holistic cross-layer approach to approximate computing spanning application, runtime system, compiler and hardware, thereby breaking the rigidity of the contracts between the layers, while still allowing them to cooperate for extracting the achievable parallelism across a diverse set of applications in both the high-end and mobile computing environments. Specifically, it involves application-level analysis of the scope of approximation for computation, data access and synchronization, designing efficient hardware mechanisms that could facilitate and benefit from approximation, and developing compiler and runtime support for expressing, exploiting and evaluating/validating the approximations in an architecture-aware fashion. This cross-layer approach to approximate computing is expected to play a crucial role towards achieving scalable parallelism for the next decade and beyond, with a potentially high impact to the computing industry. In addition, the tools and models developed from this project are disseminated in the public domain to a broader research community, and the PIs engage in a variety of outreach activities such as recruiting women and minority and involvement of local high school students through Penn State Eberly College's Exploration-U initiatives.</AbstractNarration>
<MinAmdLetterDate>08/06/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/06/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1439021</AwardID>
<Investigator>
<FirstName>Chitaranjan</FirstName>
<LastName>Das</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Chitaranjan Das</PI_FULL_NAME>
<EmailAddress>cxd12@psu.edu</EmailAddress>
<PI_PHON>8148650194</PI_PHON>
<NSF_ID>000358842</NSF_ID>
<StartDate>08/06/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Anand</FirstName>
<LastName>Sivasubramaniam</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Anand Sivasubramaniam</PI_FULL_NAME>
<EmailAddress>axs53@psu.edu</EmailAddress>
<PI_PHON>8148651406</PI_PHON>
<NSF_ID>000258710</NSF_ID>
<StartDate>08/06/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Mahmut</FirstName>
<LastName>Kandemir</LastName>
<PI_MID_INIT>T</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mahmut T Kandemir</PI_FULL_NAME>
<EmailAddress>mtk2@psu.edu</EmailAddress>
<PI_PHON>8148634888</PI_PHON>
<NSF_ID>000163936</NSF_ID>
<StartDate>08/06/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Pennsylvania State Univ University Park</Name>
<CityName>University Park</CityName>
<ZipCode>168021503</ZipCode>
<PhoneNumber>8148651372</PhoneNumber>
<StreetAddress>201 Old Main</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003403953</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PENNSYLVANIA STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003403953</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Pennsylvania State Univ University Park]]></Name>
<CityName>University Park</CityName>
<StateCode>PA</StateCode>
<ZipCode>168021503</ZipCode>
<StreetAddress><![CDATA[201 Old Main]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~850000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Approximate computing is a new computation paradigm built upon the observation that many application programs from different domains can accept less than full accurate results. Observing that many existing approximate computing approaches have targeted individual layers of the hardware-software stack in isolation, this project undertook a radically different approach, which is based on coordinating approximate computing across the entire&nbsp;hardware-software execution stack.&nbsp;</p> <p>In particular, it demonstrated that, integrated language, compiler, runtime and hardware strategies generate much better results than optimization techniques that are restricted to a single layer in the stack. In particular, the research found that a programming language that treats approximation as a first-class citizen and accompanying hardware enhancements are vital in providing&nbsp; effective communication across different layers in the software stack, to strike the right balance between performance/energy benefits (which can be up to 2x compared to the full accurate execution) and quality (accuracy) of program output.&nbsp;</p> <p>Throughout this project, the PIs developed various software packages and have either put them in the public domain or are in the process of doing so. These packages are expected to be useful, not just in the context of research, but also in the context of teaching. In fact, the PIs have already used the select contents from this research material to enhance some of the courses they regularly teach at Penn State.</p> <p>Apart from these research and teaching outcomes, the project helped 3 PhD and 1 MS students complete their thesis, and also helped with the training of another 3 other PhD students. The project also undertook several outreach activities, including one of the PIs taking part in a summer workshop at Penn State for high school teachers.&nbsp; This workshop, called ?Computers and the Universe?, included two modules prepared and presented by the PI on computing and storage systems as well as software. The PIs were also involved in a summer workshop for high school girls.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/07/2019<br>      Modified by: Mahmut&nbsp;T&nbsp;Kandemir</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Approximate computing is a new computation paradigm built upon the observation that many application programs from different domains can accept less than full accurate results. Observing that many existing approximate computing approaches have targeted individual layers of the hardware-software stack in isolation, this project undertook a radically different approach, which is based on coordinating approximate computing across the entire hardware-software execution stack.   In particular, it demonstrated that, integrated language, compiler, runtime and hardware strategies generate much better results than optimization techniques that are restricted to a single layer in the stack. In particular, the research found that a programming language that treats approximation as a first-class citizen and accompanying hardware enhancements are vital in providing  effective communication across different layers in the software stack, to strike the right balance between performance/energy benefits (which can be up to 2x compared to the full accurate execution) and quality (accuracy) of program output.   Throughout this project, the PIs developed various software packages and have either put them in the public domain or are in the process of doing so. These packages are expected to be useful, not just in the context of research, but also in the context of teaching. In fact, the PIs have already used the select contents from this research material to enhance some of the courses they regularly teach at Penn State.  Apart from these research and teaching outcomes, the project helped 3 PhD and 1 MS students complete their thesis, and also helped with the training of another 3 other PhD students. The project also undertook several outreach activities, including one of the PIs taking part in a summer workshop at Penn State for high school teachers.  This workshop, called ?Computers and the Universe?, included two modules prepared and presented by the PI on computing and storage systems as well as software. The PIs were also involved in a summer workshop for high school girls.           Last Modified: 11/07/2019       Submitted by: Mahmut T Kandemir]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: New directions in the design of local computation algorithms</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Dealing with big data is formidable when attempting to solve computations in which both the inputs and outputs are large. Nonetheless, frequently it is the case that only small parts of the solution are needed at any stage. Local computation algorithms were recently introduced in order to allow a user to quickly access the portions of the output that are required, without performing the full computation. The aim of local computation algorithms is to provide useful answers to the user in a manner that is significantly faster than what is required even for the simple task of viewing the whole input or output.&lt;br/&gt;&lt;br/&gt;The proposed research will expand the scope of local computation algorithms to allow such fast processing for new problems from combinatorial optimization. One class of local computation algorithms that will be studied are those that provide query access to a sparse subgraph of the input graph which preserves connectivity and distance properties of the original graph. A second class of local computation algorithms "clean up" data to have certain desirable properties, such as graph connectivity. New techniques will be developed to approach basic computational problems that can be used as tools in solving a wide array of other problems.&lt;br/&gt;&lt;br/&gt;The broader impacts of this project are in the education and mentoring of young researchers. The PI will engage in Computer Science Unplugged activities at local elementary schools. The PI will work actively to ensure greater participation of women and minority students in the project. Material from sub-linear time algorithms will be integrated into undergraduate and graduate algorithms courses.</AbstractNarration>
<MinAmdLetterDate>07/16/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/16/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1420692</AwardID>
<Investigator>
<FirstName>Ronitt</FirstName>
<LastName>Rubinfeld</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ronitt Rubinfeld</PI_FULL_NAME>
<EmailAddress>ronitt@csail.mit.edu</EmailAddress>
<PI_PHON>6172530884</PI_PHON>
<NSF_ID>000322655</NSF_ID>
<StartDate>07/16/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName/>
<StateCode>MA</StateCode>
<ZipCode>021394307</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~400000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><pre><pre>Classical models of algorithmic analysis assume that the algorithm reads an i</pre> <pre>nput,performs a computation and writes the answer to an output tape.   </pre> <pre>On massive data sets, such computations may not be feasible, asboth the </pre> <pre>input and output may be too large for a single processor to process.  In such a</pre> <pre> situation, it would be useful if one could findfaster ways of computing just the </pre> <pre>portion of the output that is requiredby the user. In this project, we investigate </pre> <pre>the model of "local computation algorithms",  which support queriessuch that </pre> <pre>after each query by the user to a specified location, thelocal computation</pre> <pre> algorithmquickly outputs the value of the output at thatlocation, without </pre> <pre>knowledge of future requests, in a manner that isconsistent with any other</pre> <pre> local computation algorithm operating at thesame time. For a given problem, </pre> <pre>the hope is that the query time andspace complexity ofa  local computation  </pre> <pre>algorithm  is far smaller, namely sublinear, in thesize of the input and output</pre> <pre> to the problem. Such local computation algorithms are useful for performing</pre> <pre>cloud computations on large datasets.This research project develops standard</pre> <pre> techniques forconstructing local computation algorithms.  Much of the focus is</pre> <pre> on combinatorial optimization problems.  Local computation algorithms are</pre> <pre> given for graph problemssuch as maximal independent set and approximate </pre> <pre>maximum matchingwhich are exponentially better than what was previously </pre> <pre>knownwhen the degrees of the graph are substantial.   Sublinear timelocal</pre> <pre> computation algorithms which give query access to a sparsification of a graph,</pre> <pre> while maintaining good connectivity or distance relationships are given.</pre> <pre>A paradigm is suggested for correcting distributions from noisy sources</pre> <pre>which makes much weaker assumptions on the correct data or on the noise </pre> <pre>thanis standard in the literature.   Sample-efficient algorithms are given for </pre> <pre>providing suchdistribution correctors.</pre> </pre><br> <p>            Last Modified: 11/30/2017<br>      Modified by: Ronitt&nbsp;Rubinfeld</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[Classical models of algorithmic analysis assume that the algorithm reads an i nput,performs a computation and writes the answer to an output tape.    On massive data sets, such computations may not be feasible, asboth the  input and output may be too large for a single processor to process.  In such a  situation, it would be useful if one could findfaster ways of computing just the  portion of the output that is requiredby the user. In this project, we investigate  the model of "local computation algorithms",  which support queriessuch that  after each query by the user to a specified location, thelocal computation  algorithmquickly outputs the value of the output at thatlocation, without  knowledge of future requests, in a manner that isconsistent with any other  local computation algorithm operating at thesame time. For a given problem,  the hope is that the query time andspace complexity ofa  local computation   algorithm  is far smaller, namely sublinear, in thesize of the input and output  to the problem. Such local computation algorithms are useful for performing cloud computations on large datasets.This research project develops standard  techniques forconstructing local computation algorithms.  Much of the focus is  on combinatorial optimization problems.  Local computation algorithms are  given for graph problemssuch as maximal independent set and approximate  maximum matchingwhich are exponentially better than what was previously  knownwhen the degrees of the graph are substantial.   Sublinear timelocal  computation algorithms which give query access to a sparsification of a graph,  while maintaining good connectivity or distance relationships are given. A paradigm is suggested for correcting distributions from noisy sources which makes much weaker assumptions on the correct data or on the noise  thanis standard in the literature.   Sample-efficient algorithms are given for  providing suchdistribution correctors.        Last Modified: 11/30/2017       Submitted by: Ronitt Rubinfeld]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

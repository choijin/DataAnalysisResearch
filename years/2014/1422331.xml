<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: A Brick in the Wall: Achieving Yield, Performance and Density Effective DRAM Beyond 22nm Technology</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/15/2014</AwardEffectiveDate>
<AwardExpirationDate>06/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>449999.00</AwardTotalIntnAmount>
<AwardAmount>473999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Yuanyuan Yang</SignBlockName>
<PO_EMAI>yyang@nsf.gov</PO_EMAI>
<PO_PHON>7032928067</PO_PHON>
</ProgramOfficer>
<AbstractNarration>For more than four decades, computer main memory has predominantly used Dynamic Random Access Memory (DRAM). This technology is a mature commodity that has been optimized and balanced among cost, performance, capacity and energy. Much of DRAM?s success is due to continuous shrinking of the silicon devices in the memory, which allows DRAM capacity to double roughly every two years, satisfying the aggressive need for more memory capacity of today?s and tomorrow?s applications.  Yet, a critical problem lies in the shrinking of the device dimensions: It is coming to a halt largely due to the inability of the manufacturing process to precisely control the sizes of a device, which is termed process variation (PV). There are some known problems with PV. However, a vital problem that has rarely been investigated in the past is that PV can cause critical memory operational timing violations. Such violations slash DRAM chip yield, and immediately increase the chip cost. Solving this challenge is crucial to the future of the DRAM industry, which is highly sensitive to cost and profit.&lt;br/&gt;&lt;br/&gt;This research aims to address the challenge imposed by PV on DRAM device timing to chip yield.  Our key approach is to expose inherit operational timing variations caused by PV, so that they can be managed externally by the memory controller. This approach trades exposed timing variability for enhanced chip yield, without harming chip density, by allowing more DRAM chips to meet design specifications. Since the timing variations lead to application performance loss, we propose a suite of techniques that progressively mitigate the loss arising from increasing variance with deeper technology scaling. Our hypothesis is that the threat to yield loss due to technology scaling and PV can be well controlled with our progressive mechanisms, if existing timing constraints for memory operations can adapt to PV-induced speed variations. The broader impact of this research is to enable the continuous scaling of the DRAM technology to achieve the cost, capacity and performance requirement for future computing in engineering, scientific, biological, environmental, business and consumer applications. Both undergraduate and graduate students will be recruited and trained through research and education opportunities provided by this project.</AbstractNarration>
<MinAmdLetterDate>07/10/2014</MinAmdLetterDate>
<MaxAmdLetterDate>06/16/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1422331</AwardID>
<Investigator>
<FirstName>Bruce</FirstName>
<LastName>Childers</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Bruce Childers</PI_FULL_NAME>
<EmailAddress>childers@cs.pitt.edu</EmailAddress>
<PI_PHON>4126248421</PI_PHON>
<NSF_ID>000245880</NSF_ID>
<StartDate>07/10/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jun</FirstName>
<LastName>Yang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jun Yang</PI_FULL_NAME>
<EmailAddress>juy9@pitt.edu</EmailAddress>
<PI_PHON>4126249088</PI_PHON>
<NSF_ID>000106419</NSF_ID>
<StartDate>07/10/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Youtao</FirstName>
<LastName>Zhang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Youtao Zhang</PI_FULL_NAME>
<EmailAddress>zhangyt@cs.pitt.edu</EmailAddress>
<PI_PHON>4126248837</PI_PHON>
<NSF_ID>000104863</NSF_ID>
<StartDate>07/10/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pittsburgh</Name>
<CityName>Pittsburgh</CityName>
<ZipCode>152133203</ZipCode>
<PhoneNumber>4126247400</PhoneNumber>
<StreetAddress>300 Murdoch Building</StreetAddress>
<StreetAddress2><![CDATA[3420 Forbes Avenue]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>004514360</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF PITTSBURGH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004514360</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pittsburgh]]></Name>
<CityName/>
<StateCode>PA</StateCode>
<ZipCode>152132303</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~449999</FUND_OBLG>
<FUND_OBLG>2015~24000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Today&rsquo;s and tomorrow&rsquo;s data-centric computing calls for continually increasing memory capacity. The success of DRAM in past several decades has been mainly due to device scaling, which has allowed capacity to double roughly every two years. Yet, this scaling may come to a screeching halt beyond a 22nm technology node size. A critical problem for DRAM relates to the impact of process variation (PV) on chip yield, which is the percentage of sound chips produced. Lower yield could directly increase the cost of a die, further shrinking already tiny profit margins.</p> <p>In this project, we demonstrated the criticality of PV on DRAM timing and yield rate with technology scaling. We determined the severity of this problem by showing (1) the dramatic drop in yield rate with PV and (2) the effectiveness of using architectural designs to combat the PV effect on DRAM timing. Most of the &ldquo;bad&rdquo; chips due to timing violations can be salvaged to improve the yield rate.</p> <p>We observed the correlation between retention and restore timing and developed partial restore based techniques, which can significantly improve memory performance in future DRAM without harming the energy cost of the memory. With these techniques, more &ldquo;bad&rdquo; DRAM chips can be salvaged and treated as &ldquo;good&rdquo; DRAM chips to improve chip yield. Importantly, our techniques do not require any changes in the DRAM chips themselves, ensuring the density (capacity) of the DRAM are not sacrificed.</p> <p>We further observed the performance problem due to PRT (prolonged restore time) even with our previously developed partial restore based techniques. We then leveraged approximate computing to achieve performance gain via restore time reduction, while achieving minimum impact on application&rsquo;s quality. We developed the fine-grained precision-aware restore scheduling techniques, which are effective in improving performance and reducing energy, while maintaining satisfactory application quality. With these techniques, weak cells that required longer restore time can perform as quickly as good cells as only approximate data is stored. Hence, performance improvement is achieved and errors are tolerated.</p> <p>We addressed an important memory design problem that exists in both high-end and embedded systems: whether it is reliable to adopt multi-rate refresh together with chipkill. We found that na&iuml;ve integration, the memory system could be suffering from reliability emergency. The technique we developed PlusN can effectively enforce the system reliability guarantee under different reliability emergency scenarios.</p> <p>We successfully enhanced DRAM-based PIM by improving the speed of logic operations. This has substantially increased the benefit of adopting such feature in future DRAM technology. The PIM operations we designed can be used in suitable applications, especially in machine learning because they are data-intensive and error tolerant.</p> <p>The fund helped in part the development of a graduate seminar course and the content update of two other graduate level courses.</p> <p>The fund partially supported the PhD dissertation work of two PhD students, including one female student. One joined an industry research lab after graduation. The other joined a research university as an assistant professor after graduation. The fund also supported in part the research of five other PhD students.</p> <p>The fund supported in part the travel of students and faculty to international conferences to present the research findings and the dissemination of the knowledge.</p><br> <p>            Last Modified: 01/29/2020<br>      Modified by: Youtao&nbsp;Zhang</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Today’s and tomorrow’s data-centric computing calls for continually increasing memory capacity. The success of DRAM in past several decades has been mainly due to device scaling, which has allowed capacity to double roughly every two years. Yet, this scaling may come to a screeching halt beyond a 22nm technology node size. A critical problem for DRAM relates to the impact of process variation (PV) on chip yield, which is the percentage of sound chips produced. Lower yield could directly increase the cost of a die, further shrinking already tiny profit margins.  In this project, we demonstrated the criticality of PV on DRAM timing and yield rate with technology scaling. We determined the severity of this problem by showing (1) the dramatic drop in yield rate with PV and (2) the effectiveness of using architectural designs to combat the PV effect on DRAM timing. Most of the "bad" chips due to timing violations can be salvaged to improve the yield rate.  We observed the correlation between retention and restore timing and developed partial restore based techniques, which can significantly improve memory performance in future DRAM without harming the energy cost of the memory. With these techniques, more "bad" DRAM chips can be salvaged and treated as "good" DRAM chips to improve chip yield. Importantly, our techniques do not require any changes in the DRAM chips themselves, ensuring the density (capacity) of the DRAM are not sacrificed.  We further observed the performance problem due to PRT (prolonged restore time) even with our previously developed partial restore based techniques. We then leveraged approximate computing to achieve performance gain via restore time reduction, while achieving minimum impact on application’s quality. We developed the fine-grained precision-aware restore scheduling techniques, which are effective in improving performance and reducing energy, while maintaining satisfactory application quality. With these techniques, weak cells that required longer restore time can perform as quickly as good cells as only approximate data is stored. Hence, performance improvement is achieved and errors are tolerated.  We addressed an important memory design problem that exists in both high-end and embedded systems: whether it is reliable to adopt multi-rate refresh together with chipkill. We found that na&iuml;ve integration, the memory system could be suffering from reliability emergency. The technique we developed PlusN can effectively enforce the system reliability guarantee under different reliability emergency scenarios.  We successfully enhanced DRAM-based PIM by improving the speed of logic operations. This has substantially increased the benefit of adopting such feature in future DRAM technology. The PIM operations we designed can be used in suitable applications, especially in machine learning because they are data-intensive and error tolerant.  The fund helped in part the development of a graduate seminar course and the content update of two other graduate level courses.  The fund partially supported the PhD dissertation work of two PhD students, including one female student. One joined an industry research lab after graduation. The other joined a research university as an assistant professor after graduation. The fund also supported in part the research of five other PhD students.  The fund supported in part the travel of students and faculty to international conferences to present the research findings and the dissemination of the knowledge.       Last Modified: 01/29/2020       Submitted by: Youtao Zhang]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

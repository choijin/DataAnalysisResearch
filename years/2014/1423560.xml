<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: The Fixed Point of the Restricted Delauay Triangulation Operator, with Applications to Manifold Reconstruction and Mesh Generation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>484484.00</AwardTotalIntnAmount>
<AwardAmount>484484</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy Kimbrel</SignBlockName>
<PO_EMAI>tkimbrel@nsf.gov</PO_EMAI>
<PO_PHON>7032927924</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The investigators will study the related problems of surface reconstruction and mesh generation.  Surface reconstruction is the problem of creating geometric models (usually surface triangulations) from data that merely suggests the form of an object.  Most commonly, the input to a surface reconstruction algorithm is a point cloud consisting of points that have been sampled from a real-world object by laser range finders, stereo photography, medical images, video depth-from-motion algorithms, or even physical probes.  Surface reconstruction is used in computational engineering to perform physical simulations, in computer graphics to acquire real-world geometry to place in virtual environments such as videogames and movie special effects, and in surveying to acquire the geometry of a plot of land or a collection of buildings.&lt;br/&gt;&lt;br/&gt;Mesh generation is the problem of dividing a physical domain with a complicated geometry--say, an automobile engine, a human's blood vessels, or the air around an airplane--into small, simple pieces such as triangles or tetrahedra.  An important problem within mesh generation is the generation of surface meshes embedded in three dimensions--specifically, triangle meshes that approximate curved surfaces.  Surface meshes are ubiquitous in computer graphics, geometric modeling, and visualization.&lt;br/&gt;&lt;br/&gt;Most prior work on these topics has been set in 2- or 3-dimensional space.  There is a higher-dimensional analog of surface reconstruction called manifold reconstruction, commonly used for scientific data analysis.  Many processes in science and engineering produce data in the form of points in a high-dimensional space of attributes.  Manifold reconstruction is the problem of discovering relationships between the attributes that restrict the points to lie (approximately) on a low-dimensional manifold.&lt;br/&gt;&lt;br/&gt;This research will generalize algorithms for manifold reconstruction and manifold mesh generation to operate on k-dimensional manifolds embedded in a d-dimensional ambient space, where k ranges from 2 to perhaps 10 and d ranges from 3 to 10,000 or even greater.  The investigators will also produce and publicly release software for manifold reconstruction in d dimensions and out-of-core software for surface reconstruction from extremely large three-dimensional point clouds so that scientists, engineers, and geometric modelers can use the methods for numerical simulation, computer graphics, and scientific data analysis.  The work will impact education and outreach at U.C. Berkeley by training graduate and undergraduate students in research and geometric algorithms.</AbstractNarration>
<MinAmdLetterDate>06/13/2014</MinAmdLetterDate>
<MaxAmdLetterDate>06/13/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1423560</AwardID>
<Investigator>
<FirstName>Jonathan</FirstName>
<LastName>Shewchuk</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jonathan R Shewchuk</PI_FULL_NAME>
<EmailAddress>jrs@cs.berkeley.edu</EmailAddress>
<PI_PHON>5106423936</PI_PHON>
<NSF_ID>000207369</NSF_ID>
<StartDate>06/13/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Berkeley</Name>
<CityName>BERKELEY</CityName>
<ZipCode>947101749</ZipCode>
<PhoneNumber>5106433891</PhoneNumber>
<StreetAddress>Sponsored Projects Office</StreetAddress>
<StreetAddress2><![CDATA[1608 Fourth Street, Suite 220]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>124726725</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF CALIFORNIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Berkeley]]></Name>
<CityName>Berkeley</CityName>
<StateCode>CA</StateCode>
<ZipCode>947201776</ZipCode>
<StreetAddress><![CDATA[529 Soda Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7929</Code>
<Text>COMPUTATIONAL GEOMETRY</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~484484</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The investigators developed a mathematically guaranteed algorithm for reconstructing 2-manifolds from point clouds embedded in high-dimensional spaces, based on ``Fixed Points of the Restricted Delaunay Triangulation Operator.'' The algorithm takes as input a set of points sampled from an unknown two-dimensional manifold embedded in a space of arbitrary dimension (3 or higher), and produces a reconstruction of the unknown manifold composed of Delaunay triangles. &nbsp;The sampling requirements of the algorithm are unusually modest, compared to similar algorithms for high-dimensional spaces, making the algorithm more practical than its predecessors. Specifically, suppose the input is a finite set of points sampled from a 2-manifold smoothly embedded in d-dimensional space. &nbsp;In the simplest version of the algorithm, the output is a set of triangles called the ``manifold fixed-point complex'' (MF complex). &nbsp;The MF complex is a subcomplex of the d-dimensional Delaunay triangulation of the input points, but when d is large, it can be computed much more quickly than the d-dimensional Delaunay triangulation, avoiding the curse of dimensionality.</p> <p><br />The investigators developed a geometric construction called ``restricted constrained Delaunay triangulations,'' which offer a mathematically rigorous way to define a Delaunay-like triangulation on a curved surface embedded in three-dimensional space, with the goal of allowing users to specify edges that are constrained to be part of the triangulation. The constrained Delaunay triangulation (CDT) in the plane is a popular geometric construction that shares some of the advantages and mathematical properties of the Delaunay triangulation, but also permits users to constrain specified edges to be part of the triangulation. Another variant of the Delaunay triangulation, called the restricted Delaunay triangulation (RDT), has become a well-established way of generating Delaunay-like triangulations on curved surfaces. The new constructions, restricted constrained Delaunay triangulations (restricted CDTs), combine ideas from CDTs and RDTs to enable the enforcement of constraining edges in RDTs. The combination will be useful in guaranteed-quality algorithms for mesh generation on curved domains (including surface meshes, frequently used in computer graphics, and tetrahedral volume meshes, frequently used in scientific computing simulations).</p> <p><br />The investigators studied adversarial examples, a pervasive phenomenon of machine learning models where seemingly imperceptible perturbations to the input lead to misclassifications for otherwise statistically accurate models. They propose a geometric framework, drawing on ideas from manifold reconstruction, to analyze the high-dimensional geometry of adversarial examples. They highlight the importance of codimension: for low-dimensional data manifolds embedded in high-dimensional space, there are many directions off the manifold in which to construct adversarial examples. They show that popular methods for robust adversarial training in balls around the sample points are sample inefficient, and that nearest neighbor classifiers can be robust under the right sampling conditions. These observation led to a new approach to training robust classifiers based on neural networks. Like the standard approaches, they search for points that are near the sample points but are inconsistently classified, then they use those perturbed points to re-train the classifier. However, the standard approaches use a ball around each sample point as the domain in which to find adversarial misclassified points. The new approach instead uses the Voronoi cells around the sample points as the proper domain from which to generate adversarial examples for training. &nbsp;Although this increases the training time, it often produces more robust classifiers.</p> <p><br />The primary investigator contributed to the development of the algorithm and software ``QuadriFlow: A Scalable and Robust Method for Quadrangulation.'' QuadriFlow is an algorithm for generating quadrilateral surface meshes. The collaborators verified the robustness and efficiency of the method on a subset of ShapeNet comprising 17,791 3D objects in the wild. The evaluation shows that the quality of the quadrangulations generated by the method is as good as, and often better than, those from other methods, but the method is much faster than methods that achieve similar quality. The source code is publicly available and is being used by multiple parties.</p> <p><br />The broader impacts of the grant include the training of three Ph.D. students and one undergraduate researcher, the development of a curriculum for a mixed undergraduate/graduate course on machine learning and added material for a graduate course on computational geometry, and the public release of the software Quadriflow, which has advanced the ability to produce high-quality quadrilateral surface meshes that are particularly suitable for applications like Catmull-Clark subdivision, rendering, visualization, mesh editing, and boundary element methods.</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/18/2019<br>      Modified by: Jonathan&nbsp;R&nbsp;Shewchuk</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The investigators developed a mathematically guaranteed algorithm for reconstructing 2-manifolds from point clouds embedded in high-dimensional spaces, based on ``Fixed Points of the Restricted Delaunay Triangulation Operator.'' The algorithm takes as input a set of points sampled from an unknown two-dimensional manifold embedded in a space of arbitrary dimension (3 or higher), and produces a reconstruction of the unknown manifold composed of Delaunay triangles.  The sampling requirements of the algorithm are unusually modest, compared to similar algorithms for high-dimensional spaces, making the algorithm more practical than its predecessors. Specifically, suppose the input is a finite set of points sampled from a 2-manifold smoothly embedded in d-dimensional space.  In the simplest version of the algorithm, the output is a set of triangles called the ``manifold fixed-point complex'' (MF complex).  The MF complex is a subcomplex of the d-dimensional Delaunay triangulation of the input points, but when d is large, it can be computed much more quickly than the d-dimensional Delaunay triangulation, avoiding the curse of dimensionality.   The investigators developed a geometric construction called ``restricted constrained Delaunay triangulations,'' which offer a mathematically rigorous way to define a Delaunay-like triangulation on a curved surface embedded in three-dimensional space, with the goal of allowing users to specify edges that are constrained to be part of the triangulation. The constrained Delaunay triangulation (CDT) in the plane is a popular geometric construction that shares some of the advantages and mathematical properties of the Delaunay triangulation, but also permits users to constrain specified edges to be part of the triangulation. Another variant of the Delaunay triangulation, called the restricted Delaunay triangulation (RDT), has become a well-established way of generating Delaunay-like triangulations on curved surfaces. The new constructions, restricted constrained Delaunay triangulations (restricted CDTs), combine ideas from CDTs and RDTs to enable the enforcement of constraining edges in RDTs. The combination will be useful in guaranteed-quality algorithms for mesh generation on curved domains (including surface meshes, frequently used in computer graphics, and tetrahedral volume meshes, frequently used in scientific computing simulations).   The investigators studied adversarial examples, a pervasive phenomenon of machine learning models where seemingly imperceptible perturbations to the input lead to misclassifications for otherwise statistically accurate models. They propose a geometric framework, drawing on ideas from manifold reconstruction, to analyze the high-dimensional geometry of adversarial examples. They highlight the importance of codimension: for low-dimensional data manifolds embedded in high-dimensional space, there are many directions off the manifold in which to construct adversarial examples. They show that popular methods for robust adversarial training in balls around the sample points are sample inefficient, and that nearest neighbor classifiers can be robust under the right sampling conditions. These observation led to a new approach to training robust classifiers based on neural networks. Like the standard approaches, they search for points that are near the sample points but are inconsistently classified, then they use those perturbed points to re-train the classifier. However, the standard approaches use a ball around each sample point as the domain in which to find adversarial misclassified points. The new approach instead uses the Voronoi cells around the sample points as the proper domain from which to generate adversarial examples for training.  Although this increases the training time, it often produces more robust classifiers.   The primary investigator contributed to the development of the algorithm and software ``QuadriFlow: A Scalable and Robust Method for Quadrangulation.'' QuadriFlow is an algorithm for generating quadrilateral surface meshes. The collaborators verified the robustness and efficiency of the method on a subset of ShapeNet comprising 17,791 3D objects in the wild. The evaluation shows that the quality of the quadrangulations generated by the method is as good as, and often better than, those from other methods, but the method is much faster than methods that achieve similar quality. The source code is publicly available and is being used by multiple parties.   The broader impacts of the grant include the training of three Ph.D. students and one undergraduate researcher, the development of a curriculum for a mixed undergraduate/graduate course on machine learning and added material for a graduate course on computational geometry, and the public release of the software Quadriflow, which has advanced the ability to produce high-quality quadrilateral surface meshes that are particularly suitable for applications like Catmull-Clark subdivision, rendering, visualization, mesh editing, and boundary element methods.          Last Modified: 06/18/2019       Submitted by: Jonathan R Shewchuk]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSI: Collaborative Research: Bringing End-to-End Provenance to Scientists</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2015</AwardEffectiveDate>
<AwardExpirationDate>05/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>422997.00</AwardTotalIntnAmount>
<AwardAmount>422997</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Bogdan Mihaila</SignBlockName>
<PO_EMAI>bmihaila@nsf.gov</PO_EMAI>
<PO_PHON>7032928235</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Reproducability is the cornerstone of scientific progress. Historically, scientists make their work reproducible by including a formulaic description of the experimental methodology used in an experiment. In an age of computational science, such descriptions no longer adequately describe scientific methodology. Instead, scientific reproducibility relies on a precise and actionable description of the data and programs used to conduct the research. Provenance is the name given to the description of how a digital artifact came to be in its present state. Provenance includes a precise specification of an experiment's input data and the programs or procedures applied to that data. Most computational platforms do not record such data provenance, making it difficult to ensure reproducability. This project addresses this problem through the development of tools that transparently and automatically capture data provenance as part of a scientist's normal computational workflow.&lt;br/&gt;&lt;br/&gt;An interdisciplinary team of computer scientists and ecologists have come together to develop tools to facilitate the capture, management, and query of data provenance -- the history of how a digital artifact came to be in its present state.  Such data provenance improves the transparency, reliability, and reproducibility of scientific results. Most existing provenance systems require users to learn specialized tools and jargon and are unable to integrate provenance from different sources; these are serious obstacles to adoption by domain scientists. This project includes the design, development, deployment, and evaluation of an end-to-end system (eeProv) that encompasses the range of activity from original data analysis by domain scientists to management and analysis of the resulting provenance in a common framework with common tools. This project leverages and integrates development efforts on (1) an emerging system for generating provenance from a computing environment that scientists actually use (the R statistical language) with (2) an emerging system that utilizes a library of language and database adapters to store and manage provenance from virtually any source. Accomplishing the goals of this proposal requires fundamental research in resolving the semantic gap between provenance collected in different environments, capturing detailed provenance at the level of a programming language, defining precisely aspects of provenance required for different use cases, and making provenance accessible to scientists.</AbstractNarration>
<MinAmdLetterDate>06/01/2015</MinAmdLetterDate>
<MaxAmdLetterDate>06/01/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1450356</AwardID>
<Investigator>
<FirstName>Barbara</FirstName>
<LastName>Lerner</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Barbara Lerner</PI_FULL_NAME>
<EmailAddress>blerner@mtholyoke.edu</EmailAddress>
<PI_PHON>4135383250</PI_PHON>
<NSF_ID>000226271</NSF_ID>
<StartDate>06/01/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Mount Holyoke College</Name>
<CityName>South Hadley</CityName>
<ZipCode>010756456</ZipCode>
<PhoneNumber>4135382000</PhoneNumber>
<StreetAddress>50 College Street</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>066985714</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF MOUNT HOLYOKE COLLEGE, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>066985714</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Mount Holyoke College]]></Name>
<CityName/>
<StateCode>MA</StateCode>
<ZipCode>010756456</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8009</Code>
<Text>Scientifc Software Integration</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~422997</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="page" title="Page 1"> <div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%);"> <div class="layoutArea"> <div class="column"> <p><span style="font-size: 9.000000pt; font-family: 'ArialMT'; color: rgb(20.000000%, 20.000000%, 20.000000%);">Reproducibility is the cornerstone of scientific inquiry. Historically, experimental scientists kept detailed laboratory notebooks to document their research findings. As experimental science has become increasingly reliant on computation over the past two decades, an ever-growing fraction of experimental procedures have been documented</span><span style="font-size: 9.000000pt; font-family: 'ArialMT'; color: rgb(20.000000%, 20.000000%, 20.000000%);"> via computer code and data. Unfortunately, the complexity of these codes and their dependence on their surrounding computational environment has led to a crisis in reproducibility. </span></p> <p><span style="font-size: 9.000000pt; font-family: 'ArialMT'; color: rgb(20.000000%, 20.000000%, 20.000000%);">This research addresses the reproducibility crisis through the use of data provenance, the formal and structured representation of a computation. Data provenance documents how a digital artifact or product came to be in its current state. The multidisciplinary team from Mount Holyoke College, the Harvard John A. Paulson School of Engineering and Applied Sciences, and the Harvard Forest has undertaken two parallel efforts to bring data provenance to computational scientists: 1) the design and development of tools that capture, store, and process data provenance and 2) the design and development of applications that use data provenance to make conducting computational science easier. The applications provide motivation and incentive for users to adopt provenance tools. Once users collect data provenance as part of their experimental workflow, providing replicability and/or reproducibility becomes significantly easier. </span></p> <p><span style="font-size: 9.000000pt; font-family: 'ArialMT'; color: rgb(20.000000%, 20.000000%, 20.000000%);">While many data provenance tools existed prior to this work, they suffered from three major obstacles: 1) there was little incentive for adoption, 2) many of them required that scientists learn a new programming language, workflow system, or computational platform, and 3) there was no way to integrate data provenance collected from different systems. This project addressed all three obstacles. To encourage adoption, the team built a suite of provenance-based tools that aid in debugging computational processes (provDebugR for R and ProvBuild for Python), make it easier for scientists to understand existing experimental workflows (provSummarizR, provExplainR, and Rclean), facilitate push-button reproduction or replication (encapsulator and containR), and detect system intrusions (Unicorn). The multi-lingual (R and Python) approach makes provenance accessible to scientists in a range of disciplines (e.g., Ecologists, Biologists, and Statisticians frequently use R; computer scientists and many data scientists frequently use Python). The scientists can obtain provenance using the languages in which they are most comfortable, without making significant</span><span style="font-size: 9.000000pt; font-family: 'ArialMT'; color: rgb(20.000000%, 20.000000%, 20.000000%);"> changes to their preferred workflow. The team has defined a schema in which to represent language-level provenance so that additional languages can be incorporated into the ecosystem via development of provenance captures tools that generate their output in the documented format. Through the use of whole- system provenance capture and a library accessible to any provenance capture tool, provenance can be integrated among different capture mechanisms, providing an end to end solution capable of documenting an entire experimental process. </span></p> </div> </div> </div> </div> <div class="page" title="Page 2"> <div class="section" style="background-color: rgb(100.000000%, 100.000000%, 100.000000%);"> <div class="layoutArea"> <div class="column"> <p><span style="font-size: 9.000000pt; font-family: 'ArialMT'; color: rgb(20.000000%, 20.000000%, 20.000000%);">Most of the R-based tools developed in this project are available for easy download from the Comprehensive R Archive Network (CRAN). The other tools are also available via github repositories, web sites, and pre- packaged virtual machines. </span></p> <p><span style="font-size: 9.000000pt; font-family: 'ArialMT'; color: rgb(20.000000%, 20.000000%, 20.000000%);">Education has been an important focus throughout the duration of the project. The team included two postdocs, one of whom is currently a professor at Bristol University, two Ph.D. candidates in Computer science, and numerous undergraduate students at Mt Holyoke, Harvard, and Harvard Forest. Ten students (including five women and one African American man) participated in the Harvard Forest REU program in Ecology, which has allowed computer science students to better understand the role of computation and provenance in ecological research. Additionally, four women undergraduates at Mt. Holyoke carried out independent study projects related to this research. </span></p> </div> </div> </div> </div><br> <p>            Last Modified: 06/15/2020<br>      Modified by: Barbara&nbsp;Lerner</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247746953_ssi-poster-2020v2--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247746953_ssi-poster-2020v2--rgov-800width.jpg" title="Project overview"><img src="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247746953_ssi-poster-2020v2--rgov-66x44.jpg" alt="Project overview"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Integrated language level provenance and system level provenance enables myriad applications. Unicorn is real-time intrustion detection system. ProvTools is a collection of tools for R programmers. containR packages an analysis for reproduction. ProvBuild makes data science more efficient.</div> <div class="imageCredit">Seltzer et al.</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Barbara&nbsp;Lerner</div> <div class="imageTitle">Project overview</div> </div> </li> <li> <a href="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247863668_unicorn--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247863668_unicorn--rgov-800width.jpg" title="The Unicorn Intrusion Detection System"><img src="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247863668_unicorn--rgov-66x44.jpg" alt="The Unicorn Intrusion Detection System"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Unicorn is an intrustion detection system that takes in a streaming whole-system provenance graph (produced by any of several such systems), builds a model of normal system behavior, and then monitors ongoing behavior to detect deviations. It improves upon prior work in both accuracy and recall.</div> <div class="imageCredit">Han et al.</div> <div class="imagePermisssions">Creative Commons</div> <div class="imageSubmitted">Barbara&nbsp;Lerner</div> <div class="imageTitle">The Unicorn Intrusion Detection System</div> </div> </li> <li> <a href="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247999544_provbuild--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247999544_provbuild--rgov-800width.jpg" title="ProvBuild for Data Scientists"><img src="/por/images/Reports/POR/2020/1450356/1450356_10366719_1592247999544_provbuild--rgov-66x44.jpg" alt="ProvBuild for Data Scientists"></a> <div class="imageCaptionContainer"> <div class="imageCaption">ProvBuild helps data scientists debug and tune their Python scripts more efficiently. ProvBuild isolates the part of a script that needs to be re-executed to test a modification, allows the user to repeatedly modify those parts, and finally merge those changes back into the original script.</div> <div class="imageCredit">Hu et al.</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Barbara&nbsp;Lerner</div> <div class="imageTitle">ProvBuild for Data Scientists</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[     Reproducibility is the cornerstone of scientific inquiry. Historically, experimental scientists kept detailed laboratory notebooks to document their research findings. As experimental science has become increasingly reliant on computation over the past two decades, an ever-growing fraction of experimental procedures have been documented via computer code and data. Unfortunately, the complexity of these codes and their dependence on their surrounding computational environment has led to a crisis in reproducibility.   This research addresses the reproducibility crisis through the use of data provenance, the formal and structured representation of a computation. Data provenance documents how a digital artifact or product came to be in its current state. The multidisciplinary team from Mount Holyoke College, the Harvard John A. Paulson School of Engineering and Applied Sciences, and the Harvard Forest has undertaken two parallel efforts to bring data provenance to computational scientists: 1) the design and development of tools that capture, store, and process data provenance and 2) the design and development of applications that use data provenance to make conducting computational science easier. The applications provide motivation and incentive for users to adopt provenance tools. Once users collect data provenance as part of their experimental workflow, providing replicability and/or reproducibility becomes significantly easier.   While many data provenance tools existed prior to this work, they suffered from three major obstacles: 1) there was little incentive for adoption, 2) many of them required that scientists learn a new programming language, workflow system, or computational platform, and 3) there was no way to integrate data provenance collected from different systems. This project addressed all three obstacles. To encourage adoption, the team built a suite of provenance-based tools that aid in debugging computational processes (provDebugR for R and ProvBuild for Python), make it easier for scientists to understand existing experimental workflows (provSummarizR, provExplainR, and Rclean), facilitate push-button reproduction or replication (encapsulator and containR), and detect system intrusions (Unicorn). The multi-lingual (R and Python) approach makes provenance accessible to scientists in a range of disciplines (e.g., Ecologists, Biologists, and Statisticians frequently use R; computer scientists and many data scientists frequently use Python). The scientists can obtain provenance using the languages in which they are most comfortable, without making significant changes to their preferred workflow. The team has defined a schema in which to represent language-level provenance so that additional languages can be incorporated into the ecosystem via development of provenance captures tools that generate their output in the documented format. Through the use of whole- system provenance capture and a library accessible to any provenance capture tool, provenance can be integrated among different capture mechanisms, providing an end to end solution capable of documenting an entire experimental process.           Most of the R-based tools developed in this project are available for easy download from the Comprehensive R Archive Network (CRAN). The other tools are also available via github repositories, web sites, and pre- packaged virtual machines.   Education has been an important focus throughout the duration of the project. The team included two postdocs, one of whom is currently a professor at Bristol University, two Ph.D. candidates in Computer science, and numerous undergraduate students at Mt Holyoke, Harvard, and Harvard Forest. Ten students (including five women and one African American man) participated in the Harvard Forest REU program in Ecology, which has allowed computer science students to better understand the role of computation and provenance in ecological research. Additionally, four women undergraduates at Mt. Holyoke carried out independent study projects related to this research.            Last Modified: 06/15/2020       Submitted by: Barbara Lerner]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

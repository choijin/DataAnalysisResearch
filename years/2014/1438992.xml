<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: FULL: CCA: An Initial Exploration of Architecture and System Support for Sparsity in Science and Engineering Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>199995.00</AwardTotalIntnAmount>
<AwardAmount>199995</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Scientific computing remains a key driving force in the evolution of high- performance computer systems, because of its inherent value and its ability to drive computer-systems advances that benefit many demanding applications. This project is an initial exploratory investigation into optimizations that cut across algorithms, systems, and computer architecture to improve application performance and reduce energy through heterogeneous systems that combine latency-oriented cores and throughput-oriented cores. This activity will identify optimizations with the potential to significantly advance important emerging applications that are on the verge of attaining practical utility.&lt;br/&gt;&lt;br/&gt;Using a novel adaptive computational fluid dynamics code as a driver, this research seeks to identify the benefits and bottlenecks of both current and emerging heterogeneous systems. Using both measurements on existing hardware and detailed simulation of emerging and proposed systems, this activity will identify architectural mechanisms for coordinating communication and computation with the potential to significantly increase performance and energy efficiency. This activity will also develop an initial design of a heterogeneous virtual machine model that virtualizes proposed hardware mechanisms, yet provides applications with enough knowledge of the physical hardware to optimize execution without losing the abstraction benefits of virtualization.</AbstractNarration>
<MinAmdLetterDate>08/22/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/22/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1438992</AwardID>
<Investigator>
<FirstName>Mark</FirstName>
<LastName>Hill</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mark D Hill</PI_FULL_NAME>
<EmailAddress>markhill@cs.wisc.edu</EmailAddress>
<PI_PHON>6082622196</PI_PHON>
<NSF_ID>000328470</NSF_ID>
<StartDate>08/22/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>David</FirstName>
<LastName>Wood</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>David A Wood</PI_FULL_NAME>
<EmailAddress>david@cs.wisc.edu</EmailAddress>
<PI_PHON>6082066595</PI_PHON>
<NSF_ID>000442514</NSF_ID>
<StartDate>08/22/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Swift</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael M Swift</PI_FULL_NAME>
<EmailAddress>swift@cs.wisc.edu</EmailAddress>
<PI_PHON>6088900131</PI_PHON>
<NSF_ID>000103907</NSF_ID>
<StartDate>08/22/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Eftychios</FirstName>
<LastName>Sifakis</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Eftychios Sifakis</PI_FULL_NAME>
<EmailAddress>sifakis@wisc.edu</EmailAddress>
<PI_PHON>6082623822</PI_PHON>
<NSF_ID>000581486</NSF_ID>
<StartDate>08/22/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 6401]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WI02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>161202122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WISCONSIN SYSTEM</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041188822</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Computer Science Department]]></Name>
<CityName>Madison</CityName>
<StateCode>WI</StateCode>
<ZipCode>537061685</ZipCode>
<StreetAddress><![CDATA[1210 W. Dayton Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WI02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~199995</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="page" title="Page 2"> <div class="section"> <div class="layoutArea"> <div class="column"> <p><span>Scientific computing remains a key driving force in the evolution of high-performance computer systems, because of its inherent value and its ability to drive computer-systems advances that benefit many demanding applications. Practitioners in scientific computing have long considered optimizations that restructured algorithms and software in response to new hardware. The pursuit of such cross-cutting innovations is particularly important now, because of the loss of Dennard scaling that was until recently a key enabler of computer performance growth.&nbsp;</span></p> </div> </div> </div> </div> <div class="page" title="Page 2"> <div class="section"> <div class="layoutArea"> <div class="column"> <p><span>This project has developed optimizations across algorithms, software engineering, systems, and computer architecture to improve application performance and reduce energy through heterogeneous systems that combine latency-oriented cores and throughput-oriented cores.&nbsp;</span></p> </div> </div> </div> </div> <p>One key result is the development of<span>&nbsp;a scalable parallel solver for the pressure Poisson equation in fluids simulation which can accommodate complex irregular domains in the order of a billion degrees of freedom, using a single server or workstation fitted with GPU or Many-Core accelerators. The design of our numerical technique is attuned to the subtleties of heterogeneous computing, and allows us to benefit from the high memory and compute bandwidth of GPU accelerators even for problems that are too large to fit entirely on GPU memory. This is achieved via algebraic formulations that adequately increase the density of the GPU-hosted computation as to hide the overhead of offloading from the CPU, in exchange for accelerated convergence. Our solver follows the principles of Domain Decomposition techniques, and is based on the Schur complement method for elliptic partial differential equations. A large uniform grid is partitioned in non-overlapping subdomains, and bandwidth-optimized (GPU or Many-Core) accelerator cards are used to efficiently and concurrently solve independent Poisson problems on each resulting subdomain. Our novel contributions are centered on the careful steps necessary to assemble an accurate global solver from these constituent blocks, while avoiding excessive communication or dense linear algebra. We ultimately produce a highly effective Conjugate Gradients preconditioner, and demonstrate scalable and accurate performance on high-resolution simulations of water and smoke flow.</span></p> <div class="page" title="Page 4"> <div class="section"> <div class="layoutArea"> <div class="column"> <div class="page" title="Page 3"> <div class="section"> <div class="layoutArea"> <div class="column"> <p><span>A second key result is a novel approach to coordinate producer-consumer communication in emerging heterogeneous systems that integrate CPUs and GPUs</span>. In heterogeneous CPU-GPU processors, it possible to utilize shared caching for efficient producer-consumer communication. However, commonly used GPU computing programming models encourage coarse-grained producer- consumer synchronization that causes excessive cached data spills. Our work shows that existing and emerging software transformations can capture producer-consumer communication in cache and reduce cache spills, but they tend to be complicated and inefficient. Programmers must explicitly map producer-to-consumer communication or care-fully manage cached data footprint. To ease these burdens, we designed a novel hardware technique to efficiently emulate finite data queuing in standard caches and throttle producer-consumer cache access rates to avoid cache spills.&nbsp;</p> </div> </div> </div> </div> </div> </div> </div> </div> <p><span><br /></span></p><br> <p>            Last Modified: 01/12/2017<br>      Modified by: David&nbsp;A&nbsp;Wood</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2017/1438992/1438992_10336444_1483564090762_cover--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1438992/1438992_10336444_1483564090762_cover--rgov-800width.jpg" title="Cover image from ACM Transactions on Graphics Vol 35. No. 6"><img src="/por/images/Reports/POR/2017/1438992/1438992_10336444_1483564090762_cover--rgov-66x44.jpg" alt="Cover image from ACM Transactions on Graphics Vol 35. No. 6"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Smoke injected into a model of the bronchi. Color illustrates vorticity magnitude. Simulation contains 1.8 billion active cells, sparsely occupying a 81922 x 4096 background grid.</div> <div class="imageCredit">Haixiang Liu</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">David&nbsp;A&nbsp;Wood</div> <div class="imageTitle">Cover image from ACM Transactions on Graphics Vol 35. No. 6</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[     Scientific computing remains a key driving force in the evolution of high-performance computer systems, because of its inherent value and its ability to drive computer-systems advances that benefit many demanding applications. Practitioners in scientific computing have long considered optimizations that restructured algorithms and software in response to new hardware. The pursuit of such cross-cutting innovations is particularly important now, because of the loss of Dennard scaling that was until recently a key enabler of computer performance growth.           This project has developed optimizations across algorithms, software engineering, systems, and computer architecture to improve application performance and reduce energy through heterogeneous systems that combine latency-oriented cores and throughput-oriented cores.       One key result is the development of a scalable parallel solver for the pressure Poisson equation in fluids simulation which can accommodate complex irregular domains in the order of a billion degrees of freedom, using a single server or workstation fitted with GPU or Many-Core accelerators. The design of our numerical technique is attuned to the subtleties of heterogeneous computing, and allows us to benefit from the high memory and compute bandwidth of GPU accelerators even for problems that are too large to fit entirely on GPU memory. This is achieved via algebraic formulations that adequately increase the density of the GPU-hosted computation as to hide the overhead of offloading from the CPU, in exchange for accelerated convergence. Our solver follows the principles of Domain Decomposition techniques, and is based on the Schur complement method for elliptic partial differential equations. A large uniform grid is partitioned in non-overlapping subdomains, and bandwidth-optimized (GPU or Many-Core) accelerator cards are used to efficiently and concurrently solve independent Poisson problems on each resulting subdomain. Our novel contributions are centered on the careful steps necessary to assemble an accurate global solver from these constituent blocks, while avoiding excessive communication or dense linear algebra. We ultimately produce a highly effective Conjugate Gradients preconditioner, and demonstrate scalable and accurate performance on high-resolution simulations of water and smoke flow.          A second key result is a novel approach to coordinate producer-consumer communication in emerging heterogeneous systems that integrate CPUs and GPUs. In heterogeneous CPU-GPU processors, it possible to utilize shared caching for efficient producer-consumer communication. However, commonly used GPU computing programming models encourage coarse-grained producer- consumer synchronization that causes excessive cached data spills. Our work shows that existing and emerging software transformations can capture producer-consumer communication in cache and reduce cache spills, but they tend to be complicated and inefficient. Programmers must explicitly map producer-to-consumer communication or care-fully manage cached data footprint. To ease these burdens, we designed a novel hardware technique to efficiently emulate finite data queuing in standard caches and throttle producer-consumer cache access rates to avoid cache spills.                   Last Modified: 01/12/2017       Submitted by: David A Wood]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: Changing Culture in Robotics Classroom</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>459892.00</AwardTotalIntnAmount>
<AwardAmount>459892</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>11090000</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DRL</Abbreviation>
<LongName>Division Of Research On Learning</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>John Cherniavsky</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Computational and algorithmic thinking are new basic skills for the 21st century. Unfortunately few K-12 schools in the United States offer significant courses that address learning these skills. However many schools do offer robotics courses. These courses can incorporate computational thinking instruction but frequently do not. This research project aims to address this problem by developing a comprehensive set of resources designed to address teacher preparation, course content, and access to resources.  This project builds upon a ten year collaboration between Carnegie Mellon's Robotics Academy and the University of Pittsburgh's Learning Research and Development Center that studied how teachers implement robotics education in their classrooms and developed curricula that led to significant learning gains. This project will address the following three questions:&lt;br/&gt;&lt;br/&gt;1.What kinds of resources are useful for motivating and preparing teachers to teach computational thinking and for students to learn computational thinking?&lt;br/&gt;2.Where do teachers struggle most in teaching computational thinking principles and what kinds of supports are needed to address these weaknesses?&lt;br/&gt;3.Can virtual environments be used to significantly increase access to computational thinking principles?&lt;br/&gt;&lt;br/&gt;The project will augment traditional robotics classrooms and competitions with Robot Virtual World (RVW) that will scaffold student access to higher-order problems. These virtual robots look just like real-world  robots and will be programmed using identical tools but have zero mechanical error. Because dealing with sensor, mechanical, and actuator error adds significant noise to the feedback students' receive when programming traditional robots (thus decreasing the learning of computational principles), the use of virtual robots will increase the learning of robot planning tasks which increases learning of computational thinking principles.  The use of RVW will allow the development of new Model-Eliciting Activities  using new virtual robotics challenges that reward creativity, abstraction, algorithms, and higher level programming concepts to solve them. New curriculum will be developed for the advanced concepts to be incorporated into existing curriculum materials.  The curriculum and learning strategies will be implemented in the classroom following teacher professional development focusing on computational thinking principles. The opportunities for incorporating computationally thinking principles in the RVW challenges will be assessed using detailed task analyses. Additionally regression analyses of log-files will be done to determine where students have difficulties.  Observations of classrooms, surveys of students and teachers, and think-alouds will be used to assess the effectiveness of the curricula in addition to pre-and post- tests to determine student learning outcomes.</AbstractNarration>
<MinAmdLetterDate>08/28/2014</MinAmdLetterDate>
<MaxAmdLetterDate>04/07/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1416984</AwardID>
<Investigator>
<FirstName>Mary Kay</FirstName>
<LastName>Stein</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mary Kay Stein</PI_FULL_NAME>
<EmailAddress>mkstein@pitt.edu</EmailAddress>
<PI_PHON>4126246971</PI_PHON>
<NSF_ID>000206332</NSF_ID>
<StartDate>04/07/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Christian</FirstName>
<LastName>Schunn</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Christian D Schunn</PI_FULL_NAME>
<EmailAddress>schunn@pitt.edu</EmailAddress>
<PI_PHON>4126248807</PI_PHON>
<NSF_ID>000207377</NSF_ID>
<StartDate>08/28/2014</StartDate>
<EndDate>04/07/2016</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pittsburgh</Name>
<CityName>Pittsburgh</CityName>
<ZipCode>152133203</ZipCode>
<PhoneNumber>4126247400</PhoneNumber>
<StreetAddress>300 Murdoch Building</StreetAddress>
<StreetAddress2><![CDATA[3420 Forbes Avenue]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>004514360</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF PITTSBURGH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004514360</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pittsburgh]]></Name>
<CityName/>
<StateCode>PA</StateCode>
<ZipCode>152132303</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7645</Code>
<Text>Discovery Research K-12</Text>
</ProgramElement>
<ProgramReference>
<Code>8244</Code>
<Text>EHR CL Opportunities (NSF 14-302)</Text>
</ProgramReference>
<Appropriation>
<Code>0414</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0415</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~304249</FUND_OBLG>
<FUND_OBLG>2015~155643</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;&nbsp;&nbsp;Changing Culture in Robotics Classrooms was a DRK-12 Full Design and Development Proposal that studied how to foreground Computer Science (CS) and Computational Thinking Practices (CTP) in K-12 robotics classrooms. The research took place across multiple school districts around the US as well as in teacher professional development courses taught by Carnegie Mellon Robotics Academy instructors. The project created, tested, and refined online curriculum materials for classrooms delivered via a special learning management system that also awarded students badges for demonstrated mastery of computational thinking. The project also created and deployed professional development for classroom teachers in which they learned to use curriculum and resources developed by the project as well as questioning techniques and strategies designed to foreground CS and CTP related topics. The research included direct observation of dozens of classrooms over the four-year project where researchers compared student CS and CTP gains in classrooms where teachers that used a pedagogical style designed to maximize the benefits of the curriculum and resources versus teachers that did not follow research-based best practices. The results were measured using a variety of pre and posttests, student and teacher surveys, and student and teacher interviews. Research from this project attempted to answer the following questions:</p> <p>1. What kinds of resources are useful for motivating and preparing teachers/students to teach/learn computational thinking and practices thinking through robotics education?&nbsp;</p> <p>2. Where do teachers struggle most in teaching CS principles and what kinds of supports are needed to address these weaknesses?&nbsp;</p> <p>3. Can virtual environments be used to significantly increase access to CS? And if yes, what level of computational thinking and practices can be taught and how can this be advanced?</p> <p>&nbsp;</p> <p>Project Findings</p> <p>&nbsp;&nbsp;&nbsp;Robotics provides significant opportunities to teach CS and CTP, and students were able to show transfer of what they learned to non-robotics problems. However, although CS and CTP learning opportunities can be found in robotics classrooms, in order to achieve those gains, the teacher needs to introduce the concepts in a prescribed way. Student learning gain was significantly higher when they were taught by teachers that completed the teacher professional development course and taught their classrooms using pedagogical concepts and methodologies that they learned in professional development courses. Students that were taught by teachers who foregrounded robotics concepts and general problem solving (a favorite focus for technology teachers) did not achieve the same CS and CTP gains that were found in courses taught by teachers who made computational thinking a priority.&nbsp;&nbsp;</p> <p>&nbsp;&nbsp;&nbsp;The project modified and extended an existing curriculum that taught basic robot programming concepts. The modifications included lessons on decomposition and abstraction, the development of Model Eliciting Activities (MEA) designed to connect what a student knows to what she is attempting to understand, and appropriate scaffolded learning experiences for student competing in robotics competitions. Several classes used physical robots only, others used a combination of physical and programmable simulation environments, and others used simulation environments only. All classrooms were taught using the same curriculum, although as noted above the way teachers chose to implement the curriculum varied. The project found similar learning gains from students that used physical robots compared to students that use simulation environments.&nbsp;</p> <p>&nbsp;&nbsp;&nbsp;Teachers participating in the project did not have a formal computer science background, and they were typically certified in mathematics, science, technology education, and elementary education. The original robotics curriculum taught basic programming using a &ldquo;monkey see/monkey do&rdquo; approach where students were taught basic programming concepts, but they were not tied to big ideas in CS like decomposition and abstraction. Initially, the teachers in the project struggled teaching these concepts. The design team developed a series of short videos as well as MEA designed to support the development of big ideas in CS rather than specific programming constructs. Teachers that taught using these new tools became more confident presenting the curriculum as it was designed to be taught. Other teachers relied on the older curriculum and their classrooms saw limited CS and CTP learning gains.</p> <p>&nbsp;&nbsp;&nbsp;In sum, the key to improving robotics education&rsquo;s ability to teach CS and CTP is a combination of significant teacher professional development as well as providing students with MEAs that enable students to build and construct their understandings as the learn.&nbsp;&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/26/2018<br>      Modified by: Mary Kay&nbsp;Stein</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[    Changing Culture in Robotics Classrooms was a DRK-12 Full Design and Development Proposal that studied how to foreground Computer Science (CS) and Computational Thinking Practices (CTP) in K-12 robotics classrooms. The research took place across multiple school districts around the US as well as in teacher professional development courses taught by Carnegie Mellon Robotics Academy instructors. The project created, tested, and refined online curriculum materials for classrooms delivered via a special learning management system that also awarded students badges for demonstrated mastery of computational thinking. The project also created and deployed professional development for classroom teachers in which they learned to use curriculum and resources developed by the project as well as questioning techniques and strategies designed to foreground CS and CTP related topics. The research included direct observation of dozens of classrooms over the four-year project where researchers compared student CS and CTP gains in classrooms where teachers that used a pedagogical style designed to maximize the benefits of the curriculum and resources versus teachers that did not follow research-based best practices. The results were measured using a variety of pre and posttests, student and teacher surveys, and student and teacher interviews. Research from this project attempted to answer the following questions:  1. What kinds of resources are useful for motivating and preparing teachers/students to teach/learn computational thinking and practices thinking through robotics education?   2. Where do teachers struggle most in teaching CS principles and what kinds of supports are needed to address these weaknesses?   3. Can virtual environments be used to significantly increase access to CS? And if yes, what level of computational thinking and practices can be taught and how can this be advanced?     Project Findings     Robotics provides significant opportunities to teach CS and CTP, and students were able to show transfer of what they learned to non-robotics problems. However, although CS and CTP learning opportunities can be found in robotics classrooms, in order to achieve those gains, the teacher needs to introduce the concepts in a prescribed way. Student learning gain was significantly higher when they were taught by teachers that completed the teacher professional development course and taught their classrooms using pedagogical concepts and methodologies that they learned in professional development courses. Students that were taught by teachers who foregrounded robotics concepts and general problem solving (a favorite focus for technology teachers) did not achieve the same CS and CTP gains that were found in courses taught by teachers who made computational thinking a priority.       The project modified and extended an existing curriculum that taught basic robot programming concepts. The modifications included lessons on decomposition and abstraction, the development of Model Eliciting Activities (MEA) designed to connect what a student knows to what she is attempting to understand, and appropriate scaffolded learning experiences for student competing in robotics competitions. Several classes used physical robots only, others used a combination of physical and programmable simulation environments, and others used simulation environments only. All classrooms were taught using the same curriculum, although as noted above the way teachers chose to implement the curriculum varied. The project found similar learning gains from students that used physical robots compared to students that use simulation environments.      Teachers participating in the project did not have a formal computer science background, and they were typically certified in mathematics, science, technology education, and elementary education. The original robotics curriculum taught basic programming using a "monkey see/monkey do" approach where students were taught basic programming concepts, but they were not tied to big ideas in CS like decomposition and abstraction. Initially, the teachers in the project struggled teaching these concepts. The design team developed a series of short videos as well as MEA designed to support the development of big ideas in CS rather than specific programming constructs. Teachers that taught using these new tools became more confident presenting the curriculum as it was designed to be taught. Other teachers relied on the older curriculum and their classrooms saw limited CS and CTP learning gains.     In sum, the key to improving robotics education?s ability to teach CS and CTP is a combination of significant teacher professional development as well as providing students with MEAs that enable students to build and construct their understandings as the learn.            Last Modified: 11/26/2018       Submitted by: Mary Kay Stein]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

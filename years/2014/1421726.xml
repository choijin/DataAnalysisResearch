<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: SMALL: Design Validation Methods for Reliable and Efficient Floating-Point</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2014</AwardEffectiveDate>
<AwardExpirationDate>06/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>398341.00</AwardTotalIntnAmount>
<AwardAmount>414341</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Floating-point arithmetic enables computers to smoothly and&lt;br/&gt;efficiently handle widely varying magnitudes such as the diameter of&lt;br/&gt;an atom or that of a star, and fit these measures within computer&lt;br/&gt;words that come in standard widths.  Unfortunately,&lt;br/&gt;when calculations are performed on floating numbers, round-off errors&lt;br/&gt;are introduced, often causing real-world disasters, such as errant&lt;br/&gt;missile launches. While employing large computer word widths can&lt;br/&gt;minimize these errors, it also slows down computations, increases&lt;br/&gt;their memory, and energy needs. This project could have a broad impact&lt;br/&gt;by providing much needed debug support for scientific programmers to &lt;br/&gt;develop more reliable floating point programs.&lt;br/&gt;&lt;br/&gt;This project develops novel ways to estimate round-off errors, thus&lt;br/&gt;helping programmers arrive at efficient floating-point computer codes.&lt;br/&gt;Special emphasis is placed on handling tricky cases such as squaring&lt;br/&gt;numbers and taking their trigonometric values where prior research had&lt;br/&gt;not sufficiently advanced. By developing powerful and automated tools&lt;br/&gt;for precision estimation, it allows programmers to tune their codes&lt;br/&gt;and pick word widths parsimoniously while not losing accuracy.  &lt;br/&gt;The investigators use these tools to develop pedagogical material and best&lt;br/&gt;practices based on hands-on experience that helps inform students who&lt;br/&gt;typically are not taught the pitfalls of floating-point arithmetic.</AbstractNarration>
<MinAmdLetterDate>07/02/2014</MinAmdLetterDate>
<MaxAmdLetterDate>02/18/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1421726</AwardID>
<Investigator>
<FirstName>Ganesh</FirstName>
<LastName>Gopalakrishnan</LastName>
<PI_MID_INIT>L</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ganesh L Gopalakrishnan</PI_FULL_NAME>
<EmailAddress>ganesh@cs.utah.edu</EmailAddress>
<PI_PHON>8015813568</PI_PHON>
<NSF_ID>000160895</NSF_ID>
<StartDate>07/02/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<StreetAddress2><![CDATA[Second Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009095365</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF UTAH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009095365</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Utah]]></Name>
<CityName/>
<StateCode>UT</StateCode>
<ZipCode>841129205</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>6892</Code>
<Text>CI REUSE</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8206</Code>
<Text>Formal Methods and Verification</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~398341</FUND_OBLG>
<FUND_OBLG>2015~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>When real quantities are represented using computer words, one has two choices: either restrict the dynamic range and choose a representation that ensures uniform spacing of numbers (integer format) or have avery high dynamic range and choose non-uniform number distributions (floating point format). The floating-point format is universally employed for representing and manipulating numerical quantities that model real-world observables such as temperature, pressure and electric power.</p> <p><br />Unfortunately when floating point quantities are operated upon, the resulting value will almost always have to be rounded to the nearest representable floating point number, and these rounding methods crucially govern how well this number system tracks real arithmetic. Since the dawn of computing, the appropriate handling of floating-point rounding has been the subject of considerable discussion, often laden with missteps that have rendered important calculations incorrect.</p> <p><br />In this context, this project has delivered a powerful array of methods centered around the notion of Symbolic Taylor Forms. Overall,this method is akin to the Taylor expansion of floating-point quantities in terms of a ``noise modulation.'' However, specifically,this method provides a ready recipe for error estimation going up to second order error. This error calculation is accelerated (in terms of supporting a practical tool) through the development of semantic rules that are present in our FPTaylor tool. Our comparative study demonstrates the superior results produced by FPTaylor in most test cases that similar tools have been run on.</p> <p><br />Other offshots of our effort in floating-point reasoning have been:</p> <p><br />* rigorous mixed-precision floating point precision tuning methods</p> <p><br />* efficient result divergence analysis</p> <p><br />* a mechanized proof of the rounding rule</p> <p><br />* a global optimizer that powers our analysis engine, but in reality&nbsp; is a multicore parallelized version of an optimizer that may be of&nbsp; interest to a wider community</p> <p><br />The project releases tools and has contributed to papers in highlyvisible venues. It also trains personnel to work on advanced computational methods critical to the nation.</p><br> <p>            Last Modified: 10/02/2018<br>      Modified by: Ganesh&nbsp;L&nbsp;Gopalakrishnan</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2018/1421726/1421726_10315110_1538529016687_TaylorFormsImprovedRounding--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1421726/1421726_10315110_1538529016687_TaylorFormsImprovedRounding--rgov-800width.jpg" title="Improved Rounding"><img src="/por/images/Reports/POR/2018/1421726/1421726_10315110_1538529016687_TaylorFormsImprovedRounding--rgov-66x44.jpg" alt="Improved Rounding"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Taylor Forms (improved rounding)</div> <div class="imageCredit">Darulova, Kuncak and Solovyev</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Ganesh&nbsp;L&nbsp;Gopalakrishnan</div> <div class="imageTitle">Improved Rounding</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1421726/1421726_10315110_1538528935077_TaylorFormsSimpleRounding--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1421726/1421726_10315110_1538528935077_TaylorFormsSimpleRounding--rgov-800width.jpg" title="Simple rounding"><img src="/por/images/Reports/POR/2018/1421726/1421726_10315110_1538528935077_TaylorFormsSimpleRounding--rgov-66x44.jpg" alt="Simple rounding"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Taylor Forms used for Simple Rounding</div> <div class="imageCredit">Darulova, Kuncak and Solovyev</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Ganesh&nbsp;L&nbsp;Gopalakrishnan</div> <div class="imageTitle">Simple rounding</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ When real quantities are represented using computer words, one has two choices: either restrict the dynamic range and choose a representation that ensures uniform spacing of numbers (integer format) or have avery high dynamic range and choose non-uniform number distributions (floating point format). The floating-point format is universally employed for representing and manipulating numerical quantities that model real-world observables such as temperature, pressure and electric power.   Unfortunately when floating point quantities are operated upon, the resulting value will almost always have to be rounded to the nearest representable floating point number, and these rounding methods crucially govern how well this number system tracks real arithmetic. Since the dawn of computing, the appropriate handling of floating-point rounding has been the subject of considerable discussion, often laden with missteps that have rendered important calculations incorrect.   In this context, this project has delivered a powerful array of methods centered around the notion of Symbolic Taylor Forms. Overall,this method is akin to the Taylor expansion of floating-point quantities in terms of a ``noise modulation.'' However, specifically,this method provides a ready recipe for error estimation going up to second order error. This error calculation is accelerated (in terms of supporting a practical tool) through the development of semantic rules that are present in our FPTaylor tool. Our comparative study demonstrates the superior results produced by FPTaylor in most test cases that similar tools have been run on.   Other offshots of our effort in floating-point reasoning have been:   * rigorous mixed-precision floating point precision tuning methods   * efficient result divergence analysis   * a mechanized proof of the rounding rule   * a global optimizer that powers our analysis engine, but in reality  is a multicore parallelized version of an optimizer that may be of  interest to a wider community   The project releases tools and has contributed to papers in highlyvisible venues. It also trains personnel to work on advanced computational methods critical to the nation.       Last Modified: 10/02/2018       Submitted by: Ganesh L Gopalakrishnan]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

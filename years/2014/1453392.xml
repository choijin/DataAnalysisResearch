<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Diagnosing Distributed Systems with Provenance</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2015</AwardEffectiveDate>
<AwardExpirationDate>05/31/2021</AwardExpirationDate>
<AwardTotalIntnAmount>498396.00</AwardTotalIntnAmount>
<AwardAmount>498396</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Despite the ubiquitous adoption of distributed systems, designing and deploying distributed systems remain challenging because of the ever-increasing scale, complexity, and unpredictability of system executions. In occurrences of unanticipated faults, system operators often find themselves needing to diagnose the systems to discover software bugs, misconfiguration or malicious intrusions. Emerging provenance techniques can construct an explanation of an observed system state, in the form of a directed dependency graph. However, the use of provenance is limited; they lack query interfaces that allow users to easily extract information from provenance data, as well as, techniques to fully leverage provenance data. System operators have to further analyze provenance data, and manually perform management actions such as system recovery and reconfiguration.&lt;br/&gt;&lt;br/&gt;This project introduces a framework that efficiently maintains and queries provenance data, and leverages the exposed dependency information for system diagnosis. The research will i) develop layered privacy-aware provenance maintenance that provides availability and security guarantees in untrusted environments, ii) introduce a SQL-like declarative query language for users to annotate and abridge provenance data, and iii) investigate various methods of leveraging provenance data in order to identify and control suspicious misbehavior. The work provides a holistic view of provenance support for practical applications that impact performance, privacy, availability and security.&lt;br/&gt;&lt;br/&gt;More broadly, this project will provide a novel approach towards enhancing the reliability and security of distributed systems in an automated manner. Tools developed in the project will be freely distributed, and research findings will be incorporated into networking and databases courses.</AbstractNarration>
<MinAmdLetterDate>03/03/2015</MinAmdLetterDate>
<MaxAmdLetterDate>06/30/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1453392</AwardID>
<Investigator>
<FirstName>Wenchao</FirstName>
<LastName>Zhou</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Wenchao Zhou</PI_FULL_NAME>
<EmailAddress>wzhou@cs.georgetown.edu</EmailAddress>
<PI_PHON>2026874652</PI_PHON>
<NSF_ID>000636942</NSF_ID>
<StartDate>03/03/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgetown University</Name>
<CityName>Washington</CityName>
<ZipCode>200571789</ZipCode>
<PhoneNumber>2026250100</PhoneNumber>
<StreetAddress>37th &amp; O St N W</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>District of Columbia</StateName>
<StateCode>DC</StateCode>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>DC00</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>049515844</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGETOWN UNIVERSITY (THE)</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>049515844</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Georgetown University]]></Name>
<CityName>Washington</CityName>
<StateCode>DC</StateCode>
<ZipCode>200571789</ZipCode>
<StreetAddress><![CDATA[37th & O St N W]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>District of Columbia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>DC00</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~212133</FUND_OBLG>
<FUND_OBLG>2017~97099</FUND_OBLG>
<FUND_OBLG>2018~100227</FUND_OBLG>
<FUND_OBLG>2020~88937</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The overall goal of the project is to develop technologies, algorithms, and a complete distributed system that leverage provenance data for system diagnosis. Within this overall goal, we have three key subgoals: (1) provenance maintenance for distributed systems that considers practical constraints such as resource and security concerns; (2) declarative provenance querying that leverages a SQL-like declarative query language for users to annotate and prune provenance data based on a customizable pattern; (3) provenance-assisted system diagnosis and repair.</p> <p><strong>Subgoal 1. Provenance maintenance with practical constraints. </strong>In this project, we consider maintenance optimizations for deducing the storage overhead and for preserving privacy while supporting rich query capabilities.</p> <p>Specifically, we explore techniques to dynamically compress distributed provenance. Logically, the compression is achieved by grouping equivalent provenance graphs and maintaining only one concrete copy for each equivalence class. We statically analyze the programs of a target application to allow for quick detection of provenance equivalence at runtime. Our experimental results demonstrate that our distributed provenance compression technique leads to orders of magnitude storage reduction and noticeable query latency improvement over alternative approaches.</p> <p>We further introduce privacy-preserving network provenance (PPNP), a distributed provenance scheme that supports the richness of network provenance while providing strong privacy guarantees over confidential data. We propose a cryptographic approach to preserve the confidentiality of provenance (sub)graphs while allowing authorized nodes to query and access the parts that are visible to them. The proposed PPNP scheme leverages a cryptographic primitive called Searchable Symmetric Encryption (SSE) and allows privacy-preserving retrieval of a labeled (sub)graphs of an encrypted graph. We formally analyze the proposed PPNP scheme and construct a proof-of-concept implementation which we call PrivProv and measure its performance overhead for example application scenarios. Our results demonstrate that PrivProv achieves strong confidentiality guarantees with a negligible increase in latency and low bandwidth overhead.</p> <p><strong>Subgoal 2. Extended provenance query capabilities.</strong> We observe that, in many data-intensive applications, there has been a paradigm shift towards probabilistic and statistical reasoning. Probabilistic logic programming (PLP) languages are increasingly used to supporting developing these applications. We develop a prototype system called P3 (Provenance for Probabilistic logic Programs) for explaining and analyzing probabilistic computations. Our evaluation on several application scenarios (a visual question answering application and a mutual trust calculation in social networks) demonstrates that the system can support a wide-range of provenance queries that provides explanations for the results of learning tasks. We further explore a set of optimizations that can provide two orders of magnitude reduction in the cost of applying probabilistic provenance. These optimizations reduce the total computation time to under 1 second, which makes P3 a practical tool that can be used for real-world applications.</p> <p><strong>Subgoal 3. Provenance-based diagnosis and repair. </strong>Finally, we explore the application of provenance in the field of system management. We have developed a novel concept that we call differential provenance. Differential provenance tracks the causal connections between network states and state changes, just like classical provenance, but it can additionally perform root cause analysis by reasoning about the differences between two provenance trees. We have built a diagnostic tool that is based on differential provenance, and we have used our tool to debug a number of complex realistic problems in two scenarios: software-defined networks and MapReduce jobs. Our results show that differential provenance can deliver very concise diagnostic information; in many cases, it can even identify the precise root cause of the problem.</p> <p>We further propose a first step towards automated repair for SDN applications. Our approach consists of two elements. The first is a data structure we call meta-provenance, which can be used to efficiently find good candidate repairs. Meta-provenance is inspired by the provenance concept from the database community. However, unlike standard provenance which only reasons about changes to data, meta-provenance can also reason about changes to programs. The second element is a system that can efficiently back-test a set of candidate repairs using historical data from the network. This is used to eliminate candidate repairs that do not work well, or that cause other problems. We have implemented a system that maintains meta provenance for SDNs, as well as a prototype debugger that uses the meta provenance to automatically suggest repairs.</p> <p><strong>Publications. </strong>Research of this project have been accepted for publication at premier venues such as SIGCOMM, NSDI, SIGMOD, VLDB, EuroSys, EDBT and CIDR. In addition, the probabilistic provenance work received the best paper award at EDBT.</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/24/2021<br>      Modified by: Wenchao&nbsp;Zhou</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The overall goal of the project is to develop technologies, algorithms, and a complete distributed system that leverage provenance data for system diagnosis. Within this overall goal, we have three key subgoals: (1) provenance maintenance for distributed systems that considers practical constraints such as resource and security concerns; (2) declarative provenance querying that leverages a SQL-like declarative query language for users to annotate and prune provenance data based on a customizable pattern; (3) provenance-assisted system diagnosis and repair.  Subgoal 1. Provenance maintenance with practical constraints. In this project, we consider maintenance optimizations for deducing the storage overhead and for preserving privacy while supporting rich query capabilities.  Specifically, we explore techniques to dynamically compress distributed provenance. Logically, the compression is achieved by grouping equivalent provenance graphs and maintaining only one concrete copy for each equivalence class. We statically analyze the programs of a target application to allow for quick detection of provenance equivalence at runtime. Our experimental results demonstrate that our distributed provenance compression technique leads to orders of magnitude storage reduction and noticeable query latency improvement over alternative approaches.  We further introduce privacy-preserving network provenance (PPNP), a distributed provenance scheme that supports the richness of network provenance while providing strong privacy guarantees over confidential data. We propose a cryptographic approach to preserve the confidentiality of provenance (sub)graphs while allowing authorized nodes to query and access the parts that are visible to them. The proposed PPNP scheme leverages a cryptographic primitive called Searchable Symmetric Encryption (SSE) and allows privacy-preserving retrieval of a labeled (sub)graphs of an encrypted graph. We formally analyze the proposed PPNP scheme and construct a proof-of-concept implementation which we call PrivProv and measure its performance overhead for example application scenarios. Our results demonstrate that PrivProv achieves strong confidentiality guarantees with a negligible increase in latency and low bandwidth overhead.  Subgoal 2. Extended provenance query capabilities. We observe that, in many data-intensive applications, there has been a paradigm shift towards probabilistic and statistical reasoning. Probabilistic logic programming (PLP) languages are increasingly used to supporting developing these applications. We develop a prototype system called P3 (Provenance for Probabilistic logic Programs) for explaining and analyzing probabilistic computations. Our evaluation on several application scenarios (a visual question answering application and a mutual trust calculation in social networks) demonstrates that the system can support a wide-range of provenance queries that provides explanations for the results of learning tasks. We further explore a set of optimizations that can provide two orders of magnitude reduction in the cost of applying probabilistic provenance. These optimizations reduce the total computation time to under 1 second, which makes P3 a practical tool that can be used for real-world applications.  Subgoal 3. Provenance-based diagnosis and repair. Finally, we explore the application of provenance in the field of system management. We have developed a novel concept that we call differential provenance. Differential provenance tracks the causal connections between network states and state changes, just like classical provenance, but it can additionally perform root cause analysis by reasoning about the differences between two provenance trees. We have built a diagnostic tool that is based on differential provenance, and we have used our tool to debug a number of complex realistic problems in two scenarios: software-defined networks and MapReduce jobs. Our results show that differential provenance can deliver very concise diagnostic information; in many cases, it can even identify the precise root cause of the problem.  We further propose a first step towards automated repair for SDN applications. Our approach consists of two elements. The first is a data structure we call meta-provenance, which can be used to efficiently find good candidate repairs. Meta-provenance is inspired by the provenance concept from the database community. However, unlike standard provenance which only reasons about changes to data, meta-provenance can also reason about changes to programs. The second element is a system that can efficiently back-test a set of candidate repairs using historical data from the network. This is used to eliminate candidate repairs that do not work well, or that cause other problems. We have implemented a system that maintains meta provenance for SDNs, as well as a prototype debugger that uses the meta provenance to automatically suggest repairs.  Publications. Research of this project have been accepted for publication at premier venues such as SIGCOMM, NSDI, SIGMOD, VLDB, EuroSys, EDBT and CIDR. In addition, the probabilistic provenance work received the best paper award at EDBT.          Last Modified: 06/24/2021       Submitted by: Wenchao Zhou]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Communication without Repudiation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2014</AwardEffectiveDate>
<AwardExpirationDate>06/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>298905.00</AwardTotalIntnAmount>
<AwardAmount>298905</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A "non-repudiation protocol" between two parties S and R over the Internet defends against party S sending a message to party R then later repudiating that it has sent the message and against party R receiving a message from party S then later repudiating that it has received the message. The main goal of this proposal is to design non-repudiation protocols that do not involve a third party that needs to be blindly trusted by both S and R. Non-repudiation protocols that do not involve trusted parties are essential for realizing secure certified email services over the Internet.&lt;br/&gt;&lt;br/&gt;This project attempts to answer three fundamental questions concerning the design of non-repudiation protocols. The first question is "Can one design non-repudiation protocols that do not involve a trusted third party?" The second question is "What is a least invasive trusted party that needs to be involved in a non-repudiation protocol?" The third question is "Can one plan a certified email service based on a non-repudiation protocol that involves a least invasive trusted party?" To answer these questions, the PI proposes to design non-repudiation protocols that do not involve trusted parties or that involve the least invasive trusted parties. In addition, the proposed protocol will tolerate the loss and corruption of sent messages and will not require the participating parties to have tightly synchronized clocks. The project is also proceeding towards implementing a certified email service that is based on a non-repudiation protocol that involves a least invasive trusted party.</AbstractNarration>
<MinAmdLetterDate>06/20/2014</MinAmdLetterDate>
<MaxAmdLetterDate>06/20/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1440035</AwardID>
<Investigator>
<FirstName>Mohamed</FirstName>
<LastName>Gouda</LastName>
<PI_MID_INIT>G</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mohamed G Gouda</PI_FULL_NAME>
<EmailAddress>gouda@cs.utexas.edu</EmailAddress>
<PI_PHON>5124719532</PI_PHON>
<NSF_ID>000383193</NSF_ID>
<StartDate>06/20/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName>Austin</CityName>
<StateCode>TX</StateCode>
<ZipCode>787121757</ZipCode>
<StreetAddress><![CDATA[2317 Speedway Stop D9500]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~298905</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>A non-repudiation protocol from one party S to another party R performs two tasks. First, the protocol enables party S to send to party R some text x along with a proof (that can convince an unbiased judge) that x was indeed sent by S. Second, the protocol enables party R to receive text x from S and to send to S a proof (that can convince the judge) that x was indeed received by</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>Only one of two outcomes is possible when the execution of the non-repudiation protocol from S to R terminates. The first outcome is that both S and R obtain their required proofs. The second outcome is that neither S nor R obtains its required proof.</p> <p>&nbsp;</p> <p>Non-repudiation protocols can support several important applications over the Internet. Examples of these applications are certified email, cloud storage, electronic billing, and meter reading in smart grids.</p> <p>&nbsp;</p> <p>In this project, we identify and design three interesting classes of non-repudiation protocols:</p> <p>Class 1 Non-repudiation protocols that do not have a trusted third party (beside the two parties S and R).</p> <p>Class 2 Non-repudiation protocols that use cloud C as a trusted third party to store all the proofs concerning text x under the assumption that all the proofs stored in cloud C are never lost.</p> <p>Class 3 Non-repudiation protocols that use cloud C as a trusted third party to store all the proofs concerning text x under the assumption that some or all the proofs stored in cloud C can be lost.</p> <p>&nbsp;</p> <p>The PI of this project and two Ph.D. students, namely Mr. Muqeet Ali and Ms. Rezwana Reaz, at the Computer Science Dept. in the University of Texas at Austin were all supported in part by this project.</p> <p>&nbsp;</p> <p>Our team published two conference papers on the design of Class 1 Non-repudiation protocols.</p> <p>&nbsp;</p> <p>Our team also published one conference paper on the design of Class 2 Non-repudiation protocols.</p> <p>&nbsp;</p> <p>Finally, our team published one technical report on the design of Class 3 Non-repudiation protocols.</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/11/2019<br>      Modified by: Mohamed&nbsp;G&nbsp;Gouda</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ A non-repudiation protocol from one party S to another party R performs two tasks. First, the protocol enables party S to send to party R some text x along with a proof (that can convince an unbiased judge) that x was indeed sent by S. Second, the protocol enables party R to receive text x from S and to send to S a proof (that can convince the judge) that x was indeed received by        Only one of two outcomes is possible when the execution of the non-repudiation protocol from S to R terminates. The first outcome is that both S and R obtain their required proofs. The second outcome is that neither S nor R obtains its required proof.     Non-repudiation protocols can support several important applications over the Internet. Examples of these applications are certified email, cloud storage, electronic billing, and meter reading in smart grids.     In this project, we identify and design three interesting classes of non-repudiation protocols:  Class 1 Non-repudiation protocols that do not have a trusted third party (beside the two parties S and R).  Class 2 Non-repudiation protocols that use cloud C as a trusted third party to store all the proofs concerning text x under the assumption that all the proofs stored in cloud C are never lost.  Class 3 Non-repudiation protocols that use cloud C as a trusted third party to store all the proofs concerning text x under the assumption that some or all the proofs stored in cloud C can be lost.     The PI of this project and two Ph.D. students, namely Mr. Muqeet Ali and Ms. Rezwana Reaz, at the Computer Science Dept. in the University of Texas at Austin were all supported in part by this project.     Our team published two conference papers on the design of Class 1 Non-repudiation protocols.     Our team also published one conference paper on the design of Class 2 Non-repudiation protocols.     Finally, our team published one technical report on the design of Class 3 Non-repudiation protocols.          Last Modified: 06/11/2019       Submitted by: Mohamed G Gouda]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

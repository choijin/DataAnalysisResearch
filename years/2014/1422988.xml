<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CIF: Small: Status Updating Systems and Networks</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>476045.00</AwardTotalIntnAmount>
<AwardAmount>476045</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Phillip Regalia</SignBlockName>
<PO_EMAI>pregalia@nsf.gov</PO_EMAI>
<PO_PHON>7032922981</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Increasingly ubiquitous network connectivity has engendered applications in which sources send real-time updates of their status to interested recipients.  Examples include position, velocity and acceleration updates from nearby cars that facilitate safe maneuvers in an intelligent transportation system; forest temperature and humidity updates that can help better predict and control forest fires; and status reports gathered from the human body that enable timely detection of bodily ailments.  These applications need status updates to be as timely as possible despite limited network resources.  This project explores new timeliness metrics as a basis for the evaluation and design of status update systems.  &lt;br/&gt;&lt;br/&gt;Starting from a time-average status-age measure that applies to a broad class of systems, this project analyzes queue-theoretic system abstractions consisting of a source, service facility and monitor.  While initial conclusions have been based on queue-theoretic abstractions that are simpler than their real-world counterparts, the resulting insights are a useful starting point in understanding and designing systems that support real-time status updates.  On this basis, the project goals include the design and evaluation of (1) distributed resource sharing algorithms for simple networks of competing status updaters, (2) multiple access protocols for status-updating wireless sensors sharing a random access channel, and (3) stochastic approximation algorithms for online optimization of status update systems operating in networks. An improved understanding of the analytic fundamentals of status updating will contribute to the development and ultimate deployment of efficient and timely status updating systems.</AbstractNarration>
<MinAmdLetterDate>08/05/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/05/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1422988</AwardID>
<Investigator>
<FirstName>Roy</FirstName>
<LastName>Yates</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Roy D Yates</PI_FULL_NAME>
<EmailAddress>ryates@winlab.rutgers.edu</EmailAddress>
<PI_PHON>8489320946</PI_PHON>
<NSF_ID>000194313</NSF_ID>
<StartDate>08/05/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Rutgers University New Brunswick</Name>
<CityName>Piscataway</CityName>
<ZipCode>088543925</ZipCode>
<PhoneNumber>8489320150</PhoneNumber>
<StreetAddress>33 Knightsbridge Road</StreetAddress>
<StreetAddress2><![CDATA[2nd Floor East Wing]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NJ06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001912864</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RUTGERS, THE STATE UNIVERSITY OF NEW JERSEY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001912864</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[WINLAB, Rutgers University]]></Name>
<CityName>North Brunswick</CityName>
<StateCode>NJ</StateCode>
<ZipCode>089023390</ZipCode>
<StreetAddress><![CDATA[671 US 1]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NJ12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramElement>
<Code>7797</Code>
<Text>Comm &amp; Information Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7363</Code>
<Text>RES IN NETWORKING TECH &amp; SYS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7935</Code>
<Text>COMM &amp; INFORMATION THEORY</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~476045</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Increasingly ubiquitous connectivity to communication networks and availability of portable devices have engendered applications in which sources - people and environmental sensors - send updates of their status to interested recipients. These applications need status updates at the recipients to be as timely as possible; however, this is typically constrained by limited network resources. In this project, timeliness was measured by the <em>Age of Information</em> (AoI) - how old is the freshest received update. This project explored AoI as a basis for the evaluation and design of status update systems. This project addressed three questions:</p> <p><strong>How should multiple updaters share network communication resources?</strong></p> <p>To address this question, this work compared service systems that simply queued all backlogged updates against systems that allowed preemption of either an update in service or an update in waiting. &nbsp;The performance of these systems was characterized in terms of the average ages of the updaters. This work introduced the stochastic hybrid systems (SHS) method, a systematic procedure for the analysis of age in systems with finite state.</p> <p><strong>How should streaming data in the form of updates be compressed without causing updates to become stale?&nbsp;</strong></p> <p>This question was examined using a system model in which source symbols are interpreted as status updates. However, because these source symbols must be delivered through a limited bit rate service facility, the timeliness of updates could be improved by compression of the source. This work introduced a model in which the data compression created variability in the delivery of source symbols, which in turn induces queueing delays at the service facility. In this setting, this work analyzed the achievable performance of lossless block coding algorithms. A variation on this model that adapts the codebook to match the size of the backlog was then shown to improve AoI performance.&nbsp;</p> <p><strong>How should a source send updates&nbsp;when the source is able to observe the state of the network?&nbsp;</strong></p> <p>Work in this area considered a system in which the source monitors the state of the updating process. This enables the source to use a "just-in-time" policy that submits a "fresh" update as soon as it sees that the service facility is ready to serve a new arrival; thus precluding the loss of timeliness induced by queueing. This work identified optimal submission policies when the source is constrained in the average rate of update submission. In a surprising result, it was shown that just-in-time policies can be suboptimal. An optimal policy is lazy and includes a waiting period if the prior update was delivered quickly.&nbsp;</p> <p>&nbsp;In addition to addressing these three primary questions, AoI was also applied to the evaluation of&nbsp;latency-sensitive networked applications, specifically, mobile cloud gaming and distributed storage.</p> <p>This led to a new model for mobile cloud gaming systems aimed at optimizing the timeliness of video frames based on the AoI metric. Mobile clients submit actions through an access network to a game server that generates video frames at a constant frame rate. At the mobile device, each displayed frame represents a game status update. We developed a model to characterize the frame delivery process and derived a simple formula for the average AoI in a tightly synchronized low-latency mobile gaming system in which the inter-frame period is a significant contributor to latency. We validated the model by simulation of a low-latency edge cloud gaming system. Our evaluation scenarios included single-player games as well as multi-player games in which the game processing was conducted by a combination of a centralized game server and edge-cloud renderers.</p> <p>We also used the AoI metric is used to examine a multicast network in which real-time status updates are sent to a group of replicated cloud servers. We showed that in order to keep the information fresh at each server, the source should terminate the transmission of the current update and start sending a new update packet as soon as the number of received acknowledgements reached a threshold. We derived the AoI-minimizing threshold that balances the likelihood of getting the latest update and the freshness of the latest update for shifted exponential link delay.&nbsp;</p> <p>This project promoted the professional development of PhD student Jing Zhong.&nbsp;&nbsp;Because of his work on this project, he had internship opportunities at Huawei and AT&amp;T in media content distribution networks.&nbsp;&nbsp;He completed his PhD in October 2019 and has joined Facebook as a research scientist. In addition, PhD student Mehrnaz Tavan, the primary student on the Mobile Cloud Gaming work, graduated in 2018 and is now employed as a data scientist at Ebay.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/16/2019<br>      Modified by: Roy&nbsp;D&nbsp;Yates</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Increasingly ubiquitous connectivity to communication networks and availability of portable devices have engendered applications in which sources - people and environmental sensors - send updates of their status to interested recipients. These applications need status updates at the recipients to be as timely as possible; however, this is typically constrained by limited network resources. In this project, timeliness was measured by the Age of Information (AoI) - how old is the freshest received update. This project explored AoI as a basis for the evaluation and design of status update systems. This project addressed three questions:  How should multiple updaters share network communication resources?  To address this question, this work compared service systems that simply queued all backlogged updates against systems that allowed preemption of either an update in service or an update in waiting.  The performance of these systems was characterized in terms of the average ages of the updaters. This work introduced the stochastic hybrid systems (SHS) method, a systematic procedure for the analysis of age in systems with finite state.  How should streaming data in the form of updates be compressed without causing updates to become stale?   This question was examined using a system model in which source symbols are interpreted as status updates. However, because these source symbols must be delivered through a limited bit rate service facility, the timeliness of updates could be improved by compression of the source. This work introduced a model in which the data compression created variability in the delivery of source symbols, which in turn induces queueing delays at the service facility. In this setting, this work analyzed the achievable performance of lossless block coding algorithms. A variation on this model that adapts the codebook to match the size of the backlog was then shown to improve AoI performance.   How should a source send updates when the source is able to observe the state of the network?   Work in this area considered a system in which the source monitors the state of the updating process. This enables the source to use a "just-in-time" policy that submits a "fresh" update as soon as it sees that the service facility is ready to serve a new arrival; thus precluding the loss of timeliness induced by queueing. This work identified optimal submission policies when the source is constrained in the average rate of update submission. In a surprising result, it was shown that just-in-time policies can be suboptimal. An optimal policy is lazy and includes a waiting period if the prior update was delivered quickly.    In addition to addressing these three primary questions, AoI was also applied to the evaluation of latency-sensitive networked applications, specifically, mobile cloud gaming and distributed storage.  This led to a new model for mobile cloud gaming systems aimed at optimizing the timeliness of video frames based on the AoI metric. Mobile clients submit actions through an access network to a game server that generates video frames at a constant frame rate. At the mobile device, each displayed frame represents a game status update. We developed a model to characterize the frame delivery process and derived a simple formula for the average AoI in a tightly synchronized low-latency mobile gaming system in which the inter-frame period is a significant contributor to latency. We validated the model by simulation of a low-latency edge cloud gaming system. Our evaluation scenarios included single-player games as well as multi-player games in which the game processing was conducted by a combination of a centralized game server and edge-cloud renderers.  We also used the AoI metric is used to examine a multicast network in which real-time status updates are sent to a group of replicated cloud servers. We showed that in order to keep the information fresh at each server, the source should terminate the transmission of the current update and start sending a new update packet as soon as the number of received acknowledgements reached a threshold. We derived the AoI-minimizing threshold that balances the likelihood of getting the latest update and the freshness of the latest update for shifted exponential link delay.   This project promoted the professional development of PhD student Jing Zhong.  Because of his work on this project, he had internship opportunities at Huawei and AT&amp;T in media content distribution networks.  He completed his PhD in October 2019 and has joined Facebook as a research scientist. In addition, PhD student Mehrnaz Tavan, the primary student on the Mobile Cloud Gaming work, graduated in 2018 and is now employed as a data scientist at Ebay.           Last Modified: 10/16/2019       Submitted by: Roy D Yates]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative Research: Constraint-Based Generation of Database States for Testing Database Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>158603.00</AwardTotalIntnAmount>
<AwardAmount>174603</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Testing is essential for database applications to function correctly and with acceptable performance when deployed. In practice, it is often necessary for vendors of database application software to test their software adequately before selling or integrating their software to the database owner. However, testing database applications is very costly. In particular, it is time-consuming and challenging to generate desirable database states, an important portion of test inputs for testing database applications. However, little research has been conducted to provide scalable, effective tool support for generating database states to achieve various testing objectives.&lt;br/&gt;&lt;br/&gt;This research aims to adequately generate database states for database applications by developing novel techniques for (1) generating desirable database states to satisfy the given constraints on result sets from the given query, (2) applying this preceding technique on a variety of testing tasks, and (3) exploring more complicated situations such as constraints in multiple interacting queries. The research advances understanding of fundamental issues related to testing database applications and the design and implementation of practical techniques to carry out such testing. Among the broader impacts of the project includes integration of the research into education programs and enhancement of teaching and research infrastructure.</AbstractNarration>
<MinAmdLetterDate>02/28/2014</MinAmdLetterDate>
<MaxAmdLetterDate>02/28/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1434590</AwardID>
<Investigator>
<FirstName>Tao</FirstName>
<LastName>Xie</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tao Xie</PI_FULL_NAME>
<EmailAddress>taoxie@illinois.edu</EmailAddress>
<PI_PHON>2172445931</PI_PHON>
<NSF_ID>000430850</NSF_ID>
<StartDate>02/28/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>CHAMPAIGN</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207473</ZipCode>
<StreetAddress><![CDATA[SUITE A 1901 SOUTH FIRST ST.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9217</Code>
<Text>NATNL RESERCH &amp; EDUCAT NETWORK</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~158603</FUND_OBLG>
<FUND_OBLG>2010~8000</FUND_OBLG>
<FUND_OBLG>2012~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The main goal of the project was to develop techniques and tools that adequately generate database states for database applications to test database applications. The problem of testing database applications can be broadly classified into the problems of program input generation, database state preparation (i.e., database instance preparation), and test result verification. Database states form an important portion of test inputs for testing database applications.</p> <p>The outcomes of this project were a set of new techniques&nbsp;and tools for generating desirable database states. The project advanced understanding of fundamental issues related to testing database applications and the design and implementation of practical techniques to carry out such testing. The project explored new approaches with novel applications of constraint solving and symbolic execution in database application testing, and development of new techniques and tools for database application testing.</p> <p>More specifically, we have developed techniques and tools that generate database states by mocking the actual database interacted by the database application under test, and then leveraging symbolic execution to generate tests for achieving high code coverage. We have developed techniques and tools that generate database states to achieve advanced code coverage such as boundary value coverage, logical coverage, and mutation coverage for the source code under test in the database application under test. We have developed techniques and tools that synthesize new database interactions to replace the original ones from the database application under test, to bridge various constraints within a database application: query-construction constraints, query constraints, database schema constraints, and query-result-manipulation constraints. We have developed techniques and tools that leverage database states anonymized from real-world existing database states (due to data privcay) while achieving desirable code coverage of the database application under test. We have developed techniques and tools that generate program inputs for achieving high code coverage of the database application under test, given a database state (which can be manually or automatically constructed or from an existing database).</p> <p>We have disseminated our research results through publications in top venues such as highly-competitive conferences and journals, along with public tool and evaluation-artifact releases and research exchanges. We have successfully trained next-generation researchers via student training and mentoring, and trained next-generation software engineers through undergraduate-level and graduate-level education.</p> <p>&nbsp;</p><br> <p>            Last Modified: 01/29/2016<br>      Modified by: Tao&nbsp;Xie</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The main goal of the project was to develop techniques and tools that adequately generate database states for database applications to test database applications. The problem of testing database applications can be broadly classified into the problems of program input generation, database state preparation (i.e., database instance preparation), and test result verification. Database states form an important portion of test inputs for testing database applications.  The outcomes of this project were a set of new techniques and tools for generating desirable database states. The project advanced understanding of fundamental issues related to testing database applications and the design and implementation of practical techniques to carry out such testing. The project explored new approaches with novel applications of constraint solving and symbolic execution in database application testing, and development of new techniques and tools for database application testing.  More specifically, we have developed techniques and tools that generate database states by mocking the actual database interacted by the database application under test, and then leveraging symbolic execution to generate tests for achieving high code coverage. We have developed techniques and tools that generate database states to achieve advanced code coverage such as boundary value coverage, logical coverage, and mutation coverage for the source code under test in the database application under test. We have developed techniques and tools that synthesize new database interactions to replace the original ones from the database application under test, to bridge various constraints within a database application: query-construction constraints, query constraints, database schema constraints, and query-result-manipulation constraints. We have developed techniques and tools that leverage database states anonymized from real-world existing database states (due to data privcay) while achieving desirable code coverage of the database application under test. We have developed techniques and tools that generate program inputs for achieving high code coverage of the database application under test, given a database state (which can be manually or automatically constructed or from an existing database).  We have disseminated our research results through publications in top venues such as highly-competitive conferences and journals, along with public tool and evaluation-artifact releases and research exchanges. We have successfully trained next-generation researchers via student training and mentoring, and trained next-generation software engineers through undergraduate-level and graduate-level education.          Last Modified: 01/29/2016       Submitted by: Tao Xie]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

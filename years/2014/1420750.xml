<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF:Small:Algorithmic Number Theory</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>450000.00</AwardTotalIntnAmount>
<AwardAmount>450000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Joseph Maurice Rojas</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project addresses the design and analysis of algorithms in number theory.  It focuses on three subareas in detail: problems related to the prime factorization of integers, the behavior of iterated maps on finite algebraic objects such as fields and rings, and the exploitation of ideas from combinatorics and analytic number theory to further our knowledge about polynomial factoring.&lt;br/&gt;&lt;br/&gt;The problems studied in this project are among the most important in computational number theory, and provide key examples for computational complexity theory and the emerging theory of quantum computing.  Algorithms to solve these problems are also extremely useful for secure and reliable electronic communication, for computer algebra, and for pseudo-random number generation. Results obtained in the project will have the potential to impact all of the above areas.  They will also enhance the connections between theoretical computer science and pure mathematics. This is because the behavior of number-theoretic algorithms is intimately connected to significant questions in analytic number theory, algebraic geometry, probability theory, and dynamical systems.&lt;br/&gt;&lt;br/&gt;A key component of the project is graduate student support.  Such aid, in the form of research assistantships supervised by the PI, will help maintain the pipeline of algorithmically trained researchers in the mathematical sciences.  The project will also help integrate research and teaching, by helping him to develop and publicize interdisciplinary courses and seminars on topics such as applied number theory, communication technology, and quantum computation.</AbstractNarration>
<MinAmdLetterDate>07/30/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/30/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1420750</AwardID>
<Investigator>
<FirstName>Eric</FirstName>
<LastName>Bach</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Eric Bach</PI_FULL_NAME>
<EmailAddress>bach@cs.wisc.edu</EmailAddress>
<PI_PHON>6082627997</PI_PHON>
<NSF_ID>000377156</NSF_ID>
<StartDate>07/30/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 6401]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WI02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>161202122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WISCONSIN SYSTEM</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041188822</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Computer Sciences Department]]></Name>
<CityName>Madison</CityName>
<StateCode>WI</StateCode>
<ZipCode>537061685</ZipCode>
<StreetAddress><![CDATA[1210 W. Dayton St.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WI02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7933</Code>
<Text>NUM, SYMBOL, &amp; ALGEBRA COMPUT</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~450000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project was concerned with the design and analysis of<br />efficient algorithms for important problems in number theory<br />and algebra.&nbsp; These problems include, but are not limited<br />to, the testing of large numbers for primality, factorization<br />of numbers and polynomials, the solution of exponential<br />congruences (discrete logarithms), and the analysis of<br />iterated mappings.&nbsp; These algorithms, and the theory behind<br />them, are important to secure and reliable communication,<br />systems for doing algebra by computer, the production and<br />testing of pseudo-random numbers, and the design of<br />arithmetic hardware.&nbsp; Additionally, number theory is<br />central to theoretical computer science as a source of<br />examples related to the power of polynomial time computation.<br /><br />Notable results from the project include the following:<br /><br />1) Deeper analysis of the strong prime test, which<br />is used in cryptography.&nbsp; This was motivated by the idea<br />that one should apply Occam's Razor to each part of an<br />important algorithm, making sure that the calculations it does</p> <p>are actually needed.&nbsp; This was done with the squaring<br />sequence in the strong prime test.&nbsp; It was discovered<br />that no test that examines only the last few numbers in<br />the sequence can be correct.</p> <p>2) Generalization of the discrete logarithm problem to groups that<br />act on a finite set.&nbsp; The analog to solving an exponential congruence<br />is to find a group element that sends a given set element to another.<br />A randomized algorithm, applicable to any group, was found and<br />determined to be best possible.&nbsp; The case of the symmetric group<br />was also studied intensively, and a deterministic algorithm for this<br />group with optimal complexity was found.<br /><br />3) Critical study of quantum factorization records.&nbsp; Examination<br />of the largest integers factored by quantum computation revealed<br />that each such computation actually factored an entire class<br />of numbers (infinitely many, assuming widely believed conjectures<br />of number theory).&nbsp; Furthermore, the bulk of the work could<br />actually have be done by ordinary (classical) means.&nbsp;&nbsp; Thus, these<br />records are less impressive than one might first believe.<br /><br />4) Barriers to deterministic construction of non-squares (quadratic<br />nonresidues) modulo primes.&nbsp; Finding nonresidues is the obstruction<br />to efficient deteterministic computation of square roots modulo primes<br />(a long standing open problem in complexity theory).&nbsp; Non-squares can be<br />made by exploiting reciprocity laws, which predict the factorization of<br />a polynomial modulo all primes.&nbsp; It was shown that any finite set of<br />reciprocity laws is insufficient to construct nonresidues for all primes.<br />Indeed, a set of primes with positive density will always escape such a<br />method.</p> <p>5) Refined study of linear congruence predictors.&nbsp; Iterated affine maps<br />are commonly used as a source of pseudo-random numbers, but<br />sequences produced in this way can be predicted in polynomial time.<br />At the heart of the prediction process is a sequence of greatest<br />common divisor (gcd) computations.&nbsp; A heuristic model for the average<br />number of gcd's needed was constructed. This average can reckoned<br />accurately using a formula reminiscent of Euler's product<br />for the Riemann zeta function.</p> <p>Work from the project will have broader impacts on the<br />neighboring fields of operations research and quantum information.<br />The Boolean function work sheds light on the complexity of unit<br />testing, in the presence of arbitrary sequential costs and acceptance<br />criteria.&nbsp; This is important in operations research and decision theory.<br />For quantum information, project results suggest that efforts<br />should go toward implementing general-purpose factoring methods,<br />rather than attacking specific numbers.&nbsp; Also, the design of improved<br />block codes aids in the practical realization of large quantum computers.<br />Another broader impact is in education: results from the project will<br />be incorporated into courses on algorithmic number theory, cryptography,<br />and quantum computation.<br /><br /><br />Boolean functions and novel error protection coding schemes for<br />quantum information were also studied.&nbsp; With the aid of a novel<br />collision-type algorithm, it became possible to enumerate and classify<br />correlation immune functions of six variables.&nbsp; These functions are<br />important in cryptography.<br /><br />Funds from the project were used to support several graduate students<br />in computer science.&nbsp; These students have gone on to pursue doctoral<br />studies in computer science, or taken positions in industry.<br /><br /><br /></p><br> <p>            Last Modified: 08/01/2021<br>      Modified by: Eric&nbsp;Bach</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project was concerned with the design and analysis of efficient algorithms for important problems in number theory and algebra.  These problems include, but are not limited to, the testing of large numbers for primality, factorization of numbers and polynomials, the solution of exponential congruences (discrete logarithms), and the analysis of iterated mappings.  These algorithms, and the theory behind them, are important to secure and reliable communication, systems for doing algebra by computer, the production and testing of pseudo-random numbers, and the design of arithmetic hardware.  Additionally, number theory is central to theoretical computer science as a source of examples related to the power of polynomial time computation.  Notable results from the project include the following:  1) Deeper analysis of the strong prime test, which is used in cryptography.  This was motivated by the idea that one should apply Occam's Razor to each part of an important algorithm, making sure that the calculations it does  are actually needed.  This was done with the squaring sequence in the strong prime test.  It was discovered that no test that examines only the last few numbers in the sequence can be correct.  2) Generalization of the discrete logarithm problem to groups that act on a finite set.  The analog to solving an exponential congruence is to find a group element that sends a given set element to another. A randomized algorithm, applicable to any group, was found and determined to be best possible.  The case of the symmetric group was also studied intensively, and a deterministic algorithm for this group with optimal complexity was found.  3) Critical study of quantum factorization records.  Examination of the largest integers factored by quantum computation revealed that each such computation actually factored an entire class of numbers (infinitely many, assuming widely believed conjectures of number theory).  Furthermore, the bulk of the work could actually have be done by ordinary (classical) means.   Thus, these records are less impressive than one might first believe.  4) Barriers to deterministic construction of non-squares (quadratic nonresidues) modulo primes.  Finding nonresidues is the obstruction to efficient deteterministic computation of square roots modulo primes (a long standing open problem in complexity theory).  Non-squares can be made by exploiting reciprocity laws, which predict the factorization of a polynomial modulo all primes.  It was shown that any finite set of reciprocity laws is insufficient to construct nonresidues for all primes. Indeed, a set of primes with positive density will always escape such a method.  5) Refined study of linear congruence predictors.  Iterated affine maps are commonly used as a source of pseudo-random numbers, but sequences produced in this way can be predicted in polynomial time. At the heart of the prediction process is a sequence of greatest common divisor (gcd) computations.  A heuristic model for the average number of gcd's needed was constructed. This average can reckoned accurately using a formula reminiscent of Euler's product for the Riemann zeta function.  Work from the project will have broader impacts on the neighboring fields of operations research and quantum information. The Boolean function work sheds light on the complexity of unit testing, in the presence of arbitrary sequential costs and acceptance criteria.  This is important in operations research and decision theory. For quantum information, project results suggest that efforts should go toward implementing general-purpose factoring methods, rather than attacking specific numbers.  Also, the design of improved block codes aids in the practical realization of large quantum computers. Another broader impact is in education: results from the project will be incorporated into courses on algorithmic number theory, cryptography, and quantum computation.   Boolean functions and novel error protection coding schemes for quantum information were also studied.  With the aid of a novel collision-type algorithm, it became possible to enumerate and classify correlation immune functions of six variables.  These functions are important in cryptography.  Funds from the project were used to support several graduate students in computer science.  These students have gone on to pursue doctoral studies in computer science, or taken positions in industry.          Last Modified: 08/01/2021       Submitted by: Eric Bach]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

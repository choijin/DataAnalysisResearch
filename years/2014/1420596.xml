<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Can Pair Programming Reduce the Gender Gap in Computing? A Study of Middle School Students Learning to Program</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>701767.00</AwardTotalIntnAmount>
<AwardAmount>701767</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11090000</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DRL</Abbreviation>
<LongName>Division Of Research On Learning</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Jolene Jesse</SignBlockName>
<PO_EMAI>jjesse@nsf.gov</PO_EMAI>
<PO_PHON>7032927303</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Learning to program is the entry point in a computing pathway, but large numbers of students, particularly women and girls, drop out of introductory programming courses at the college and K-12 level. To attract and retain girls and women, there is a need for pedagogical approaches that foster persistence, creativity, fearlessness, computational ways of thinking and problem solving, or "Intrepid Exploration," a term coined by this team of researchers. The proposed study focuses on pair programming in middle school--a gender-equitable practice where two people collaborate on one computer. Research suggests that pair programming benefits both women and men, and that benefits depend on partner compatibility. However, most pair-programming research has been done with university students or professional programmers, and focuses on the efficiency or correctness of a problem solution, rather than on the nature of the collaboration or the problem-solving process. The goal of this study is to understand the conditions under which pair programming can foster the kind of thinking and problem solving that will prepare female middle school students to pursue and persist in computing fields.&lt;br/&gt;&lt;br/&gt;This research will be a design experiment with 80 girls and boys from a range of socioeconomic and cultural backgrounds who are enrolled in game programming classes. The classes will be taught using a pair programming toolkit developed over ten years by a collaboration of researchers and teachers. In-depth and multi-method data collection and analysis will be used to describe gender-based differences in student interactions, and to study how interactions evolve over time, and the individual, relational, and institutional factors that play a role in the nature of those interactions. Data will be collected on the implementation process, as well as on individual learning, interpersonal dynamics, sequences of interactions, and the context in which learning takes place. The mixed methods analysis process will focus on the integration of data from multiple sources following criteria to ensure the design quality and interpretive rigor of the approach. The project will result in a descriptive model of what pair programming in middle school looks like, for whom it fosters intrepid exploration, and the interactional processes that are associated with the development of intrepid exploration.&lt;br/&gt;&lt;br/&gt;The results will advance knowledge and have clear implications for educational practice. They will contribute to our understanding of the conditions under which collaboration in middle school can address the gender gap in computing, as well as whether there are gender-based and cultural differences in interactions, and if they affect the kinds of thinking and problem solving needed to succeed in computing. The research will also be the first to investigate how to support and measure the development of intrepid exploration in efforts to increase gender diversity in computing. The findings will also be responsive to the practical concerns of teachers, such as how to foster effective pair programming, how to assess individual learning, and how to provide a tailored and gender-equitable pair programming experience.</AbstractNarration>
<MinAmdLetterDate>08/18/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/18/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1420596</AwardID>
<Investigator>
<FirstName>Linda</FirstName>
<LastName>Werner</LastName>
<PI_MID_INIT>L</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Linda L Werner</PI_FULL_NAME>
<EmailAddress>linda@soe.ucsc.edu</EmailAddress>
<PI_PHON>8314272076</PI_PHON>
<NSF_ID>000117782</NSF_ID>
<StartDate>08/18/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jill</FirstName>
<LastName>Denner</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jill Denner</PI_FULL_NAME>
<EmailAddress>jilld@etr.org</EmailAddress>
<PI_PHON>8314402264</PI_PHON>
<NSF_ID>000440240</NSF_ID>
<StartDate>08/18/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Shannon</FirstName>
<LastName>Campe</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shannon Campe</PI_FULL_NAME>
<EmailAddress>shannonc@etr.org</EmailAddress>
<PI_PHON>8314384060</PI_PHON>
<NSF_ID>000623708</NSF_ID>
<StartDate>08/18/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>ETR Associates</Name>
<CityName>Scotts Valley</CityName>
<ZipCode>950663453</ZipCode>
<PhoneNumber>8314402235</PhoneNumber>
<StreetAddress>5619 Scotts Valley Drive</StreetAddress>
<StreetAddress2><![CDATA[Suite 140]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>064774037</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>EDUCATION, TRAINING, AND RESEARCH ASSOCIATES</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>064774037</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[ETR Associates]]></Name>
<CityName>Scotts Valey</CityName>
<StateCode>CA</StateCode>
<ZipCode>950664200</ZipCode>
<StreetAddress><![CDATA[4 Carbonero Way]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1544</Code>
<Text>RES ON GENDER IN SCI &amp; ENGINE</Text>
</ProgramElement>
<ProgramReference>
<Code>1074</Code>
<Text>K-12</Text>
</ProgramReference>
<ProgramReference>
<Code>8212</Code>
<Text>Broaden Particip STEM Resrch</Text>
</ProgramReference>
<Appropriation>
<Code>0414</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~701767</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The growing national and international movement to increase access to quality computer science education in K-12 has generated a need for tools and research that can be used by educators. Pair programming&mdash;where two people work together on one computer&mdash;is a form of collaboration that has shown promise as a way to attract underrepresented groups to computing and to improve learning. This study describes what pair programming looks like in middle school, and the types of interactions that promote and undermine the kind of thinking and problem solving that prepares students to pursue and persist in computer science, what we call &ldquo;intrepid exploration&rdquo; (IE).</p> <p>Video and surveys were collected from 80 middle school students who programmed a computer game with a partner. Over the 12 after school classes, there were significant increases in students&rsquo; programming knowledge, but significant decreases their reported level of friendship with their partner.</p> <p>Analyses of their interactions show that they spent less than half of their time interacting about their game; the rest of the time was spent talking about other things, talking to peers, or not interacting at all. There were no differences in their types of interaction across gender or socioeconomic status. However, there were some differences due to prior attitudes and knowledge: pairs of students who felt more positive about working with a partner also spent more time interacting about their game, and pairs of students who had more programming knowledge in the beginning spent more time exploring the software. The analyses also details the kinds of behaviors that support and undermine exploration and persistence in the face of challenges. These results have implications for how to pair and train students so that partners engage in productive interactions and the kinds of thinking and problem solving needed to be successful in computer science.</p> <p>Results included the development of systems to measure and monitor pair interactions and problem solving over time, and to assess the computational sophistication of student-created computer games. The results of the study were also used to inform the development of a Toolkit that includes strategies and tips that educators can use to implement and strengthen pair programming in K-12 across a range of schools and locations.</p> <p>While most research on children learning to program focuses on individual processes; this study fills a gap in our understanding of the social contexts in which novice programmers learn to persist in the face of challenges.</p> <p>The project generated findings that can be used to inform classroom-based efforts to improve learning and increase diversity in computing fields using this collaborative strategy. The results &nbsp;show the range of effective and ineffective interactions, as well as the barriers and opportunities of promising practices such as pair programming to engage students in the kinds of thinking and problem solving that lead to persistence in computing classes.</p><br> <p>            Last Modified: 11/14/2018<br>      Modified by: Shannon&nbsp;Campe</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The growing national and international movement to increase access to quality computer science education in K-12 has generated a need for tools and research that can be used by educators. Pair programming&mdash;where two people work together on one computer&mdash;is a form of collaboration that has shown promise as a way to attract underrepresented groups to computing and to improve learning. This study describes what pair programming looks like in middle school, and the types of interactions that promote and undermine the kind of thinking and problem solving that prepares students to pursue and persist in computer science, what we call "intrepid exploration" (IE).  Video and surveys were collected from 80 middle school students who programmed a computer game with a partner. Over the 12 after school classes, there were significant increases in students? programming knowledge, but significant decreases their reported level of friendship with their partner.  Analyses of their interactions show that they spent less than half of their time interacting about their game; the rest of the time was spent talking about other things, talking to peers, or not interacting at all. There were no differences in their types of interaction across gender or socioeconomic status. However, there were some differences due to prior attitudes and knowledge: pairs of students who felt more positive about working with a partner also spent more time interacting about their game, and pairs of students who had more programming knowledge in the beginning spent more time exploring the software. The analyses also details the kinds of behaviors that support and undermine exploration and persistence in the face of challenges. These results have implications for how to pair and train students so that partners engage in productive interactions and the kinds of thinking and problem solving needed to be successful in computer science.  Results included the development of systems to measure and monitor pair interactions and problem solving over time, and to assess the computational sophistication of student-created computer games. The results of the study were also used to inform the development of a Toolkit that includes strategies and tips that educators can use to implement and strengthen pair programming in K-12 across a range of schools and locations.  While most research on children learning to program focuses on individual processes; this study fills a gap in our understanding of the social contexts in which novice programmers learn to persist in the face of challenges.  The project generated findings that can be used to inform classroom-based efforts to improve learning and increase diversity in computing fields using this collaborative strategy. The results  show the range of effective and ineffective interactions, as well as the barriers and opportunities of promising practices such as pair programming to engage students in the kinds of thinking and problem solving that lead to persistence in computing classes.       Last Modified: 11/14/2018       Submitted by: Shannon Campe]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

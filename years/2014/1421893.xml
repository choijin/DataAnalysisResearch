<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Towards Trustworthy Access Control Policies</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>06/30/2020</AwardExpirationDate>
<AwardTotalIntnAmount>341410.00</AwardTotalIntnAmount>
<AwardAmount>341410</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Jeremy Epstein</SignBlockName>
<PO_EMAI>jepstein@nsf.gov</PO_EMAI>
<PO_PHON>7032928338</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Getting access control policies right is challenging, especially in large organizations.  This project is developing techniques and tools to support efficient and trustworthy administration of Attribute-Based Access Control (ABAC) policies.  ABAC is a flexible, high-level, and increasingly popular security policy framework.&lt;br/&gt;&lt;br/&gt;ABAC promises long-term cost savings through reduced administrative effort, but manual development of an initial ABAC policy can be expensive.  This project is developing policy mining algorithms that promise to drastically reduce the cost of migrating from legacy access control frameworks to ABAC.  These algorithms generate candidate ABAC policies from existing lower-level policies, if available, or operation logs, together with data about attributes of users and resources.&lt;br/&gt;&lt;br/&gt;An administrative policy specifies how each user may change the access control policy.  Fully understanding the implications of administrative policies in enterprise systems can be difficult, because of the size and complexity of the policies, and because sequences of changes by different users may interact in unexpected ways.  This project is developing policy analysis algorithms that support validation of administrative policies, by answering questions such as whether, how, and under what conditions specified administrators can together change the policy in order to grant specified permissions to specified users.&lt;br/&gt;&lt;br/&gt;Powerful development environments for creating and validating access control policies, incorporating algorithms like the ones being developed in this project, have the potential to significantly increase the trustworthiness of IT systems, by helping security administrators efficiently and reliably develop correct policies.</AbstractNarration>
<MinAmdLetterDate>08/01/2014</MinAmdLetterDate>
<MaxAmdLetterDate>05/02/2019</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1421893</AwardID>
<Investigator>
<FirstName>Scott</FirstName>
<LastName>Stoller</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Scott D Stoller</PI_FULL_NAME>
<EmailAddress>stoller@cs.stonybrook.edu</EmailAddress>
<PI_PHON>6316321627</PI_PHON>
<NSF_ID>000201137</NSF_ID>
<StartDate>08/01/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Stony Brook</Name>
<CityName>Stony Brook</CityName>
<ZipCode>117940001</ZipCode>
<PhoneNumber>6316329949</PhoneNumber>
<StreetAddress>WEST 5510 FRK MEL LIB</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>804878247</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Stony Brook]]></Name>
<CityName>Stony Brook</CityName>
<StateCode>NY</StateCode>
<ZipCode>117944400</ZipCode>
<StreetAddress><![CDATA[Computer Science Dept.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~341410</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Access control is a cornerstone of computer security.&nbsp; Access control policies are critical to the security of many IT systems.&nbsp; However, getting the policies right is challenging, especially in large organizations, because the policies are large and complex, the policies are managed by multiple users, and in many cases the policies are expressed in cumbersome low-level legacy approaches to access control.&nbsp; This project developed techniques and tools that significantly reduce the cost of migrating from legacy access control methods to modern high-level access control frameworks, notably Attribute-Based Access Control (ABAC) and Relationship-Based Access Control (ReBAC), an extension of ABAC.&nbsp; Policies in these high-level frameworks are more succinct, easier to validate, and easier to maintain.&nbsp; &nbsp;Specifically, this project developed novel algorithms that automatically generate candidate high-level access control policies, by learning them from low-level access control policies or operation logs, together with information about attributes of and relationships between entities.&nbsp; These new algorithms are the heart of the intellectual merit of this project.</p> <p>The broader impacts of this project include advanced training of numerous students in computer security, and the dissemination via publications and software releases of these novel policy learning algorithms.&nbsp; Several IT companies (CA Technologies, Core Security, IBM, Oracle, NEXIS, Novell, SailPoint, etc.) sell computer security management products that learn role-based policies.&nbsp; ABAC and ReBAC are the next generation of access control after roles.&nbsp; In government, the Federal Chief Information Officer Council called out ABAC as a recommended access control model because it allows "an unprecedented amount of flexibility and security while promoting information sharing between diverse and often disparate organizations".&nbsp; In industry, more and more products support ABAC.&nbsp; As more and more organizations decide to adopt ABAC or ReBAC, policy learning techniques like those developed in this project are likely to appear in commercial products and significantly reduce the cost of migration to these frameworks.&nbsp; In turn, adoption of these frameworks will significantly improve access control policy management and thereby improve the security of the organizations' information resources.</p><br> <p>            Last Modified: 07/05/2020<br>      Modified by: Scott&nbsp;D&nbsp;Stoller</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Access control is a cornerstone of computer security.  Access control policies are critical to the security of many IT systems.  However, getting the policies right is challenging, especially in large organizations, because the policies are large and complex, the policies are managed by multiple users, and in many cases the policies are expressed in cumbersome low-level legacy approaches to access control.  This project developed techniques and tools that significantly reduce the cost of migrating from legacy access control methods to modern high-level access control frameworks, notably Attribute-Based Access Control (ABAC) and Relationship-Based Access Control (ReBAC), an extension of ABAC.  Policies in these high-level frameworks are more succinct, easier to validate, and easier to maintain.   Specifically, this project developed novel algorithms that automatically generate candidate high-level access control policies, by learning them from low-level access control policies or operation logs, together with information about attributes of and relationships between entities.  These new algorithms are the heart of the intellectual merit of this project.  The broader impacts of this project include advanced training of numerous students in computer security, and the dissemination via publications and software releases of these novel policy learning algorithms.  Several IT companies (CA Technologies, Core Security, IBM, Oracle, NEXIS, Novell, SailPoint, etc.) sell computer security management products that learn role-based policies.  ABAC and ReBAC are the next generation of access control after roles.  In government, the Federal Chief Information Officer Council called out ABAC as a recommended access control model because it allows "an unprecedented amount of flexibility and security while promoting information sharing between diverse and often disparate organizations".  In industry, more and more products support ABAC.  As more and more organizations decide to adopt ABAC or ReBAC, policy learning techniques like those developed in this project are likely to appear in commercial products and significantly reduce the cost of migration to these frameworks.  In turn, adoption of these frameworks will significantly improve access control policy management and thereby improve the security of the organizations' information resources.       Last Modified: 07/05/2020       Submitted by: Scott D Stoller]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Medium: Collaborative Research: Sparse Polynomials, Complexity, and Algorithms</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>253554.00</AwardTotalIntnAmount>
<AwardAmount>253554</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy Kimbrel</SignBlockName>
<PO_EMAI>tkimbrel@nsf.gov</PO_EMAI>
<PO_PHON>7032927924</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Solving equations quickly is what gets modern technology off the ground: Transmitting conversations between cellphones, sending data from space-craft back to earth, navigating aircraft, and making robots move correctly, all rely on solving equations quickly. In each setting, the equations have their own personality -- a special structure that we try to take advantage of, in order to find solutions more quickly. In this project, the principle investigators will study equations involving sparse polynomials -- polynomials that have few terms but very high degree.&lt;br/&gt;&lt;br/&gt;But solving equations is more than just calculating quickly -- it also means understanding, and using, computational hardness. For example, classical results in Number Theory and Algebraic Geometry give us specially structured equations that, after centuries of research, still can not be solved quickly. These are the equations that are actually the most useful in Cryptography and complexity theory: Computational hardness can be used to secure sensitive data by forcing an adversary to spend a prohibitively large effort before successfully stealing anything. However, truly understanding hardness is subtle: Every day, codes and cryptosystems are broken because of a missed theoretical detail or a newly discovered backdoor.&lt;br/&gt;&lt;br/&gt;The principal investigators on this project are world experts in Algebraic Geometry, Number Theory, Complexity Theory, and specially structured equations. They bring sophisticated new tools, never used before in Complexity Theory, in order to better classify what kinds of algebraic circuits define intractable equations. Their interdisciplinary approach is well-suited toward attracting mathematically talented students to theoretical Computer Science, Cryptography, and Number Theory.</AbstractNarration>
<MinAmdLetterDate>07/02/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/29/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1407623</AwardID>
<Investigator>
<FirstName>Shuhong</FirstName>
<LastName>Gao</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shuhong Gao</PI_FULL_NAME>
<EmailAddress>sgao@clemson.edu</EmailAddress>
<PI_PHON>8646562729</PI_PHON>
<NSF_ID>000256887</NSF_ID>
<StartDate>07/02/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Clemson University</Name>
<CityName>CLEMSON</CityName>
<ZipCode>296345701</ZipCode>
<PhoneNumber>8646562424</PhoneNumber>
<StreetAddress>230 Kappa Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 200]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>South Carolina</StateName>
<StateCode>SC</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>SC03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042629816</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CLEMSON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042629816</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Clemson University]]></Name>
<CityName>Clemson</CityName>
<StateCode>SC</StateCode>
<ZipCode>296340001</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>South Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>SC03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramReference>
<ProgramReference>
<Code>7933</Code>
<Text>NUM, SYMBOL, &amp; ALGEBRA COMPUT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~166681</FUND_OBLG>
<FUND_OBLG>2016~86873</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Intellectual Merit.</strong><span>&nbsp;&nbsp;The project focuses on complexity issues of algebraic problems and their applications in coding theory and cryptography. &nbsp;Significant contributions are made to several topics including root structures of sparse univariate polynomials over finite fields, deterministic polynomial time algorithms for counting zeros of univariate polynomials modulo prime powers, &nbsp;algorithms for computing Groebner bases, fast decoding algorithms for expander codes, optimal bounds on Johnson-Lindenstrauss transformations, and efficient fully homomorphic encryption (FHE) schemes. &nbsp;Even though all these topics are important in theory and applications, &nbsp;due to space limit here, we shall only report more details on our contributions on FHE schemes.</span></p> <p><br />A fully homomorphic encryption (FHE) scheme is believed to be the Holy-Grail of cryptography, which has the following properties: (a) encrypted data can be stored anywhere (e.g. untrusted clouds, blockchains, or personal computers at home or at a hacker's control); &nbsp;(b) any third party (including cloud servers, hackers, miners or insiders) can perform searching or analytics of an arbitrary function on the encrypted data to get search results in encrypted form, however, only the data owner (who has the secret decoding key) can decode the encrypted search results; and &nbsp;(c) an adversary can access all the encrypted data and use all the available computing powers (including quantum computers) in the world but still can not compute any information of the original data in reasonable time (say 50 years). &nbsp;Since Gentry discovered in 2009 the first FHE scheme, the last few years have witnessed dramatic progress, and various techniques have been invented to improve the security and efficiency of homomorphic encryption schemes. For practical applications, the main bottlenecks of the current schemes are in bootstrapping speed and large cipher expansion factor (the ratio of the size of ciphertexts to that of messages). Ducas and Micciancio (2015) show that bootstrapping of one bit operation on encrypted data can be done in less than a second, which is then reduced by Chillotti et al. (2016, 2017) to 13ms. However, according to Chillotti et al. (2018), the cipher expansion factor for their FHE scheme is still10,000, which means that a book has to be encrypted to 10,000 books to be able to perform analytics on encrypted data. &nbsp;In the current project, we solved the cipher expansion problem, that is, we designed a compact FHE scheme with cipher expansion factors 6 and 20 for private-key and public-key encryptions, respectively, &nbsp;together with a bootstrapping algorithm whose speed is about the same as Chillotti et al. (2017). Furthermore, our bootstrapping algorithm never produce invalid new ciphertexts, while previous schemes have a small failure probability for each bit operation.</p> <p><strong>The broader impacts.&nbsp;</strong>As cloud computing, internet of things (IoT) and blockchain technology become increasingly prevalent, there is an urgent need to protect the privacy of massive volumes of sensitivedata collected or stored in computer networks or cloud servers, as many of the networks or servers can be vulnerable to external and internal threats such as malicious hackers or curious insiders. &nbsp;The traditional encryption schemes &nbsp;(such as RSA and elliptic curve cryptosystems) can provide privacy protection of data in transition but do not allow for the performance of analytics on encrypted data without decryption first. &nbsp; Fully homomorphic encryption schemes allow cloud servers (or any third party) to do computation on encrypted data &nbsp;without decoding and without leaking any information on the original data. &nbsp;This is extremely important for privacy protection and &nbsp;secure computing for IoT, cloud servers and many other applications for the years to come.</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/30/2018<br>      Modified by: Shuhong&nbsp;Gao</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intellectual Merit.  The project focuses on complexity issues of algebraic problems and their applications in coding theory and cryptography.  Significant contributions are made to several topics including root structures of sparse univariate polynomials over finite fields, deterministic polynomial time algorithms for counting zeros of univariate polynomials modulo prime powers,  algorithms for computing Groebner bases, fast decoding algorithms for expander codes, optimal bounds on Johnson-Lindenstrauss transformations, and efficient fully homomorphic encryption (FHE) schemes.  Even though all these topics are important in theory and applications,  due to space limit here, we shall only report more details on our contributions on FHE schemes.   A fully homomorphic encryption (FHE) scheme is believed to be the Holy-Grail of cryptography, which has the following properties: (a) encrypted data can be stored anywhere (e.g. untrusted clouds, blockchains, or personal computers at home or at a hacker's control);  (b) any third party (including cloud servers, hackers, miners or insiders) can perform searching or analytics of an arbitrary function on the encrypted data to get search results in encrypted form, however, only the data owner (who has the secret decoding key) can decode the encrypted search results; and  (c) an adversary can access all the encrypted data and use all the available computing powers (including quantum computers) in the world but still can not compute any information of the original data in reasonable time (say 50 years).  Since Gentry discovered in 2009 the first FHE scheme, the last few years have witnessed dramatic progress, and various techniques have been invented to improve the security and efficiency of homomorphic encryption schemes. For practical applications, the main bottlenecks of the current schemes are in bootstrapping speed and large cipher expansion factor (the ratio of the size of ciphertexts to that of messages). Ducas and Micciancio (2015) show that bootstrapping of one bit operation on encrypted data can be done in less than a second, which is then reduced by Chillotti et al. (2016, 2017) to 13ms. However, according to Chillotti et al. (2018), the cipher expansion factor for their FHE scheme is still10,000, which means that a book has to be encrypted to 10,000 books to be able to perform analytics on encrypted data.  In the current project, we solved the cipher expansion problem, that is, we designed a compact FHE scheme with cipher expansion factors 6 and 20 for private-key and public-key encryptions, respectively,  together with a bootstrapping algorithm whose speed is about the same as Chillotti et al. (2017). Furthermore, our bootstrapping algorithm never produce invalid new ciphertexts, while previous schemes have a small failure probability for each bit operation.  The broader impacts. As cloud computing, internet of things (IoT) and blockchain technology become increasingly prevalent, there is an urgent need to protect the privacy of massive volumes of sensitivedata collected or stored in computer networks or cloud servers, as many of the networks or servers can be vulnerable to external and internal threats such as malicious hackers or curious insiders.  The traditional encryption schemes  (such as RSA and elliptic curve cryptosystems) can provide privacy protection of data in transition but do not allow for the performance of analytics on encrypted data without decryption first.   Fully homomorphic encryption schemes allow cloud servers (or any third party) to do computation on encrypted data  without decoding and without leaking any information on the original data.  This is extremely important for privacy protection and  secure computing for IoT, cloud servers and many other applications for the years to come.             Last Modified: 12/30/2018       Submitted by: Shuhong Gao]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Enabling High Energy Physics at the Information Frontier Using GPUs and Other Many/Multi-Core Architectures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2014</AwardEffectiveDate>
<AwardExpirationDate>06/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>660000.00</AwardTotalIntnAmount>
<AwardAmount>784672</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>03010000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>PHY</Abbreviation>
<LongName>Division Of Physics</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Bogdan Mihaila</SignBlockName>
<PO_EMAI>bmihaila@nsf.gov</PO_EMAI>
<PO_PHON>7032928235</PO_PHON>
</ProgramOfficer>
<AbstractNarration>High energy physics (HEP) experiments use extremely large data sets to study the fundamental constituents of matter and the forces that govern their interactions.  To use computing resources most effectively, the investigators will study algorithms and develop codes that run well on computers which provide especially high performance for parallel execution of instructions, including general purpose graphics processing units (GPUs) and other many-core/multi-core architectures. These studies, and the community tools to be developed here, will extend the quantitative reach in HEP and allied fields to the point where they enable qualitative advances. To enhance the broader impact of this work, the investigators will distribute the statistical analysis toolkit as Free and Open Source Software. In addition, the investigators will disseminate their results about effectively writing GPU-friendly algorithms via talks, short courses, and journal articles.&lt;br/&gt;&lt;br/&gt;The specific HEP context for this project will be developing tools for analyzing data from the next generation of experiments.  The last major elements of the Standard Model (SM) of particle physics (which describes the electromagnetic, weak nuclear, and strong nuclear interactions of fundamental particles) have been experimentally validated in the past decade.  Detailed measurements of particle-antiparticle asymmetries in the decays of  B-mesons by the BABAR and Belle collaborations led to Kobayashi and Maskawa sharing the 2008 Nobel Prize in Physics. The ATLAS and CMS experiments at CERN discovered a Higgs-like boson in 2012, leading to Englert and Higgs sharing the 2013 Nobel prize in physics. The codes and toolkits to be developed here will enable HEP experiments to search more effectively for phenomena not described by the SM, sometimes called Beyond-the-Standard-Model (BSM) physics.  ATLAS and CMS are searching for direct evidence of BSM physics at the highest energies. Belle-II, the next generation electron-positron flavor factory being built in Japan, has a design luminosity two orders of magnitude greater than that of Belle, providing complementary BSM sensitivity in very high statistics studies of B-meson decays, charm mixing, and searches for lepton flavor violation. The LHCb experiment at CERN has already surpassed BaBar and Belle by more than an order of magnitude in many channels, and the resulting BSM constraints complement those from ATLAS and CMS. Analyzing the data from all these experiments will require disproportionately more computing power at a modest increase in cost.  In addition to developing generally useful tools, the statistical analysis toolkit developed here will be applied to analyze data from LHCb.</AbstractNarration>
<MinAmdLetterDate>06/15/2014</MinAmdLetterDate>
<MaxAmdLetterDate>05/04/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1414736</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Sokoloff</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael D Sokoloff</PI_FULL_NAME>
<EmailAddress>mike.sokoloff@uc.edu</EmailAddress>
<PI_PHON>5135560533</PI_PHON>
<NSF_ID>000233322</NSF_ID>
<StartDate>06/15/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Karen</FirstName>
<LastName>Tomko</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Karen A Tomko</PI_FULL_NAME>
<EmailAddress>ktomko@osc.edu</EmailAddress>
<PI_PHON>6142921091</PI_PHON>
<NSF_ID>000330142</NSF_ID>
<StartDate>06/15/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Cincinnati Main Campus</Name>
<CityName>Cincinnati</CityName>
<ZipCode>452210222</ZipCode>
<PhoneNumber>5135564358</PhoneNumber>
<StreetAddress>University Hall, Suite 530</StreetAddress>
<StreetAddress2><![CDATA[51 Goodman Dr.]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041064767</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CINCINNATI</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041064767</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Cincinnati Main Campus]]></Name>
<CityName>Cincinnati</CityName>
<StateCode>OH</StateCode>
<ZipCode>452210222</ZipCode>
<StreetAddress><![CDATA[University Hall, Suite 530]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1221</Code>
<Text>HEP-High Energy Physics</Text>
</ProgramElement>
<ProgramElement>
<Code>7244</Code>
<Text>COMPUTATIONAL PHYSICS</Text>
</ProgramElement>
<ProgramReference>
<Code>026Z</Code>
<Text>NSCI: National Strategic Computing Initi</Text>
</ProgramReference>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>7569</Code>
<Text>CYBERINFRASTRUCTURE/SCIENCE</Text>
</ProgramReference>
<ProgramReference>
<Code>8084</Code>
<Text>CDS&amp;E</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~220000</FUND_OBLG>
<FUND_OBLG>2015~220000</FUND_OBLG>
<FUND_OBLG>2016~220000</FUND_OBLG>
<FUND_OBLG>2017~124672</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The primary goal of this project, in terms of intellectual merit, was to study thread-parallel algorithms and develop codes which run effectively on general purpose graphics processing units (GPUs) and other many-core/multi-core architectures to enable frontier research in experimental high energy physics (HEP) and closely allied fields. To this end, we developed and released three suites of open source software: (i) GooFit (https://goofit.github.io/), (ii) Hydra (https://github.com/MultithreadCorner/Hydra), and (iii) AmpGen (https://github.com/GooFit/AmpGen).</p> <p><br />The original development of GooFit was supported by a prior NSF award.&nbsp; Under the current award it was extended to provide more physics functionality, better computational performance, and to provide Python bindings on top of the underlying C++ code to make the package useful to a larger user community.&nbsp; We added methods to allow time-dependent amplitude analyses of four-body charm decays to allow sensitive studies of possible matter-antimatter asymmetries in the oscillations of neutral charm mesons. We added methods to do so-called Model-Independent Partial Wave Analyses of three-body decays.&nbsp; More generally,&nbsp; the new Python bindings allow non-experts to use GooFit in Jupyter notebooks and ordinary Python scripts transparently.&nbsp; Using GPU back-ends, this can speed up fits by a factor of 1000 compared to using traditional packages running on a single CPU core.</p> <p><br />Hydra is a C++11 compliant and header only framework designed to perform common data analysis tasks on massively parallel platforms. It provides a collection of containers and algorithms commonly used in HEP data analysis, which can deploy transparently OpenMP, CUDA and TBB enabled devices, allowing the user to re-use the same code across a large range of available multi-core CPU and accelerators. The framework design is focused on performance and precision.</p> <p><br />AmpGen is a library and set of applications for fitting and generating multi-body particle decays using the isobar model. It evolved from the earlier MINT project used in the fitting of three- and four-body pseudoscalar decays by the CLEO-c and LHCb collaborations. The library can handle the fitting and generation of a wide variety of final states. The major advance supported by this award was the addition of general formalisms to describe&nbsp; amplitudes involving fermions and photons, as well as polarized initial states. Source code for the evaluation of amplitudes is dynamically generated by a custom engine, JIT compiled and dynamically linked to the user program at runtime, which results in high flexibility and performance. The package is currently being used for analyses of LHCb charmed baryon decays.&nbsp; In the future, we plan to integrate many of its features into GooFit (or other highly parallel fitting packages).</p> <p><br />The broader impact of this award comes in three parts: (i) enabling physics beyond that done by our group, (ii) disseminating what we learned about designing effective highly parallel codes to the larger physics and software engineering community, and providing opportunities for students to participate in state-of-the art research.&nbsp; We know that our software is being used by university and laboratory groups in Brazil, India, Italy, Switzerland, and the United Kingdom as well as by our own, including researchers from the CMS experiment as well as LHCb.&nbsp; We expect a larger community of users to develop as more high energy physicists decide to use Python for their analyses (because GooFit is trivially available using 'pip install goofit').&nbsp; We have presented descriptions of our work at conferences targeting HEP software developers and users.&nbsp; Most recently, a discussion of how GooFit performance was improved was presented at GTC-2019 (the GPU in Technology Conference), targeting software engineers. Finally, several undergraduates and a Ph.D. student from the University of Cincinnati were directly supported by this award.&nbsp; Each did something different: the Ph.D. student has focussed her efforts on using GooFit to study the physics reach of the charm oscillations analysis noted above; one of the undergraduates added the Python bindings to GooFit under the supervision of a post-doc; two more worked on developing and extending Machine Learning algorithms using GPUs for the training.<br /><br /> <br /></p> <p>&nbsp;</p><br> <p>            Last Modified: 07/12/2019<br>      Modified by: Michael&nbsp;D&nbsp;Sokoloff</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The primary goal of this project, in terms of intellectual merit, was to study thread-parallel algorithms and develop codes which run effectively on general purpose graphics processing units (GPUs) and other many-core/multi-core architectures to enable frontier research in experimental high energy physics (HEP) and closely allied fields. To this end, we developed and released three suites of open source software: (i) GooFit (https://goofit.github.io/), (ii) Hydra (https://github.com/MultithreadCorner/Hydra), and (iii) AmpGen (https://github.com/GooFit/AmpGen).   The original development of GooFit was supported by a prior NSF award.  Under the current award it was extended to provide more physics functionality, better computational performance, and to provide Python bindings on top of the underlying C++ code to make the package useful to a larger user community.  We added methods to allow time-dependent amplitude analyses of four-body charm decays to allow sensitive studies of possible matter-antimatter asymmetries in the oscillations of neutral charm mesons. We added methods to do so-called Model-Independent Partial Wave Analyses of three-body decays.  More generally,  the new Python bindings allow non-experts to use GooFit in Jupyter notebooks and ordinary Python scripts transparently.  Using GPU back-ends, this can speed up fits by a factor of 1000 compared to using traditional packages running on a single CPU core.   Hydra is a C++11 compliant and header only framework designed to perform common data analysis tasks on massively parallel platforms. It provides a collection of containers and algorithms commonly used in HEP data analysis, which can deploy transparently OpenMP, CUDA and TBB enabled devices, allowing the user to re-use the same code across a large range of available multi-core CPU and accelerators. The framework design is focused on performance and precision.   AmpGen is a library and set of applications for fitting and generating multi-body particle decays using the isobar model. It evolved from the earlier MINT project used in the fitting of three- and four-body pseudoscalar decays by the CLEO-c and LHCb collaborations. The library can handle the fitting and generation of a wide variety of final states. The major advance supported by this award was the addition of general formalisms to describe  amplitudes involving fermions and photons, as well as polarized initial states. Source code for the evaluation of amplitudes is dynamically generated by a custom engine, JIT compiled and dynamically linked to the user program at runtime, which results in high flexibility and performance. The package is currently being used for analyses of LHCb charmed baryon decays.  In the future, we plan to integrate many of its features into GooFit (or other highly parallel fitting packages).   The broader impact of this award comes in three parts: (i) enabling physics beyond that done by our group, (ii) disseminating what we learned about designing effective highly parallel codes to the larger physics and software engineering community, and providing opportunities for students to participate in state-of-the art research.  We know that our software is being used by university and laboratory groups in Brazil, India, Italy, Switzerland, and the United Kingdom as well as by our own, including researchers from the CMS experiment as well as LHCb.  We expect a larger community of users to develop as more high energy physicists decide to use Python for their analyses (because GooFit is trivially available using 'pip install goofit').  We have presented descriptions of our work at conferences targeting HEP software developers and users.  Most recently, a discussion of how GooFit performance was improved was presented at GTC-2019 (the GPU in Technology Conference), targeting software engineers. Finally, several undergraduates and a Ph.D. student from the University of Cincinnati were directly supported by this award.  Each did something different: the Ph.D. student has focussed her efforts on using GooFit to study the physics reach of the charm oscillations analysis noted above; one of the undergraduates added the Python bindings to GooFit under the supervision of a post-doc; two more worked on developing and extending Machine Learning algorithms using GPUs for the training.              Last Modified: 07/12/2019       Submitted by: Michael D Sokoloff]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRII: SHF: Automatic Building of Software Projects to Support Analysis of Open Software Repositories</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2015</AwardEffectiveDate>
<AwardExpirationDate>02/28/2018</AwardExpirationDate>
<AwardTotalIntnAmount>174840.00</AwardTotalIntnAmount>
<AwardAmount>174840</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>As more and more software developers choose to host their projects at open software repositories such as Sourceforge and Github, these large repositories have become valuable resources for the development of novel software engineering techniques. They can serve as either data sets for the emerging mining-based software-engineering techniques or subjects for experimental evaluations and empirical studies. However, a major obstacle preventing full utilization of open software repositories is that, while many existing program analysis tools require successfully built projects as their input, software projects typically have only their source code stored in the repositories, and the source code often cannot be built automatically. Therefore, it is often difficult to apply existing program analysis tools to a large number of software projects, which limits the benefit provided by large open software repositories. &lt;br/&gt;&lt;br/&gt;This research project aims to overcome the above obstacle by providing technique for automatic building of software projects in open software repositories. Specifically, the project mainly explores the following directions: (1) analyzing path expressions and file flows in build configuration files to provide proper parameters and environment variables for build configuration tools (2) resolving missing software dependencies by searching online dependency repositories, and identifying the compatible software dependency files among the search results; and (3) assigning a software project to an appropriate building platform according to its features. The project helps to discover knowledge on the feasibility and effectiveness of automatic software building, and may benefit a large variety of software engineering techniques that take advantage of open software repositories.</AbstractNarration>
<MinAmdLetterDate>03/23/2015</MinAmdLetterDate>
<MaxAmdLetterDate>03/23/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1464425</AwardID>
<Investigator>
<FirstName>Xiaoyin</FirstName>
<LastName>Wang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xiaoyin Wang</PI_FULL_NAME>
<EmailAddress>Xiaoyin.Wang@UTSA.EDU</EmailAddress>
<PI_PHON>2104584340</PI_PHON>
<NSF_ID>000653136</NSF_ID>
<StartDate>03/23/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at San Antonio</Name>
<CityName>San Antonio</CityName>
<ZipCode>782491644</ZipCode>
<PhoneNumber>2104584340</PhoneNumber>
<StreetAddress>One UTSA Circle</StreetAddress>
<StreetAddress2><![CDATA[Grants, Contracts & Ind. Agr.]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX20</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>800189185</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT SAN ANTONIO, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at San Antonio]]></Name>
<CityName>San Antonio</CityName>
<StateCode>TX</StateCode>
<ZipCode>782491644</ZipCode>
<StreetAddress><![CDATA[One UTSA Circle]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX20</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7231</Code>
<Text>CYBERINFRASTRUCTURE</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>8228</Code>
<Text>CISE Resrch Initiatn Initiatve</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~174840</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Intellectual Merit:</p> <p>This project works on exploring and overcoming the challenges of automatic software building, especially when a software project is under evolution or ported to other machines. The project led to a series of effective technique including AutoBuilder, FiFA, Grapa, and HireBuild to automate the build, analysis, and repair of arbitrary software projects. On the evaluation dataset, the techniques are able to achieve higher than 60% successful rate on building arbitrary software projects, and high than 40% successful rate on repairing build failures. The PI also studied developers' usage pattern of build configuration files, and the root causes of build failures in the wild to construct a root-cause hierarchy for build failures. The project has resulted more than 10 publications in software engineering and programming language venues such as ICSE, ASE, ISSTA, ESOP, etc.</p> <p>&nbsp;</p> <p>Broader Impact:</p> <p>These techniques and findings on automatic building and build repair are not only helpful for developers in generating more robust build configurations more efficiently, but also enables large-scale analysis of arbitrary open source projects, which provide richer dataset for mining based software engineering and more comprehensive benchmarks for program analysis techniques. The file flow analysis techniques developed under this project may have further impact on the analysis of any program involving file systems. The enhancement on software build systems, mining based software engineering, and program analysis techniques will potentially lead to higher productivity in software industry and higher quality software being used in all areas of social life. The project also provided support to involve multiple students into relevant research topics. In UTSA, a minority-serving institution, it also provides opportunity of students from underrepresented groups to perform research and receive training on software building systems. In particular, it partially supported three PhD students (including one female student), one Master student from underrepresented groups, and four undergraduate students (including three from underrepresented groups). Among these students, one PhD student and one master student graduated with thesis on related research topics.</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/05/2018<br>      Modified by: Xiaoyin&nbsp;Wang</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intellectual Merit:  This project works on exploring and overcoming the challenges of automatic software building, especially when a software project is under evolution or ported to other machines. The project led to a series of effective technique including AutoBuilder, FiFA, Grapa, and HireBuild to automate the build, analysis, and repair of arbitrary software projects. On the evaluation dataset, the techniques are able to achieve higher than 60% successful rate on building arbitrary software projects, and high than 40% successful rate on repairing build failures. The PI also studied developers' usage pattern of build configuration files, and the root causes of build failures in the wild to construct a root-cause hierarchy for build failures. The project has resulted more than 10 publications in software engineering and programming language venues such as ICSE, ASE, ISSTA, ESOP, etc.     Broader Impact:  These techniques and findings on automatic building and build repair are not only helpful for developers in generating more robust build configurations more efficiently, but also enables large-scale analysis of arbitrary open source projects, which provide richer dataset for mining based software engineering and more comprehensive benchmarks for program analysis techniques. The file flow analysis techniques developed under this project may have further impact on the analysis of any program involving file systems. The enhancement on software build systems, mining based software engineering, and program analysis techniques will potentially lead to higher productivity in software industry and higher quality software being used in all areas of social life. The project also provided support to involve multiple students into relevant research topics. In UTSA, a minority-serving institution, it also provides opportunity of students from underrepresented groups to perform research and receive training on software building systems. In particular, it partially supported three PhD students (including one female student), one Master student from underrepresented groups, and four undergraduate students (including three from underrepresented groups). Among these students, one PhD student and one master student graduated with thesis on related research topics.          Last Modified: 05/05/2018       Submitted by: Xiaoyin Wang]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

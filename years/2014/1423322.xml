<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NeTS:  Small: Collaborative Research: Tools for Design and Analysis of Provably Correct Networking Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2014</AwardEffectiveDate>
<AwardExpirationDate>09/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>351441.00</AwardTotalIntnAmount>
<AwardAmount>351441</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Networking and telecommunications infrastructure relies on many different network protocols which interact to provide communication services. Software that enables telecommunications and the Internet is inherently difficult to create, given the number and complexity of network protocols, diverse heterogeneous systems, and various administrative policies that must be accommodated. This complexity significantly increases the likelihood of implementation errors, which can cause network and security vulnerabilities (e.g., the well-publicized Heartbleed bug). The project will address these issues through the creation of a new programming language that supports the synthesis of network protocols and their corresponding stack through a correct-by-construction style of programming.&lt;br/&gt;&lt;br/&gt;This research project will investigate new transformational methods and tools for the design, analysis, construction, verification, configuration, and deployment of provably correct, safe, and efficient networking systems, rooted in the style and theory of systems programming languages. Specific objectives include (i) the investigation and analysis of abstractions present in the message layer, state machine, system interfaces, and configuration tools of network protocols, and (ii) the reification of these abstractions in a new systems programming language that supports the definition of provably correct and efficient communication stacks.&lt;br/&gt;&lt;br/&gt;The project entails the analysis of software and hardware abstractions in modern networking and communication systems in order to support the design of programming language features. The project will identify correct by construction techniques that enable the design and synthesis of efficient systems that are immune to broad classes of vulnerabilities based on common programmer mistakes. Furthermore, the project will produce a language, compiler and runtime system accessible to a large community of researchers and engineers without requiring specialized expertise in formal methods.&lt;br/&gt;&lt;br/&gt;This project will contribute to understanding the foundation of the design of provably correct and secure computer and networking systems. The methodology developed in the course of this project will facilitate rapid development of vulnerability-free systems and will greatly benefit researchers, industry developers, and educators. The project's results will help improve networking system safety, security, and attack resilience. The project will make a significant contribution to the broader areas of axiomatic programming, programming methodologies, and formal methods. The project's results, as well as the developed models, testbeds, and software, will be disseminated to the research community and networking industry under an open source license.</AbstractNarration>
<MinAmdLetterDate>08/26/2014</MinAmdLetterDate>
<MaxAmdLetterDate>09/22/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1423322</AwardID>
<Investigator>
<FirstName>Alexander</FirstName>
<LastName>Sprintson</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Alexander Sprintson</PI_FULL_NAME>
<EmailAddress>spalex@tamu.edu</EmailAddress>
<PI_PHON>9794580092</PI_PHON>
<NSF_ID>000486084</NSF_ID>
<StartDate>08/26/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Gabriel</FirstName>
<LastName>Dos Reis</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Gabriel Dos Reis</PI_FULL_NAME>
<EmailAddress>gdr@cs.tamu.edu</EmailAddress>
<PI_PHON>9794581547</PI_PHON>
<NSF_ID>000493151</NSF_ID>
<StartDate>08/26/2014</StartDate>
<EndDate>09/22/2016</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Texas A&amp;M Engineering Experiment Station</Name>
<CityName>College Station</CityName>
<ZipCode>778454645</ZipCode>
<PhoneNumber>9798626777</PhoneNumber>
<StreetAddress>400 Harvey Mitchell Pkwy S</StreetAddress>
<StreetAddress2><![CDATA[Suite 300]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX17</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>847205572</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TEXAS A&amp;M ENGINEERING EXPERIMENT STATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042915991</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Texas Engineering Experiment Station]]></Name>
<CityName>College Station</CityName>
<StateCode>TX</StateCode>
<ZipCode>778433128</ZipCode>
<StreetAddress><![CDATA[TAMU 3128]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX17</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~118805</FUND_OBLG>
<FUND_OBLG>2015~114685</FUND_OBLG>
<FUND_OBLG>2016~117951</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-87c6de5b-7fff-8229-aa9d-66d16bad9cd6"> </span></p> <p dir="ltr"><span>This project has produced new transformational methods and tools for the design, analysis, construction, verification, configuration, and deployment of provably correct, safe, and efficient networking systems rooted in the style and theory of systems programming languages.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>The outcomes of the project include (i) a set of abstractions that can be expressed directly in a systems programming language that can be applied to both wired and wireless networking systems; (ii) a principled software-defined framework for wireless networks that provides a flexible and modular cross-layer architecture; (iii) a software development environment that leverages the paradigm of axiomatic programming to automate and verify SDN specification of data paths; (iv) a packet pre-classification scheme for software-&shy;defined networking (SDN) that mitigates denial of service attacks by decoupling the impact of unknown/malicious traffic on known authorized traffic within the SDN data plane; (v) a generic, software-only, arbitrary matching framework for fast, efficient searches that can significantly accelerate the performance of the SDN data path operations; (vi) a new in-network packet processing architecture for distributed file systems and data storage that can offload several actions onto network devices such as routers and switches to facilitate data access and recovery from failures. &nbsp;</span></p> <p>&nbsp;</p> <p dir="ltr"><span>The project has contributed to several open-source tools such as an OpenFlow simulator &nbsp;(FlowSim) and an OpenFlow protocol stack that are extensively used by the SDN community. &nbsp;&nbsp;These tools are accessible to a large community of researchers and engineers without requiring specialized expertise in formal methods. The project has also produced training videos and a widely used OpenFlow knowledge base. A large number of network engineers have benefited from the knowledge bases and online courses developed in the course of this project.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>The research activities and outcomes were a core part of the curriculum for a graduate course that focuses on the organization and operation of packet processing systems. The contributions of the graduate students funded by this project have been widely recognized by the SDN community. The students have been placed in active SDN teams with some in senior management roles. Several female and minority students have participated in the project. </span></p> <p>&nbsp;</p> <p dir="ltr"><span>This project has contributed to understanding the foundation of the design of provably correct and secure computer and networking systems. This was one of the first projects that developed a principled software-defined framework for wireless networks. &nbsp;The methodology developed in the course of this project is instrumental for the rapid development of vulnerability-free systems and will greatly bene?t researchers, industry developers, and educators. The project&rsquo;s results help to make the networking system safer, more secure, and more resilient to attacks.</span></p> <p>&nbsp;</p> <p dir="ltr"><span> Overall, the project has contributed to the increased awareness and adoption of the principles of software&shy;-defined networks in the broader networking community. The project has also made a significant contribution to the broader areas of axiomatic programming, programming methodologies, and formal method.</span></p> <div><span><br /></span></div> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 08/29/2018<br>      Modified by: Alexander&nbsp;Sprintson</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   This project has produced new transformational methods and tools for the design, analysis, construction, verification, configuration, and deployment of provably correct, safe, and efficient networking systems rooted in the style and theory of systems programming languages.    The outcomes of the project include (i) a set of abstractions that can be expressed directly in a systems programming language that can be applied to both wired and wireless networking systems; (ii) a principled software-defined framework for wireless networks that provides a flexible and modular cross-layer architecture; (iii) a software development environment that leverages the paradigm of axiomatic programming to automate and verify SDN specification of data paths; (iv) a packet pre-classification scheme for software-&shy;defined networking (SDN) that mitigates denial of service attacks by decoupling the impact of unknown/malicious traffic on known authorized traffic within the SDN data plane; (v) a generic, software-only, arbitrary matching framework for fast, efficient searches that can significantly accelerate the performance of the SDN data path operations; (vi) a new in-network packet processing architecture for distributed file systems and data storage that can offload several actions onto network devices such as routers and switches to facilitate data access and recovery from failures.      The project has contributed to several open-source tools such as an OpenFlow simulator  (FlowSim) and an OpenFlow protocol stack that are extensively used by the SDN community.   These tools are accessible to a large community of researchers and engineers without requiring specialized expertise in formal methods. The project has also produced training videos and a widely used OpenFlow knowledge base. A large number of network engineers have benefited from the knowledge bases and online courses developed in the course of this project.    The research activities and outcomes were a core part of the curriculum for a graduate course that focuses on the organization and operation of packet processing systems. The contributions of the graduate students funded by this project have been widely recognized by the SDN community. The students have been placed in active SDN teams with some in senior management roles. Several female and minority students have participated in the project.     This project has contributed to understanding the foundation of the design of provably correct and secure computer and networking systems. This was one of the first projects that developed a principled software-defined framework for wireless networks.  The methodology developed in the course of this project is instrumental for the rapid development of vulnerability-free systems and will greatly bene?t researchers, industry developers, and educators. The project?s results help to make the networking system safer, more secure, and more resilient to attacks.     Overall, the project has contributed to the increased awareness and adoption of the principles of software&shy;-defined networks in the broader networking community. The project has also made a significant contribution to the broader areas of axiomatic programming, programming methodologies, and formal method.               Last Modified: 08/29/2018       Submitted by: Alexander Sprintson]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

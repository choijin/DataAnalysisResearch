<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CI-EN: Collaborative: Run Your Research with Redex</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>200000.00</AwardTotalIntnAmount>
<AwardAmount>200000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project will focus on the development of the REDEX tool, a lightweight domain-specific tool for modeling programming languages useful for software development. Originally developed as an in-house tool for a small group of collaborating researchers, REDEX escaped the laboratory several years ago, acquired a dedicated user community, and now new users wish to use it for larger and more complicated programming languages than originally envisioned.  Using this framework, a programmer articulates a programming language model directly as a software artifact with just a little more effort than paper-and-pencil models. Next, the user invokes diagnostic tools to test a model's consistency, explore its properties, and check general claims about it. &lt;br/&gt;&lt;br/&gt;This award funds several significant improvements to REDEX: (1) a modular system that allows its users to divide up the work, (2) scalable performance so that researchers can deal with large models, and (3) improvements to its testing and error-detection system. The award also includes support for the education of REDEX's quickly growing user community, e.g., support for organizing tutorials and workshops.</AbstractNarration>
<MinAmdLetterDate>07/25/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/25/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1405961</AwardID>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Flatt</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Matthew R Flatt</PI_FULL_NAME>
<EmailAddress>mflatt@cs.utah.edu</EmailAddress>
<PI_PHON>8015879091</PI_PHON>
<NSF_ID>000348159</NSF_ID>
<StartDate>07/25/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<StreetAddress2><![CDATA[Second Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009095365</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF UTAH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009095365</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Utah]]></Name>
<CityName/>
<StateCode>UT</StateCode>
<ZipCode>841128930</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7359</Code>
<Text>CCRI-CISE Cmnty Rsrch Infrstrc</Text>
</ProgramElement>
<ProgramReference>
<Code>7359</Code>
<Text>COMPUTING RES INFRASTRUCTURE</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~200000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Redex is a tool for use by researchers to define and study the semantics of programming languages. This project has maintained and improved Redex to make it more expressive and to perform better for its users. The project's success is reflected in a growing use of Redex within the programming-languages research community. Redex models are now frequently among the artifacts produced by paper authors to serve as archival, executable descriptions of their research as published in programming-language conferences.&nbsp;</p> <p>The Utah portion of the project specifically enhanced the tools that are used to build Redex: the macro system of the Racket programming language, which allows Redex to exist in a larger ecosystem of tools, and the run-time performance of Racket, which translates into improved performance for Redex. Work on the macro system included both an improved fundamental model of macros and scope, as well as an entirely new implementation of the macro expander that is more maintainable and portable than the old implementation. The new implementation has paved the way for a porting of Racket and Redex to new runtime systems, which will help ensure that Redex models can still run in the coming decades as our computing infrastructure involves. Finally, the project developed new techniques for building debuggers and other programming-environment tools to support domain-specific languages like Redex.</p><br> <p>            Last Modified: 11/08/2017<br>      Modified by: Matthew&nbsp;R&nbsp;Flatt</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Redex is a tool for use by researchers to define and study the semantics of programming languages. This project has maintained and improved Redex to make it more expressive and to perform better for its users. The project's success is reflected in a growing use of Redex within the programming-languages research community. Redex models are now frequently among the artifacts produced by paper authors to serve as archival, executable descriptions of their research as published in programming-language conferences.   The Utah portion of the project specifically enhanced the tools that are used to build Redex: the macro system of the Racket programming language, which allows Redex to exist in a larger ecosystem of tools, and the run-time performance of Racket, which translates into improved performance for Redex. Work on the macro system included both an improved fundamental model of macros and scope, as well as an entirely new implementation of the macro expander that is more maintainable and portable than the old implementation. The new implementation has paved the way for a porting of Racket and Redex to new runtime systems, which will help ensure that Redex models can still run in the coming decades as our computing infrastructure involves. Finally, the project developed new techniques for building debuggers and other programming-environment tools to support domain-specific languages like Redex.       Last Modified: 11/08/2017       Submitted by: Matthew R Flatt]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

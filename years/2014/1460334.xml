<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSE: Parallel and Adaptive Simulation Infrastructure for Biological Fluid-Structure Interaction</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2014</AwardEffectiveDate>
<AwardExpirationDate>12/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>75361.00</AwardTotalIntnAmount>
<AwardAmount>75361</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rajiv Ramnath</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The immersed boundary (IB) method is both a mathematical formulation and a numerical approach to problems of fluid-structure interaction, treating the specific case in which an elastic structure is immersed in a viscous incompressible fluid.  The IB method was introduced to describe the fluid dynamics of heart valves, but this methodology has also been applied to a wide range of problems in biological and non-biological fluid dynamics.  The IB method typically requires high spatial resolution to resolve the viscous boundary layers at fluid-structure interfaces and, at higher Reynolds numbers, to resolve vortices shed from such interfaces.  To improve the efficiency of the IB method, the principal investigator has developed an adaptive version of the IB method that employs block-structured adaptive mesh refinement (AMR) to deploy high spatial resolution only where it is needed.  IBAMR software is a distributed-memory parallel implementation of this adaptive scheme.  The key goal of this project is to make IBAMR the unifying software framework for users of the IB method, thereby establishing a community of researchers who employ a common software infrastructure for biofluids model development and simulation.  The project aims to enhance IBAMR substantially by (1) developing and implementing implicit IB schemes that will allow for the efficient use of large numerical timesteps; (2) developing and implementing extensions of the basic IB methodology, including a new variable-viscosity version of the IB method, and an existing stochastic version for microscale and nanoscale problems in which Brownian motion is important; (3) optimizing IBAMR for use with modern as well as projected-future high performance computing systems comprised of multi-core compute nodes interconnected by a high-speed network; and (4) developing front-end tools for model construction, validation, and execution, thereby facilitating the adoption and use of IBAMR, especially by students and researchers with limited computational experience.&lt;br/&gt;&lt;br/&gt;From the writhing and coiling of DNA, to the beating and pumping motions of cilia and flagella, to the flow of blood in the heart and throughout the circulation, coupled fluid-structure systems are ubiquitous in biology and physiology.  This project aims to enhance significantly the IBAMR software developed by the principal investigator.  IBAMR is a framework for performing computer simulations of biological fluid mechanics, and this project seeks to establish IBAMR as a unifying software infrastructure that will serve as a common "language" for developing and exchanging such models.  IBAMR is already being actively used within several independent research projects that aim to model different aspects of cardiovascular dynamics, such as platelet aggregation and the fluid dynamics of natural and prosthetic heart valves.  Such simulations promise ultimately to improve the efficacy of devices and procedures for treating cardiovascular disease.  This software also is being used within projects that study other problems in biofluid mechanics, including insect flight, aquatic locomotion, and the dynamics of phytoplankton.  By enhancing IBAMR, this project will also enhance significantly the ability of these and other research groups to construct detailed biofluids models without requiring those researchers to develop the significant software infrastructure needed to perform such simulations.  This project will enhance the IBAMR software substantially, extending the range of problems to which it may be applied, and improving the methods implemented within the software as well as the efficiency of the implementation.  The work of this project will extend greatly the community of students and researchers who are able to use IBAMR to model biological fluid-structure interaction, in part by implementing graphical software tools for building IB models and running IB simulations.</AbstractNarration>
<MinAmdLetterDate>09/11/2014</MinAmdLetterDate>
<MaxAmdLetterDate>09/11/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1460334</AwardID>
<Investigator>
<FirstName>Boyce</FirstName>
<LastName>Griffith</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Boyce E Griffith</PI_FULL_NAME>
<EmailAddress>boyceg@email.unc.edu</EmailAddress>
<PI_PHON>9199627110</PI_PHON>
<NSF_ID>000657131</NSF_ID>
<StartDate>09/11/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of North Carolina at Chapel Hill</Name>
<CityName>CHAPEL HILL</CityName>
<ZipCode>275991350</ZipCode>
<PhoneNumber>9199663411</PhoneNumber>
<StreetAddress>104 AIRPORT DR STE 2200</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>608195277</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NORTH CAROLINA AT CHAPEL HILL</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>142363428</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of North Carolina at Chapel Hill]]></Name>
<CityName/>
<StateCode>NC</StateCode>
<ZipCode>275991350</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1414</Code>
<Text>INTERFAC PROCESSES &amp; THERMODYN</Text>
</ProgramElement>
<ProgramElement>
<Code>1630</Code>
<Text>Mechanics of Materials and Str</Text>
</ProgramElement>
<ProgramElement>
<Code>7478</Code>
<Text>DYNAMICAL SYSTEMS</Text>
</ProgramElement>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~85290</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>From the writhing and coiling of DNA, to the beating and pumping motions of cilia and flagella, to the flow of blood in the heart and throughout the circulation, coupled fluid-structure systems are ubiquitous in biology. &nbsp;The immersed boundary (IB) method is both a mathematical formulation and a numerical approach to such problems, treating the case in which an elastic structure is immersed in a viscous incompressible fluid. &nbsp;The IB method was introduced to describe the fluid dynamics of heart valves and cardiac fluid dynamics, but this methodology has also been applied to a wide range of problems in biological fluid dynamics and, more generally, to a variety of problems in which a fluid flow interacts with an immersed structure.</p> <p>Although the IB method is a broadly useful approach to biofluid mechanics, high spatial resolution is generally required to resolve the viscous boundary layers at fluid-structure interfaces and, at higher Reynolds numbers, to resolve vortices shed from such interfaces. &nbsp;To improve the efficiency of the IB method, the PI and co-workers have developed adaptive versions of the IB method that employ block-structured adaptive mesh refinement (AMR) to deploy high spatial resolution only where it is needed, such as in the vicinity of fluid-structure interfaces, or near localized regions of high vorticity in the flow field. &nbsp;The IBAMR software developed by the PI and co-workers is a distributed-memory parallel implementation of this adaptive scheme distributed via GitHub. &nbsp;IBAMR was among the first distributed-memory parallel implementations of the IB method and continues to be among the only actively-developed community IB codes presently available.</p> <p>The intellectual merit of this project is that it has enhanced biofluid dynamics methods and software used by a number independent research groups, both in the US and around the world, while also developing new numerical methods for simulating fluid-structure interaction, including efficient multgrid methods for implicit versions of the IB method and a novel version of the IB method that allows both the viscosity and the mass density of the immersed structure to differ from that of the fluid. &nbsp;This project has also developed improved methods for simulating rigid body fluid-solid interaction, fluctuating hydrodynamics and fluid-solid interaction, and immersed boundary-like methods using continuum mechanics models based on finite element and material point methods. &nbsp;The project also supported work to verify and validate the IB method and the IBAMR software for cardiac and cardiovascular applications by comparing results generated by IBAMR to established commercial software for simulating nonlinear mechanics.</p> <p>IBAMR is freely distributed on-line and is already being used by several independent research groups to simulate diverse problems in biological fluid dynamics. &nbsp;An important broader impact of the project is that by enhancing IBAMR, this project also enhances the ability of these and other researchers to construct detailed biofluids models without requiring those researchers to develop the significant software infrastructure needed to perform such simulations. &nbsp;The work of this project has also fostered and greatly extended the community of students and researchers who are able to use IBAMR to model biological fluid-structure interaction.</p><br> <p>            Last Modified: 03/03/2016<br>      Modified by: Boyce&nbsp;E&nbsp;Griffith</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ From the writhing and coiling of DNA, to the beating and pumping motions of cilia and flagella, to the flow of blood in the heart and throughout the circulation, coupled fluid-structure systems are ubiquitous in biology.  The immersed boundary (IB) method is both a mathematical formulation and a numerical approach to such problems, treating the case in which an elastic structure is immersed in a viscous incompressible fluid.  The IB method was introduced to describe the fluid dynamics of heart valves and cardiac fluid dynamics, but this methodology has also been applied to a wide range of problems in biological fluid dynamics and, more generally, to a variety of problems in which a fluid flow interacts with an immersed structure.  Although the IB method is a broadly useful approach to biofluid mechanics, high spatial resolution is generally required to resolve the viscous boundary layers at fluid-structure interfaces and, at higher Reynolds numbers, to resolve vortices shed from such interfaces.  To improve the efficiency of the IB method, the PI and co-workers have developed adaptive versions of the IB method that employ block-structured adaptive mesh refinement (AMR) to deploy high spatial resolution only where it is needed, such as in the vicinity of fluid-structure interfaces, or near localized regions of high vorticity in the flow field.  The IBAMR software developed by the PI and co-workers is a distributed-memory parallel implementation of this adaptive scheme distributed via GitHub.  IBAMR was among the first distributed-memory parallel implementations of the IB method and continues to be among the only actively-developed community IB codes presently available.  The intellectual merit of this project is that it has enhanced biofluid dynamics methods and software used by a number independent research groups, both in the US and around the world, while also developing new numerical methods for simulating fluid-structure interaction, including efficient multgrid methods for implicit versions of the IB method and a novel version of the IB method that allows both the viscosity and the mass density of the immersed structure to differ from that of the fluid.  This project has also developed improved methods for simulating rigid body fluid-solid interaction, fluctuating hydrodynamics and fluid-solid interaction, and immersed boundary-like methods using continuum mechanics models based on finite element and material point methods.  The project also supported work to verify and validate the IB method and the IBAMR software for cardiac and cardiovascular applications by comparing results generated by IBAMR to established commercial software for simulating nonlinear mechanics.  IBAMR is freely distributed on-line and is already being used by several independent research groups to simulate diverse problems in biological fluid dynamics.  An important broader impact of the project is that by enhancing IBAMR, this project also enhances the ability of these and other researchers to construct detailed biofluids models without requiring those researchers to develop the significant software infrastructure needed to perform such simulations.  The work of this project has also fostered and greatly extended the community of students and researchers who are able to use IBAMR to model biological fluid-structure interaction.       Last Modified: 03/03/2016       Submitted by: Boyce E Griffith]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

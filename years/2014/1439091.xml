<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: FULL: CCA: Production-Run Failure Recovery Based Approach to Reliable Parallel Software</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>750000.00</AwardTotalIntnAmount>
<AwardAmount>750000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Title: XPS: FULL: CCA: Production-Run Failure Recovery Based Approach to Reliable Parallel Software&lt;br/&gt;&lt;br/&gt;Concurrency bugs are a severe threat to system reliability in the multi-core era. Approaches to handling concurrency bugs and improving the reliability of production-run parallel software are sorely needed. This project aims to create a new parallel computing paradigm. The intellectual merits are that the project will pioneer treating run-time failure recovery as default for parallel programs, and reshaping every aspect of parallel-program development and maintenance. The project's broader significance and importance are that it will help lower the costs of software development, in-house testing, failure diagnosis, and bug repair, broadly benefiting society through better-performing parallel software.&lt;br/&gt;&lt;br/&gt;Specifically, the proposed framework will include five components: (1) a feather-weight run-time recovery framework that utilize natural program idempotence to obtain natural concurrency-bug failure recovery; (2) a new code-development system that guide developers to write software with improved recoverability; (3) a new in-house testing system, where the testing focus is shifted towards hard-to-recover code; (4) a new on-demand run-time monitoring system that leverages on-demand run-time monitoring for run-time recovery; (5) a new off-line failure diagnosis system that leverages the feedback from recovery for failure diagnosis and fixing. These five components will work together to significantly improve the reliability and lower the development cost of parallel software.</AbstractNarration>
<MinAmdLetterDate>08/12/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/12/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1439091</AwardID>
<Investigator>
<FirstName>Shan</FirstName>
<LastName>Lu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shan Lu</PI_FULL_NAME>
<EmailAddress>shanlu@cs.uchicago.edu</EmailAddress>
<PI_PHON>7737023184</PI_PHON>
<NSF_ID>000552962</NSF_ID>
<StartDate>08/12/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Karthikeyan</FirstName>
<LastName>Sankaralingam</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Karthikeyan Sankaralingam</PI_FULL_NAME>
<EmailAddress>karu@cs.wisc.edu</EmailAddress>
<PI_PHON>6082623822</PI_PHON>
<NSF_ID>000491322</NSF_ID>
<StartDate>08/12/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Chicago</Name>
<CityName>Chicago</CityName>
<ZipCode>606372612</ZipCode>
<PhoneNumber>7737028669</PhoneNumber>
<StreetAddress>6054 South Drexel Avenue</StreetAddress>
<StreetAddress2><![CDATA[Suite 300]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>005421136</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CHICAGO, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>005421136</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Chicago]]></Name>
<CityName/>
<StateCode>IL</StateCode>
<ZipCode>606371588</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~750000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Improving the availability of production-run concurrent and distributed systems is crucial to enhancing user experience, avoiding catastrophic failures, and saving development and maintenance cost of software industry. Unfortunately, timing related bugs, also referred to as concurrency bugs, widely exist in concurrent and distributed systems. They are difficult to avoid, expose, diagnose, and fix by developers.</p> <p><br />This project focuses on improving the quality of concurrent and distributed systems and makes significant contributions to the state of the art of understanding, detecting, preventing, recovering, and diagnosing timing-related failures in concurrent and distributed systems.</p> <p>- It conducts comprehensive empirical studies about timing problems and timing-related failures in not only multi-threaded software but also distributed systems.&nbsp;</p> <p>- It provides a new approach to recovering software from failures caused by concurrency bugs during production runs through hardware support.</p> <p>- It provides new techniques to automatically fix concurrency bugs and prevent concurrency bugs from manifesting in multi-threaded software.</p> <p>- It provides novel testing and failure diagnosis tools to help expose and debug concurrency bugs in multi-threaded software.&nbsp;</p> <p>- It provides pioneering techniques to detect timing problems and component-failure-recovery problems in distributed systems.</p> <p>- It provides novel designs and implementations of programmable accelerators that allow developers to easily and correctly program highly concurrent and flexible hardware accelerators. Finding from this paper also resulted in a IEEE Micro Top Picks award for an ISCA-2015 paper, which is now selected as a Communications of ACM Research Highlights (to Appear in the next month).&nbsp;</p> <p>The above techniques can help improve the availability of production-run concurrent and distributed systems, greatly improving users' use experience, and save development, debugging, and testing cost during the development of parallel software.</p> <p>The research results of this project have been disseminated through conference proceedings, including more than 10 research papers on top-tier computer science conferences (e.g., ASPLOS, ISCA, ICSE, etc.) and journals (e.g., IEEE Computer, IEEE TSE, IEEE TPDS, etc.), research talks, benchmark dissemination, and others. Furthermore, work from this project won an ACM SIGSOFT Distinguished Paper Award at the flag-ship software engineering conference in 2014, an IEEE Micro Top Picks, and a selection to be featured as a Communications of ACM Research Highlights. The work has also resulted in a IEEE Computer articles on Open Source hardware.</p> <p>Multiple students have gone through research training in this project. Among them, one has finished his master degree and two are going to finish their Ph.D. thesis based on their research in this project in one year. Out-reach activities and teaching development based on this project have also been conducted. One student at UW-Madison has finished his PhD thesis and has joined a startup which is commercializing his research.&nbsp;</p><br> <p>            Last Modified: 10/23/2018<br>      Modified by: Shan&nbsp;Lu</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Improving the availability of production-run concurrent and distributed systems is crucial to enhancing user experience, avoiding catastrophic failures, and saving development and maintenance cost of software industry. Unfortunately, timing related bugs, also referred to as concurrency bugs, widely exist in concurrent and distributed systems. They are difficult to avoid, expose, diagnose, and fix by developers.   This project focuses on improving the quality of concurrent and distributed systems and makes significant contributions to the state of the art of understanding, detecting, preventing, recovering, and diagnosing timing-related failures in concurrent and distributed systems.  - It conducts comprehensive empirical studies about timing problems and timing-related failures in not only multi-threaded software but also distributed systems.   - It provides a new approach to recovering software from failures caused by concurrency bugs during production runs through hardware support.  - It provides new techniques to automatically fix concurrency bugs and prevent concurrency bugs from manifesting in multi-threaded software.  - It provides novel testing and failure diagnosis tools to help expose and debug concurrency bugs in multi-threaded software.   - It provides pioneering techniques to detect timing problems and component-failure-recovery problems in distributed systems.  - It provides novel designs and implementations of programmable accelerators that allow developers to easily and correctly program highly concurrent and flexible hardware accelerators. Finding from this paper also resulted in a IEEE Micro Top Picks award for an ISCA-2015 paper, which is now selected as a Communications of ACM Research Highlights (to Appear in the next month).   The above techniques can help improve the availability of production-run concurrent and distributed systems, greatly improving users' use experience, and save development, debugging, and testing cost during the development of parallel software.  The research results of this project have been disseminated through conference proceedings, including more than 10 research papers on top-tier computer science conferences (e.g., ASPLOS, ISCA, ICSE, etc.) and journals (e.g., IEEE Computer, IEEE TSE, IEEE TPDS, etc.), research talks, benchmark dissemination, and others. Furthermore, work from this project won an ACM SIGSOFT Distinguished Paper Award at the flag-ship software engineering conference in 2014, an IEEE Micro Top Picks, and a selection to be featured as a Communications of ACM Research Highlights. The work has also resulted in a IEEE Computer articles on Open Source hardware.  Multiple students have gone through research training in this project. Among them, one has finished his master degree and two are going to finish their Ph.D. thesis based on their research in this project in one year. Out-reach activities and teaching development based on this project have also been conducted. One student at UW-Madison has finished his PhD thesis and has joined a startup which is commercializing his research.        Last Modified: 10/23/2018       Submitted by: Shan Lu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

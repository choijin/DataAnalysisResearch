<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSE: Scalable Big Data Clustering by Random Projection Hashing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>498127.00</AwardTotalIntnAmount>
<AwardAmount>498127</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Bogdan Mihaila</SignBlockName>
<PO_EMAI>bmihaila@nsf.gov</PO_EMAI>
<PO_PHON>7032928235</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project plans to develop a distributed algorithm for secure clustering of high dimensional data sets.  Fields in health and biology are significantly benefited by data clustering scalability.  Bioinformatic problems such as Micro Array clustering, Protein-Protein interaction clustering, medical resource decision making, medical image processing, and clustering of epidemiological events all serve to benefit from larger dataset sizes.  The algorithm under development, called Random Projection Hash or RPHash, utilizes aspects of locality sensitive hashing (LSH) and multi-probe random projection for computational scalability and linear achievable gains from parallel speed.  Furthermore, RPHash provides data anonymization through destructive manipulation of the data preventing de-anonymization attacks beyond standard best practices database security methods.  RPHash will be deployable on commercially available cloud resources running the Hadoop (MRv2) implementation of MapReduce.  The exploitation of general purpose cloud processing solutions allows researchers to scale their processing needs using virtually limitless commercial processing resources.&lt;br/&gt;&lt;br/&gt;The RPHash algorithm uses various recent techniques in data mining along with a new approach toward achieving algorithmic scalability on distributed systems.  The basic intuition of RPHash is to combine multi-probe random projection with discrete space quantization.  Regions of high density are then regarded as centroid candidates.  To follow common parameterized, k-means methods, the top k regions will be selected.  The focus on a randomized, and thus non-deterministic, clustering algorithm is somewhat uncommon in computing, but common for ill-posed, combinatorially restrictive problems such as clustering and partitioning.  Despite theoretical results showing that k-means has an exponential worst case complexity, many real world problems tend to fair much better under k-means and other similar algorithms.</AbstractNarration>
<MinAmdLetterDate>08/08/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/08/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1440420</AwardID>
<Investigator>
<FirstName>Philip</FirstName>
<LastName>Wilsey</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Philip A Wilsey</PI_FULL_NAME>
<EmailAddress>philip.wilsey@uc.edu</EmailAddress>
<PI_PHON>5135564779</PI_PHON>
<NSF_ID>000299348</NSF_ID>
<StartDate>08/08/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Cincinnati Main Campus</Name>
<CityName>Cincinnati</CityName>
<ZipCode>452210222</ZipCode>
<PhoneNumber>5135564358</PhoneNumber>
<StreetAddress>University Hall, Suite 530</StreetAddress>
<StreetAddress2><![CDATA[51 Goodman Dr.]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041064767</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CINCINNATI</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041064767</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Cincinnati Main Campus]]></Name>
<CityName>Cincinnati</CityName>
<StateCode>OH</StateCode>
<ZipCode>452210030</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>2878</Code>
<Text>SPECIAL PROJECTS - CCF</Text>
</ProgramReference>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8005</Code>
<Text>Scientific Software Elements</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~498127</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project developed a distributed algorithm (called RPHash) for a type of machine learning called data clustering.&nbsp; Data clustering is an unsupervised learning method that classifies the data into clusters of closely associated items.&nbsp; In general, the data is assumed to be a multi-dimensional set of floating points values that are interpreted to characterize that data into the multi-dimensional space.&nbsp; Clustering algorithms then discover the "clusters" of data in the multi-dimensional space.&nbsp; In data clustering, the general solution is to locate clusters of data records such that the data positioned in each cluster is somehow "close" to the other data that is also present in that cluster.&nbsp; Some algorithms use a distance metric (such as the euclidean distance) to determine "close"; other methods use density and the proximity of the data to each other in a continuing link of dense points of varying shape.&nbsp; The RPHash solution uses the classic euclidean distance metric to build spherical clusters.&nbsp; However other p-space distance metrics are also included in the RPHash code base.<br /><br />The RPHash algorithm is able to cluster data in distributed data sets without exchanging the data among the distributed systems.&nbsp; That is, RPHash discovers the clusters from the distributed data sets as if they were in one data set.&nbsp; RPHash achieves this without actually placing the distributed data into a common area.&nbsp; Thus, RPHash achieves what is called "privacy preserving data mining".&nbsp; The privacy is preserved by using a set of sampling and randomization steps that transform the data into encodings (or keys) that can be safely exchanged without revealing the details of the original data sources.&nbsp; The first step in the distributed algorithm computes the keys and "candidate clusters" locally at a compute node located with each distributed data set.&nbsp; The most promising of these candidates are then sent to a centralized location where the keys are analyzed and the final set of common clusters for this distributed data are determined.&nbsp; The common cluster keys are then distributed so that each distributed node can then associate its data to the common clusters.&nbsp; The benefit of RPHash is that it operates very quickly (and in small memory) and can scale to very large data sets in high dimensions.&nbsp; The utility of a privacy preserving data mining tool such as RPHash is that it can be used to perform machine learning across a collection of data that cannot be shared such as medical data records.&nbsp; The RPHash software is released as open source software and is available at https://github.com/wilseypa/rphash-java.</p><br> <p>            Last Modified: 10/30/2019<br>      Modified by: Philip&nbsp;A&nbsp;Wilsey</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project developed a distributed algorithm (called RPHash) for a type of machine learning called data clustering.  Data clustering is an unsupervised learning method that classifies the data into clusters of closely associated items.  In general, the data is assumed to be a multi-dimensional set of floating points values that are interpreted to characterize that data into the multi-dimensional space.  Clustering algorithms then discover the "clusters" of data in the multi-dimensional space.  In data clustering, the general solution is to locate clusters of data records such that the data positioned in each cluster is somehow "close" to the other data that is also present in that cluster.  Some algorithms use a distance metric (such as the euclidean distance) to determine "close"; other methods use density and the proximity of the data to each other in a continuing link of dense points of varying shape.  The RPHash solution uses the classic euclidean distance metric to build spherical clusters.  However other p-space distance metrics are also included in the RPHash code base.  The RPHash algorithm is able to cluster data in distributed data sets without exchanging the data among the distributed systems.  That is, RPHash discovers the clusters from the distributed data sets as if they were in one data set.  RPHash achieves this without actually placing the distributed data into a common area.  Thus, RPHash achieves what is called "privacy preserving data mining".  The privacy is preserved by using a set of sampling and randomization steps that transform the data into encodings (or keys) that can be safely exchanged without revealing the details of the original data sources.  The first step in the distributed algorithm computes the keys and "candidate clusters" locally at a compute node located with each distributed data set.  The most promising of these candidates are then sent to a centralized location where the keys are analyzed and the final set of common clusters for this distributed data are determined.  The common cluster keys are then distributed so that each distributed node can then associate its data to the common clusters.  The benefit of RPHash is that it operates very quickly (and in small memory) and can scale to very large data sets in high dimensions.  The utility of a privacy preserving data mining tool such as RPHash is that it can be used to perform machine learning across a collection of data that cannot be shared such as medical data records.  The RPHash software is released as open source software and is available at https://github.com/wilseypa/rphash-java.       Last Modified: 10/30/2019       Submitted by: Philip A Wilsey]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

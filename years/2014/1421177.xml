<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Using Coding Theory to Optimize the Representation of Information in Computer Architecture</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>450000.00</AwardTotalIntnAmount>
<AwardAmount>458000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Yuanyuan Yang</SignBlockName>
<PO_EMAI>yyang@nsf.gov</PO_EMAI>
<PO_PHON>7032928067</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computer systems process and store information, including&lt;br/&gt;instructions, inputs, and outputs.  Computers represent, or "encode",&lt;br/&gt;this information with bits -- zeros and ones -- such that a given&lt;br/&gt;sequence of bits can describe a number, an instruction, a character to&lt;br/&gt;print to the monitor, etc.  The choice of bit patterns used to encode&lt;br/&gt;different types of information impacts the performance, reliability,&lt;br/&gt;and energy-efficiency of a computer.  This project -- which is an&lt;br/&gt;interdisciplinary collaboration between a computer systems architect&lt;br/&gt;and an expert in information coding -- will develop new information&lt;br/&gt;representations that improve performance, reliability, and&lt;br/&gt;energy-efficiency.  This project will have both technical impact on&lt;br/&gt;computer system design and information coding, and it will impact&lt;br/&gt;society through its training of students (both graduate and&lt;br/&gt;undergraduate) and an outreach program that brings under-represented&lt;br/&gt;minorities to Duke for summer research experiences.&lt;br/&gt; &lt;br/&gt;This project will make technical advances in four main avenues.&lt;br/&gt;First, the project will develop new representations for the&lt;br/&gt;information that is stored in write-limited storage media like Flash,&lt;br/&gt;with the goal of extending its lifetime.  A key coding technology in&lt;br/&gt;this research thrust is coset coding, in which the system has multiple&lt;br/&gt;choices for which codeword to write to the storage and can choose the&lt;br/&gt;option that incurs the least wear.  Second, the project will develop&lt;br/&gt;new codes, based on existing locally repairable codes, for writing to&lt;br/&gt;all types of storage that can suffer permanent failures.  These codes&lt;br/&gt;can enable efficient, local repair of failures by minimizing the&lt;br/&gt;number of storage locations that must be accessed to perform the&lt;br/&gt;repair.  Third, the project will develop new representations of&lt;br/&gt;instructions to improve performance and energy-efficiency.  In&lt;br/&gt;particular, the project will develop new encodings of instructions for&lt;br/&gt;GPUs that enable useful work to be done even in the presence of branch&lt;br/&gt;divergence.  Fourth, the project will develop and apply network coding&lt;br/&gt;techniques to improve the performance and reliability of communication&lt;br/&gt;between processor cores.</AbstractNarration>
<MinAmdLetterDate>07/10/2014</MinAmdLetterDate>
<MaxAmdLetterDate>06/10/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1421177</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Sorin</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel Sorin</PI_FULL_NAME>
<EmailAddress>sorin@ee.duke.edu</EmailAddress>
<PI_PHON>9196843030</PI_PHON>
<NSF_ID>000280417</NSF_ID>
<StartDate>07/10/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Arthur</FirstName>
<LastName>Calderbank</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Arthur Calderbank</PI_FULL_NAME>
<EmailAddress>robert.calderbank@duke.edu</EmailAddress>
<PI_PHON>9196682728</PI_PHON>
<NSF_ID>000465711</NSF_ID>
<StartDate>07/10/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Duke University</Name>
<CityName>Durham</CityName>
<ZipCode>277054010</ZipCode>
<PhoneNumber>9196843030</PhoneNumber>
<StreetAddress>2200 W. Main St, Suite 710</StreetAddress>
<StreetAddress2><![CDATA[Erwin Square]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>044387793</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>DUKE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>044387793</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Duke University]]></Name>
<CityName/>
<StateCode>NC</StateCode>
<ZipCode>277080291</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~450000</FUND_OBLG>
<FUND_OBLG>2016~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>All data in computer systems is represented with zeros and ones.There are many ways to use bits (zeros and ones) to represent integers, characters, instructions, floating point numbers, etc. These bits, when not being manipulated by the processor cores, reside in fast on-chip memories (e.g., caches made of SRAM), larger off-chip memories (generally made of DRAM), and extremely large storage devices (e.g., disks made of Flash memory). The processor cores read and write data to these various memories.&nbsp; The different memories are generally made of different physical technologies, including: SRAM, DRAM, Flash, Phase Change Memory (PCM), Xpoint memory, STT-RAM, etc.&nbsp; These technologies have different characteristics, including storage density, energy usage, and reliability.</p> <p><br />This interdisciplinary project combines aspects of computer architecture (designing computer systems) and information theory (representing information), with the goal of finding the best representations to achieve specific objectives.&nbsp; Much of our focus has been on issues of reliability, in which we discovered ways to represent data so as to extend the lifetime of the memories and/or avoid bit errors. In early work, we took the idea of coset coding from information theory and applied it to the writing of PCM.&nbsp; Each PCM cell, which can hold a bit, wears out after a finite number of times that cell's value changes.&nbsp; We use coset coding to give the core choices in what bits to write, and with more choices there are better oppoortunities to write strings of bits in which fewer bits need to change value.&nbsp; We have also applied coset coding to Flash memory, to prolong its lifetime.&nbsp; We have used a coding technique called Varshamov-Tenegolts (VT) codes to detect and correct errors in a novel memory technology called Racetrack.&nbsp; VT codes have never before, to our knowledge been used in architecture, because they solve an unusual error model (only Racetrack has it, among current technologies, and VT was invented long ago) and they were not designed to be easily implemented.&nbsp; We solved the implementation problem by developing a new code construction and showed how to use it to detect when the Racetrack controller skips a bit or mistakenly re-reads the same bit. We have adapted other codes to solve other challenges, including errors in 3D stacked DRAM and write disturbances in PCM.</p> <p><br />The research has been quite impactful because of its ability to bring together ideas from architecture and information theory.&nbsp; Architects are not aware of the codes or how to adapt them, and information theorists are unaware of the implementation requirements of real computer systems.&nbsp; By working together, we have developed novel codes that can be used in real systems.&nbsp; We experimentally evaluate the benefits and the costs of our codes.</p> <p>This project has had numerous broader impacts.&nbsp; For one, we have published our work in both of our research communities, making each aware of key ideas from the other.&nbsp; Second, we have trained several young researchers, including Dr. Alireza Vahid (was a postdoc with us and is now a professor at University of Colorado, Denver) and Georgios Mappouras, a PhD student who is learning how to perform and present his own research.&nbsp; We are also transferring our technology to industry in several ways.&nbsp; Both the PI and co-PI present this work to industrial colleagues.&nbsp; Mr. Mappouras is on a 6-month internship at AMD, where he is sharing our research as well as learning about real-world industrial problems that need to be solved.&nbsp; This project has also supported the training of undergraduate research assistants, including a winner of the Duke ECE Department's annual research project award.</p> <p>&nbsp;</p><br> <p>            Last Modified: 08/03/2018<br>      Modified by: Daniel&nbsp;Sorin</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ All data in computer systems is represented with zeros and ones.There are many ways to use bits (zeros and ones) to represent integers, characters, instructions, floating point numbers, etc. These bits, when not being manipulated by the processor cores, reside in fast on-chip memories (e.g., caches made of SRAM), larger off-chip memories (generally made of DRAM), and extremely large storage devices (e.g., disks made of Flash memory). The processor cores read and write data to these various memories.  The different memories are generally made of different physical technologies, including: SRAM, DRAM, Flash, Phase Change Memory (PCM), Xpoint memory, STT-RAM, etc.  These technologies have different characteristics, including storage density, energy usage, and reliability.   This interdisciplinary project combines aspects of computer architecture (designing computer systems) and information theory (representing information), with the goal of finding the best representations to achieve specific objectives.  Much of our focus has been on issues of reliability, in which we discovered ways to represent data so as to extend the lifetime of the memories and/or avoid bit errors. In early work, we took the idea of coset coding from information theory and applied it to the writing of PCM.  Each PCM cell, which can hold a bit, wears out after a finite number of times that cell's value changes.  We use coset coding to give the core choices in what bits to write, and with more choices there are better oppoortunities to write strings of bits in which fewer bits need to change value.  We have also applied coset coding to Flash memory, to prolong its lifetime.  We have used a coding technique called Varshamov-Tenegolts (VT) codes to detect and correct errors in a novel memory technology called Racetrack.  VT codes have never before, to our knowledge been used in architecture, because they solve an unusual error model (only Racetrack has it, among current technologies, and VT was invented long ago) and they were not designed to be easily implemented.  We solved the implementation problem by developing a new code construction and showed how to use it to detect when the Racetrack controller skips a bit or mistakenly re-reads the same bit. We have adapted other codes to solve other challenges, including errors in 3D stacked DRAM and write disturbances in PCM.   The research has been quite impactful because of its ability to bring together ideas from architecture and information theory.  Architects are not aware of the codes or how to adapt them, and information theorists are unaware of the implementation requirements of real computer systems.  By working together, we have developed novel codes that can be used in real systems.  We experimentally evaluate the benefits and the costs of our codes.  This project has had numerous broader impacts.  For one, we have published our work in both of our research communities, making each aware of key ideas from the other.  Second, we have trained several young researchers, including Dr. Alireza Vahid (was a postdoc with us and is now a professor at University of Colorado, Denver) and Georgios Mappouras, a PhD student who is learning how to perform and present his own research.  We are also transferring our technology to industry in several ways.  Both the PI and co-PI present this work to industrial colleagues.  Mr. Mappouras is on a 6-month internship at AMD, where he is sharing our research as well as learning about real-world industrial problems that need to be solved.  This project has also supported the training of undergraduate research assistants, including a winner of the Duke ECE Department's annual research project award.          Last Modified: 08/03/2018       Submitted by: Daniel Sorin]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

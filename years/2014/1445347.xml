<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Collaborative Research: Making Software Engineering Work for Computational Science and Engineering: An Integrated Approach</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>109589.00</AwardTotalIntnAmount>
<AwardAmount>109589</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Bogdan Mihaila</SignBlockName>
<PO_EMAI>bmihaila@nsf.gov</PO_EMAI>
<PO_PHON>7032928235</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Scientific and engineering advances are increasingly dependent upon software, and this overall field is often called Computational Science &amp; Engineering (CSE). With the increase in the reliance on software for many critical decisions and advances, it is of utmost importance for that software to be correct and easy to maintain. As a result, scientists and engineers are devoting a larger percentage of their time to the development and maintenance of code, leaving less time for the underlying science or engineering. The discipline of software engineering (SE) is focused on creating techniques and tools to help developers work more effectively and efficiently. Historically, the use of SE practices for science and engineering software (in CSE) has been relatively low. Modern SE has a number of light-weight practices that would likely fit well into the workflow of science and engineering software projects. The low use of SE in CSE appears to be the result, at least partially, of the lack of properly-tailored, lightweight, practices that have been shown effective in science/engineering domains.&lt;br/&gt;&lt;br/&gt;This project has three main activities:&lt;br/&gt;(1) Continuing the Software Engineering for Computational Science &amp; Engineering Workshop (SE-CSE) series.  This will bring together members of both communities and inform them about the problems and solutions each community has, and will lead to collaborations between the communities.&lt;br/&gt;(2) Evaluating the usefulness of peer code reviews on scientific and engineering software. By building and validating a set of checklists to support scientific/engineering peer code review, a deeper understanding of the types of defects commonly made by CSE developers will be obtained. This knowledge will not just motivate checklist items, but it will inform the development of additional SE methodologies.&lt;br/&gt;(3) Developing and evaluating whether properly chosen and clearly presented metrics can be beneficial for scientific and engineering developers.  A community survey concerning metrics will provide unique insight into the type of information the CSE developers are currently using and would be interested in using if provided properly. This type of knowledge does not currently exist and will be quite valuable to others in the community wishing to support the use of metrics. The project will build an initial version of a metrics dashboard. This dashboard will act as a proof-of-concept to illustrate that a standard SE methodology (i.e. using metrics to provide insight into the software development process) can be used effectively by CSE developers.&lt;br/&gt;&lt;br/&gt;In addition to the results of the individual activities, all of them together will help advance scientific/engineering progress by helping developers build higher quality software. The project will provide examples of how appropriate SE practices can be used effectively within the CSE domain. Dissemination of these results into the appropriate SE, CSE, and additional venues will allow them to have broad impacts.</AbstractNarration>
<MinAmdLetterDate>06/24/2014</MinAmdLetterDate>
<MaxAmdLetterDate>06/27/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1445347</AwardID>
<Investigator>
<FirstName>George</FirstName>
<LastName>Thiruvathukal</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>George K Thiruvathukal</PI_FULL_NAME>
<EmailAddress>gkt@cs.luc.edu</EmailAddress>
<PI_PHON>3129157986</PI_PHON>
<NSF_ID>000314155</NSF_ID>
<StartDate>06/24/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Loyola University of Chicago</Name>
<CityName>CHICAGO</CityName>
<ZipCode>606601537</ZipCode>
<PhoneNumber>7735082471</PhoneNumber>
<StreetAddress>1032 W. Sheridan Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>074368911</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>LOYOLA UNIVERSITY OF CHICAGO</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>074368911</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Loyola University of Chicago]]></Name>
<CityName>Chicago</CityName>
<StateCode>IL</StateCode>
<ZipCode>606117141</ZipCode>
<StreetAddress><![CDATA[820 N Michigan Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>8005</Code>
<Text>Scientific Software Elements</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~109589</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Significant Results</strong></p> <p>The results of our metrics survey, from 129 respondents, indicates that Research Software developers have a general knowledge of metrics. However, their specific knowledge of SE metrics is lacking and their use is even more limited. As code complexity is a nagging problem in research software, their use of code metrics is the highest. The second most used metrics relate to performance and testing. With reported interest in software development process and use of version control, there is hope that metrics could play a more prominent role in scientific software development in the future. Further study will be needed to determine whether SE metrics can be helpful to scientific software teams.</p> <p>The results of the survey on software process, from 98 respondents, indicated that Research Software Developers report that they typically follow a defined process and find it valuable. There was also a relationship between the perception of value of software process and the use of software process.</p> <p><strong>Key Outcomes</strong></p> <p>Presented paper on Software Metrics for Scientific Software at the IEEE 2018 eScience conference</p> <p>Presented paper on Software Process for Scientific Software at the 2019 Evaluation and Assessment in Software Engineering (EASE 2019) conference</p> <p>Created SE4Science website,&nbsp;<span><a>http://www.se4science.org,&nbsp;</a></span>for ongoing dissemination of research activities, papers, workshops, and tutorials during and after the grant period</p> <p>Created Metrics Dashboard research prototype at&nbsp;<a href="http://metricsdashboard.cs.luc.edu/">http://metricsdashboard.cs.luc.edu/</a>&nbsp;for computing and visualizing metrics on scientific/engineering free/open source software projects.</p><br> <p>            Last Modified: 10/28/2019<br>      Modified by: George&nbsp;K&nbsp;Thiruvathukal</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Significant Results  The results of our metrics survey, from 129 respondents, indicates that Research Software developers have a general knowledge of metrics. However, their specific knowledge of SE metrics is lacking and their use is even more limited. As code complexity is a nagging problem in research software, their use of code metrics is the highest. The second most used metrics relate to performance and testing. With reported interest in software development process and use of version control, there is hope that metrics could play a more prominent role in scientific software development in the future. Further study will be needed to determine whether SE metrics can be helpful to scientific software teams.  The results of the survey on software process, from 98 respondents, indicated that Research Software Developers report that they typically follow a defined process and find it valuable. There was also a relationship between the perception of value of software process and the use of software process.  Key Outcomes  Presented paper on Software Metrics for Scientific Software at the IEEE 2018 eScience conference  Presented paper on Software Process for Scientific Software at the 2019 Evaluation and Assessment in Software Engineering (EASE 2019) conference  Created SE4Science website, http://www.se4science.org, for ongoing dissemination of research activities, papers, workshops, and tutorials during and after the grant period  Created Metrics Dashboard research prototype at http://metricsdashboard.cs.luc.edu/ for computing and visualizing metrics on scientific/engineering free/open source software projects.       Last Modified: 10/28/2019       Submitted by: George K Thiruvathukal]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

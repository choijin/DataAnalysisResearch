<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Integrating Software Engineering and  Human Error Models to Improve Software Quality</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>180242.00</AwardTotalIntnAmount>
<AwardAmount>180242</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This research looks to improve software quality in a new way by assuming that human error is a key cause of software defects. Research from cognitive psychology is used to develop a deeper understanding of the human errors that occur during the software development process and to develop techniques that detect and prevent those errors early in the software development lifecycle. Early elimination of mistakes will improve software quality and reduce overall development cost. Through the application of human error research from psychology, this work will improve developers? ability to identify, classify, and eliminate software development errors and provide a solid structure and theoretical basis upon which to build.&lt;br/&gt; &lt;br/&gt;To effectively use findings from human error research to improve software quality, this project has three primary objectives. The first objective is to develop and empirically validate a requirement error taxonomy. The inclusion of human error research will ensure that the taxonomy is well-structured. Empirical evaluation with developers will ensure the taxonomy is complete and useful. The second objective is to use the taxonomy to build and empirically evaluate error-based software development techniques. These detection and prevention techniques will operationalize the error information into a format usable by developers. The third objective is to develop tool support for the error-based techniques. The use of human error research in this project will provide a more in-depth understanding of the types of mistakes developers make during development. In addition to its impacts on software quality, this project will also provide a venue for software engineering researchers to interact with cognitive psychologists, producing more diverse PhD students.&lt;br/&gt;ents.</AbstractNarration>
<MinAmdLetterDate>07/02/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/02/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1423279</AwardID>
<Investigator>
<FirstName>Gursimran</FirstName>
<LastName>Walia</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Gursimran S Walia</PI_FULL_NAME>
<EmailAddress>gwalia@georgiasouthern.edu</EmailAddress>
<PI_PHON>7013189198</PI_PHON>
<NSF_ID>000550656</NSF_ID>
<StartDate>07/02/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Dakota State University Fargo</Name>
<CityName>FARGO</CityName>
<ZipCode>581086050</ZipCode>
<PhoneNumber>7012318045</PhoneNumber>
<StreetAddress>Dept 4000 - PO Box 6050</StreetAddress>
<StreetAddress2><![CDATA[1735 Research Park Drive]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Dakota</StateName>
<StateCode>ND</StateCode>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>ND00</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>803882299</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTH DAKOTA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>803882299</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[North Dakota State University]]></Name>
<CityName/>
<StateCode>ND</StateCode>
<ZipCode>581086050</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Dakota</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>ND00</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~180242</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p id="docs-internal-guid-950156ef-7fff-534e-3c03-2f59e2938ceb" style="line-height: 1.38; margin-left: 18pt; text-align: justify; margin-top: 0pt; margin-bottom: 0pt;" dir="ltr"><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">Correction of faults in software projects incurs considerable costs for software organizations, especially if fault detection occurs late in the development process. Researchers have developed various approaches (RCA, ODC, 5 whys etc.) to identify the origin point for software faults. By understanding the origin point for faults, development teams can make appropriate procedural changes to reduce the likelihood of future faults. In practice, retrospective fault-causal analysis approaches are not always reliable, they lack details to distinguish between the actual root cause of problems and the contributing factors, and they lack a comprehensive theory of fault production that could help generalize and extend the prevention and mitigation efforts to other related issues.</span></p> <p>&nbsp;</p> <p style="line-height: 1.38; margin-left: 18pt; text-align: justify; margin-top: 0pt; margin-bottom: 0pt;" dir="ltr"><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">Cognitive psychologists have reported that faults do not arise out of thin air. Rather they result from problematic activities that occur prior to and during the creation of software artifacts.&nbsp; The problematic activities are especially prevalent during the requirements phase. These antecedent problems often result from the presence of </span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">human errors</span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">, which are failings of human cognition while problem solving, planning, or execution. Our work utilized human error research to add structure and provides a solid theoretical framework to understand the problems that occur during requirement engineering and to develop a taxonomy of human errors in requirements engineering. This information about human errors provides a framework to improve&nbsp; software quality and provide insights about the cognitive aspects of software development.</span></p> <p>&nbsp;</p> <p style="line-height: 1.38; margin-left: 18pt; text-align: justify; margin-top: 0pt; margin-bottom: 0pt;" dir="ltr"><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">In this collaborative project, Dr. Jeffrey Carver from the&nbsp; University of Alabama (UA)and Dr. Gursimran Walia from North Dakota State University (NDSU) worked with a Cognitive Psychologist, Dr. Gary Bradshaw from Mississippi State University (MSU) to use human error theories to develop the Human Error Taxonomy (HET) of requirements engineering (RE) errors. The researchers then validated the usefulness of the HET through a number of studies at universities, including&nbsp; UA, MSU, NDSU, and in industrial organizations, including Microsoft, the Center for Advanced Public Safety (CAPS) and Hindustan Computers Limited (HCL). The PIs also conducted a workshop at </span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">ICSE&rsquo;15</span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"> that included experts from software engineering and psychology to collect and discuss human errors that occur during software engineering activities. They later conducted a workshop at&nbsp; </span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">REFSQ&rsquo;17</span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"> to disseminate results about the use of the HET to both researchers and practitioners.. Other researchers, outside the project team, have used the HET to characterize the incidence of human errors in different domains (e.g., space software in Brazil). The PIs presented the results from the industrial studies in the </span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">Best Industry Paper</span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"> session at ISSRE and work a curriculum for teaching human error in software engineering received&nbsp; the </span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">Exemplary CS Education Research Paper</span><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"> at SIGCSE 2017.&nbsp;</span></p> <p style="line-height: 1.38; margin-left: 18pt; text-align: justify; margin-top: 12pt; margin-bottom: 12pt;" dir="ltr"><span style="font-size: 9pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">The research team is currently undertaking efforts to extend the rich psychological literature on human errors by adding specific accounts of human error in requirements Engineering. This work will include real-time capture of human errors to inform error analyses and error prevention/mitigation in requirements engineering. Further research will yield a more detailed understanding of the circumstances and setting that led to the error to better enable development of prevention and mitigation approaches.</span></p> <p><br /><br /></p><br> <p>            Last Modified: 02/24/2020<br>      Modified by: Gursimran&nbsp;S&nbsp;Walia</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[Correction of faults in software projects incurs considerable costs for software organizations, especially if fault detection occurs late in the development process. Researchers have developed various approaches (RCA, ODC, 5 whys etc.) to identify the origin point for software faults. By understanding the origin point for faults, development teams can make appropriate procedural changes to reduce the likelihood of future faults. In practice, retrospective fault-causal analysis approaches are not always reliable, they lack details to distinguish between the actual root cause of problems and the contributing factors, and they lack a comprehensive theory of fault production that could help generalize and extend the prevention and mitigation efforts to other related issues.    Cognitive psychologists have reported that faults do not arise out of thin air. Rather they result from problematic activities that occur prior to and during the creation of software artifacts.  The problematic activities are especially prevalent during the requirements phase. These antecedent problems often result from the presence of human errors, which are failings of human cognition while problem solving, planning, or execution. Our work utilized human error research to add structure and provides a solid theoretical framework to understand the problems that occur during requirement engineering and to develop a taxonomy of human errors in requirements engineering. This information about human errors provides a framework to improve  software quality and provide insights about the cognitive aspects of software development.    In this collaborative project, Dr. Jeffrey Carver from the  University of Alabama (UA)and Dr. Gursimran Walia from North Dakota State University (NDSU) worked with a Cognitive Psychologist, Dr. Gary Bradshaw from Mississippi State University (MSU) to use human error theories to develop the Human Error Taxonomy (HET) of requirements engineering (RE) errors. The researchers then validated the usefulness of the HET through a number of studies at universities, including  UA, MSU, NDSU, and in industrial organizations, including Microsoft, the Center for Advanced Public Safety (CAPS) and Hindustan Computers Limited (HCL). The PIs also conducted a workshop at ICSE’15 that included experts from software engineering and psychology to collect and discuss human errors that occur during software engineering activities. They later conducted a workshop at  REFSQ’17 to disseminate results about the use of the HET to both researchers and practitioners.. Other researchers, outside the project team, have used the HET to characterize the incidence of human errors in different domains (e.g., space software in Brazil). The PIs presented the results from the industrial studies in the Best Industry Paper session at ISSRE and work a curriculum for teaching human error in software engineering received  the Exemplary CS Education Research Paper at SIGCSE 2017.  The research team is currently undertaking efforts to extend the rich psychological literature on human errors by adding specific accounts of human error in requirements Engineering. This work will include real-time capture of human errors to inform error analyses and error prevention/mitigation in requirements engineering. Further research will yield a more detailed understanding of the circumstances and setting that led to the error to better enable development of prevention and mitigation approaches.           Last Modified: 02/24/2020       Submitted by: Gursimran S Walia]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

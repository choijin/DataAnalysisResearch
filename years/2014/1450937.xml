<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>IRNC: AMI: Collaborative Research: Software-Defined and Privacy-Preserving Network Measurement Instrument and Services for Understanding Data-Driven Science Discovery</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/01/2015</AwardEffectiveDate>
<AwardExpirationDate>03/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>502104.00</AwardTotalIntnAmount>
<AwardAmount>502104</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Kevin Thompson</SignBlockName>
<PO_EMAI>kthompso@nsf.gov</PO_EMAI>
<PO_PHON>7032924220</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Data intensive science discovery at a global scale has imposed new requirements on the speed and management of international research and education networks. At the connection points of these international networks, it is critical to measure the network data flows to understand network traffic patterns, identify network anomalies and provide insights to network control and planning. However, the ever-increasing network speed, the massive amount of network flows and the changing measurement objectives have made the flow-level measurement on very high-speed networks extremely challenging. The Advanced Measurement Instrument and Services (AMIS) project leverages many-core, programmable network processors to prototype and deploy an advanced measurement instrument to enable services for accurate network monitoring and in-depth traffic analysis. The instrument supports flow-granularity measurement at line rate up to 100Gbps and software application programming interfaces to examine selected flows, with no impact to the performance of user traffic. With scalable hardware and an open source software stack, the measurement services equip network operators with effective tools to quantify flow-level network performance and study network flows through privacy-preserving computational analytics. This project is built on a consortium of academia, industrial partners, network operators and international alliances, who bring unique expertise and resources to achieve the objectives of high performance, programmable flow-granularity network measurement. The outcomes from this project will significantly benefit data driven science discovery, such as astronomy and space weather studies, and will promote broadened participation of underrepresented groups (such as Hispanic and female students) through the involvement of multiple universities, including an EPSCoR university and a Hispanic Serving Institution.</AbstractNarration>
<MinAmdLetterDate>03/30/2015</MinAmdLetterDate>
<MaxAmdLetterDate>03/30/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1450937</AwardID>
<Investigator>
<FirstName>Vernon</FirstName>
<LastName>Bumgardner</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Vernon Bumgardner</PI_FULL_NAME>
<EmailAddress>cody@uky.edu</EmailAddress>
<PI_PHON>8592579420</PI_PHON>
<NSF_ID>000674272</NSF_ID>
<StartDate>03/30/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Kentucky Research Foundation</Name>
<CityName>Lexington</CityName>
<ZipCode>405260001</ZipCode>
<PhoneNumber>8592579420</PhoneNumber>
<StreetAddress>109 Kinkead Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Kentucky</StateName>
<StateCode>KY</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>KY06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>939017877</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF KENTUCKY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>007400724</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Kentucky Research Foundation]]></Name>
<CityName>Lexington</CityName>
<StateCode>KY</StateCode>
<ZipCode>405260001</ZipCode>
<StreetAddress><![CDATA[500 S Limestone 109 Kinkead Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Kentucky</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>KY06</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7369</Code>
<Text>International Res Ret Connect</Text>
</ProgramElement>
<ProgramReference>
<Code>7369</Code>
<Text>INTERNATIONAL RES NET CONNECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~502104</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000; min-height: 14.0px} --> <!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000; min-height: 14.0px} --> <!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000; min-height: 14.0px} --> <!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000; min-height: 14.0px} --> <!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000; min-height: 14.0px} --> <p class="p1">The collaborative AMIS (Advanced Measurement Instrument and Services) project goal was to provide network monitoring, measurement, and analysis services for network traffic at points of international network exchange, while preserving the privacy of the underlying network data.<span>&nbsp; </span>Our teams focus areas included distributed device, data, and task management through the research and development of a platform to support collaborative modular operations, such as data acquisition (measurement tasks), functional services (privacy, analysis, complex event processing, correlation, etc.), and data management (aggregation, distribution, storage, etc).<span>&nbsp; </span>Developing a multi-tenant monitoring and measurement system based on geographically distributed high-rate network interfaces comes with its own set of challenges.<span>&nbsp; </span>Specifically, one must be able to provide methods to describe a measurement topology, such as where measurements should take place and what tools to be used, execute measurement tasks across devices, manage resources within and between devices and backend services, provide methods to manage resulting measurement data, and provide methods for downstream analysis or other functional modules.<span>&nbsp; </span>We present the five main output components of our work:<span>&nbsp; &nbsp;</span></p> <p class="p2">1) Agent-based Edge Computing Platform:&nbsp; Edge and fog computing is often thought of the process of moving computation (function) in proximity to sources of data generation.&nbsp; It is not feasible to transmit the data used for high-rate network measurements to remote locations, which makes the task a good candidate for edge computing techniques.&nbsp; We made use of and extended an existing agent-based edge computing framework (http://cresco.io/) developed by the project team to coordinate device and data operations as shown in Figure 1, between distributed devices and backend services.&nbsp; An example measurement pipeline with related framework services is shown in Figure 2.&nbsp; The following components describe additional methods in which underlying framework components were used.&nbsp; &nbsp; &nbsp; &nbsp;</p> <p class="p1">2) Measurement Topology Language:<span>&nbsp; </span>In order to perform distributed network measurement you must have compatible (versions) tools at each measurement point, configurations to inform measurement tasks, and methods to execute task and manage resulting data.<span>&nbsp; </span>We developed a declarative graph-based language, as shown in Figure 5, to describe the network measurement topology, including measurement locations, points of data aggregation, and downstream functional units.<span>&nbsp; </span>The underlying agent-based framework distributes management tools based on requested versions and configurations to device and provisions requested ancillary services on backend (cloud) resources, such as analytic or storage services.<span>&nbsp; </span>In addition, a simplified RESTful API for common measurement functions was provided.<span>&nbsp; </span>In addition, we have developed a web-based GUI to be used to construct measurement, data flow, and downstream functional module topologies, as shown in Figure 5.<span>&nbsp; &nbsp; &nbsp; &nbsp;</span></p> <p class="p1">3) Resource Management and Scheduling:<span>&nbsp; </span>In mutli-tenent (multi-user, multi-task, etc.) operations great care must be taken to ensure devices with finite resources, such as measurement devices are not overwhelmed with request.<span>&nbsp; </span>Likewise, we want to make sure that duplicate concurrent measurement request do not result in duplicate resource utilizations.<span>&nbsp; </span>Making use of the underlying agent-based framework we collected the state of agents, relationship between agents, and the resource utilization of manage tasks, as shown in Figure 3.<span>&nbsp; </span>On submission, the entire measurement topology is decomposed into node and edge components, measurement topologies with explicit (measurement location) assignments as assigned if resources are available, unassigned function services like CEP, filtering, or aggregation services are scheduled where resources are available and topology allows, and finally upstream and downstream configuration is added to all component configurations composing the measurement pipeline.<span>&nbsp; </span>Constrain satisfaction, resource, and service discovery techniques are used in scheduling optimizations.<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p> <p class="p1">4) Analysis Services:<span>&nbsp; </span>As we previously described, source data might come directly from a measurement device or some other upstream source, such as an aggregation of filtered or enriched data.<span>&nbsp; </span>In addition to task-based measurement tools developed by our collaborators, we deployed continuous IPFIX/NetFlow generation services, with ASN flow injection.<span>&nbsp; </span>Our team developed a number of modules to be used for complex event processing, flow correlation, filtering, and new stream composition services.<span>&nbsp; </span>These modules can be chained with other functional modules allowing very complex measurement and alerting services to be deployed.<span>&nbsp; </span>A few example measurement-focused queries based on the EQL (http://esper.espertech.com/release-7.1.0/esper-reference/html/epl-views.html) and SPARQL (https://www.w3.org/TR/sparql11-overview/) language are shown in Figure 4.<span>&nbsp; &nbsp; &nbsp; &nbsp;</span></p> <p class="p1">The underlying system we have developed is not limited to just network measurement and can be used for many types of task execution, data management, and application monitoring tasks.<span>&nbsp; </span>The system is especially beneficial in the area of edge computing, where data processing is moved toward sources of data generation.<span>&nbsp; </span>The impacts range from device and data management in healthcare to smart cities and beyond.</p> <p class="p1">Currently, the Github repository specific to the AMIS project is managed by the lead institution in this project (University of Massachusetts Lowell), and has not yet been made public. Until it is made public, please email PI Cody Bumgardner to request access to the repisitory.</p> <p class="p1">The Github repository pertaining the the described agent-based edge framework can be found here: https://github.com/CrescoEdge/quickstart</p><br> <p>            Last Modified: 06/21/2019<br>      Modified by: Vernon&nbsp;Bumgardner</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561127800572_1-edge-network-measure--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561127800572_1-edge-network-measure--rgov-800width.jpg" title="Edge-enabled Network Measurement"><img src="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561127800572_1-edge-network-measure--rgov-66x44.jpg" alt="Edge-enabled Network Measurement"></a> <div class="imageCaptionContainer"> <div class="imageCaption">High-level view of geographically distributed network measurement with central pipeline, data, and tasks management.</div> <div class="imageCredit">Cody Bumgardner</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Vernon&nbsp;Bumgardner</div> <div class="imageTitle">Edge-enabled Network Measurement</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128106201_2-cresco-layers--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128106201_2-cresco-layers--rgov-800width.jpg" title="Cresco Operational Layers"><img src="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128106201_2-cresco-layers--rgov-66x44.jpg" alt="Cresco Operational Layers"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Illustration of an example network measurement pipeline/topology depicting the relation of components and their use of the Cresco edge computing framework.</div> <div class="imageCredit">Cody Bumgardner</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Vernon&nbsp;Bumgardner</div> <div class="imageTitle">Cresco Operational Layers</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128107723_3-cresco-stats--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128107723_3-cresco-stats--rgov-800width.jpg" title="Agent and Task resource management"><img src="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128107723_3-cresco-stats--rgov-66x44.jpg" alt="Agent and Task resource management"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Illustration of a subset of resource metrics monitored by the measurement scheduling system on both agent and tasks levels.</div> <div class="imageCredit">Cody Bumgardner</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Vernon&nbsp;Bumgardner</div> <div class="imageTitle">Agent and Task resource management</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128234822_4-stream_query--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128234822_4-stream_query--rgov-800width.jpg" title="Network Measurement Queries"><img src="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128234822_4-stream_query--rgov-66x44.jpg" alt="Network Measurement Queries"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Examples of ESPER EQL and SPARQL queries for complex event processing and stream composition functions.</div> <div class="imageCredit">Cody Bumgardner</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Vernon&nbsp;Bumgardner</div> <div class="imageTitle">Network Measurement Queries</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128366586_5-CADL--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128366586_5-CADL--rgov-800width.jpg" title="Measurement Topology Builder"><img src="/por/images/Reports/POR/2019/1450937/1450937_10356612_1561128366586_5-CADL--rgov-66x44.jpg" alt="Measurement Topology Builder"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Illustration of the GUI used to build measurement topologies and the related CADL language output used to schedule resources and tasks.</div> <div class="imageCredit">Cody Bumgardner</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Vernon&nbsp;Bumgardner</div> <div class="imageTitle">Measurement Topology Builder</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[     The collaborative AMIS (Advanced Measurement Instrument and Services) project goal was to provide network monitoring, measurement, and analysis services for network traffic at points of international network exchange, while preserving the privacy of the underlying network data.  Our teams focus areas included distributed device, data, and task management through the research and development of a platform to support collaborative modular operations, such as data acquisition (measurement tasks), functional services (privacy, analysis, complex event processing, correlation, etc.), and data management (aggregation, distribution, storage, etc).  Developing a multi-tenant monitoring and measurement system based on geographically distributed high-rate network interfaces comes with its own set of challenges.  Specifically, one must be able to provide methods to describe a measurement topology, such as where measurements should take place and what tools to be used, execute measurement tasks across devices, manage resources within and between devices and backend services, provide methods to manage resulting measurement data, and provide methods for downstream analysis or other functional modules.  We present the five main output components of our work:    1) Agent-based Edge Computing Platform:  Edge and fog computing is often thought of the process of moving computation (function) in proximity to sources of data generation.  It is not feasible to transmit the data used for high-rate network measurements to remote locations, which makes the task a good candidate for edge computing techniques.  We made use of and extended an existing agent-based edge computing framework (http://cresco.io/) developed by the project team to coordinate device and data operations as shown in Figure 1, between distributed devices and backend services.  An example measurement pipeline with related framework services is shown in Figure 2.  The following components describe additional methods in which underlying framework components were used.        2) Measurement Topology Language:  In order to perform distributed network measurement you must have compatible (versions) tools at each measurement point, configurations to inform measurement tasks, and methods to execute task and manage resulting data.  We developed a declarative graph-based language, as shown in Figure 5, to describe the network measurement topology, including measurement locations, points of data aggregation, and downstream functional units.  The underlying agent-based framework distributes management tools based on requested versions and configurations to device and provisions requested ancillary services on backend (cloud) resources, such as analytic or storage services.  In addition, a simplified RESTful API for common measurement functions was provided.  In addition, we have developed a web-based GUI to be used to construct measurement, data flow, and downstream functional module topologies, as shown in Figure 5.        3) Resource Management and Scheduling:  In mutli-tenent (multi-user, multi-task, etc.) operations great care must be taken to ensure devices with finite resources, such as measurement devices are not overwhelmed with request.  Likewise, we want to make sure that duplicate concurrent measurement request do not result in duplicate resource utilizations.  Making use of the underlying agent-based framework we collected the state of agents, relationship between agents, and the resource utilization of manage tasks, as shown in Figure 3.  On submission, the entire measurement topology is decomposed into node and edge components, measurement topologies with explicit (measurement location) assignments as assigned if resources are available, unassigned function services like CEP, filtering, or aggregation services are scheduled where resources are available and topology allows, and finally upstream and downstream configuration is added to all component configurations composing the measurement pipeline.  Constrain satisfaction, resource, and service discovery techniques are used in scheduling optimizations.          4) Analysis Services:  As we previously described, source data might come directly from a measurement device or some other upstream source, such as an aggregation of filtered or enriched data.  In addition to task-based measurement tools developed by our collaborators, we deployed continuous IPFIX/NetFlow generation services, with ASN flow injection.  Our team developed a number of modules to be used for complex event processing, flow correlation, filtering, and new stream composition services.  These modules can be chained with other functional modules allowing very complex measurement and alerting services to be deployed.  A few example measurement-focused queries based on the EQL (http://esper.espertech.com/release-7.1.0/esper-reference/html/epl-views.html) and SPARQL (https://www.w3.org/TR/sparql11-overview/) language are shown in Figure 4.        The underlying system we have developed is not limited to just network measurement and can be used for many types of task execution, data management, and application monitoring tasks.  The system is especially beneficial in the area of edge computing, where data processing is moved toward sources of data generation.  The impacts range from device and data management in healthcare to smart cities and beyond. Currently, the Github repository specific to the AMIS project is managed by the lead institution in this project (University of Massachusetts Lowell), and has not yet been made public. Until it is made public, please email PI Cody Bumgardner to request access to the repisitory. The Github repository pertaining the the described agent-based edge framework can be found here: https://github.com/CrescoEdge/quickstart       Last Modified: 06/21/2019       Submitted by: Vernon Bumgardner]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: I/O Virtualization at the Device File Boundary and its Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2014</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>413000.00</AwardTotalIntnAmount>
<AwardAmount>428000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Virtualization allows multiple virtual computers to securely share the hardware resources of a physical computer. This has become a critical technology for security, resource consolidation and management in modern computers. Among hardware resources, input and output (I/O) devices have proven to be hard to virtualize because of the great diversity in their functionality and implementation; yet, I/O devices are very important for modern computers from smartphones to data center servers. They include not only human input and output devices such as sensors and actuators, but also computational resources like graphics processing unit (GPU) and field-programmable gate array (FPGA). Known I/O virtualization solutions often struggle between development effort and supported device functionality. This project aims at not only solving this impasse but also extending I/O virtualization from locally connected I/O devices to network I/O virtualization - I/O devices from computers available via network. It will also demonstrate the novel, compelling application cases of network I/O virtualization for both mobile devices and data centers. &lt;br/&gt;&lt;br/&gt;Device file, an abstraction used by Unix-like operating systems for I/O devices, can be the sweet spot as the boundary for I/O virtualization. The project's focus centers around three technical contributions: First, high-performance cross-computer file operations that allow file operations issued by one computer to be efficiently executed by device drivers residing in another computer, virtual or physical, even over network. Second, this project will provide fault and data isolation between multiple computers sharing an I/O device and provide correctness and performance guarantees to them without sacrificing the potential benefits of the device file boundary. Finally, this project will demonstrate the novel applications of network I/O virtualization for both mobile and server systems, including accelerator consolidation in data centers and I/O sharing between mobile devices.&lt;br/&gt;&lt;br/&gt;The project will leverage collaborations with industry leaders to ensure a timely transfer of technologies into industry and there is a broad impact on the commercial development of mobile devices and data centers. The project will provide new system components for teaching mobile and embedded systems to a diverse community of learners. Finally, as mobile devices have penetrated all walks of life and data centers have become the backbone of personal computing, the project has the potential to impact this global society and its economy by reducing the operational cost of data centers and by enabling novel use of mobile devices.</AbstractNarration>
<MinAmdLetterDate>09/08/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/11/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1422312</AwardID>
<Investigator>
<FirstName>Lin</FirstName>
<LastName>Zhong</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Lin Zhong</PI_FULL_NAME>
<EmailAddress>lin.zhong@yale.edu</EmailAddress>
<PI_PHON>2034369450</PI_PHON>
<NSF_ID>000189041</NSF_ID>
<StartDate>09/08/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>William Marsh Rice University</Name>
<CityName>Houston</CityName>
<ZipCode>770051827</ZipCode>
<PhoneNumber>7133484820</PhoneNumber>
<StreetAddress>6100 MAIN ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>050299031</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WILLIAM MARSH RICE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>050299031</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Rice University]]></Name>
<CityName>Houston</CityName>
<StateCode>TX</StateCode>
<ZipCode>770051827</ZipCode>
<StreetAddress><![CDATA[6100 Main Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1714</Code>
<Text>SPECIAL PROJECTS - CISE</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~413000</FUND_OBLG>
<FUND_OBLG>2016~15000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-a9134760-bdba-5d06-1f71-2862b611837e"> </span></p> <p dir="ltr">Virtualization allows multiple virtual computers to securely share the hardware resources of a physical computer. This has become a critical technology for security, resource consolidation and management in modern computers. Among hardware resources, input and output (I/O) devices have proven to be hard to virtualize because of the great diversity in their functionality and implementation; yet, I/O devices are very important for modern computers from smartphones to data center servers. They include not only human input and output devices such as sensors and actuators, but also computational resources like graphics processing unit (GPU) and field-programmable gate array (FPGA). Known I/O virtualization solutions often struggle between development effort and supported device functionality. This project not only tackled this impasse but also extended I/O virtualization from locally connected I/O devices to network I/O virtualization - I/O devices from computers available via network.&nbsp;</p> <p><span>The key idea of this project is to exploit device file, an abstraction used by Unix-like operating systems for I/O devices, as the boundary for I/O virtualization. The project achieved three technical objectives toward using this boundary. First, high-performance cross-computer file operations that allow file operations issued by one computer to be efficiently executed by device drivers residing in another computer, virtual or physical, even over network. For example, the project identified synchronization points in today's I/O path as a key source of latency and provided alternative, asynchronous design that can reduce the latency by half. Second, fault and data isolation between multiple computers sharing an I/O device and provide correctness and performance guarantees to them without sacrificing the potential benefits of the device file boundary. For example, this project found that state spill from client to device driver may break isolation between multiple clients, investigated such state spill indepth in modern systems software, and suggested alternatives. Finally, this project demonstrated novel applications of network I/O virtualization for both mobile and server systems, including accelerator consolidation in data centers and I/O sharing between mobile devices.</span></p> <p>All software artifacts resulting from this project have been released open-source. Its results have been presented at both conferences and workshops for fast dissemination. It has contributed a lab module to a senior undergraduate course&nbsp; at&nbsp; Rice University about mobile and embedded systems and provided research training opportunities for multiple graduate students and undergraduate students in software systems.&nbsp;</p> <p>By enabling novel mobile applications based on I/O sharing and improving cost effectiveness of expensive data center GPU hardware by consolidation, this project has potential to make both mobile and cloud better, more useful and more efficient, an impact that will be felt by all walks of life. By making the resulting software artifacts open-source, student internships and graduate placements at industry leaders, this project boded well for a broad impact on the practice of both mobile and cloud.&nbsp;</p><br> <p>            Last Modified: 01/03/2018<br>      Modified by: Lin&nbsp;Zhong</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Virtualization allows multiple virtual computers to securely share the hardware resources of a physical computer. This has become a critical technology for security, resource consolidation and management in modern computers. Among hardware resources, input and output (I/O) devices have proven to be hard to virtualize because of the great diversity in their functionality and implementation; yet, I/O devices are very important for modern computers from smartphones to data center servers. They include not only human input and output devices such as sensors and actuators, but also computational resources like graphics processing unit (GPU) and field-programmable gate array (FPGA). Known I/O virtualization solutions often struggle between development effort and supported device functionality. This project not only tackled this impasse but also extended I/O virtualization from locally connected I/O devices to network I/O virtualization - I/O devices from computers available via network.   The key idea of this project is to exploit device file, an abstraction used by Unix-like operating systems for I/O devices, as the boundary for I/O virtualization. The project achieved three technical objectives toward using this boundary. First, high-performance cross-computer file operations that allow file operations issued by one computer to be efficiently executed by device drivers residing in another computer, virtual or physical, even over network. For example, the project identified synchronization points in today's I/O path as a key source of latency and provided alternative, asynchronous design that can reduce the latency by half. Second, fault and data isolation between multiple computers sharing an I/O device and provide correctness and performance guarantees to them without sacrificing the potential benefits of the device file boundary. For example, this project found that state spill from client to device driver may break isolation between multiple clients, investigated such state spill indepth in modern systems software, and suggested alternatives. Finally, this project demonstrated novel applications of network I/O virtualization for both mobile and server systems, including accelerator consolidation in data centers and I/O sharing between mobile devices.  All software artifacts resulting from this project have been released open-source. Its results have been presented at both conferences and workshops for fast dissemination. It has contributed a lab module to a senior undergraduate course  at  Rice University about mobile and embedded systems and provided research training opportunities for multiple graduate students and undergraduate students in software systems.   By enabling novel mobile applications based on I/O sharing and improving cost effectiveness of expensive data center GPU hardware by consolidation, this project has potential to make both mobile and cloud better, more useful and more efficient, an impact that will be felt by all walks of life. By making the resulting software artifacts open-source, student internships and graduate placements at industry leaders, this project boded well for a broad impact on the practice of both mobile and cloud.        Last Modified: 01/03/2018       Submitted by: Lin Zhong]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

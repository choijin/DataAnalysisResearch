<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>BIGDATA: Mid-Scale: DA: Collaborative Research: Genomes Galore - Core Techniques, Libraries, and Domain Specific Languages for High-Throughput DNA Sequencing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/31/2013</AwardEffectiveDate>
<AwardExpirationDate>12/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>1233193.00</AwardTotalIntnAmount>
<AwardAmount>1285507</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sylvia Spengler</SignBlockName>
<PO_EMAI>sspengle@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The recent emergence of a variety of high-throughput DNA sequencing instrumentation, and the concomitant rapid decline in the cost per base, is causing severe data deluge in all areas of life sciences. The heterogeneity of sequencing instrumentation and the vast diversity of applications enabled by them are creating numerous analytics problems for the bioinformatics community to address. In addition, the conventional serial algorithms that have been the mainstay of bioinformatics research are severely challenged by the ever increasing data sets. The goal of the proposed project is to develop core techniques and software libraries to enable scalable, efficient, high performance computing solutions for high-throughput DNA sequencing, also known as next-generation sequencing (NGS). To empower the larger community, the project seeks to 1) identify a set of core functionalities that frequently occur in many types of high-throughput sequencing applications, 2) develop efficient parallel algorithms and high performance implementations for them, 3) pursue mapping to HPC architectures including clusters, multicores, and GPUs, 4) develop software libraries encapsulating these functionalities with the goal of enabling the bioinformatics community to exploit HPC architectures, and 5) design a domain specific language to enable bioinformatics researchers unfamiliar with parallel processing to benefit from this work through automatic generation of parallel codes. The research will be conducted in the context of challenging problems in human genetics and metagenomics, in collaboration with domain specialists.&lt;br/&gt;&lt;br/&gt;This project is focused on a key capacity building activity to facilitate pervasive use of parallelism by NGS bioinformatics researchers and practitioners. The goal is to empower the broader community to benefit from clever parallel algorithms, highly tuned implementations, and specialized HPC hardware, without requiring expertise in any of these. The software libraries will be released as open source for use, further development, enhancements, and incorporation by the community. The project will provide opportunities for training postdoctoral and graduate students in bigdata analytics and computer science driven interdisciplinary research. Diverse existing mechanisms at the partner institutions will be leveraged to advance goals of minority and women recruitment, undergraduate participation in research, and K-12 outreach.</AbstractNarration>
<MinAmdLetterDate>01/22/2014</MinAmdLetterDate>
<MaxAmdLetterDate>11/07/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1416259</AwardID>
<Investigator>
<FirstName>Srinivas</FirstName>
<LastName>Aluru</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Srinivas Aluru</PI_FULL_NAME>
<EmailAddress>aluru@cc.gatech.edu</EmailAddress>
<PI_PHON>4043851486</PI_PHON>
<NSF_ID>000388133</NSF_ID>
<StartDate>01/22/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia Tech Research Corporation</Name>
<CityName>Atlanta</CityName>
<ZipCode>303320420</ZipCode>
<PhoneNumber>4048944819</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>GA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>097394084</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGIA TECH RESEARCH CORPORATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>097394084</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Georgia Institute of Technology]]></Name>
<CityName>Atlanta</CityName>
<StateCode>GA</StateCode>
<ZipCode>303320002</ZipCode>
<StreetAddress><![CDATA[225 North Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>GA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>8083</Code>
<Text>Big Data Science &amp;Engineering</Text>
</ProgramElement>
<ProgramReference>
<Code>5921</Code>
<Text>JAPAN</Text>
</ProgramReference>
<ProgramReference>
<Code>7299</Code>
<Text>INTERNATIONAL PLAN &amp; WORKSHOPS</Text>
</ProgramReference>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>7556</Code>
<Text>CONFERENCE AND WORKSHOPS</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8083</Code>
<Text>Big Data Science &amp;Engineering</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~1233193</FUND_OBLG>
<FUND_OBLG>2016~52314</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>High throughput genome sequencing has become ubiquitous due to increasing accessibility and decreasing cost.&nbsp; The resulting large data volume and high rate of production present significant big data challenges for large-scale bioinformatic data analyses.&nbsp; The growths in data size, computation time, and problem complexity have outpaced growth in CPU capabilities and memory capacity, often described by Moore&rsquo;s Law.<br /><br />This project seeks to support large-scale data analytics in the presence of such growth disparity, through the development of novel, efficient algorithms, their parallel and sequential implementations, and core HPC techniques and data structures.&nbsp; To facilitate adoption and increase the impact for multiple biological and non-biological applications, we have formulated our implementations as flexible and reusable libraries for both standalone and clusters of computers.<br /><br />We have targeted common tasks that are fundamental to current and anticipated biological applications and data analytics across a diversity of organisms and sequencing technologies, yet previously were computationally costly and/or resource intensive.&nbsp; We have significantly advanced the state-of-the-art in theoretical and empirical computational performance as well as scalability in data and problem size&nbsp; in multiple applications.&nbsp; We highlight our contributions in a select few areas: sequence indexing, sequence comparison and mapping, and genome assembly.<br /><br />Exact pattern search is a fundamental task for many sequence analysis applications ranging from error correction to genome assembly.&nbsp; Finding the locations of the matching patterns and the related task of counting their occurrences are greatly facilitated by <strong>sequence indexing</strong>.&nbsp; We developed several state-of-the-art algorithms for indexing and querying sequences.&nbsp; For counting fixed-length patterns, our algorithm indexed and queried a 1TB human sequence data set in 11.8 and 5.8 seconds respectively, using 4096 CPU cores.&nbsp; For indexing variable length patterns, our algorithm, for the first time, allows index construction and query from an input sequence that is partitioned and distributed across all computers in a cluster, thus enabling data size to scale beyond the resources of a single machine.&nbsp; This algorithm indexed a reference human genome in less than 8 seconds on 1024 CPU cores, 110x faster than the previous best sequential algorithm.<br /><br />Using the distribution of fixed-length patterns within a sequence as signature, we developed fast approximate algorithms&nbsp; for sequence mapping and comparison of long reads and genomic segments.&nbsp; Our mapping algorithm is shown to be 290x faster than BWA-mem, while our comparison algorithm is up to 3 orders of magnitude faster than alignment based methods.&nbsp; Application of these approximate algorithms have already led to new scientific knowledge.&nbsp; Our mapping algorithm was able to identify more segmental duplications in the human genome than previously known.&nbsp; Our approximate sequence comparison algorithm, when applied, for the first time, to all ~90,000 prokaryotic genomes in the NCBI database, definitively answered the age-old question in microbiology of whether there exist clear species boundaries based on genomic variations (Nature Communications &lsquo;18).<br /><br />De novo<strong> genome assembly</strong> is the process by which a genome is reconstructed from sequencer output, typically by traversing an internal graph data structure.&nbsp; This is a time consuming task that is data- and communication-intensive.&nbsp; We developed fast algorithms for constructing, traversing, and filtering this domain-specific graph structure.&nbsp; We showed that for a 695GB human sequence data set, our algorithm reconstructed the initial sequences in 31.1 seconds using 7680 CPU cores, a 3.7x speed up relative to the previous state-of-the-art assembler.&nbsp; We further developed an algorithm for identifying disjoint components in the graph, thus enabling independent and parallel assembly from the components.&nbsp;&nbsp; This is critical for accelerating and scaling metagenomic assembly, where multiple bacterial genomes are sequenced concurrently and sequencer output contains a mixture of genome fragments.&nbsp; We demonstrated component labeling on a metagenomic graph with 50 billion edges in 215 seconds using 32 thousand CPU cores.<br /><br />The software implementations have been released in a public repository under open source licenses (https://github.com/ParBLiSS).&nbsp; The algorithms and implementations have broad impact for biological sequence analysis and beyond.&nbsp; Our sequence indexing and comparison algorithms are applicable to general text and strings, while our graph component labeling algorithm has been tested on a wide range of graph types, achieving up to 24x speed up over the previous state-of-the-art.&nbsp; Low level high performance data structures and algorithms, where possible, have also been designed to be domain agnostic, and can benefit a broad range of applications.</p> <p>The project is a collaborative effort between 3 PIs, one each in computer science, plant biology, and human genetics. The project supported the research of 3 research scientists, 1 postdoctoral fellow, and 7 Ph.D. students who gained valuable interdisciplinary research experience.&nbsp; The project supported the Ph.D. dissertation work of these students, including three whose Ph.D. disseration is solely based on the work carried out under the project. The lead PI organized workshops and gave several invited and keynote presentations to inform the research community about results from this project.</p><br> <p>            Last Modified: 05/12/2019<br>      Modified by: Srinivas&nbsp;Aluru</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696468571_Motivation--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696468571_Motivation--rgov-800width.jpg" title="Intersections of High Performance Computing, High Throughput Sequencing, and Life Science"><img src="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696468571_Motivation--rgov-66x44.jpg" alt="Intersections of High Performance Computing, High Throughput Sequencing, and Life Science"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Biological sequences analysis has become a big data endeavour due to advances in high throughput sequencing technologies, motivating increasingly sophisticated bioinformatic analyses, and necessitating novel high performance computing hardware, techniques, and algorithms.</div> <div class="imageCredit">Srinivas Aluru</div> <div class="imagePermisssions">Creative Commons</div> <div class="imageSubmitted">Srinivas&nbsp;Aluru</div> <div class="imageTitle">Intersections of High Performance Computing, High Throughput Sequencing, and Life Science</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696549502_Pipeline--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696549502_Pipeline--rgov-800width.jpg" title="High Throughput Sequencing and Analysis Pipeline"><img src="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696549502_Pipeline--rgov-66x44.jpg" alt="High Throughput Sequencing and Analysis Pipeline"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Illustration of high throughput sequencing and analysis pipeline.  Genomes from diverse organisms are sequenced via high throughput technologies.  Analytics, including error correction, sequence mapping, assembly, and indexing are then applied to the sequencing output in order to extract knowledge.</div> <div class="imageCredit">Tony Pan, Patrick Flick, Srinvas Aluru</div> <div class="imagePermisssions">Creative Commons</div> <div class="imageSubmitted">Srinivas&nbsp;Aluru</div> <div class="imageTitle">High Throughput Sequencing and Analysis Pipeline</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696643117_ParallelApproximateSequenceMatching--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696643117_ParallelApproximateSequenceMatching--rgov-800width.jpg" title="Parallel Approximate Sequence Matching"><img src="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696643117_ParallelApproximateSequenceMatching--rgov-66x44.jpg" alt="Parallel Approximate Sequence Matching"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Given input sequences of size n, our algorithm computes sufficiently long pairwise alignments with bounded number of mismatches.  this is a key step in many sequence analysis tasks.  We show near linear scaling with number of CPU cores for 1- and 2-mismatches alignments.</div> <div class="imageCredit">Sriram Chocklingam, Srinivas Aluru</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Srinivas&nbsp;Aluru</div> <div class="imageTitle">Parallel Approximate Sequence Matching</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696739389_GraphComponents--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696739389_GraphComponents--rgov-800width.jpg" title="Parallel Graph Partitioning and Genome Sssembly"><img src="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696739389_GraphComponents--rgov-66x44.jpg" alt="Parallel Graph Partitioning and Genome Sssembly"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Metagenomic sequences from soil, water, gut, and other environmental sources contain mixture of bacterial species and form disjoint graph components.  Partitioning the assembly graph allows the components to be assembled in parallel.</div> <div class="imageCredit">Tony Pan, Chirag Jain, Srinivas Aluru</div> <div class="imagePermisssions">Creative Commons</div> <div class="imageSubmitted">Srinivas&nbsp;Aluru</div> <div class="imageTitle">Parallel Graph Partitioning and Genome Sssembly</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696876582_NCBIAnalysis--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696876582_NCBIAnalysis--rgov-800width.jpg" title="Genomic Variation between Prokaryotic Species"><img src="/por/images/Reports/POR/2019/1416259/1416259_10217512_1555696876582_NCBIAnalysis--rgov-66x44.jpg" alt="Genomic Variation between Prokaryotic Species"></a> <div class="imageCaptionContainer"> <div class="imageCaption">ANI values from pairwise comparisons, using FastANI, of ~90000 prokaryotic genomes in the NCBI database (left) indicates a wide inter-species genetic discontinuum.  Species identity can be established above 95% ANI similarity (right).</div> <div class="imageCredit">Chirag Jain, Srinivas Aluru, Nature Communications 2018</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Srinivas&nbsp;Aluru</div> <div class="imageTitle">Genomic Variation between Prokaryotic Species</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ High throughput genome sequencing has become ubiquitous due to increasing accessibility and decreasing cost.  The resulting large data volume and high rate of production present significant big data challenges for large-scale bioinformatic data analyses.  The growths in data size, computation time, and problem complexity have outpaced growth in CPU capabilities and memory capacity, often described by Moore?s Law.  This project seeks to support large-scale data analytics in the presence of such growth disparity, through the development of novel, efficient algorithms, their parallel and sequential implementations, and core HPC techniques and data structures.  To facilitate adoption and increase the impact for multiple biological and non-biological applications, we have formulated our implementations as flexible and reusable libraries for both standalone and clusters of computers.  We have targeted common tasks that are fundamental to current and anticipated biological applications and data analytics across a diversity of organisms and sequencing technologies, yet previously were computationally costly and/or resource intensive.  We have significantly advanced the state-of-the-art in theoretical and empirical computational performance as well as scalability in data and problem size  in multiple applications.  We highlight our contributions in a select few areas: sequence indexing, sequence comparison and mapping, and genome assembly.  Exact pattern search is a fundamental task for many sequence analysis applications ranging from error correction to genome assembly.  Finding the locations of the matching patterns and the related task of counting their occurrences are greatly facilitated by sequence indexing.  We developed several state-of-the-art algorithms for indexing and querying sequences.  For counting fixed-length patterns, our algorithm indexed and queried a 1TB human sequence data set in 11.8 and 5.8 seconds respectively, using 4096 CPU cores.  For indexing variable length patterns, our algorithm, for the first time, allows index construction and query from an input sequence that is partitioned and distributed across all computers in a cluster, thus enabling data size to scale beyond the resources of a single machine.  This algorithm indexed a reference human genome in less than 8 seconds on 1024 CPU cores, 110x faster than the previous best sequential algorithm.  Using the distribution of fixed-length patterns within a sequence as signature, we developed fast approximate algorithms  for sequence mapping and comparison of long reads and genomic segments.  Our mapping algorithm is shown to be 290x faster than BWA-mem, while our comparison algorithm is up to 3 orders of magnitude faster than alignment based methods.  Application of these approximate algorithms have already led to new scientific knowledge.  Our mapping algorithm was able to identify more segmental duplications in the human genome than previously known.  Our approximate sequence comparison algorithm, when applied, for the first time, to all ~90,000 prokaryotic genomes in the NCBI database, definitively answered the age-old question in microbiology of whether there exist clear species boundaries based on genomic variations (Nature Communications ?18).  De novo genome assembly is the process by which a genome is reconstructed from sequencer output, typically by traversing an internal graph data structure.  This is a time consuming task that is data- and communication-intensive.  We developed fast algorithms for constructing, traversing, and filtering this domain-specific graph structure.  We showed that for a 695GB human sequence data set, our algorithm reconstructed the initial sequences in 31.1 seconds using 7680 CPU cores, a 3.7x speed up relative to the previous state-of-the-art assembler.  We further developed an algorithm for identifying disjoint components in the graph, thus enabling independent and parallel assembly from the components.   This is critical for accelerating and scaling metagenomic assembly, where multiple bacterial genomes are sequenced concurrently and sequencer output contains a mixture of genome fragments.  We demonstrated component labeling on a metagenomic graph with 50 billion edges in 215 seconds using 32 thousand CPU cores.  The software implementations have been released in a public repository under open source licenses (https://github.com/ParBLiSS).  The algorithms and implementations have broad impact for biological sequence analysis and beyond.  Our sequence indexing and comparison algorithms are applicable to general text and strings, while our graph component labeling algorithm has been tested on a wide range of graph types, achieving up to 24x speed up over the previous state-of-the-art.  Low level high performance data structures and algorithms, where possible, have also been designed to be domain agnostic, and can benefit a broad range of applications.  The project is a collaborative effort between 3 PIs, one each in computer science, plant biology, and human genetics. The project supported the research of 3 research scientists, 1 postdoctoral fellow, and 7 Ph.D. students who gained valuable interdisciplinary research experience.  The project supported the Ph.D. dissertation work of these students, including three whose Ph.D. disseration is solely based on the work carried out under the project. The lead PI organized workshops and gave several invited and keynote presentations to inform the research community about results from this project.       Last Modified: 05/12/2019       Submitted by: Srinivas Aluru]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

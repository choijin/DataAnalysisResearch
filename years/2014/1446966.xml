<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: EAGER: Collaborative Research: Demonstrating the Feasibility of Automatic Program Repair Guided by Semantic Code Search</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2014</AwardEffectiveDate>
<AwardExpirationDate>06/30/2016</AwardExpirationDate>
<AwardTotalIntnAmount>80000.00</AwardTotalIntnAmount>
<AwardAmount>95932</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Software is an integral part of our everyday lives, and our economy relies heavily on software working correctly. However, bugs in software cause security breaches, and cost our economy billions of dollars annually. While these high costs of bugs are well known, the software industry struggles to remedy the situation because the inherent complexity of the software makes bugs so common that new bugs are typically reported faster than developers can fix them.  The goal of this project is to develop a technique that fixes bugs&lt;br/&gt;automatically, greatly reducing the cost of fixing the bugs, improving quality of software, and reducing the negative effects on the economy and society.&lt;br/&gt;&lt;br/&gt;Because so much software has already been written, many subroutines, data structures, and algorithm implementations already exist as part of open-source software. Therefore, for many software bugs, there already exist subroutines, data structures, and algorithm implementations in other open-source software that implement the correct behavior and can be substituted into buggy systems to fix the bugs. This project verifies two key properties necessary to build such a bug fixing technique. First, the project attempts to validate the assumption that correct code candidates actually exist in open-source software code bases. Second, the project aims to demonstrate that semantic code search techniques can effectively find these code candidates, and that the gaps between the correct and incorrect versions can be bridged using automatic techniques. Altogether, this exploratory project is intended to establish the feasibility of automated bug fixing through semantic search of open-source software. The broader impact of this work is the advancement of techniques that improve software quality, which, in turn, reduces the negative economic and societal effects of software bugs.  This grant is exploratory work on an untested, but potentially transformative, research idea.</AbstractNarration>
<MinAmdLetterDate>07/01/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/21/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1446966</AwardID>
<Investigator>
<FirstName>Claire</FirstName>
<LastName>Le Goues</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Claire Le Goues</PI_FULL_NAME>
<EmailAddress>clegoues@cs.cmu.edu</EmailAddress>
<PI_PHON>4122689527</PI_PHON>
<NSF_ID>000654066</NSF_ID>
<StartDate>07/01/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie Mellon University]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133890</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~80000</FUND_OBLG>
<FUND_OBLG>2015~15932</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Software is an integral part of our everyday lives, but bugs in software cause security breaches and cost our economy billions of dollars annually.The software industry struggles to remedy this situation because the inherent complexity of the software makes bugs so common that new bugs are typicallyreported faster than developers can fix them. This project made progress toward developing a technique that fixes bugs automatically, greatly reducing repair cost.<br />Intellectual Merit: The project demonstrated the feasibility of a repair technique that (1) identifies likely faulty blocks of code via fault localization techniques, (2) uses semantic search to automatically find potential replacement code components based on constraints derived from theinput-output behavior of the buggy code, and (3) combines potential code replacement components with evolutionary repair approaches to modify the components as needed to automate program repair. Specifically, the project validated two observations: (1) that correct code candidates actually existin open-source software code bases and (2) that semantic code search techniques can effectively find these code candidates. To validate these observations, the project contributed to a benchmark of 1,183 real-world bugs, analyzed twelve large open-source projects for existence of potential bug fix code, and extended semantic code search techniques to apply to new programming languages and make use of additional language features that enable searching for diverse candidate repair code. These results suggest that semantic-search-based program repair is feasible and is likely to improve the quality of automatically generated bug repairs.<br />Broader Impacts: The project's broader impact includes advancing thestate-of-the-art of knowledge about software quality and techniques that improve such quality automatically, which, in turn, reduces the negative economic and societal effects of software bugs. The project created a collaboration between and contributed to career development of three junior PIs, two of whom are members of an underrepresented group in Computer Science. Additionally, this project directly contributed to 6 PhD and 2 Master's students' education.</p><br> <p>            Last Modified: 09/26/2016<br>      Modified by: Claire&nbsp;Le Goues</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Software is an integral part of our everyday lives, but bugs in software cause security breaches and cost our economy billions of dollars annually.The software industry struggles to remedy this situation because the inherent complexity of the software makes bugs so common that new bugs are typicallyreported faster than developers can fix them. This project made progress toward developing a technique that fixes bugs automatically, greatly reducing repair cost. Intellectual Merit: The project demonstrated the feasibility of a repair technique that (1) identifies likely faulty blocks of code via fault localization techniques, (2) uses semantic search to automatically find potential replacement code components based on constraints derived from theinput-output behavior of the buggy code, and (3) combines potential code replacement components with evolutionary repair approaches to modify the components as needed to automate program repair. Specifically, the project validated two observations: (1) that correct code candidates actually existin open-source software code bases and (2) that semantic code search techniques can effectively find these code candidates. To validate these observations, the project contributed to a benchmark of 1,183 real-world bugs, analyzed twelve large open-source projects for existence of potential bug fix code, and extended semantic code search techniques to apply to new programming languages and make use of additional language features that enable searching for diverse candidate repair code. These results suggest that semantic-search-based program repair is feasible and is likely to improve the quality of automatically generated bug repairs. Broader Impacts: The project's broader impact includes advancing thestate-of-the-art of knowledge about software quality and techniques that improve such quality automatically, which, in turn, reduces the negative economic and societal effects of software bugs. The project created a collaboration between and contributed to career development of three junior PIs, two of whom are members of an underrepresented group in Computer Science. Additionally, this project directly contributed to 6 PhD and 2 Master's students' education.       Last Modified: 09/26/2016       Submitted by: Claire Le Goues]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

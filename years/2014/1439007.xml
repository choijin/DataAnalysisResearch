<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: FULL: DSD: Collaborative Research: Rapid Prototyping HPC Environment for Deep Learning</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>315000.00</AwardTotalIntnAmount>
<AwardAmount>315000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tevfik Kosar</SignBlockName>
<PO_EMAI>tkosar@nsf.gov</PO_EMAI>
<PO_PHON>7032927992</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The impact of Big Data is all around us and is enabling a plethora of commercial services. Further it is establishing the fourth paradigm of scientific investigation where discovery is based on mining data rather than from theories verified by observation. Big Data has established a new discipline (Data Science) with vibrant research activities across several areas of computer science. This ?Rapid Python Deep Learning Infrastructure? (RaPyDLI) project advances Deep Learning (DL) which is a novel exciting artificial intelligence approach to Big Data problems, which also involves a sophisticated model and a corresponding ?big compute? needing high end supercomputer architectures. DL has already seen success in areas like speech recognition, drug discovery and computer vision where self-driving cars are an early target. DL uses a very general unbiased way of analyzing large data sets inspired by the brain as a set of connected neurons. As with the brain, the artificial neurons learn from experience corresponding to a ?training dataset? and the ?trained network? can be used to make decisions. Trained on voices, the DL network can enhance voice recognition and trained on images, the DL network can recognize objects in the image. A recent study by the Stanford participants in this project trained 10 billion connections on 10 million images to recognize objects in an image. This study involved a dataset that was approximately 0.1% the size of data ?learnt? by an adult human in their lifetime and one billionth of the total digital data stored in the world today. Note the 1.5 billion images uploaded to social media sites every day emphasize the staggering size of big data. The project aims to enhance by DL by allowing it to use large supercomputers efficiently and by providing a convenient DL computing environment that enables rapid prototyping i.e. interactive experimentation with new algorithms. This will enable DL to be applied to much larger datasets such as those ?seen? by a human in their lifetime. The RaPyDLI partnership of Indiana University, University of Tennessee, and Stanford enables this with expertise in parallel computing algorithms and run times, big data, clouds, and DL itself.&lt;br/&gt;RaPyDLI will reach out to DL practitioners with workshops both to gather requirements for and feedback on its software. Further it will proactively reach out to under-represented communities with summer experiences and DL curriculum modules that include demonstrations built as ?Deep Learning as a Service?.&lt;br/&gt;RaPyDLI will be built as a set of open source modules that can be accessed from a Python user interface but executed interoperably in a C/C++ or Java environment on the largest supercomputers or clouds with interactive analysis and visualization. RaPyDLI will support GPU accelerators and Intel Phi coprocessors and a broad range of storage approaches including files, NoSQL, HDFS and databases. RaPyDLI will include benchmarks as well as software and will offer a repository so users can contribute the high level code for a range of neural networks with benefits to research and education.</AbstractNarration>
<MinAmdLetterDate>08/05/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/05/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1439007</AwardID>
<Investigator>
<FirstName>Geoffrey</FirstName>
<LastName>Fox</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Geoffrey C Fox</PI_FULL_NAME>
<EmailAddress>gcf@indiana.edu</EmailAddress>
<PI_PHON>8128567977</PI_PHON>
<NSF_ID>000231257</NSF_ID>
<StartDate>08/05/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Gregor</FirstName>
<LastName>von Laszewski</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Gregor von Laszewski</PI_FULL_NAME>
<EmailAddress>gvonlasz@indiana.edu</EmailAddress>
<PI_PHON>8128561311</PI_PHON>
<NSF_ID>000275379</NSF_ID>
<StartDate>08/05/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Judy</FirstName>
<LastName>Fox</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Judy Fox</PI_FULL_NAME>
<EmailAddress>ckw9mp@virginia.edu</EmailAddress>
<PI_PHON>4342975916</PI_PHON>
<NSF_ID>000555330</NSF_ID>
<StartDate>08/05/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Indiana University</Name>
<CityName>Bloomington</CityName>
<ZipCode>474013654</ZipCode>
<PhoneNumber>3172783473</PhoneNumber>
<StreetAddress>509 E 3RD ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>006046700</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF INDIANA UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>006046700</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Indiana University]]></Name>
<CityName>Bloomington</CityName>
<StateCode>IN</StateCode>
<ZipCode>474083912</ZipCode>
<StreetAddress><![CDATA[901 E 10th Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~315000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-80a0b129-3c28-6d1d-c0a8-3ebb8eb4e36b"> </span></p> <p dir="ltr"><span>The Rapid Python Deep Learning Infrastructure (RaPyDLI) project, a collaboration between the University of Tennessee, Indiana University, and Stanford University, delivers productivity and performance to the deep learning (DL) community by combining high-level Python, C/C++, and Java environments with carefully designed libraries for graphics processing units (GPUs) and Intel Xeon Phi coprocessors.</span></p> <p dir="ltr"><span>DL has major impacts in areas like speech recognition, drug discovery, computer vision, and natural language processing. In general, learning networks take input data, such as a set of pixels from an image, and map them into decisions, such as labeling animals in an image, or deciding how best to drive a car given a video image from a vehicle-mounted camera. The input and output are linked by multiple nodes in a layered network, where each node corresponds to a parameterized transformation&mdash;a function of weights and thresholds. A (very) deep learning network has multiple layers (intermediate nodes), perhaps 10 or more. Introduced around 25 years ago, DL networks were originally unsuccessful, but improved algorithms and drastic increases in available compute power led to practical breakthroughs around 10 years ago. DLs are now used in all major commercial speech recognition systems and outperform previous Hidden Markov Model-based systems.</span></p> <p dir="ltr"><span>The quality of a DL network depends on the number of layers and the nature of the nodes in the network. RaPyDLI&rsquo;s approach, which leverages hardware accelerators (GPUs), is of prime importance because these accelerators increase the available computational power by more than an order of magnitude, thereby enabling much more sophisticated neural networks. Further, this success relies on training large neural nets&mdash;currently, up to 10 billion connections trained on 10 million images&mdash;using either large-scale commodity clusters or smaller high-performance computing systems, where these GPU accelerators perform with high efficiency.</span></p> <p dir="ltr"><span>With its rapid prototyping features, RaPyDLI is also used as an onramp to DL. It serves as an aggregator for modules related to DL while simplifying access through a service interface and hosted services that provide access to fast computing resources. We offer simple interfaces for the deployment framework while also offering access to the actual algorithmic functionality through a variety of interfaces. This includes a Python application programming interface (based on REST), a command shell, and web services. In addition, we provide an experiment management framework that enables us to monitor the services and resources.</span></p> <div><span><br /></span></div> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/20/2017<br>      Modified by: Geoffrey&nbsp;C&nbsp;Fox</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   The Rapid Python Deep Learning Infrastructure (RaPyDLI) project, a collaboration between the University of Tennessee, Indiana University, and Stanford University, delivers productivity and performance to the deep learning (DL) community by combining high-level Python, C/C++, and Java environments with carefully designed libraries for graphics processing units (GPUs) and Intel Xeon Phi coprocessors. DL has major impacts in areas like speech recognition, drug discovery, computer vision, and natural language processing. In general, learning networks take input data, such as a set of pixels from an image, and map them into decisions, such as labeling animals in an image, or deciding how best to drive a car given a video image from a vehicle-mounted camera. The input and output are linked by multiple nodes in a layered network, where each node corresponds to a parameterized transformation&mdash;a function of weights and thresholds. A (very) deep learning network has multiple layers (intermediate nodes), perhaps 10 or more. Introduced around 25 years ago, DL networks were originally unsuccessful, but improved algorithms and drastic increases in available compute power led to practical breakthroughs around 10 years ago. DLs are now used in all major commercial speech recognition systems and outperform previous Hidden Markov Model-based systems. The quality of a DL network depends on the number of layers and the nature of the nodes in the network. RaPyDLI?s approach, which leverages hardware accelerators (GPUs), is of prime importance because these accelerators increase the available computational power by more than an order of magnitude, thereby enabling much more sophisticated neural networks. Further, this success relies on training large neural nets&mdash;currently, up to 10 billion connections trained on 10 million images&mdash;using either large-scale commodity clusters or smaller high-performance computing systems, where these GPU accelerators perform with high efficiency. With its rapid prototyping features, RaPyDLI is also used as an onramp to DL. It serves as an aggregator for modules related to DL while simplifying access through a service interface and hosted services that provide access to fast computing resources. We offer simple interfaces for the deployment framework while also offering access to the actual algorithmic functionality through a variety of interfaces. This includes a Python application programming interface (based on REST), a command shell, and web services. In addition, we provide an experiment management framework that enables us to monitor the services and resources.               Last Modified: 10/20/2017       Submitted by: Geoffrey C Fox]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

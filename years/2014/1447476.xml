<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>BIGDATA: F: DKA: Collaborative Research: Structured Nearest Neighbor Search in High Dimensions</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sylvia Spengler</SignBlockName>
<PO_EMAI>sspengle@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A fundamental problem in the analysis of large datasets consists of finding one or more data items that are as similar as possible to an input query. This situation occurs, for example, when a user wants to identify a product captured in a photo. The corresponding computational problem, called Nearest Neighbor (NN) Search, has attracted a large body of research, with several algorithms having significant impact. Yet the state of the art in NN suffers from important theoretical and practical limitations. In particular, it does not provide a natural way to exploit data *structure* that is present in many applications. For example, although the identity of a depicted object does not change when one varies the lighting or the position of the object, the current NN algorithms will treat the resulting images as completely different from each other and thus will mis-identify the object. To overcome this difficulty, in this project the PIs will develop new efficient algorithms that incorporate problem structure into NN search. The PIs expect that such methods will produce substantially better results for many massive data analysis tasks.&lt;br/&gt;&lt;br/&gt;To ensure that the work is grounded in an important application, the PIs will focus on computer vision, an area where Internet-scale datasets are having a substantial impact. NN search is vital for computer vision, and in fact many senior computer vision researchers view improved NN techniques as their top algorithmic priority. Image and video have significant structure, often spatial in nature, which algorithmic techniques such as graph cuts have been able to exploit with considerable success. The proposed work will formulate new variants of NN search that make use of additional structure, and will design efficient algorithms to solve these problems over large datasets. In particular, the PIs will investigate three structured NN problem formulations. Simultaneous nearest-neighbor queries involves multiple queries where the answers should be compatible with each other. Nearest-neighbor under transformations considers distances that are invariant to a variety of image transformations. Nearest-neighbors for subspaces involves searching a set of linear or affine subspaces for the one that comes closest to a query point.  Broader impacts of the project include graduate training in both algorithms and image processing.&lt;br/&gt;&lt;br/&gt;For further information see the project web site at: http://cs.brown.edu/~pff/SNN/</AbstractNarration>
<MinAmdLetterDate>09/10/2014</MinAmdLetterDate>
<MaxAmdLetterDate>09/10/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1447476</AwardID>
<Investigator>
<FirstName>Piotr</FirstName>
<LastName>Indyk</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Piotr Indyk</PI_FULL_NAME>
<EmailAddress>indyk@mit.edu</EmailAddress>
<PI_PHON>6172531000</PI_PHON>
<NSF_ID>000488958</NSF_ID>
<StartDate>09/10/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>William</FirstName>
<LastName>Freeman</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William Freeman</PI_FULL_NAME>
<EmailAddress>wtf@ai.mit.edu</EmailAddress>
<PI_PHON>6172538828</PI_PHON>
<NSF_ID>000418387</NSF_ID>
<StartDate>09/10/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName>Cambridge</CityName>
<StateCode>MA</StateCode>
<ZipCode>021394307</ZipCode>
<StreetAddress><![CDATA[77 Massachusetts Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8083</Code>
<Text>Big Data Science &amp;Engineering</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8083</Code>
<Text>Big Data Science &amp;Engineering</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~500000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The focus of the project was to develop efficient algorithms for structured nearest neighbor search. The basic nearest neighbor problem is defined as follows: given a database of points in a multidimensional geometric space, devise a data structure that, given any query point, quickly finds its nearest neighbor in the database. This is a basic geometric problem with a remarkable number of applications in a variety of fields, such as machine learning, databases, natural language processing and computer vision. For example, searching for a similar image&nbsp; is often performed by extracting a&nbsp; set of&nbsp; numerical features from all&nbsp; images, and searching for feature vectors that are closest to a given one.</p> <p>Yet the state of the art in NN suffers from important theoretical and practical limitations. In particular, it does not provide a natural way to exploit structures, such as compatibility constraints, that are present in many applications</p> <p>The project has resulted in the development of several novel algorithms for structured and regular similarity search, as well as multiple vision/machine methods that use similarity search as a key subroutine. Specific contributions include:<br /><br />ALGORITHMS:</p> <ul> <li>FALCONN, a fast algorithm for nearest neighbor search in high dimensions. Available at https://github.com/FALCONN-LIB/FALCONN</li> <li>Robust variants of the nearest neighbor problem, where some of the coordinates can be arbitrarily corrupted</li> <li>Efficient algorithms for the simultaneous nearest neighbor problems, which exploits compatibility constraints between solutions to multiple searches</li> <li>Approximate compression algorithms for high-dimensional pointsets which preserve the distances between the points, as well as the distances to their nearest neighbors</li> <li>Data dependent data structures for regular nearest-neighbors and their limitations</li> <li>Connections to sub-linear time algorithms, including solving the set cover in sub-linear space</li> </ul> <p><br />METHODS:<br /><br /></p> <ul> <li>&nbsp;Best buddies similarity for robust template matching</li> <li>&nbsp;Visual deprojection: probabilistic recovery of collapsed dimensions</li> <li>&nbsp;Learning and using the "arrow of time" in videos</li> <li>&nbsp;Turning corners into cameras: principles and methods</li> </ul> <p><br />We published these findings in top computer vision, machine learning and algorithms venues. In addition, we have presented the material in various invited poster and oral presentations.<br /><br />Impact per study:<br /><br />1. Best buddies similarity (BBS):<br /><br />Image template matching is a classic computer vision problem, and BBS is a new, robust solution for complex images that outperforms commonly-used approaches such as normalized cross-correlation, histogram matching and earth mover's distance.<br /><br />2. Visual Deprojection:<br /><br />This is the first work that explores the general problem of collapsed dimension recovery in visual data. We show that it is possible to recover many details of images/videos from their spatial projections, a surprising finding with implications in several imaging domains such as non-line-of-sight imaging and tomography.<br /><br />3. Learning the Arrow of Time:<br /><br />We present the first data-driven method to learn and use the arrow of time from video recordings. The method identifies parts of the video that most reveal the direction of time, and can also detect temporally-reversed films, a special case of video forensics.<br /><br />4. Corner Cameras:<br /><br />This is the first work showing that walls, and other obstructions with edges, can be exploited as naturally-occurring "cameras" that reveal hidden scenes behind them. This work has impact for public safety and autonomous driving.<br /><br />5. FALCONN, a software implementation of a near neighbor search algorithm:<br /><br />Our implementation provides a state-of-the-art code for the near neighbor search problem.<br /><br />6. Simultaneous nearest neighbor and robust nearest neighbor:<br /><br />Our results significantly expanded the set of nearest neighbor search formulations that are supported by efficient algorithms.<br /><br />7. Metric compression:<br /><br />Our metric compression method is the first to offer both state-of-the-art performance and strong theoretical guarantees.<br /><br /><br /></p><br> <p>            Last Modified: 01/11/2020<br>      Modified by: Piotr&nbsp;Indyk</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The focus of the project was to develop efficient algorithms for structured nearest neighbor search. The basic nearest neighbor problem is defined as follows: given a database of points in a multidimensional geometric space, devise a data structure that, given any query point, quickly finds its nearest neighbor in the database. This is a basic geometric problem with a remarkable number of applications in a variety of fields, such as machine learning, databases, natural language processing and computer vision. For example, searching for a similar image  is often performed by extracting a  set of  numerical features from all  images, and searching for feature vectors that are closest to a given one.  Yet the state of the art in NN suffers from important theoretical and practical limitations. In particular, it does not provide a natural way to exploit structures, such as compatibility constraints, that are present in many applications  The project has resulted in the development of several novel algorithms for structured and regular similarity search, as well as multiple vision/machine methods that use similarity search as a key subroutine. Specific contributions include:  ALGORITHMS:  FALCONN, a fast algorithm for nearest neighbor search in high dimensions. Available at https://github.com/FALCONN-LIB/FALCONN Robust variants of the nearest neighbor problem, where some of the coordinates can be arbitrarily corrupted Efficient algorithms for the simultaneous nearest neighbor problems, which exploits compatibility constraints between solutions to multiple searches Approximate compression algorithms for high-dimensional pointsets which preserve the distances between the points, as well as the distances to their nearest neighbors Data dependent data structures for regular nearest-neighbors and their limitations Connections to sub-linear time algorithms, including solving the set cover in sub-linear space    METHODS:     Best buddies similarity for robust template matching  Visual deprojection: probabilistic recovery of collapsed dimensions  Learning and using the "arrow of time" in videos  Turning corners into cameras: principles and methods    We published these findings in top computer vision, machine learning and algorithms venues. In addition, we have presented the material in various invited poster and oral presentations.  Impact per study:  1. Best buddies similarity (BBS):  Image template matching is a classic computer vision problem, and BBS is a new, robust solution for complex images that outperforms commonly-used approaches such as normalized cross-correlation, histogram matching and earth mover's distance.  2. Visual Deprojection:  This is the first work that explores the general problem of collapsed dimension recovery in visual data. We show that it is possible to recover many details of images/videos from their spatial projections, a surprising finding with implications in several imaging domains such as non-line-of-sight imaging and tomography.  3. Learning the Arrow of Time:  We present the first data-driven method to learn and use the arrow of time from video recordings. The method identifies parts of the video that most reveal the direction of time, and can also detect temporally-reversed films, a special case of video forensics.  4. Corner Cameras:  This is the first work showing that walls, and other obstructions with edges, can be exploited as naturally-occurring "cameras" that reveal hidden scenes behind them. This work has impact for public safety and autonomous driving.  5. FALCONN, a software implementation of a near neighbor search algorithm:  Our implementation provides a state-of-the-art code for the near neighbor search problem.  6. Simultaneous nearest neighbor and robust nearest neighbor:  Our results significantly expanded the set of nearest neighbor search formulations that are supported by efficient algorithms.  7. Metric compression:  Our metric compression method is the first to offer both state-of-the-art performance and strong theoretical guarantees.          Last Modified: 01/11/2020       Submitted by: Piotr Indyk]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Design and Analysis of Symmetric Key Ciphers</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2014</AwardEffectiveDate>
<AwardExpirationDate>06/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>452381.00</AwardTotalIntnAmount>
<AwardAmount>452381</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Shannon Beck</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Pseudorandom sequences (PRS) exhibit a statistical randomness and are widely used in applications where randomness is needed and PRS generation can be effectively done. Many everyday applications in digital computing and communication require randomness to operate correctly.  For example, these include secure network communications, global positioning systems, and even weather prediction simulations.  Yet, few general generators of high quality pseudorandom sequences are known.  This research will develop algorithms and software tools to make high quality usable pseudorandom sequences, particularly, which would lead to improvements in performance and security over current symmetric  key ciphers. &lt;br/&gt;&lt;br/&gt;This project concerns the design of high speed mechanisms for data encryption: Feistel networks, a widely used architecture for block ciphers; Boolean functions, building blocks for both block ciphers and stream ciphers; and feedback-with-carry shift registers (FCSRs) and generalizations (AFSRs), generators of sequences with many desirable properties. Many basic properties of FCSRs have been determined and they have been used in stream ciphers and quasi-Monte Carlo. We propose to (1) develop new designs of block ciphers with new Feistel-like networks or time varying keys using PRS generators; (2) study stream ciphers with FCSRs replacing LFSRs; (3) study measures of randomness of Boolean functions; (4) further analyze AFSRs, e.g. solve the register synthesis problem for more general AFSRs; and (5) develop efficient implementations of sequence generators.</AbstractNarration>
<MinAmdLetterDate>09/09/2014</MinAmdLetterDate>
<MaxAmdLetterDate>09/09/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1420227</AwardID>
<Investigator>
<FirstName>Andrew</FirstName>
<LastName>Klapper</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Andrew M Klapper</PI_FULL_NAME>
<EmailAddress>klapper@cs.uky.edu</EmailAddress>
<PI_PHON>8592576743</PI_PHON>
<NSF_ID>000181694</NSF_ID>
<StartDate>09/09/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Kentucky Research Foundation</Name>
<CityName>Lexington</CityName>
<ZipCode>405260001</ZipCode>
<PhoneNumber>8592579420</PhoneNumber>
<StreetAddress>109 Kinkead Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Kentucky</StateName>
<StateCode>KY</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>KY06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>939017877</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF KENTUCKY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>007400724</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Kentucky Research Foundation]]></Name>
<CityName>Lexington</CityName>
<StateCode>KY</StateCode>
<ZipCode>405260001</ZipCode>
<StreetAddress><![CDATA[500 S Limestone 109 Kinkead Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Kentucky</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>KY06</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8251</Code>
<Text>Math Sci Innovation Incubator</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~452381</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Briefly, this grant has led to new mathematical tools for designing and analyzing the security of certain high speed cryptographic systems.<br /><br />In more detail: the main goal of cryptographic research is to provide mathematical tools for building&nbsp; secure systems and to measure (or challenge) the purported security of existing tools and cryptosystems.&nbsp; In this grant we have studied mathematical tools for designing and analyzing a class of cryptosystem known as "stream cyphers".&nbsp; These cryptosystems are meant to provide a moderate level of security while performing at very high speeds.<br /><br />Imagine a message as a sequence, M, of bits.&nbsp; A stream cipher encrypts M by combining it, bit by bit, with a "keystream", K, that is a pseudorandom sequence of bits (meaning it looks random to a whole bunch of statistical tests), producing the cipher, C=M+K.&nbsp; Such a system is weak if it's possible to predict with some accuracy the tail of C given a short prefix of C (or equivalently predict the tail of K given a short prefix of K).&nbsp; For example the Berlekamp-Massey algorithm does this by finding the smallest Linear Feedback Shift Register (or LFSR; see below) whose output is consistent with the known prefix of K.&nbsp; If the size of the smallest LFSR is low, then the Berlekamp-Massey algorithm will succeed given only a short prefix of K.&nbsp; The size of this smallest LFSR is called the "linear complexity", and has been studied by many researchers for more than 60 years.&nbsp; Linear complexity is thus a measure of security.<br /><br />Some background: An LFSR is a finite state device whose state is a vector of bits.&nbsp; It updates its state by computing a (modulo 2) linear combination, L, of the current state bits, shifting the current state to the right one place, and putting L in the vacated leftmost position.&nbsp; The analysis of LSFRs uses modulo 2 polynomial algebra.&nbsp; LFSRs are cryptographically weak because of the Berlekamp-Masset algorithm.&nbsp; Despite this weakness, due to their high statistical randomness LFSRs are commonly used as building blocks in keystream generators.&nbsp; They are also used in error correcting codes, Monte Carlo integration and many other areas.<br /><br />For a number of years we have been studying generalizations of LFSRs in which the state change includes a carry (think of how you do long addition).&nbsp; One basic type is a Feedback with Carry Shift Register (FCSR).&nbsp; The general type, Algebraic Feedback Shift Registers (AFSRs), includes both LFSRs and FCSRs as special cases. We have identified many properties of and structures related to FCSRs that are analogs of properties of LFSRs.&nbsp; Supported by this grant we have designed new sequence generators (eg FCSRs where the coefficients of L are matrices).&nbsp; For some of these AFSRs we have found Berlekamp-Massey-type algorithms (register synthesis algorithms).&nbsp; We have defined and studied new tools of analysis, such as the "q-transform" that relates to how closely a given state change function can be approximated by a polynomial, q(x).&nbsp; This leads to a notions of q-correlation immune functions and q-bent functions, the latter generalizing the intensely studied "bent functions", functions that are maximally far from all functions of the form q(F(x)), where F(x) is a linear change of basis.&nbsp; Surprisingly, we have proved that if q(x) is nonlinear, then there are no q-bent functions.&nbsp; This has led to an investigation of notions of "almost" q-bent functions that is still going on.<br /><br />Finally, this grant has support three PhD students.&nbsp; Two of these are women who have finished their degrees and are tenure stream assistant professors in the US.&nbsp; The third is a US veteran and is close to finishing his PhD.<br /><br /><br /><br /><br /></p><br> <p>            Last Modified: 08/30/2019<br>      Modified by: Andrew&nbsp;M&nbsp;Klapper</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Briefly, this grant has led to new mathematical tools for designing and analyzing the security of certain high speed cryptographic systems.  In more detail: the main goal of cryptographic research is to provide mathematical tools for building  secure systems and to measure (or challenge) the purported security of existing tools and cryptosystems.  In this grant we have studied mathematical tools for designing and analyzing a class of cryptosystem known as "stream cyphers".  These cryptosystems are meant to provide a moderate level of security while performing at very high speeds.  Imagine a message as a sequence, M, of bits.  A stream cipher encrypts M by combining it, bit by bit, with a "keystream", K, that is a pseudorandom sequence of bits (meaning it looks random to a whole bunch of statistical tests), producing the cipher, C=M+K.  Such a system is weak if it's possible to predict with some accuracy the tail of C given a short prefix of C (or equivalently predict the tail of K given a short prefix of K).  For example the Berlekamp-Massey algorithm does this by finding the smallest Linear Feedback Shift Register (or LFSR; see below) whose output is consistent with the known prefix of K.  If the size of the smallest LFSR is low, then the Berlekamp-Massey algorithm will succeed given only a short prefix of K.  The size of this smallest LFSR is called the "linear complexity", and has been studied by many researchers for more than 60 years.  Linear complexity is thus a measure of security.  Some background: An LFSR is a finite state device whose state is a vector of bits.  It updates its state by computing a (modulo 2) linear combination, L, of the current state bits, shifting the current state to the right one place, and putting L in the vacated leftmost position.  The analysis of LSFRs uses modulo 2 polynomial algebra.  LFSRs are cryptographically weak because of the Berlekamp-Masset algorithm.  Despite this weakness, due to their high statistical randomness LFSRs are commonly used as building blocks in keystream generators.  They are also used in error correcting codes, Monte Carlo integration and many other areas.  For a number of years we have been studying generalizations of LFSRs in which the state change includes a carry (think of how you do long addition).  One basic type is a Feedback with Carry Shift Register (FCSR).  The general type, Algebraic Feedback Shift Registers (AFSRs), includes both LFSRs and FCSRs as special cases. We have identified many properties of and structures related to FCSRs that are analogs of properties of LFSRs.  Supported by this grant we have designed new sequence generators (eg FCSRs where the coefficients of L are matrices).  For some of these AFSRs we have found Berlekamp-Massey-type algorithms (register synthesis algorithms).  We have defined and studied new tools of analysis, such as the "q-transform" that relates to how closely a given state change function can be approximated by a polynomial, q(x).  This leads to a notions of q-correlation immune functions and q-bent functions, the latter generalizing the intensely studied "bent functions", functions that are maximally far from all functions of the form q(F(x)), where F(x) is a linear change of basis.  Surprisingly, we have proved that if q(x) is nonlinear, then there are no q-bent functions.  This has led to an investigation of notions of "almost" q-bent functions that is still going on.  Finally, this grant has support three PhD students.  Two of these are women who have finished their degrees and are tenure stream assistant professors in the US.  The third is a US veteran and is close to finishing his PhD.            Last Modified: 08/30/2019       Submitted by: Andrew M Klapper]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

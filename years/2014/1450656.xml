<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Reinforcement Learning of Multi-Party Negotiation Dialogue Policies</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>159999.00</AwardTotalIntnAmount>
<AwardAmount>159999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tatiana Korelsky</SignBlockName>
<PO_EMAI>tkorelsk@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Natural-language-based dialogue systems have a dialogue policy that determines what the system should do based on the dialogue context (also called dialogue state). Manually designing dialogue policies can be a very hard task and there is no guarantee that the resulting policies will be optimal. This issue has motivated research on statistical methods to learn dialogue policies. However, this work has mainly addressed two-party dialogue between one computer agent (system) and one human user, and assumed that the behavior of the user does not change over time. This assumption generally holds for simple information-providing tasks (e.g., reserving a flight), where not much variation in user behavior is expected. But this assumption is not realistic for other genres of dialogue, such as negotiation, where users may change their behavior if they realize that their current negotiation strategy does not help them achieve their goals. This EArly Grant for Exploratory Research investigates automated dialogue policy creation for multi-party dialogue (with more participants than just one agent and one user) without making the assumption that the behavior of the user does not change over time.&lt;br/&gt;&lt;br/&gt;Previous work has used single-agent Reinforcement Learning (RL) for two-party dialogue policy learning. Single-agent RL requires a stationary environment, i.e., an environment (in our case a user) that does not change over time. Thus single-agent RL is not suitable for a non-stationary environment. For this reason, this project explores the use of multi-agent RL for two-party and multi-party negotiation dialogue. Multi-agent RL makes no assumption that the behavior of the user does not change over time, and is designed for situations where the strategy of one agent may affect the strategy of other agents (non-stationary environment). System-user interaction is done using natural language, and the learned policies are evaluated both in simulation and with human users. The advances made in the project, i.e., multi-agent RL algorithms for dialogue policy learning, are encoded in a statistical dialogue management toolkit (to be publicly distributed). Publicly available multi-agent RL algorithms for dialogue policy learning allow broader access to this technology for dialogue researchers and students.</AbstractNarration>
<MinAmdLetterDate>08/18/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/18/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1450656</AwardID>
<Investigator>
<FirstName>Kallirroi</FirstName>
<LastName>Georgila</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kallirroi Georgila</PI_FULL_NAME>
<EmailAddress>kgeorgila@ict.usc.edu</EmailAddress>
<PI_PHON>2137407762</PI_PHON>
<NSF_ID>000580549</NSF_ID>
<StartDate>08/18/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Southern California</Name>
<CityName>Los Angeles</CityName>
<ZipCode>900890001</ZipCode>
<PhoneNumber>2137407762</PhoneNumber>
<StreetAddress>University Park</StreetAddress>
<StreetAddress2><![CDATA[3720 S. Flower St.]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>37</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA37</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072933393</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF SOUTHERN CALIFORNIA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072933393</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Southern California]]></Name>
<CityName>Playa Vista</CityName>
<StateCode>CA</StateCode>
<ZipCode>900942536</ZipCode>
<StreetAddress><![CDATA[12015 Waterfront Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>43</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA43</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7495</Code>
<Text>Robust Intelligence</Text>
</ProgramElement>
<ProgramReference>
<Code>7495</Code>
<Text>ROBUST INTELLIGENCE</Text>
</ProgramReference>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~159999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Natural-language-based dialogue systems have a dialogue policy that determines what the system should do based on the dialogue context. The goal of this project is to extend the current line of research in dialogue policy learning beyond two-party dialogue and standard single-agent reinforcement learning (RL). Single-agent RL assumes that the environment of the agent (i.e., the user) does not change over time, which is an unrealistic assumption in many domains, especially negotiation. On the other hand, multi-agent RL does not make assumptions about the environment and is designed for situations where the strategy of one agent may affect the strategy of other agents (non-stationary environment). In this project, both single-agent RL and multi-agent RL were used to automatically learn multi-party negotiation dialogue policies. We performed experiments in two negotiation domains: a non-cooperative multi-party trading task and a cooperative multi-party furniture layout negotiation task.</p> <p>In the first task, the dialogue system (learner) trades with 1, 2, or 3 other agents. The traders have a number of items that they can keep or exchange with the other traders. At the end of the interaction each trader earns a number of points based on the items that it holds and the value of each item. For each dialogue the payoff matrices of the traders are randomly initialized. The negotiation strategy of the learner was learned through simulated dialogue with trader simulators (two strong baselines that followed complex hand-crafted trading policies). We experimented with a variety of single-agent RL algorithms and reward functions. In all setups (two-party to four-party) our best RL configuration produced negotiation policies as effective, or even better, than the policies of the two strong hand-crafted baselines. Our learned policies could generalize to unseen initial conditions. They also performed well when tested against traders different from the ones used for training. Furthermore, they could be transferred to new trading situations, as initial policies, and thus speed up learning.</p> <p>In our collaborative furniture layout negotiation task, two or more participants have to agree on which furniture items to put in a room. Each agent has its own preferences initially only known to that agent. As the dialogue progresses, the agents can reveal their preferences making this information public knowledge. The goal is to earn as a group as many points as possible. At the beginning of each dialogue, the initial conditions are randomly initialized. We compared a variety of single-agent RL and multi-agent RL methodologies (including combining single-agent RL and multi-agent RL) under the same conditions. We learned dialogue policies that perform well even in situations not observed during training, and in testing configurations significantly different from the ones used for training. Furthermore, policies trained in a two-party setting could be successfully applied to a three-party setting, and vice versa. We also accounted for speech recognition and natural language understanding errors. Finally we built infrastructure for incorporating our dialogue policies into a full dialogue system in order to evaluate them with human users.</p> <p>The project so far has produced 1 journal article publication and 1 conference publication in prestigious venues. Results were also disseminated through invited talks and teaching a MSc level computer science course. This project partially supported 2 PhD students and 2 MSc students. It also trained 1 additional PhD student and 1 additional MSc student.</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/30/2017<br>      Modified by: Kallirroi&nbsp;Georgila</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Natural-language-based dialogue systems have a dialogue policy that determines what the system should do based on the dialogue context. The goal of this project is to extend the current line of research in dialogue policy learning beyond two-party dialogue and standard single-agent reinforcement learning (RL). Single-agent RL assumes that the environment of the agent (i.e., the user) does not change over time, which is an unrealistic assumption in many domains, especially negotiation. On the other hand, multi-agent RL does not make assumptions about the environment and is designed for situations where the strategy of one agent may affect the strategy of other agents (non-stationary environment). In this project, both single-agent RL and multi-agent RL were used to automatically learn multi-party negotiation dialogue policies. We performed experiments in two negotiation domains: a non-cooperative multi-party trading task and a cooperative multi-party furniture layout negotiation task.  In the first task, the dialogue system (learner) trades with 1, 2, or 3 other agents. The traders have a number of items that they can keep or exchange with the other traders. At the end of the interaction each trader earns a number of points based on the items that it holds and the value of each item. For each dialogue the payoff matrices of the traders are randomly initialized. The negotiation strategy of the learner was learned through simulated dialogue with trader simulators (two strong baselines that followed complex hand-crafted trading policies). We experimented with a variety of single-agent RL algorithms and reward functions. In all setups (two-party to four-party) our best RL configuration produced negotiation policies as effective, or even better, than the policies of the two strong hand-crafted baselines. Our learned policies could generalize to unseen initial conditions. They also performed well when tested against traders different from the ones used for training. Furthermore, they could be transferred to new trading situations, as initial policies, and thus speed up learning.  In our collaborative furniture layout negotiation task, two or more participants have to agree on which furniture items to put in a room. Each agent has its own preferences initially only known to that agent. As the dialogue progresses, the agents can reveal their preferences making this information public knowledge. The goal is to earn as a group as many points as possible. At the beginning of each dialogue, the initial conditions are randomly initialized. We compared a variety of single-agent RL and multi-agent RL methodologies (including combining single-agent RL and multi-agent RL) under the same conditions. We learned dialogue policies that perform well even in situations not observed during training, and in testing configurations significantly different from the ones used for training. Furthermore, policies trained in a two-party setting could be successfully applied to a three-party setting, and vice versa. We also accounted for speech recognition and natural language understanding errors. Finally we built infrastructure for incorporating our dialogue policies into a full dialogue system in order to evaluate them with human users.  The project so far has produced 1 journal article publication and 1 conference publication in prestigious venues. Results were also disseminated through invited talks and teaching a MSc level computer science course. This project partially supported 2 PhD students and 2 MSc students. It also trained 1 additional PhD student and 1 additional MSc student.          Last Modified: 11/30/2017       Submitted by: Kallirroi Georgila]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

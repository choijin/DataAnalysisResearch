<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF:Small:Collaborative Research:Practical Synthesis of Network Updates</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2014</AwardEffectiveDate>
<AwardExpirationDate>06/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>249999.00</AwardTotalIntnAmount>
<AwardAmount>249999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Configuration updates are a common source of instability in networks&lt;br/&gt;today, frequently leading to outages, disruptions, and even security&lt;br/&gt;vulnerabilities. A key factor that makes updates difficult to&lt;br/&gt;implement is that networks are complex systems with many interacting&lt;br/&gt;components. A typical datacenter network consists of&lt;br/&gt;thousands of devices, a significant challenge for network administrators&lt;br/&gt;is that each of these devices must be reconfigured after an update. &lt;br/&gt;The goal of this research is to develop new mechanisms for implementing &lt;br/&gt;network configuration updates using techniques based on software synthesis. &lt;br/&gt;&lt;br/&gt;To meet this goal, the research is developing (i) new synthesis&lt;br/&gt;algorithms based on efficient incremental model checking techniques;&lt;br/&gt;(ii) extensions that model bandwidth and fault tolerance using&lt;br/&gt;quantitative constraints and objective functions; and (iii)&lt;br/&gt;theoretical foundations based on connections to concurrent and&lt;br/&gt;distributed programming. The project will have broad impact by&lt;br/&gt;discovering new techniques that automate a difficult network&lt;br/&gt;administration task and by training undergraduate and graduate&lt;br/&gt;students with interdisciplinary skills in formal methods and&lt;br/&gt;networking.</AbstractNarration>
<MinAmdLetterDate>06/20/2014</MinAmdLetterDate>
<MaxAmdLetterDate>06/20/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1422046</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Foster</LastName>
<PI_MID_INIT>N</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>John N Foster</PI_FULL_NAME>
<EmailAddress>jnfoster@cs.cornell.edu</EmailAddress>
<PI_PHON>6072555210</PI_PHON>
<NSF_ID>000569694</NSF_ID>
<StartDate>06/20/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY23</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>872612445</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CORNELL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002254837</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Cornell University]]></Name>
<CityName>Ithaca</CityName>
<StateCode>NY</StateCode>
<ZipCode>148537501</ZipCode>
<StreetAddress><![CDATA[Gates Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY23</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8206</Code>
<Text>Formal Methods and Verification</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~249999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Configuration updates are a common source of instability in networks today. Network operators must make frequent changes to the configurations of network devices (e.g., modifying routing tables, adjusting link weights, editing access control lists, etc.) to perform a wide range of tasks ranging from routine maintenance, to balancing load, to addressing security issues. But even when network updates are carefully planned in advance, they can be difficult for human operators to execute correctly. Service disruptions caused by updates occur frequently and lead to a host of problems including degraded performance, broken connections, transient outages, and security vulnerabilities.</p> <p>This project developed new approaches to updating network configurations using program synthesis. We developed a range of approaches for automatically synthesizing updates that are guaranteed to satisfy programmer-specified correctness properties. The first key intellectual contribution of this project was a software tool that uses counter-example-guide inductive synthesis and incremental model checking to efficiently search for configuration updates. The second key contribution was an optimal, polynomial-time algorithm for synthesizing per-packet consistent updates where the configuration of each device is updated in a particular order. The third key contribution was a new programming model for stateful network devices based on Winskel's event structures. The fourth key contribution was a technique for network configuration repair based on efficient algorithm for solving Horn clauses. The fifth key contribution was a program synthesis technique for synchronization of distributed network programs.</p> <p>We engaged in various educational and outreach activities. Two PhD students principally supported by this grant have graduated and went on to take a tenure-track position at the University of New Mexico and a postdoctoral position at Harvard. We developed new courses at Colorado and Cornell related to and influenced by this project. We are actively working with industrial partners, including Fujitsu Labs of America and Barefoot Networks. We gave a large number of talks and seminars, including invited talks at conferences and workshops, universities, and to industrial partners. To help organize a thriving community around this research area, PI Foster organized weeklong workshops at Dagstuhl, Germany and Shonan, Japan.</p><br> <p>            Last Modified: 10/30/2018<br>      Modified by: John&nbsp;N&nbsp;Foster</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Configuration updates are a common source of instability in networks today. Network operators must make frequent changes to the configurations of network devices (e.g., modifying routing tables, adjusting link weights, editing access control lists, etc.) to perform a wide range of tasks ranging from routine maintenance, to balancing load, to addressing security issues. But even when network updates are carefully planned in advance, they can be difficult for human operators to execute correctly. Service disruptions caused by updates occur frequently and lead to a host of problems including degraded performance, broken connections, transient outages, and security vulnerabilities.  This project developed new approaches to updating network configurations using program synthesis. We developed a range of approaches for automatically synthesizing updates that are guaranteed to satisfy programmer-specified correctness properties. The first key intellectual contribution of this project was a software tool that uses counter-example-guide inductive synthesis and incremental model checking to efficiently search for configuration updates. The second key contribution was an optimal, polynomial-time algorithm for synthesizing per-packet consistent updates where the configuration of each device is updated in a particular order. The third key contribution was a new programming model for stateful network devices based on Winskel's event structures. The fourth key contribution was a technique for network configuration repair based on efficient algorithm for solving Horn clauses. The fifth key contribution was a program synthesis technique for synchronization of distributed network programs.  We engaged in various educational and outreach activities. Two PhD students principally supported by this grant have graduated and went on to take a tenure-track position at the University of New Mexico and a postdoctoral position at Harvard. We developed new courses at Colorado and Cornell related to and influenced by this project. We are actively working with industrial partners, including Fujitsu Labs of America and Barefoot Networks. We gave a large number of talks and seminars, including invited talks at conferences and workshops, universities, and to industrial partners. To help organize a thriving community around this research area, PI Foster organized weeklong workshops at Dagstuhl, Germany and Shonan, Japan.       Last Modified: 10/30/2018       Submitted by: John N Foster]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

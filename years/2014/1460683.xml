<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: CC: Small: Collaborative Research: Language and Runtime Support for Large-Scale Data Analytics</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2014</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>136965.00</AwardTotalIntnAmount>
<AwardAmount>136965</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>As the cost of computing and communication resources has plummeted, applications have become data-centric with data products growing explosively in both number and size.  Although accessing such data using the compute power necessary for its analysis and processing is cheap and readily available via cloud computing (intuitive, utility-style access to vast resource pools), doing so currently requires significant expertise, experience, and time (for customization, configuration, deployment, etc).  This work investigates new models of cloud computing that combine domain-targeted languages with scalable data processing, sharing, and management abstractions within a distributed service platform that "scales" programmer productivity.  To enable this, this research explores new programming language, runtime, and distributed systems techniques and technologies that integrate the R programming language environment with open source cloud platform-as-a-service (PaaS) in ways that simplify processing massive datasets, sharing datasets across applications and users, and tracking and enforcing data provenance.  The PIs' plans for research, outreach, integrated curricula, and open source release of research artifacts have the potential for making cloud computing more accessible to a much wider range of users: The data analytics community who use the R statistical analysis environment to apply their techniques and algorithms to important problems in areas such as biology, chemistry, physics, political science and finance, by enabling them to use cloud resources transparently for their analyses, and to share their scientific data/results in a way that enables others to reproduce and verify them.</AbstractNarration>
<MinAmdLetterDate>09/05/2014</MinAmdLetterDate>
<MaxAmdLetterDate>09/05/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1460683</AwardID>
<Investigator>
<FirstName>Jan</FirstName>
<LastName>Vitek</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jan Vitek</PI_FULL_NAME>
<EmailAddress>j.vitek@neu.edu</EmailAddress>
<PI_PHON>6173732462</PI_PHON>
<NSF_ID>000290862</NSF_ID>
<StartDate>09/05/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northeastern University</Name>
<CityName>BOSTON</CityName>
<ZipCode>021155005</ZipCode>
<PhoneNumber>6173733004</PhoneNumber>
<StreetAddress>360 HUNTINGTON AVE</StreetAddress>
<StreetAddress2><![CDATA[177-500]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001423631</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTHEASTERN UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001423631</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Northeastern University]]></Name>
<CityName>boston</CityName>
<StateCode>MA</StateCode>
<ZipCode>021155005</ZipCode>
<StreetAddress><![CDATA[360 HUNTINGTON AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~136965</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><h3><span style="color: #000000; font-weight: normal;">The goal of our research is to facilitate the development and deployment of large-scale data analytics applications by a broad and diverse user community, to scale programmer productivity for this domain. To enable this, our work leverages two primary technologies that are proving to be increasingly popular and successful for development and deployment of modern software and systems: dynamic scripting languages, specifically the R statistical computing environment, and cloud platform-as-a-service offerings. &nbsp;The main accomplishements were the following: (1) T</span><span style="color: #000000; font-weight: normal;">he first operational semantics of the R language as well as the first large scale analysis of the usage of R. &nbsp;This is a basis for future studies of how data analytics code differs from traditional programs, that information will enable optimization targeting data analytics programming idioms. (2)&nbsp;</span><span style="color: #000000; font-weight: normal;">&nbsp;Most scripting languages rely on reflection for meta programming. This is very useful and widely used facility, but one that introduces security vulnerabilities and complicates the task of compilers and optimizers for those languages. &nbsp;This work looked at the use of "eval", the function that turns text into code, in JavaScript and proposed a technique for automatically replacing it with equivalent but less dangerous code. (3) I</span><span style="color: #000000; font-weight: normal;">nvestigating opportunities for concurrency in Java programs. The goal was to derive an understanding of the potential for concurrency in large object-oriented programs and, eventually, to arrive at a design for adding concurrency to the R language which is currently sequential. (4)&nbsp;</span><span style="color: #000000; font-weight: normal;">Scripting language are often inefficient. This project looked at how to interface scripting language with low-level systems code and demonstrated that it was possible to create scripting languages that automatically generate low-level code that performs as well as handwritten C code (and sometimes better as the language generates code at runtime and can take advantage of known values for arguments). (5) D</span><span style="color: #000000; font-weight: normal;">emonstration of how to extend a scripting language with a memory managment system that provides high-performance for big data applications. This is done by inventing a new protocol that allows the application to manage some of its own memory while leaving the bulk of the memory management task to a garbage collector. &nbsp;Being able to control some of the memory management proves critical in big data work as there are large objects whose lifetime is understood by the application. (6) D</span><span style="color: #000000; font-weight: normal;">emonstration that scripting languages like R can be sped up by leveraging run-time specialization by building a simple abstract syntax tree based interpreter in Java and showed that it was possible to run an order of magnitude faster than a hand coded interpreter written in C. &nbsp;Finally, t</span><span style="color: #000000; font-weight: normal;">he implementation of the R language written in Java was adopted by Oracle as a basis for their upcoming product. This is a singificant success in transfering technologies and it is one that was achieved without loosing the open source availability of the code base.</span></h3> <p>&nbsp;</p><br> <p>            Last Modified: 11/30/2015<br>      Modified by: Jan&nbsp;Vitek</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[The goal of our research is to facilitate the development and deployment of large-scale data analytics applications by a broad and diverse user community, to scale programmer productivity for this domain. To enable this, our work leverages two primary technologies that are proving to be increasingly popular and successful for development and deployment of modern software and systems: dynamic scripting languages, specifically the R statistical computing environment, and cloud platform-as-a-service offerings.  The main accomplishements were the following: (1) The first operational semantics of the R language as well as the first large scale analysis of the usage of R.  This is a basis for future studies of how data analytics code differs from traditional programs, that information will enable optimization targeting data analytics programming idioms. (2)  Most scripting languages rely on reflection for meta programming. This is very useful and widely used facility, but one that introduces security vulnerabilities and complicates the task of compilers and optimizers for those languages.  This work looked at the use of "eval", the function that turns text into code, in JavaScript and proposed a technique for automatically replacing it with equivalent but less dangerous code. (3) Investigating opportunities for concurrency in Java programs. The goal was to derive an understanding of the potential for concurrency in large object-oriented programs and, eventually, to arrive at a design for adding concurrency to the R language which is currently sequential. (4) Scripting language are often inefficient. This project looked at how to interface scripting language with low-level systems code and demonstrated that it was possible to create scripting languages that automatically generate low-level code that performs as well as handwritten C code (and sometimes better as the language generates code at runtime and can take advantage of known values for arguments). (5) Demonstration of how to extend a scripting language with a memory managment system that provides high-performance for big data applications. This is done by inventing a new protocol that allows the application to manage some of its own memory while leaving the bulk of the memory management task to a garbage collector.  Being able to control some of the memory management proves critical in big data work as there are large objects whose lifetime is understood by the application. (6) Demonstration that scripting languages like R can be sped up by leveraging run-time specialization by building a simple abstract syntax tree based interpreter in Java and showed that it was possible to run an order of magnitude faster than a hand coded interpreter written in C.  Finally, the implementation of the R language written in Java was adopted by Oracle as a basis for their upcoming product. This is a singificant success in transfering technologies and it is one that was achieved without loosing the open source availability of the code base.          Last Modified: 11/30/2015       Submitted by: Jan Vitek]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Plug into the SuperCloud</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
<AwardExpirationDate>07/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>599901</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The goal of this project is enable the creation of secure compute clouds (Superclouds) without requiring ownership of the underlying infrastructure.  This will allow organizations and individuals to migrate to a cloud computing environment while retaining control over placement and scheduling. Superclouds make cloud computing and storage a commodity by freeing users from single providers.&lt;br/&gt;&lt;br/&gt;The research described in this proposal aims to create a Supercloud by utilizing nested virtualization, in which a virtual machine, as well as the network and storage it relies on, can be migrated between multiple underlying and heterogeneous cloud infrastructures without its user being aware of the provider's hardware, hypervisor, or networks and without any standardization of protocols between cloud providers.  The project has three components: 1) Optimize and generalize support of a Supercloud via nested virtualization; 2) Develop a Supercloud manager; 3) Enhance the Supercloud with network and storage abstractions that allow applications to run across multiple clouds.&lt;br/&gt; &lt;br/&gt;Superclouds address many of the shortcomings of current cloud offerings. Users will no longer be tied to a particular provider; they can move their resources between providers and can even build applications that span multiple providers for increased performance and robustness. An open-source Supercloud will also allow students to experiment with their own cloud management algorithms, or instrument the Supercloud for study. Indeed, the proposal includes plans to incorporate this into a summer workshop that the proposers have been running in cooperation with a historically black university (Howard) and also into Cornell's cloud course offerings.</AbstractNarration>
<MinAmdLetterDate>07/30/2014</MinAmdLetterDate>
<MaxAmdLetterDate>08/10/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1422544</AwardID>
<Investigator>
<FirstName>Robbert</FirstName>
<LastName>VanRenesse</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Robbert VanRenesse</PI_FULL_NAME>
<EmailAddress>rvr@cs.cornell.edu</EmailAddress>
<PI_PHON>6072551021</PI_PHON>
<NSF_ID>000168047</NSF_ID>
<StartDate>07/30/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Hakim</FirstName>
<LastName>Weatherspoon</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Hakim Weatherspoon</PI_FULL_NAME>
<EmailAddress>hweather@cs.cornell.edu</EmailAddress>
<PI_PHON>6072555014</PI_PHON>
<NSF_ID>000508809</NSF_ID>
<StartDate>07/30/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY23</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>872612445</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CORNELL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002254837</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Cornell University]]></Name>
<CityName>Ithaca</CityName>
<StateCode>NY</StateCode>
<ZipCode>148537501</ZipCode>
<StreetAddress><![CDATA[Gates Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY23</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~152448</FUND_OBLG>
<FUND_OBLG>2015~171318</FUND_OBLG>
<FUND_OBLG>2016~176234</FUND_OBLG>
<FUND_OBLG>2017~99901</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-f884eb05-7fff-5afd-1af9-08f7deb75c0d"> </span></p> <p dir="ltr"><span>Infrastructure-as-a-Service (IaaS) offerings or cloud providers have become a preferred platform to provide the computational and storage resources needed for many online services. There is not a single cloud&mdash;there are many public clouds, and even more private clouds run by individual organizations. For users, it would be convenient if these various clouds could be combined for improved reliability, performance, or cost effectiveness compared to a single cloud offering. The concept of interconnecting clouds into a uniform resource goes under many names: Inter-Cloud, Multicloud, Cross-Cloud, Hybrid Cloud, Federated Cloud, Cloud Fusion, and so on (see &ldquo;Inter-Cloud Architectures and Application Brokering: Taxonomy and Survey&rdquo; by Nikolay Grozev for an excellent survey). &nbsp;With few exceptions, there were no easy ways to connect multiple clouds for a single task. Nor could multiple tasks be load-balanced across clouds. The problem was that interconnecting clouds was fraught with difficulties: There are few incentives for cloud providers to cooperate or even to agree on a standard interface. Vendor lock-in was rampant among public cloud providers, with different clouds offering different interfaces for the same types of resources as well as offering competing services. Different clouds are often heterogeneous: they may run different virtual-machine hypervisors with incompatible virtual-machine images, different hardware with slightly different instruction sets, different storage interfaces, and so on. There have been calls for standardization of cloud interfaces, but getting all clouds to agree on a particular hardware and software platform would economically be a nonstarter and could ossify cloud offerings.</span></p> <br /> <p dir="ltr"><span>Our research on the Supercloud at Cornell University addresses the problem described above. &nbsp;The Supercloud can span multiple availability zones of the same provider as well as availability zones of multiple cloud providers and private clusters. &nbsp;Similar to today&rsquo;s clouds, Supercloud users see a collection of computing resources. Unlike today&rsquo;s clouds, these resources can exist anywhere, can be cloned, mirrored, combined, constantly moved, without either the user or provider aware of each other&rsquo;s identity. A Supercloud can be considered as a complete infrastructure Cloud Abstraction Layer (CAL) that sits between the cloud provider and user. A Supercloud gives its users the illusion of their own homogenized private cloud. Under the hood, the Supercloud can include different hypervisors, hardware architectures, storage subsystems, network fabrics, etc. &nbsp;</span></p> <br /> <p dir="ltr"><span>We have built the Supercloud that is an instance of a prototype of the CAL. &nbsp;To accomplish this, there are two layers of hardware virtualization. The bottom layer is the infrastructure managed by an IaaS cloud provider such as Amazon Elastic Compute Cloud (EC2), Microsoft Azure, Google Compute Engine, etc. or managed privately. It provides VMs, cloud storage, and networking. Another layer of virtualization on top of this is the cloud abstraction layer, the IaaS infrastructure managed by the Supercloud. It leverages resources from the cloud provider and provides a single uniform virtual-cloud interface. Importantly, the Supercloud is completely controllable by users. We currently employ OpenStack to manage the Supercloud&rsquo;s virtual resources.</span></p> <br /> <p dir="ltr"><span>Our contributions to computer systems are in various dimensions: We developed the first Hybrid Cloud that spans heterogeneous clouds, often under various administrative domains, and show how this can be done efficiently. We developed and demonstrated a wealth of use cases for application-level migration as a first-class primitive. &nbsp;(Other clouds implement VM migration but do not expose it to applications). We developed novel scheduling and placement algorithms for heterogeneous clouds. We were among the first to apply Software-Defined Networking (SDN) technology spanning multiple network domains. We developed the first geo-distributed storage system specialized for VM images. We developed the first exokernel-based container architecture that supports secure isolation of cloud-native containers without sacrificing compatibility or performance. We developed a lightweight runtime that determines the performance and allocated capacity of shared caches on multi-tenant public clouds. &nbsp;</span></p> <br /> <p dir="ltr"><span>To summarize, we have demonstrated that interconnecting clouds can be achieved without imposing limiting low-level standards on cloud providers. Instead, we can standardize on a cloud abstraction interface that can be layered between low-level virtualized resources and the application services that use them, i.e. the Supercloud, with benefits to be gained both by cloud providers and users alike.</span><span><br /><br /></span></p> <span>The code for the Supercloud is available at </span><a href="http://supercloud.cs.cornell.edu"><span>http://supercloud.cs.cornell.edu</span></a><span> .</span> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/11/2018<br>      Modified by: Hakim&nbsp;Weatherspoon</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Infrastructure-as-a-Service (IaaS) offerings or cloud providers have become a preferred platform to provide the computational and storage resources needed for many online services. There is not a single cloud&mdash;there are many public clouds, and even more private clouds run by individual organizations. For users, it would be convenient if these various clouds could be combined for improved reliability, performance, or cost effectiveness compared to a single cloud offering. The concept of interconnecting clouds into a uniform resource goes under many names: Inter-Cloud, Multicloud, Cross-Cloud, Hybrid Cloud, Federated Cloud, Cloud Fusion, and so on (see "Inter-Cloud Architectures and Application Brokering: Taxonomy and Survey" by Nikolay Grozev for an excellent survey).  With few exceptions, there were no easy ways to connect multiple clouds for a single task. Nor could multiple tasks be load-balanced across clouds. The problem was that interconnecting clouds was fraught with difficulties: There are few incentives for cloud providers to cooperate or even to agree on a standard interface. Vendor lock-in was rampant among public cloud providers, with different clouds offering different interfaces for the same types of resources as well as offering competing services. Different clouds are often heterogeneous: they may run different virtual-machine hypervisors with incompatible virtual-machine images, different hardware with slightly different instruction sets, different storage interfaces, and so on. There have been calls for standardization of cloud interfaces, but getting all clouds to agree on a particular hardware and software platform would economically be a nonstarter and could ossify cloud offerings.   Our research on the Supercloud at Cornell University addresses the problem described above.  The Supercloud can span multiple availability zones of the same provider as well as availability zones of multiple cloud providers and private clusters.  Similar to today?s clouds, Supercloud users see a collection of computing resources. Unlike today?s clouds, these resources can exist anywhere, can be cloned, mirrored, combined, constantly moved, without either the user or provider aware of each other?s identity. A Supercloud can be considered as a complete infrastructure Cloud Abstraction Layer (CAL) that sits between the cloud provider and user. A Supercloud gives its users the illusion of their own homogenized private cloud. Under the hood, the Supercloud can include different hypervisors, hardware architectures, storage subsystems, network fabrics, etc.     We have built the Supercloud that is an instance of a prototype of the CAL.  To accomplish this, there are two layers of hardware virtualization. The bottom layer is the infrastructure managed by an IaaS cloud provider such as Amazon Elastic Compute Cloud (EC2), Microsoft Azure, Google Compute Engine, etc. or managed privately. It provides VMs, cloud storage, and networking. Another layer of virtualization on top of this is the cloud abstraction layer, the IaaS infrastructure managed by the Supercloud. It leverages resources from the cloud provider and provides a single uniform virtual-cloud interface. Importantly, the Supercloud is completely controllable by users. We currently employ OpenStack to manage the Supercloud?s virtual resources.   Our contributions to computer systems are in various dimensions: We developed the first Hybrid Cloud that spans heterogeneous clouds, often under various administrative domains, and show how this can be done efficiently. We developed and demonstrated a wealth of use cases for application-level migration as a first-class primitive.  (Other clouds implement VM migration but do not expose it to applications). We developed novel scheduling and placement algorithms for heterogeneous clouds. We were among the first to apply Software-Defined Networking (SDN) technology spanning multiple network domains. We developed the first geo-distributed storage system specialized for VM images. We developed the first exokernel-based container architecture that supports secure isolation of cloud-native containers without sacrificing compatibility or performance. We developed a lightweight runtime that determines the performance and allocated capacity of shared caches on multi-tenant public clouds.     To summarize, we have demonstrated that interconnecting clouds can be achieved without imposing limiting low-level standards on cloud providers. Instead, we can standardize on a cloud abstraction interface that can be layered between low-level virtualized resources and the application services that use them, i.e. the Supercloud, with benefits to be gained both by cloud providers and users alike.   The code for the Supercloud is available at http://supercloud.cs.cornell.edu .             Last Modified: 12/11/2018       Submitted by: Hakim Weatherspoon]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

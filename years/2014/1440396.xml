<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSE: Dynamic Adaptive Runtime Systems for Advanced Multipole Method-based Science Achievement</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2014</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>498366.00</AwardTotalIntnAmount>
<AwardAmount>522676</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Multipole methods, including the fast multipole method and the Barnes-Hut algorithm, contribute to a broad range of end-user science applications extending from molecular dynamics to galaxy formation. Multipole methods are widely applied to N-body like problems where the individual interactions of a large number of distant objects can be treated as a single interaction under the appropriate conditions.  This simplification eliminates the need for computing individual pairwise interactions and results in a drastic speed-up of computation.  However, conventional parallel multipole methods are facing serious challenges to remain competitive as computational resources approach Exascale. Many applications employing multipole methods describe very dynamic physical processes, both in their time dependence and in their range of relevant spatial scales, while conventional implementations of multipole methods are essentially static in nature leading to computational inefficiencies. &lt;br/&gt;This project provides a fine-grained data-driven approach for multipole methods in order to address the limitations of conventional practices and improve scalability and efficiency. The software library employs dynamic adaptive execution methods with multipole-specific strategies for fault tolerance and exception handling while simplifying the implementation of the fast multipole method and the Barnes-Hut algorithm for end-users.  The project software library immediately impacts science applications based on multipole methods by improving application scalability and efficiency and providing fault tolerance, a global address space, and an Exascale-ready execution model which integrates the entire system stack.   The software library provides a portable and easy-to-use interface that allows scientists to work more efficiently and take advantage of high performance computing resources more effectively.  The software library also serves to inform the evolution and development of other languages and programming models aiming to improve performance by shifting to message-driven techniques.</AbstractNarration>
<MinAmdLetterDate>08/21/2014</MinAmdLetterDate>
<MaxAmdLetterDate>06/16/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1440396</AwardID>
<Investigator>
<FirstName>Thomas</FirstName>
<LastName>Sterling</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Thomas Sterling</PI_FULL_NAME>
<EmailAddress>tron@indiana.edu</EmailAddress>
<PI_PHON>8128564597</PI_PHON>
<NSF_ID>000119080</NSF_ID>
<StartDate>08/21/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Anderson</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Matthew Anderson</PI_FULL_NAME>
<EmailAddress>andersmw@indiana.edu</EmailAddress>
<PI_PHON>8128556512</PI_PHON>
<NSF_ID>000424249</NSF_ID>
<StartDate>08/21/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Bo</FirstName>
<LastName>Zhang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Bo Zhang</PI_FULL_NAME>
<EmailAddress>zhang416@indiana.edu</EmailAddress>
<PI_PHON>8128550516</PI_PHON>
<NSF_ID>000668667</NSF_ID>
<StartDate>08/21/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jackson</FirstName>
<LastName>DeBuhr</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jackson DeBuhr</PI_FULL_NAME>
<EmailAddress>jdebuhr@indiana.edu</EmailAddress>
<PI_PHON>8128550516</PI_PHON>
<NSF_ID>000668668</NSF_ID>
<StartDate>08/21/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Indiana University</Name>
<CityName>Bloomington</CityName>
<ZipCode>474013654</ZipCode>
<PhoneNumber>3172783473</PhoneNumber>
<StreetAddress>509 E 3RD ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>006046700</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF INDIANA UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>006046700</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Center for Research in Extreme Scale Technologies]]></Name>
<CityName>Bloomington</CityName>
<StateCode>IN</StateCode>
<ZipCode>474082671</ZipCode>
<StreetAddress><![CDATA[2719 E. Tenth Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8005</Code>
<Text>Scientific Software Elements</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~498366</FUND_OBLG>
<FUND_OBLG>2015~10000</FUND_OBLG>
<FUND_OBLG>2016~14310</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Hierarchical Multipole Methods (HMMs), such as the Barnes-Hut (BH) method or the Fast Multipole Method (FMM), are a widely used computational technique for computing mutual interactions in complicated settings such as astrophysics, electromagnetic device design and complex biologically relevant molecules. These computations require efficiency and accuracy to continue to produce scientific results in reasonable times. As supercomputers grow ever larger, and ever more complex, and as the problems of interest become larger, existing computing methods are suffering performance degradation. <br /><br />The Dynamic Adaptive Runtime Systems for Advanced Multipole Method-based Science Achievement project produced a software library, the Dynamic Adaptive System for Hierarchical Multipole Methods (DASHMM), that uses advanced runtime computing techniques to improve the scalability and efficiency of this class of problem. DASHMM has achieved remarkable performance in strong-scaling tests, in which the problem size is fixed but is solved using increased amount of resources. <br /><br />DASHMM can be used for a wide variety of applications, and it does so with an easy-to-use and general interface. The DASHMM interface is oblivious to the underlying runtime, meaning that no knowledge of the runtime is required to use DASHMM in either its basic or advanced forms. The basic interface allows users to rapidly apply the built-in methods and kernels in end-science applications such as computing the capacitance of devices, electrostatic interactions, marcomolecules in solution, Brownian dynamics, scattering of radiation, and electromagnetic comptatibility/interferece, etc. The advanced interface allows user to implement variants of the multipole method, new kernels, or distribution policies that guide the placement of the data used in the computation. <br /><br />This project recruited and trained four undergraduate students through the REU supplement support in years one and three. The first two students contributed to the interface and software architecture design and validation of certain mathematical theory and are both pursing advanced degree in the STEM field. The last two students contributed to the extension of the DASHMM library interface to situations where multipole method is used to solve linear systems iteratively and the integration of DASHMM into a biophysics aplication package. <br /><br />This project produced the DASHMM software package, five papers (three published, one accepeted, and one under review), and one US patent.&nbsp; The patent has led to participation in a NSF mini I-Corps cohort and one startup company.&nbsp;</p><br> <p>            Last Modified: 11/02/2017<br>      Modified by: Matthew&nbsp;Anderson</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Hierarchical Multipole Methods (HMMs), such as the Barnes-Hut (BH) method or the Fast Multipole Method (FMM), are a widely used computational technique for computing mutual interactions in complicated settings such as astrophysics, electromagnetic device design and complex biologically relevant molecules. These computations require efficiency and accuracy to continue to produce scientific results in reasonable times. As supercomputers grow ever larger, and ever more complex, and as the problems of interest become larger, existing computing methods are suffering performance degradation.   The Dynamic Adaptive Runtime Systems for Advanced Multipole Method-based Science Achievement project produced a software library, the Dynamic Adaptive System for Hierarchical Multipole Methods (DASHMM), that uses advanced runtime computing techniques to improve the scalability and efficiency of this class of problem. DASHMM has achieved remarkable performance in strong-scaling tests, in which the problem size is fixed but is solved using increased amount of resources.   DASHMM can be used for a wide variety of applications, and it does so with an easy-to-use and general interface. The DASHMM interface is oblivious to the underlying runtime, meaning that no knowledge of the runtime is required to use DASHMM in either its basic or advanced forms. The basic interface allows users to rapidly apply the built-in methods and kernels in end-science applications such as computing the capacitance of devices, electrostatic interactions, marcomolecules in solution, Brownian dynamics, scattering of radiation, and electromagnetic comptatibility/interferece, etc. The advanced interface allows user to implement variants of the multipole method, new kernels, or distribution policies that guide the placement of the data used in the computation.   This project recruited and trained four undergraduate students through the REU supplement support in years one and three. The first two students contributed to the interface and software architecture design and validation of certain mathematical theory and are both pursing advanced degree in the STEM field. The last two students contributed to the extension of the DASHMM library interface to situations where multipole method is used to solve linear systems iteratively and the integration of DASHMM into a biophysics aplication package.   This project produced the DASHMM software package, five papers (three published, one accepeted, and one under review), and one US patent.  The patent has led to participation in a NSF mini I-Corps cohort and one startup company.        Last Modified: 11/02/2017       Submitted by: Matthew Anderson]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

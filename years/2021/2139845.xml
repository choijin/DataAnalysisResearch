<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: CCF: SHF: Scalable Software Verification through Automated Derivation of Domain-Specific Optimization Tactics</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2021</AwardEffectiveDate>
<AwardExpirationDate>08/31/2023</AwardExpirationDate>
<AwardTotalIntnAmount>198944.00</AwardTotalIntnAmount>
<AwardAmount>198944</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The ever-growing reliance of society on software-intensive systems drives a continued demand for increased software dependability, making it more important than ever. Formal-verification techniques provide the highest degree of software assurance, with their strengths residing in their automated yet rigorous analysis capabilities. Performing such formal analyses is, however, an expensive endeavor, facing scalability issues. This challenge is exacerbated when considering the evolving nature of complex systems. The high cost of formal verification is thus prohibitive for rapidly evolving large-scale systems, despite the benefits it can offer for reliability, safety, and security. This research seeks to develop techniques for automating the development of optimizations for software-verification techniques with the aim that each system of interest can have verification tailored to its specific characteristics, thereby significantly reducing the verification cost. This, in turn, allows software engineers to continuously analyze evolving systems online, rather than the current practice of performing expensive, long-running formal analysis once, if at all, during the entire development process. In addition to graduate students, this project will attempt to involve undergraduate, female, and underrepresented minority students.&lt;br/&gt;&lt;br/&gt;This research project explores the possibility of driving the automated discovery of domain-specific optimizations for software-verification techniques. Historically, such optimizations have arisen from the insights of a few dozen experts in software verification worldwide. This research is taking a different approach. The project seeks to automatically infer domain-specific, sound optimizations to trim the verification bounds without requiring any prior domain expertise on the part of the analyzer, promising to make software verification significantly more scalable and cost-effective. The intellectual merit of this research is a novel, speculative analysis, underpinned by established, proven model-finding technologies to automatically recognize opportunities for the derivation of sound optimizations, without requiring domain expertise or excessive overhead, thereby significantly diminishing the analysis cost. This research promises to advance the state-of-the-art by rendering bounded formal verification more tractable, thereby expanding the areas that can practically benefit from formal verification techniques.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>08/31/2021</MinAmdLetterDate>
<MaxAmdLetterDate>08/31/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>2139845</AwardID>
<Investigator>
<FirstName>Hamid</FirstName>
<LastName>Bagheri</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Hamid Bagheri</PI_FULL_NAME>
<EmailAddress>bagheri@unl.edu</EmailAddress>
<PI_PHON>4024725087</PI_PHON>
<NSF_ID>000678516</NSF_ID>
<StartDate>08/31/2021</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Nebraska-Lincoln</Name>
<CityName>Lincoln</CityName>
<ZipCode>685031435</ZipCode>
<PhoneNumber>4024723171</PhoneNumber>
<StreetAddress>151 Prem S. Paul Research Center</StreetAddress>
<StreetAddress2><![CDATA[2200 Vine St]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Nebraska</StateName>
<StateCode>NE</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NE01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>555456995</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>BOARD OF REGENTS OF THE UNIVERSITY OF NEBRASKA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>068662618</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Nebraska-Lincoln]]></Name>
<CityName/>
<StateCode>NE</StateCode>
<ZipCode>685031435</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Nebraska</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NE01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0121</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2021~198944</FUND_OBLG>
</Award>
</rootTag>

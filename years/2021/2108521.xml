<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF : Small: Certified Automated Reasoning with BDDs (CARB)</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2021</AwardEffectiveDate>
<AwardExpirationDate>05/31/2024</AwardExpirationDate>
<AwardTotalIntnAmount>499667.00</AwardTotalIntnAmount>
<AwardAmount>499667</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Automated reasoning programs allow computers to apply methods based on mathematical logic to evaluate the correctness and security of hardware and software.  They overcome the limitations of human reasoning with greater capacity, rigor, and reliability.  Unfortunately, like all complex software systems, these programs may contain errors in the core algorithms or their implementations, causing them to produce incorrect results.  This risk can be eliminated by having the program generate a checkable proof: a detailed account of its reasoning process in a formal, logical notation.  This proof can then be checked by a much simpler checking program, quickly detecting any erroneous steps.  This project extends the scope of automated reasoning programs for which checkable proofs can be generated, enabling more advanced forms of analysis to be performed in a trustworthy manner. &lt;br/&gt;&lt;br/&gt;Proof generation has become a common feature of Boolean satisfiability (SAT) solvers, greatly improving their reliability and trustworthiness.  This project aims to improve the ability of other automated reasoning programs to generate checkable proofs of their results.  It extends the proof rules used by existing logical frameworks to enable additional reasoning capabilities.  Formally verified checkers that support these rules are implemented and made available.  In terms of automated reasoning, the project devises new formulations of quantified Boolean formulas (QBF), dependency QBF (DQBF), model counting, and model checking that can generate proofs in existing and new logical frameworks.  Reduced Ordered Binary Decisions Diagrams (BDDs) are used as the underlying mechanism for implementing the reasoning programs.  BDDs have a proven track record for solving the problems of interest, and the reasoning behind many underlying algorithms can readily be expressed in simple logical frameworks.  Preliminary work on proof generation by a BDD-based SAT solver demonstrate that other automated reasoning tasks are amenable to this approach.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>03/29/2021</MinAmdLetterDate>
<MaxAmdLetterDate>05/21/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>2108521</AwardID>
<Investigator>
<FirstName>Randal</FirstName>
<LastName>Bryant</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Randal E Bryant</PI_FULL_NAME>
<EmailAddress>bryant@cs.cmu.edu</EmailAddress>
<PI_PHON>4122688821</PI_PHON>
<NSF_ID>000321686</NSF_ID>
<StartDate>03/29/2021</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Marienus</FirstName>
<LastName>Heule</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Marienus Heule</PI_FULL_NAME>
<EmailAddress>marijn@cmu.edu</EmailAddress>
<PI_PHON>5124262506</PI_PHON>
<NSF_ID>000689986</NSF_ID>
<StartDate>03/29/2021</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie-Mellon University]]></Name>
<CityName/>
<StateCode>PA</StateCode>
<ZipCode>152133815</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8206</Code>
<Text>Formal Methods and Verification</Text>
</ProgramReference>
<Appropriation>
<Code>0121</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2021~499667</FUND_OBLG>
</Award>
</rootTag>

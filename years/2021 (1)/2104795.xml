<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRII: AF: RUI: Markov Chains and Random Sampling on Graphs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2021</AwardEffectiveDate>
<AwardExpirationDate>05/31/2023</AwardExpirationDate>
<AwardTotalIntnAmount>174583.00</AwardTotalIntnAmount>
<AwardAmount>174583</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Peter Brass</SignBlockName>
<PO_EMAI>pbrass@nsf.gov</PO_EMAI>
<PO_PHON>7032922182</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Given a large collection of mathematical objects, how can you find a "typical" element efficiently? The problem of randomly sampling from a large, complex set arises across many areas including polling, estimating statistics of physical systems, and randomized algorithms; studying randomly selected elements can provide insights about likely properties and behaviors. For example, random samples of political districting plans have been used to build baselines for comparison and detect racial and partisan gerrymandering. However, the problem of efficiently finding random elements in complex settings is often a difficult one, and it can be hard to make rigorous guarantees about the processes involved. More mathematical analysis is needed so that there can be confidence in the conclusions produced&lt;br/&gt;&lt;br/&gt;One way to generate random samples is to use a Markov chain: iteratively make random local changes and mathematically bound the mixing time, the number of iterations until the configuration obtained is sufficiently random. Mathematical insight is needed to rigorously understand these Markov chains and their sampling behavior. Another approach is to generate random samples via self-reducibility using approximate counting algorithms. While many approximate counting algorithms come from Markov chains themselves, other approaches include decay of correlations, interpolation, and most recently, the cluster expansion. This project focuses on the following important problems for random sampling on graphs, involving exciting theoretical questions with an eye toward relevant applications: (1) Approximate counting and sampling for spin systems using the cluster expansion; (2) Rigorously analyzing Markov chains used for sampling political-districting plans and other problems with similar structure. This project is strengthening the interdisciplinary connections between the theory of random sampling and other disciplines like statistical physics and political science. The investigator is also working to make this research area more accessible to undergraduate students, through continued mentoring, writing and distributing an undergraduate-level introduction to the theory of Markov chains, and creating and teaching a new elective class related to these topics.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>05/11/2021</MinAmdLetterDate>
<MaxAmdLetterDate>05/11/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>2104795</AwardID>
<Investigator>
<FirstName>Sarah</FirstName>
<LastName>Cannon</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sarah Cannon</PI_FULL_NAME>
<EmailAddress>scannon@cmc.edu</EmailAddress>
<PI_PHON>9096071064</PI_PHON>
<NSF_ID>000810644</NSF_ID>
<StartDate>05/11/2021</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Claremont McKenna College</Name>
<CityName>Claremont</CityName>
<ZipCode>917115929</ZipCode>
<PhoneNumber>9096077085</PhoneNumber>
<StreetAddress>500 E. Ninth St.</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>27</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA27</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009661893</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CLAREMONT MCKENNA COLLEGE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>105540426</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Claremont McKenna College]]></Name>
<CityName>Claremont</CityName>
<StateCode>CA</StateCode>
<ZipCode>917115929</ZipCode>
<StreetAddress><![CDATA[500 E. Ninth St.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>27</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA27</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>8228</Code>
<Text>CISE Resrch Initiatn Initiatve</Text>
</ProgramReference>
<ProgramReference>
<Code>9229</Code>
<Text>RES IN UNDERGRAD INST-RESEARCH</Text>
</ProgramReference>
<Appropriation>
<Code>0121</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Fund>
<Code>01002122DB</Code>
<Name><![CDATA[NSF RESEARCH & RELATED ACTIVIT]]></Name>
<FUND_SYMB_ID>040100</FUND_SYMB_ID>
</Fund>
<FUND_OBLG>2021~174583</FUND_OBLG>
</Award>
</rootTag>

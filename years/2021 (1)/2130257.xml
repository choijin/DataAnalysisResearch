<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CNS Core: Small: Disentangled System Software</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>11/01/2021</AwardEffectiveDate>
<AwardExpirationDate>10/31/2024</AwardExpirationDate>
<AwardTotalIntnAmount>499999.00</AwardTotalIntnAmount>
<AwardAmount>499999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Alexander Jones</SignBlockName>
<PO_EMAI>alejones@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Today's system software are large and vastly complex.  While they are highly modular, their components are often interdependent and tightly coupled.  As a result, system software, especially operating systems (OSes), have become difficult to maintain, evolve, update safely, and run reliably. This is particularly problematic in environments where reliability is necessary, yet hardware redundancy is expensive or impossible. For example, system software updates must be painstakingly applied without downtime or lost execution context in pacemakers and space probes. Even in data centers, where network switches are replicated for reliability, switch software failures and maintenance updates still lead to network outages. The key insight of the project is that state spill between modules is the root cause of entanglement within system software. State spill happens when one module's state undergoes a lasting change as a result of interacting with another module. It is both prevalent and deep in modern system software. By minimizing state spill, this project aims at disentangled system software in which every component can evolve independently, ideally at runtime, without the fear of failures in one component jeopardizing others.  &lt;br/&gt; &lt;br/&gt;Today's cloud services achieve fault tolerance and timely evolution with massive redundancy and abundance in warehouse data centers.  This project will help bring these values to computer systems where redundancy and abundance are a luxury, such as medical implants, embedded systems, and even edge data centers, substantially improving their availability. By elevating these computers to the same level as data centers, this project will encourage more services to be placed outside the cloud, closer to end users, a radical departure from today's cloud-centric paradigm. This departure not only has the potential for better user experiences and novel services but also to democratize computing. The project will also cross-pollinate other important directions in systems software research by motivating new language features and suggest more ways to ensure disentanglement statically, and by allowing incremental specification and verification of large software systems on a module-by-module basis. The project will provide a platform to engage undergraduate students and high-school students in computing research, especially women and underrepresented minorities.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>07/14/2021</MinAmdLetterDate>
<MaxAmdLetterDate>07/14/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>2130257</AwardID>
<Investigator>
<FirstName>Lin</FirstName>
<LastName>Zhong</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Lin Zhong</PI_FULL_NAME>
<EmailAddress>lin.zhong@yale.edu</EmailAddress>
<PI_PHON>2034369450</PI_PHON>
<NSF_ID>000189041</NSF_ID>
<StartDate>07/14/2021</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Yale University</Name>
<CityName>New Haven</CityName>
<ZipCode>065208327</ZipCode>
<PhoneNumber>2037854689</PhoneNumber>
<StreetAddress>Office of Sponsored Projects</StreetAddress>
<StreetAddress2><![CDATA[P.O. Box 208327]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<StateCode>CT</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CT03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>043207562</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>YALE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>043207562</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Yale University]]></Name>
<CityName>New Haven</CityName>
<StateCode>CT</StateCode>
<ZipCode>065118937</ZipCode>
<StreetAddress><![CDATA[51 Prospect St]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CT03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0121</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Fund>
<Code>01002122DB</Code>
<Name><![CDATA[NSF RESEARCH & RELATED ACTIVIT]]></Name>
<FUND_SYMB_ID>040100</FUND_SYMB_ID>
</Fund>
<FUND_OBLG>2021~499999</FUND_OBLG>
</Award>
</rootTag>

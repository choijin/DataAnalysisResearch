<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CT-ER: Augmenting Branch Prediction for Trusted Computing</AwardTitle>
<AwardEffectiveDate>09/01/2006</AwardEffectiveDate>
<AwardExpirationDate>08/31/2009</AwardExpirationDate>
<AwardTotalIntnAmount>200000.00</AwardTotalIntnAmount>
<AwardAmount>200000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>carl landwehr</SignBlockName>
</ProgramOfficer>
<AbstractNarration>CT-ER: Augmenting Branch Prediction for Trusted Computing&lt;br/&gt;Proposal No.: 0627341&lt;br/&gt;PI: Gyungho Lee, University of Illinois at Chicago&lt;br/&gt;Abstract:&lt;br/&gt;Control flow tracking at the machine instruction level is blindfolded without a validity check in the current processor architecture. Whatever the program counter points to the instruction is fetched and executed. Whenever this blindfolded instruction sequencing is not properly addressed at a higher level by system and application software, it becomes a vulnerability that malicious software exploits. To mend this fundamental flaw, this project explores incorporating control flow validation into modern high-performance pipelined processors. A straightforward idea of control flow validation can be collecting possible target addresses per branch to check every branching instance. Modern microprocessors do this checking in some sense already at micro-architecture level in the form of branch prediction. Since illegitimate control transfer in program execution can be made only when the processor's program counter is "forced" to point to "unseen" addresses, control flow altering attacks cause branch mis-predictions in the processor micro-architecture; branch mis-prediction is one of the symptoms of misbehavior in program execution such as binary code tampering and virus infection. This project develops micro-architecture for incorporating control flow validation into the branch prediction unit of modern high-performance pipelined processors. A processor core with secure control flow creates a basis for designing and building more trusted devices and cyber infrastructure. This project will produce a practical hardware support for validating program control flow to provide protection from not-yet-known attacks and exploits, i.e. before the behavior patterns, attack signatures, or vulnerabilities they exploit are analyzed and captured. &lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/25/2006</MinAmdLetterDate>
<MaxAmdLetterDate>08/25/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0627341</AwardID>
<Investigator>
<FirstName>Gyungho</FirstName>
<LastName>Lee</LastName>
<EmailAddress>ghlee@ece.uic.edu</EmailAddress>
<StartDate>08/25/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Chicago</Name>
<CityName>Chicago</CityName>
<ZipCode>606124305</ZipCode>
<PhoneNumber>3129962862</PhoneNumber>
<StreetAddress>809 S. Marshfield Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7371</Code>
<Text>CYBER TRUST</Text>
</ProgramElement>
<ProgramReference>
<Code>7254</Code>
<Text>CYBER SECURITY ACT PROPOSALS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

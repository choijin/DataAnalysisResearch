<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Cuts, Flows, and Network Routing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2006</AwardEffectiveDate>
<AwardExpirationDate>08/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Balasubramanian Kalyanasundaram</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The goal of this project is to study the computational tractability of fundamental network optimization problems such as disjoint paths, congestion minimization, and multicut. For instance, given a network, and a collection of source-destination pairs, how does one route each source to its destination without causing congestion?&lt;br/&gt;What is a smallest set of network links whose failure disconnects each source from its destination? These optimization problems are intimately related to each other via the dual notions of cuts and flows in a network. Taken together, they are among the most widely studied combinatorial optimization problems, and are intrinsic to many applications in computer science. It is no surprise that the study of these problems is connected to major developments in algorithms design, hardness of approximation, and graph theory.&lt;br/&gt;&lt;br/&gt;The network optimization problems above are NP-hard even in simple settings. This project aims to advance understanding of the polynomial-time approximability of these fundamental optimization problems as well as gain new insights into relationships among multicommodity flows, cuts, and integral routings. This research will focus on new algorithmic techniques as well as new hardness and integrality gap constructions that give insights into the combinatorial structure of these problems. Although these problems are foundational in nature, they are directly related to applications in network design and routing, and resource allocation. Results obtained from this research will be integrated in an advanced course on combinatorial optimization. The project will also help support and train a graduate student, as well as research projects for undergraduates.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/08/2006</MinAmdLetterDate>
<MaxAmdLetterDate>07/13/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0635084</AwardID>
<Investigator>
<FirstName>Sanjeev</FirstName>
<LastName>Khanna</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sanjeev Khanna</PI_FULL_NAME>
<EmailAddress>sanjeev@cis.upenn.edu</EmailAddress>
<PI_PHON>2158980375</PI_PHON>
<NSF_ID>000308324</NSF_ID>
<StartDate>09/08/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pennsylvania</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191046205</ZipCode>
<PhoneNumber>2158987293</PhoneNumber>
<StreetAddress>Research Services</StreetAddress>
<StreetAddress2><![CDATA[3451 Walnut St, 5th Flr Franklin]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042250712</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042250712</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pennsylvania]]></Name>
<CityName>Philadelphia</CityName>
<StateCode>PA</StateCode>
<ZipCode>191046205</ZipCode>
<StreetAddress><![CDATA[Research Services]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7351</Code>
<Text>THEORETICAL FOUNDATIONS (TF)</Text>
</ProgramElement>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0106</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2006~250000</FUND_OBLG>
<FUND_OBLG>2010~50000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;</p> <div> <div class="kix-paragraphrenderer"> <div class="kix-paragraphrenderer"> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>This&nbsp;project&nbsp;studied&nbsp;the&nbsp;computational&nbsp;tractability&nbsp;of&nbsp;several&nbsp;fundamental</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>optimization&nbsp;problems&nbsp;on&nbsp;graphs.&nbsp;Some&nbsp;examples&nbsp;of&nbsp;problems&nbsp;considered&nbsp;in</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>this&nbsp;project&nbsp;include&nbsp;the&nbsp;disjoint&nbsp;paths&nbsp;problem,&nbsp;the&nbsp;multicut&nbsp;problem,</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>survivable&nbsp;network&nbsp;design,&nbsp;and&nbsp;the&nbsp;bipartite&nbsp;matching&nbsp;problem.&nbsp;For</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>instance,&nbsp;given&nbsp;a&nbsp;network,&nbsp;and&nbsp;a&nbsp;collection&nbsp;of&nbsp;source-destination&nbsp;pairs,&nbsp;how</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>does&nbsp;one&nbsp;route&nbsp;each&nbsp;source&nbsp;to&nbsp;its&nbsp;destination&nbsp;without&nbsp;causing&nbsp;congestion?</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>What&nbsp;is&nbsp;a&nbsp;smallest&nbsp;set&nbsp;of&nbsp;network&nbsp;links&nbsp;whose&nbsp;failure&nbsp;disconnects&nbsp;each</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>source&nbsp;from&nbsp;its&nbsp;destination?&nbsp;How&nbsp;fast&nbsp;can&nbsp;one&nbsp;compute&nbsp;an&nbsp;assignment&nbsp;of</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>jobs&nbsp;to&nbsp;machines&nbsp;so&nbsp;that&nbsp;each&nbsp;job&nbsp;is&nbsp;assigned&nbsp;to&nbsp;exactly&nbsp;one&nbsp;machine&nbsp;and</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>each&nbsp;machine&nbsp;is&nbsp;assigned&nbsp;exactly&nbsp;one&nbsp;job?&nbsp;These&nbsp;optimization&nbsp;problems&nbsp;are</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>closely&nbsp;related&nbsp;to&nbsp;each&nbsp;other&nbsp;and&nbsp;are&nbsp;intrinsic&nbsp;to&nbsp;many&nbsp;applications&nbsp;in</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>computer&nbsp;science.</span></span></div> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span><br /></span></span></div> </div> </div> <div class="kix-paragraphrenderer"> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>The&nbsp;research&nbsp;supported&nbsp;by&nbsp;this&nbsp;project&nbsp;has&nbsp;led&nbsp;to&nbsp;efficient&nbsp;new&nbsp;algorithms</span></span></div> </div> <div class="kix-lineview"> <div class="kix-lineview-content"><span class="goog-inline-block kix-lineview-text-block"><span>for&nbsp;some&nbsp;of&nbsp;the&nbsp;problems&nbsp;described&nbsp;above,&nbsp;while&nbsp;for&nbsp;some&nbsp;o...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[       This project studied the computational tractability of several fundamental   optimization problems on graphs. Some examples of problems considered in   this project include the disjoint paths problem, the multicut problem,   survivable network design, and the bipartite matching problem. For   instance, given a network, and a collection of source-destination pairs, how   does one route each source to its destination without causing congestion?   What is a smallest set of network links whose failure disconnects each   source from its destination? How fast can one compute an assignment of   jobs to machines so that each job is assigned to exactly one machine and   each machine is assigned exactly one job? These optimization problems are   closely related to each other and are intrinsic to many applications in   computer science.       The research supported by this project has led to efficient new algorithms   for some of the problems described above, while for some others, it has   established formal barriers to efficiently obtaining near-optimal solutions.   These results have been published in leading peer-reviewed conferences   and journals in theoretical computer science. This project has also helped   support mentoring and training of an undergraduate student, and three   graduate students whose PhD dissertation research is connected to topics   considered in this project. Finally, in course of this project, the PI gave   several lectures to high-school students on algorithmic thinking and its   applications in computer science and related disciplines.              Last Modified: 11/30/2011       Submitted by: Sanjeev Khanna]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Information, Optimization and Approximation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/15/2007</AwardEffectiveDate>
<AwardExpirationDate>02/28/2013</AwardExpirationDate>
<AwardTotalIntnAmount>400002.00</AwardTotalIntnAmount>
<AwardAmount>400002</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Balasubramanian Kalyanasundaram</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>As the capability of data acquisition has increased over the last few years, the challenges of computing with these large datasets has increased as well.  In many scenarios investigating the entire data repeatedly to answer questions is becoming an infeasible strategy. The emerging trend in these contexts is to summarize the information content, perhaps with some loss, such that reasonably accurate answers can still be provided but the algorithm will only inspect the summarized representation. This approach has already gained currency in database query optimizers, network monitoring, and sensor networks.  For the above two phase strategy to work the summarization should be geared towards the end use of the information. However, in many scenarios the two phases are being investigated separately and their development is not being guided by end use but by mathematical and algorithmic tractability. As a consequence the solutions obtained are far from optimal. The goal of this project is to investigate the finer mathematical structure of several of these problems and provide provably near optimal solutions.&lt;br/&gt;&lt;br/&gt;Intellectually this project seeks to develop algorithmic understanding of several representation problems that arise from the interaction of approximation theory and information theory. The existing analytical treatment of these problems, typically, does not consider computational efficiency which is necessary to cope with the ever increasing problem sizes. The focus this research is to use techniques from combinatorial optimization as well as recent developments in sampling, embeddings, and approximate data structures to develop efficient approximation algorithms for these problems. These representation problems are ubiquitous in a broad range of areas such as signal processing, networks, databases. Efficient solutions to these problems will play a significant role in monitoring, reconnaissance and network forensics and is likely to impact practice.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>03/13/2007</MinAmdLetterDate>
<MaxAmdLetterDate>03/01/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0644119</AwardID>
<Investigator>
<FirstName>Sudipto</FirstName>
<LastName>Guha</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sudipto Guha</PI_FULL_NAME>
<EmailAddress>sudipto@cis.upenn.edu</EmailAddress>
<PI_PHON>2158987293</PI_PHON>
<NSF_ID>000230002</NSF_ID>
<StartDate>03/13/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pennsylvania</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191046205</ZipCode>
<PhoneNumber>2158987293</PhoneNumber>
<StreetAddress>Research Services</StreetAddress>
<StreetAddress2><![CDATA[3451 Walnut St, 5th Flr Franklin]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042250712</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042250712</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pennsylvania]]></Name>
<CityName>Philadelphia</CityName>
<StateCode>PA</StateCode>
<ZipCode>191046205</ZipCode>
<StreetAddress><![CDATA[Research Services]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~75932</FUND_OBLG>
<FUND_OBLG>2008~79214</FUND_OBLG>
<FUND_OBLG>2009~168713</FUND_OBLG>
<FUND_OBLG>2011~76143</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In this project we have primarily focused on understanding the computational model of data streams and developing new algorithmic techniques for such. The data streams model considers random access to data as a computational resource and seeks to develop algorithms that use as little space as possible and only use sequential passes over data (again as few as possible). This model serves as an abstraction for a variety of computational problems in resource constrained settings. This model is particularly useful in scenarios where information about an object is presented incrementally. &nbsp;This project made fundamental progress towards four major questions in this model. The questions widen in scope progressively, starting from basic understanding of the model towards more abstract questions.</p> <p>First, how does the order of arrival of data impact our computation? Can we provably demonstrate that computation over adversarial arrival is different from benign random order, for natural problems of interest in the context of small space algorithms? &nbsp;Surprisingly, it turns out that the cost of adversarial ordering, measured in number of passes over data, can be exponentially larger than the cost of a benign random order for fairly natural problems.</p> <p>Second, if the object being specified incrementally is a vector or a signal, is it possible to measure the similarity between two objects based on small signatures of the signal computed in a distributed setting? It turns out that only the commonplace metric distances can be computed in a distributed fashion, and any involved measure of similarity based on information theoretic distances is hard to compute. Surprisingly the situation changes in a centralized setting or with small amounts of interaction.</p> <p>Third, can we compute over large graphs in small space when the graph is specified as a sequence of insertion and deletion of edges? Graphs are, and will likely continue to be, one of the most used abstractions in representing relationships between objects. What are the basic problems that should be solved so that we can solve a large number of problems by reducing them to these basic primitives? We initiate the study of this natural subfield of algorithms and study connectivity, graph distances, cut and spectral sparsifcations, and a few applications of these basic problems.</p> <p>Finally, can we modify widely used algorithmic approaches, for example iterative algorithms for approximately solving linear programs, to apply in the streaming model? A positive answer to this question would immediately allow us to reduce the space requirement of these types of algorithms. We show that linear programs for several matching and clustering problems are amenable to this approach. Furthermore we show that the use of streaming algorithms as an abstraction allows us to solve specific problems more efficiently than existing results in the unrestricted model. The space constraint of streaming algorithms forces us to focus on the bare information needs of an algorithm.</p> <p>Research supported by this project shows commonalities between streaming and decision theoretic algorithms. Decision theoretic algorithms are geared towards exploration-exploitation tradeoffs in environments where information is dynamic and only partially observable. Therefore these algorithms typically only acquire modest amounts of information in a single step and are incremental by design. This project has supported fundamental progress in the development of optimization algorithms for decision theoretic problems, especially in the area of sequential design of experiments and the area of restless bandit problems. Several of these ideas, such as the notions of adaptivity and Lagrangian formulations, have led to new results in the streaming setting.</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/10/2013<br>      Modified by: Sudipto&nbsp;...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In this project we have primarily focused on understanding the computational model of data streams and developing new algorithmic techniques for such. The data streams model considers random access to data as a computational resource and seeks to develop algorithms that use as little space as possible and only use sequential passes over data (again as few as possible). This model serves as an abstraction for a variety of computational problems in resource constrained settings. This model is particularly useful in scenarios where information about an object is presented incrementally.  This project made fundamental progress towards four major questions in this model. The questions widen in scope progressively, starting from basic understanding of the model towards more abstract questions.  First, how does the order of arrival of data impact our computation? Can we provably demonstrate that computation over adversarial arrival is different from benign random order, for natural problems of interest in the context of small space algorithms?  Surprisingly, it turns out that the cost of adversarial ordering, measured in number of passes over data, can be exponentially larger than the cost of a benign random order for fairly natural problems.  Second, if the object being specified incrementally is a vector or a signal, is it possible to measure the similarity between two objects based on small signatures of the signal computed in a distributed setting? It turns out that only the commonplace metric distances can be computed in a distributed fashion, and any involved measure of similarity based on information theoretic distances is hard to compute. Surprisingly the situation changes in a centralized setting or with small amounts of interaction.  Third, can we compute over large graphs in small space when the graph is specified as a sequence of insertion and deletion of edges? Graphs are, and will likely continue to be, one of the most used abstractions in representing relationships between objects. What are the basic problems that should be solved so that we can solve a large number of problems by reducing them to these basic primitives? We initiate the study of this natural subfield of algorithms and study connectivity, graph distances, cut and spectral sparsifcations, and a few applications of these basic problems.  Finally, can we modify widely used algorithmic approaches, for example iterative algorithms for approximately solving linear programs, to apply in the streaming model? A positive answer to this question would immediately allow us to reduce the space requirement of these types of algorithms. We show that linear programs for several matching and clustering problems are amenable to this approach. Furthermore we show that the use of streaming algorithms as an abstraction allows us to solve specific problems more efficiently than existing results in the unrestricted model. The space constraint of streaming algorithms forces us to focus on the bare information needs of an algorithm.  Research supported by this project shows commonalities between streaming and decision theoretic algorithms. Decision theoretic algorithms are geared towards exploration-exploitation tradeoffs in environments where information is dynamic and only partially observable. Therefore these algorithms typically only acquire modest amounts of information in a single step and are incremental by design. This project has supported fundamental progress in the development of optimization algorithms for decision theoretic problems, especially in the area of sequential design of experiments and the area of restless bandit problems. Several of these ideas, such as the notions of adaptivity and Lagrangian formulations, have led to new results in the streaming setting.          Last Modified: 06/10/2013       Submitted by: Sudipto Guha]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

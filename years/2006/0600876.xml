<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Submodular Percolation:  A Proposal for Research in Combinatorics</AwardTitle>
<AwardEffectiveDate>07/01/2006</AwardEffectiveDate>
<AwardExpirationDate>12/31/2009</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>179997</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040200</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tomek Bartoszynski</SignBlockName>
</ProgramOfficer>
<AbstractNarration>The proposer seeks to explore a combinatorial thread which involves algorithms, optimization and statistical physics; and in particular, connects process scheduling, submodular systems, and a form of percolation.  The problem of scheduling two real sequences so as to minimize their maximum pairwise sum leads to a preorder on sequences, called the ``worm order.''  Remarkably, for any submodular function on a finite distributive lattice, there is a maximal chain whose function values are minimum in the worm order relative to all paths from 0 to 1 in the lattice.  One consequence is explicit representation of the theta function for a form of coordinate percolation, in which random reals are assigned to axis points on the plane grid, and grid points inherit the sum of the two reals assigned to their coordinates.  Points whose value exceeds some bound are deleted, and the theta function measures the probability that one can walk to infinity on what remains of the grid.&lt;br/&gt;&lt;br/&gt;The proposed line of research aims to better understand percolation, originally a model for physical processes such as water seeping through a porous material.  However, a variety of additional applications arise when a complex process must be scheduled, and the issue is whether backward steps are needed. For example, if the components of a computer system must be upgraded, is it possible that a temporary downgrade will be needed at some point to keep things running smoothly?  If a line of searchers are sweeping a forest in search of a lost child, can they do so without covering any area more than once?  The proposed work will identify conditions under which one can guarantee that, if the process can be accomplished at all, then it can be done without retreating.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>04/13/2006</MinAmdLetterDate>
<MaxAmdLetterDate>09/13/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0600876</AwardID>
<Investigator>
<FirstName>Peter</FirstName>
<LastName>Winkler</LastName>
<EmailAddress>peter.winkler@dartmouth.edu</EmailAddress>
<StartDate>04/13/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Dartmouth College</Name>
<CityName>HANOVER</CityName>
<ZipCode>037551421</ZipCode>
<PhoneNumber>6036463007</PhoneNumber>
<StreetAddress>OFFICE OF SPONSORED PROJECTS</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Hampshire</StateName>
<StateCode>NH</StateCode>
</Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>1264</Code>
<Text>ALGEBRA,NUMBER THEORY,AND COM</Text>
</ProgramElement>
<ProgramReference>
<Code>0000</Code>
<Text>UNASSIGNED</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>OTHR</Code>
<Text>OTHER RESEARCH OR EDUCATION</Text>
</ProgramReference>
</Award>
</rootTag>

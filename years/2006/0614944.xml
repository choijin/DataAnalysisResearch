<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR-PDOS : Safe at Any Speed: Safe and Fast Distributed Applications</AwardTitle>
<AwardEffectiveDate>08/01/2006</AwardEffectiveDate>
<AwardExpirationDate>07/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>381617.00</AwardTotalIntnAmount>
<AwardAmount>381617</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This project consists of techniques and tools for developing fast,&lt;br/&gt;correct distributed applications.  Two aspects are novel.  First,&lt;br/&gt;application modules developed with these techniques are statically&lt;br/&gt;analyzed for potential conflicts when executed in parallel.  Modules&lt;br/&gt;that may conflict are serialized to avoid errors.  Second,&lt;br/&gt;applications are transparently monitored at run-time to show where&lt;br/&gt;conservative serialization has unduly slowed the application.&lt;br/&gt;&lt;br/&gt;The traditional approach to building concurrent systems is to write&lt;br/&gt;the serial version of a module and then consider how concurrent&lt;br/&gt;executions might cause errors. Each potential problem must be&lt;br/&gt;synchronized appropriately before the application may be executed&lt;br/&gt;safely on concurrent requests.  This project analyzes code to&lt;br/&gt;conservatively preclude dangerous interactions and run it safely in a&lt;br/&gt;concurrent environment. The resulting safe application can be made&lt;br/&gt;faster using the same techniques that developers use today to ensure&lt;br/&gt;safety.  For example, locks can be employed to make two segments of&lt;br/&gt;code safe for concurrent execution.  Although static analysis allows&lt;br/&gt;developers to learn where modules may conflict, the second piece of&lt;br/&gt;this project, transparent monitoring of concurrent applications, helps&lt;br/&gt;developers focus their attention on areas of contention that occur in&lt;br/&gt;practice.&lt;br/&gt;&lt;br/&gt;This project's techniques will allow large, concurrent applications to&lt;br/&gt;be developed without the bugs normally introduced by parallel&lt;br/&gt;computation.  As more of the software we use runs on central sites,&lt;br/&gt;multiplexed for thousands of users, these concerns are growing.  Our&lt;br/&gt;techniques will be disseminated as papers at systems and languages&lt;br/&gt;conferences, and as software artifacts that demonstrate their utility.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/15/2006</MinAmdLetterDate>
<MaxAmdLetterDate>06/15/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0614944</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Jannotti</LastName>
<EmailAddress>jj@cs.brown.edu</EmailAddress>
<StartDate>06/15/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Brown University</Name>
<CityName>Providence</CityName>
<ZipCode>029129002</ZipCode>
<PhoneNumber>4018632777</PhoneNumber>
<StreetAddress>BOX 1929</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<StateCode>RI</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

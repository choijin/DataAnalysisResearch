<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SoD-TEAM: Programming by Sketching</AwardTitle>
<AwardEffectiveDate>10/01/2006</AwardEffectiveDate>
<AwardExpirationDate>09/30/2009</AwardExpirationDate>
<AwardTotalIntnAmount>200000.00</AwardTotalIntnAmount>
<AwardAmount>200000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>0613997&lt;br/&gt;Rastislav Bodik&lt;br/&gt;U of Cal - Berkeley&lt;br/&gt;&lt;br/&gt;TITLE Programming by Sketching&lt;br/&gt;&lt;br/&gt;Software is designed and implemented in a layered way: requirements are refined into designs, which are in turn implemented with low-level code.&lt;br/&gt;The implementation gap is responsible for the lack of a formal correctness connection between the layers: functionality is typically not formally specified and implementations are produced by hand rather than generated. &lt;br/&gt;&lt;br/&gt;This project proposes to bridge the implementation gap by making it easier both to write specifications and to implement the low-level code.  To make the challenging problem manageable, the project focuses on the domain of scientific computing.  The chief technical approach is sketching, a new software synthesis approach where the programmer develops a partial implementation --- a sketch --- and a separate specification of the desired functionality.  The synthesizer then completes the sketch to behave like the&lt;br/&gt;specification.   &lt;br/&gt;&lt;br/&gt;This exploratory project will (a) investigate how to extend the applicability of a SAT-based synthesizer to increasingly larger programs; b) develop techniques for synthesizing programs that are currently beyond the power of the SAT synthesizer; and (c) develop a robust sketching synthesizer for a class of scientific programs.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/26/2006</MinAmdLetterDate>
<MaxAmdLetterDate>09/26/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0613997</AwardID>
<Investigator>
<FirstName>Rastislav</FirstName>
<LastName>Bodik</LastName>
<EmailAddress>bodik@uw.edu</EmailAddress>
<StartDate>09/26/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Sanjit</FirstName>
<LastName>Seshia</LastName>
<EmailAddress>sseshia@eecs.berkeley.edu</EmailAddress>
<StartDate>09/26/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Berkeley</Name>
<CityName>BERKELEY</CityName>
<ZipCode>947101749</ZipCode>
<PhoneNumber>5106433891</PhoneNumber>
<StreetAddress>Sponsored Projects Office</StreetAddress>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7372</Code>
<Text>ITR-SCIENCE OF DESIGN</Text>
</ProgramElement>
<ProgramReference>
<Code>7372</Code>
<Text>ITR-SCIENCE OF DESIGN</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:Synthesis of Search Procedures for Constraint Programs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/01/2007</AwardEffectiveDate>
<AwardExpirationDate>12/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>525000.00</AwardTotalIntnAmount>
<AwardAmount>525000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Todd Leen</SignBlockName>
<PO_EMAI>tleen@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;Proposal 0642906&lt;br/&gt;"CAREER: Synthesis of Search Procedures for Constraint Programs"&lt;br/&gt;PI: Laurent D. Michel&lt;br/&gt;University of Connecticut&lt;br/&gt;&lt;br/&gt;Abstract&lt;br/&gt;&lt;br/&gt;This research aims at synthesizing constraint programs (CP) from high-level constraint programming models. Constraint programming is a method for solving complex optimization applications, which are ubiquitous in our society, are critical to many industries, and affect almost every aspect of our daily lives. However, current constraint programming methodologies require significant expertise to design and program search procedures, and consequently, are not yet widely used by optimization modelers. This is in contrast with modeling languages for mathematical programming, which are now highly automated.&lt;br/&gt;&lt;br/&gt;This project investigates the automatic synthesis of constraint programs from high-level models. Its approach exploits the ability of constraint programs to express combinatorial structures in individual constraints to derive key properties like symmetries or dominance for entire models. From these properties, it can reformulate and synthesize search procedures adapted to the underlying solver technology, such as constraint programming, local search, integer programming, or even hybrids. To educate the next generation of engineers, the PI is developing material targeting high school math and science teachers and will disseminate these efforts via the DaVinci initiative at the University of Connecticut. The Broader Impacts of this project include the development of a new generation of modeling languages and systems based on recent advances in programming languages, compilers and artificial intelligence; these will be able to serve a wider audience of optimization modelers.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>12/22/2006</MinAmdLetterDate>
<MaxAmdLetterDate>01/19/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0642906</AwardID>
<Investigator>
<FirstName>Laurent</FirstName>
<LastName>Michel</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Laurent D Michel</PI_FULL_NAME>
<EmailAddress>ldm@engr.uconn.edu</EmailAddress>
<PI_PHON>8604862584</PI_PHON>
<NSF_ID>000111025</NSF_ID>
<StartDate>12/22/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Connecticut</Name>
<CityName>Storrs</CityName>
<ZipCode>062691133</ZipCode>
<PhoneNumber>8604863622</PhoneNumber>
<StreetAddress>438 Whitney Road Ext.</StreetAddress>
<StreetAddress2><![CDATA[Unit 1133]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<StateCode>CT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>614209054</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CONNECTICUT</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004534830</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Connecticut]]></Name>
<CityName>Storrs</CityName>
<StateCode>CT</StateCode>
<ZipCode>062691133</ZipCode>
<StreetAddress><![CDATA[438 Whitney Road Ext.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0104000</Code>
<Name>Information Systems</Name>
</FoaInformation>
<ProgramElement>
<Code>7495</Code>
<Text>Robust Intelligence</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7495</Code>
<Text>ROBUST INTELLIGENCE</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~98403</FUND_OBLG>
<FUND_OBLG>2008~98145</FUND_OBLG>
<FUND_OBLG>2009~103631</FUND_OBLG>
<FUND_OBLG>2010~110111</FUND_OBLG>
<FUND_OBLG>2011~114710</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>The purpose of this project was to design techniques and tools that would substantially reduce the burden of modelers faced with producing algorithms for a broad class of combinatorial optimization problem. It addressed a usability issue raised in the context of constraint programming where users need to produce both a declarative model of the problem and a search procedure to sift through the entire search space and find feasible and/or globally optimal solutions. The ever-growing instance sizes that must be solved in real industrial setting only exacerbates the issue as increasingly complex search procedures must be investigated to produce a working solution on the instances at hand.&nbsp;</span>&nbsp;</p> <p><span>Without suitable support, search procedures can be elusive and challenging to write since one must consider the methodology (complete vs. incomplete search), visualization (to gain understanding of the search behavior), search strategies (e.g., DFS, LDS, IDS, &hellip;.), search heuristics, symmetry breaking, restarting, meta-heuristics (e.g. Large Neighborhood Search) and last but not least, hybrid techniques.&nbsp;</span></p> <p><span>Specific outcomes of this project fall in several categories.&nbsp;</span></p> <ol> <li><span> Novel control abstractions in the form of Controllers were introduced to support arbitrary search strategies. Search controllers make it possible to fully separate the node-management policy in complete tree search from the heuristic definition and any parallelization considerations. The impact is immediate with a modular architecture that encourages experimentation with a broad class of search strategies.&nbsp;</span></li> <li><span>Search controllers enable the construction of a transparent parallelization of tree search. This contribution take the form of automatic parallel and distributed tree search on parallel machines and (small) clusters of workstations to automatically exploit the now ubiquitous parallel hardware.</span></li> <li><span>An Event-driven architecture contributed a significant reduction of the burden incurred when trying to build visualization of search algorithms. The selection of suitable visualization is driven by the structures expressed in the model. Techniques were offered for the visualization of incomplete search in particular.</span></li> <li><span>Constraint-Based Local Search was the first constraint-driven paradigm to receive a fully-automatic search procedure synthesis.&nbsp; The derivation is based on constraint annotations that drive the selection of a neighborhood structure compatible with the annotations and adopts a specified template (e.g., Tabu, Simulated Annealing, VNS,&hellip;.). The net result are purely declarative Constraint-Based Local Search models.</span></li> <li><span>The synthesis ideas were brought over to Finite-Domain Constraint Programming Solvers with CP-AS a proof-of-concept automatic search derivation based on the idea of scoring candidate search techniques based on the structure expressed through constraints in the declarative model.&nbsp;</span></li> <li><span>More recently, CML (The Comet Modeling Language) showed how to automatically derive complex models and hybrids (e.g., column generation, CP/MIP and CP/CBLS hybrids) from a high-level specification based on algorithmic templates and model composition. The&nbsp; proof-of-concept modeling language compiles high-level specification down to hybrid COMET models whose performance is comparable to hand-crafted hybrids.&nbsp;</span></li> <li><span>A new black-box search procedure called &ldquo;Activity-Based Search&rdquo; was introduced as well. It nicely complements the capabilities of &ldquo;Impact-Based Search&rdquo; and &ldquo;Weighted Degree&rdquo; black-box alternatives and was shown to display excellent performance and remarkable robustness with respect to randomization. Naturally, ABS can be used along-sid...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The purpose of this project was to design techniques and tools that would substantially reduce the burden of modelers faced with producing algorithms for a broad class of combinatorial optimization problem. It addressed a usability issue raised in the context of constraint programming where users need to produce both a declarative model of the problem and a search procedure to sift through the entire search space and find feasible and/or globally optimal solutions. The ever-growing instance sizes that must be solved in real industrial setting only exacerbates the issue as increasingly complex search procedures must be investigated to produce a working solution on the instances at hand.    Without suitable support, search procedures can be elusive and challenging to write since one must consider the methodology (complete vs. incomplete search), visualization (to gain understanding of the search behavior), search strategies (e.g., DFS, LDS, IDS, &hellip;.), search heuristics, symmetry breaking, restarting, meta-heuristics (e.g. Large Neighborhood Search) and last but not least, hybrid techniques.   Specific outcomes of this project fall in several categories.    Novel control abstractions in the form of Controllers were introduced to support arbitrary search strategies. Search controllers make it possible to fully separate the node-management policy in complete tree search from the heuristic definition and any parallelization considerations. The impact is immediate with a modular architecture that encourages experimentation with a broad class of search strategies.  Search controllers enable the construction of a transparent parallelization of tree search. This contribution take the form of automatic parallel and distributed tree search on parallel machines and (small) clusters of workstations to automatically exploit the now ubiquitous parallel hardware. An Event-driven architecture contributed a significant reduction of the burden incurred when trying to build visualization of search algorithms. The selection of suitable visualization is driven by the structures expressed in the model. Techniques were offered for the visualization of incomplete search in particular. Constraint-Based Local Search was the first constraint-driven paradigm to receive a fully-automatic search procedure synthesis.  The derivation is based on constraint annotations that drive the selection of a neighborhood structure compatible with the annotations and adopts a specified template (e.g., Tabu, Simulated Annealing, VNS,&hellip;.). The net result are purely declarative Constraint-Based Local Search models. The synthesis ideas were brought over to Finite-Domain Constraint Programming Solvers with CP-AS a proof-of-concept automatic search derivation based on the idea of scoring candidate search techniques based on the structure expressed through constraints in the declarative model.  More recently, CML (The Comet Modeling Language) showed how to automatically derive complex models and hybrids (e.g., column generation, CP/MIP and CP/CBLS hybrids) from a high-level specification based on algorithmic templates and model composition. The  proof-of-concept modeling language compiles high-level specification down to hybrid COMET models whose performance is comparable to hand-crafted hybrids.  A new black-box search procedure called "Activity-Based Search" was introduced as well. It nicely complements the capabilities of "Impact-Based Search" and "Weighted Degree" black-box alternatives and was shown to display excellent performance and remarkable robustness with respect to randomization. Naturally, ABS can be used along-side IBS and WDeg  as a building block within CML for instance.    This researchÆs impact is significant as the primary platform (COMET) where the ideas were first tested was commercialized and is used by practitioners to solve real-life combinatorial optimization problems. The critical ability to easily mix-and-match components to build sophist...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

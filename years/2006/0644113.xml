<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Cornflower Project</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2007</AwardEffectiveDate>
<AwardExpirationDate>01/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>448894</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sven G. Koenig</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Title: CAREER: Cornflower Project&lt;br/&gt;&lt;br/&gt;PI:     Meinolf Sellmann&lt;br/&gt;Institution: Brown University&lt;br/&gt;&lt;br/&gt;The dawn of the new century casts light on three dramatic economic challenges that will determine our future as a society: demography, globalization, and shortage of natural resources. Today we need to develop the technology that will allow our children to maintain our standard of living. Therefore, we need to find ways to increase our economical efficiency. Computer science can play a decisive role when facing this challenge. After more than 60 years of research, algorithmic computer science can offer a lot to help saving. However, the main impact of computational optimization support is currently limited to large companies in few core application areas such as the transportation industry. Specialized algorithmic solutions have shown to be extremely successful in these domains. While the algorithmic technologies that were developed are by no means specific to the current areas of application, the main obstacle for a broader realization of their vast potential is largely due to the lacking ease of use. Therefore, the main goal of the Cornflower Project is to develop techniques that allow inexperienced users to exploit optimization power efficiently.&lt;br/&gt;&lt;br/&gt;Intellectual Merits: Optimization techniques have been developed in three historically separate research areas:&lt;br/&gt;constraint programming, operations research, and algorithm theory.&lt;br/&gt;While the main&lt;br/&gt;focus of the project is to provide a high level of automization and algorithms that can be hooked to intuitive modeling primitives that facilitate the use of intelligent optimization support, we do not stop at the boundaries of traditional research areas. Instead, we integrate and hybridize ideas developed in different communities in order to provide easily accessible high performance optimization technology.&lt;br/&gt;Particularly, we focus on the development of high-level constraints that allow users to model their problems as conjunctions of intuitive substructures and provide hybrid methods for their efficient combination.&lt;br/&gt;Moreover, we develop automization techniques for the handling of symmetries that can be the cause of severe inefficiencies when handled poorly.&lt;br/&gt;&lt;br/&gt;Broader Impact: The main goal of the Cornflower project is to solve the algorithmic problems that arise in the context of optimization driven decision support systems that are intuitive to use and that provide a high level of automization. By making algorithms and methods publicly available in the Cornflower Library, the project contributes to widening the access to computational decision support.&lt;br/&gt;Our goal to broaden the accessibility of computational decision support while breaking the barriers between theoretical and practical computer science goes hand in hand with the educational goals of the project.&lt;br/&gt;Optimization techniques play an ever more important role for many other CS disciplines.&lt;br/&gt;By developing optimization courses that integrate methods from various research areas, Cornflower helps to educate the next generation of experts in combinatorial algorithms, while students moving on to other disciplines take away a sound understanding how to tackle combinatorial problems and how to utilize standard solvers for their own purposes.&lt;br/&gt;Attracting both students who are mainly interested in technical methodology as well as those who are primarily attracted to specific applications is also a promising approach to broadening participation in science at large.&lt;br/&gt;Through the outreach program&lt;br/&gt;Artemis, a five-week summer program for high-school girls, young are encouraged women to pursue careers in science and engineering.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/26/2007</MinAmdLetterDate>
<MaxAmdLetterDate>01/06/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0644113</AwardID>
<Investigator>
<FirstName>Meinolf</FirstName>
<LastName>Sellmann</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Meinolf Sellmann</PI_FULL_NAME>
<EmailAddress>sello@cs.brown.edu</EmailAddress>
<PI_PHON>4018632777</PI_PHON>
<NSF_ID>000059670</NSF_ID>
<StartDate>01/26/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Brown University</Name>
<CityName>Providence</CityName>
<ZipCode>029129002</ZipCode>
<PhoneNumber>4018632777</PhoneNumber>
<StreetAddress>BOX 1929</StreetAddress>
<StreetAddress2><![CDATA[350 Eddy Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<StateCode>RI</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>RI01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001785542</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>BROWN UNIVERSITY IN PROVIDENCE IN THE STATE OF RHODE ISLAND AND PROVIDENCE PLANTATIONS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001785542</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Brown University]]></Name>
<CityName>Providence</CityName>
<StateCode>RI</StateCode>
<ZipCode>029129002</ZipCode>
<StreetAddress><![CDATA[BOX 1929]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>RI01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0104000</Code>
<Name>Information Systems</Name>
</FoaInformation>
<ProgramElement>
<Code>7298</Code>
<Text>International Research Collab</Text>
</ProgramElement>
<ProgramElement>
<Code>7495</Code>
<Text>Robust Intelligence</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>0000</Code>
<Text>UNASSIGNED</Text>
</ProgramReference>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>5930</Code>
<Text>U.S.-CZECHOSLOVAKIA PROGRAM</Text>
</ProgramReference>
<ProgramReference>
<Code>5937</Code>
<Text>SWEDEN</Text>
</ProgramReference>
<ProgramReference>
<Code>5979</Code>
<Text>Europe and Eurasia</Text>
</ProgramReference>
<ProgramReference>
<Code>7495</Code>
<Text>ROBUST INTELLIGENCE</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<ProgramReference>
<Code>OTHR</Code>
<Text>OTHER RESEARCH OR EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0407</Code>
<Name>NSF,Education &amp; Human Resource</Name>
<APP_SYMB_ID>490106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~341718</FUND_OBLG>
<FUND_OBLG>2009~20000</FUND_OBLG>
<FUND_OBLG>2010~87176</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>The Cornflower Project</strong><br /><br /><br /><strong>"A frugal, undemanding plant that thrives under modest circumstances"</strong><br /><br />In 2008, IBM announced its Smarter Planet initiative, and NSF funded the Institute for Computational Sustainability through its Exhibitions in Computing program. Two years earlier, in 2006, NSF granted a career grant that shares the same vision as those two high-profile initiatives: To exploit computational power for intelligent decision support to help an aging society sustain its standard of living while facing global competition and limited economic and natural resources. The symbol for this effort became a frugal, undemanding plant that thrives under modest circumstances, and the project was coined the Cornflower Project.<br /><br /><br /><br /><strong>"The computer needs to be told what the problem actually is"</strong><br /><br />The focus of the Cornflower Project is to make it easier for non-experts to exploit computers to make smarter decisions. There are established tools that can provide descriptive, predictive, and prescriptive analytics. The first obstacle that users of these systems face is that any real-world problem needs to be modeled before the tools can be invoked. That is, the computer needs to be told what the problem actually is, and the way how a problem is formulated has tremendous effect on the computer's ability to provide solutions efficiently. The second obstacle is that decision support systems have parameters that also greatly affect solution efficiency. These parameters need to be tuned before a system performs well.<br /><br />Cornflower addressed these two issues on multiple levels:</p> <ul> <li>By designing provably efficient algorithms that allow the computer to reason about models that are intuitive to formulate for non-experts.</li> <li>By developing algorithms that search more efficiently for solutions, even when the given model is not perfect.</li> <li>By introducing new methods to cope with problem symmetry which can otherwise cause an analytics tool to perform very poorly.</li> <li>And by proposing a new tool for tuning parameters of analytics tools automatically.</li> </ul> <p style="text-align: left;"><br /><br /><br /><strong>"A simple, provably optimal formula for binary search"</strong><br /><br />Most results of this four year long research project, published in over 30 peer-reviewed research papers at international conferences and journals, are beyond the scope of a short summary. To give a flavor of this research, however, consider the children's game "Guess my number:" One child thinks of a number between 1 and 100. The other must guess the number in as few trials as possible. When the guess is off, the first child must tell the guesser whether the number is higher or lower. Computers frequently play this game when tackling optimization problems by repeatedly considering the question: "Is there a feasible solution that has at most cost 'X'?"<br /><br />The optimal strategy for the guesser is, of course, to split the search interval in the middle. This way, with each guess the remaining search interval is guaranteed to halve. In our game, the guesser should guess 50.&nbsp; No matter what the correct number is, the remaining search interval contains at most 50 numbers (1 to 49 or 51 to 100). The problem for the computer is that proving that there is no solution with cost lower or equal 'X' is usually much harder than finding one, if it exists.<br /><br />Serdar Kadioglu and Meinolf Sellmann have found a simple, provably optimal formula for binary search for the case where a trial, when it comes back negative, incurs a 'c'-times higher costs than positive trials. Namely, the interval should be split at balance 'a' where 'a' solves the equation<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a<sup>c</sup> + a = 1.<br /><br />In classic binary search where 'c' is...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The Cornflower Project   "A frugal, undemanding plant that thrives under modest circumstances"  In 2008, IBM announced its Smarter Planet initiative, and NSF funded the Institute for Computational Sustainability through its Exhibitions in Computing program. Two years earlier, in 2006, NSF granted a career grant that shares the same vision as those two high-profile initiatives: To exploit computational power for intelligent decision support to help an aging society sustain its standard of living while facing global competition and limited economic and natural resources. The symbol for this effort became a frugal, undemanding plant that thrives under modest circumstances, and the project was coined the Cornflower Project.    "The computer needs to be told what the problem actually is"  The focus of the Cornflower Project is to make it easier for non-experts to exploit computers to make smarter decisions. There are established tools that can provide descriptive, predictive, and prescriptive analytics. The first obstacle that users of these systems face is that any real-world problem needs to be modeled before the tools can be invoked. That is, the computer needs to be told what the problem actually is, and the way how a problem is formulated has tremendous effect on the computer's ability to provide solutions efficiently. The second obstacle is that decision support systems have parameters that also greatly affect solution efficiency. These parameters need to be tuned before a system performs well.  Cornflower addressed these two issues on multiple levels:  By designing provably efficient algorithms that allow the computer to reason about models that are intuitive to formulate for non-experts. By developing algorithms that search more efficiently for solutions, even when the given model is not perfect. By introducing new methods to cope with problem symmetry which can otherwise cause an analytics tool to perform very poorly. And by proposing a new tool for tuning parameters of analytics tools automatically.     "A simple, provably optimal formula for binary search"  Most results of this four year long research project, published in over 30 peer-reviewed research papers at international conferences and journals, are beyond the scope of a short summary. To give a flavor of this research, however, consider the children's game "Guess my number:" One child thinks of a number between 1 and 100. The other must guess the number in as few trials as possible. When the guess is off, the first child must tell the guesser whether the number is higher or lower. Computers frequently play this game when tackling optimization problems by repeatedly considering the question: "Is there a feasible solution that has at most cost 'X'?"  The optimal strategy for the guesser is, of course, to split the search interval in the middle. This way, with each guess the remaining search interval is guaranteed to halve. In our game, the guesser should guess 50.  No matter what the correct number is, the remaining search interval contains at most 50 numbers (1 to 49 or 51 to 100). The problem for the computer is that proving that there is no solution with cost lower or equal 'X' is usually much harder than finding one, if it exists.  Serdar Kadioglu and Meinolf Sellmann have found a simple, provably optimal formula for binary search for the case where a trial, when it comes back negative, incurs a 'c'-times higher costs than positive trials. Namely, the interval should be split at balance 'a' where 'a' solves the equation          ac + a = 1.  In classic binary search where 'c' is one, the formula tells us to set a=0.5: we split the interval exactly in the middle. As the cost for negative trials becomes larger and 'c' grows, however, according to the formula 'a' gets closer and closer to one and trials become more and more defensive as guesses are made further and further to the higher end of the search interval. Kadioglu and Sellmann prove rigorously that their...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

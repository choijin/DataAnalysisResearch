<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Computer-Aided Collaborative Reasoning across the Curriculum</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/15/2007</AwardEffectiveDate>
<AwardExpirationDate>09/30/2010</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>140237</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Scott Grissom</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Computer Science (31) &lt;br/&gt;&lt;br/&gt;Software development based on the reuse of object-oriented components has the potential to improve the reliability of software products, but to realize this potential, software developers must be able to develop high quality software components, and be able to reason about their correctness. Introduction of formal reasoning in education will enable students to learn both how to develop correct programs and to understand why their programs are correct. This project is inculcating and amplifying principles and applications of reasoning in computing across the curriculum through the development of collaborative learning tools for three undergraduate courses: an introductory programming course, a data structures and algorithms course, and a software engineering course. Through these courses, the PIs are teaching reasoning across the curriculum by engaging students through a computer-aided, collaborative approach. &lt;br/&gt;&lt;br/&gt;In the Collaborative Reasoning paradigm, teams of students are involved in problem solving. This learning model is being enhanced with systematic feedback cycles, rapid and delayed, from both humans and automated assistants, using a Collaborative Reasoning Workbench. Systematic feedback gives structure to the reasoning process. Rapid feedback can make learning immediate and exciting for students, yet delayed feedback may be more meaningful in some problem-solving contexts. The Workbench can be tuned to provide either type of feedback, and it includes a set of exercises and "reasoning assistants" to guide students both inside and outside of the classroom.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>04/12/2007</MinAmdLetterDate>
<MaxAmdLetterDate>01/05/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0633506</AwardID>
<Investigator>
<FirstName>Murali</FirstName>
<LastName>Sitaraman</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Murali Sitaraman</PI_FULL_NAME>
<EmailAddress>murali@clemson.edu</EmailAddress>
<PI_PHON>8646566738</PI_PHON>
<NSF_ID>000269181</NSF_ID>
<StartDate>04/12/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jason</FirstName>
<LastName>Hallstrom</LastName>
<PI_MID_INIT>O</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jason O Hallstrom</PI_FULL_NAME>
<EmailAddress>jhallstrom@fau.edu</EmailAddress>
<PI_PHON>8646504136</PI_PHON>
<NSF_ID>000336178</NSF_ID>
<StartDate>04/12/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Chong</FirstName>
<LastName>Pak</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Chong Pak</PI_FULL_NAME>
<EmailAddress>richpak@clemson.edu</EmailAddress>
<PI_PHON>8646562424</PI_PHON>
<NSF_ID>000258030</NSF_ID>
<StartDate>04/12/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Clemson University</Name>
<CityName>CLEMSON</CityName>
<ZipCode>296345701</ZipCode>
<PhoneNumber>8646562424</PhoneNumber>
<StreetAddress>230 Kappa Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 200]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>South Carolina</StateName>
<StateCode>SC</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>SC03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042629816</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CLEMSON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042629816</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Clemson University]]></Name>
<CityName>CLEMSON</CityName>
<StateCode>SC</StateCode>
<ZipCode>296345701</ZipCode>
<StreetAddress><![CDATA[230 Kappa Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>South Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>SC03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0116000</Code>
<Name>Human Subjects</Name>
</FoaInformation>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7494</Code>
<Text>CCLI-Type 1 (Exploratory)</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0407</Code>
<Name>NSF,Education &amp; Human Resource</Name>
<APP_SYMB_ID>490106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0410</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~125237</FUND_OBLG>
<FUND_OBLG>2010~15000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;The software industry is the largest in the United States, with software engineering occupations projected to be among the fastest growing over the next decade. From entertainment to economics, traffic to travel, military to medicine, software is ubiquitous --- and so, too, are the associated failures that cost dollars and lives. Even as the need for high-quality software increases, it remains expensive to develop, repair, and maintain. To address these challenges, we need to cultivate software engineers, who must learn to reason rigorously about the correctness of the software they build and maintain. Students must be able to understand not only whether their software is correct, but also why. In short, they must acquire a solid foundation in precise, analytical reasoning skills as applied to software behavior. Developing the materials, tools, and techniques that enable these skills to be taught effectively has been the focus of this project.</p> <p>To engage and excite students about learning the central principles of reasoning, we have designed, implemented, and experimented with the <em>Collaborative Reasoning</em> paradigm at Clemson University and Denison University over the past four years across a range of undergraduate courses. The paradigm calls for a hands-on approach to engaging students and encouraging peer learning. This includes the use of independent and collaborative reasoning exercises and computer-based <span style="font-family: Calibri;">"</span>reasoning assistants<span style="font-family: Calibri;">"</span> that guide students through these exercises and provide rapid feedback as they work. We have developed working prototypes of four of these assistants and envisioned the development of several others. In addition, we have developed a preliminary web interface that will be used to make these assistants available to a broad set of institutions.</p> <p>Through careful evaluation of the reasoning methods and tools in several pilots in multiple courses at Clemson and Denison, the project has led to the following fundamental findings.</p> <p>1.) It is possible to integrate mathematical specification and reasoning principles seamlessly using incremental modules in undergraduate Computer Science courses.</p> <p>2.) It is possible to teach mathematical specification and reasoning principles in multiple courses across the curriculum without significant displacement of existing course topics.</p> <p>3.) It is possible to reinforce key concepts and engage students in learning through collaborative reasoning assistants; these principles have been captured in a reasoning concept inventory.</p> <p>4.) It is possible to change student attitudes about the role of mathematical reasoning in software development and help them see the important connections between mathematical proofs and programs.</p> <p>We have recently received funding to continue the work initiated under this project as part of a CCLI Phase-II award. Over the next several years, we will fully develop the Collaborative Reasoning paradigm, refine the materials and tools used to support it, and disseminate the results to a diverse set of institutions.</p><br> <p>            Last Modified: 12/29/2010<br>      Modified by: Murali&nbsp;Sitaraman</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  The software industry is the largest in the United States, with software engineering occupations projected to be among the fastest growing over the next decade. From entertainment to economics, traffic to travel, military to medicine, software is ubiquitous --- and so, too, are the associated failures that cost dollars and lives. Even as the need for high-quality software increases, it remains expensive to develop, repair, and maintain. To address these challenges, we need to cultivate software engineers, who must learn to reason rigorously about the correctness of the software they build and maintain. Students must be able to understand not only whether their software is correct, but also why. In short, they must acquire a solid foundation in precise, analytical reasoning skills as applied to software behavior. Developing the materials, tools, and techniques that enable these skills to be taught effectively has been the focus of this project.  To engage and excite students about learning the central principles of reasoning, we have designed, implemented, and experimented with the Collaborative Reasoning paradigm at Clemson University and Denison University over the past four years across a range of undergraduate courses. The paradigm calls for a hands-on approach to engaging students and encouraging peer learning. This includes the use of independent and collaborative reasoning exercises and computer-based "reasoning assistants" that guide students through these exercises and provide rapid feedback as they work. We have developed working prototypes of four of these assistants and envisioned the development of several others. In addition, we have developed a preliminary web interface that will be used to make these assistants available to a broad set of institutions.  Through careful evaluation of the reasoning methods and tools in several pilots in multiple courses at Clemson and Denison, the project has led to the following fundamental findings.  1.) It is possible to integrate mathematical specification and reasoning principles seamlessly using incremental modules in undergraduate Computer Science courses.  2.) It is possible to teach mathematical specification and reasoning principles in multiple courses across the curriculum without significant displacement of existing course topics.  3.) It is possible to reinforce key concepts and engage students in learning through collaborative reasoning assistants; these principles have been captured in a reasoning concept inventory.  4.) It is possible to change student attitudes about the role of mathematical reasoning in software development and help them see the important connections between mathematical proofs and programs.  We have recently received funding to continue the work initiated under this project as part of a CCLI Phase-II award. Over the next several years, we will fully develop the Collaborative Reasoning paradigm, refine the materials and tools used to support it, and disseminate the results to a diverse set of institutions.       Last Modified: 12/29/2010       Submitted by: Murali Sitaraman]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

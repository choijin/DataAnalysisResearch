<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CT: Factoring High-Level Authorizations into Kernel-Level Configurations</AwardTitle>
<AwardEffectiveDate>09/01/2006</AwardEffectiveDate>
<AwardExpirationDate>08/31/2008</AwardExpirationDate>
<AwardTotalIntnAmount>200000.00</AwardTotalIntnAmount>
<AwardAmount>200000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Karl Levitt</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Authorization models limit what users and programs (processes) can do on a computer system, thereby protecting computer systems and their data from malicious users and programs.  Authorization models implemented in the operating system employ the access matrix as their fundamental abstraction.&lt;br/&gt;&lt;br/&gt;The access matrix enables efficient implementation of an authorization model, which is critically important since its overheads are incurred by every program executing in the computer system.  As the access matrix is enhanced to provide adequate protections in today's high threat environment, greater complexity results; this complexity leads to users avoiding or misusing such protections.  On the other hand, the lack of stronger protections in today's most popular systems renders them vulnerable to increased attacks.&lt;br/&gt;&lt;br/&gt;This project is building a two-level system, with the higher level authorizations oriented towards the needs of those who specify authorization policies and the lower level tailored for efficient execution.  Thus the lower level can be implemented in the operating system kernel.  The high-level authorization will be automatically translated ("factored") into the operating system level authorizations.  These high and low level authorizations are unique in that they were co-developed, and thus share basic concepts, which make this automatic factoring practical.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/24/2006</MinAmdLetterDate>
<MaxAmdLetterDate>08/06/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0627586</AwardID>
<Investigator>
<FirstName>Jon</FirstName>
<LastName>Solworth</LastName>
<EmailAddress>solworth@cs.uic.edu</EmailAddress>
<StartDate>08/24/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Chicago</Name>
<CityName>Chicago</CityName>
<ZipCode>606124305</ZipCode>
<PhoneNumber>3129962862</PhoneNumber>
<StreetAddress>809 S. Marshfield Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7371</Code>
<Text>CYBER TRUST</Text>
</ProgramElement>
<ProgramReference>
<Code>7254</Code>
<Text>CYBER SECURITY ACT PROPOSALS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

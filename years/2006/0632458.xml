<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>RUI:     Modules and Parallel Specialization of Object Types</AwardTitle>
<AwardEffectiveDate>04/15/2006</AwardEffectiveDate>
<AwardExpirationDate>06/30/2007</AwardExpirationDate>
<AwardTotalIntnAmount>130704.00</AwardTotalIntnAmount>
<AwardAmount>130704</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010500</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>0306486 &lt;br/&gt;Kim B. Bruce &lt;br/&gt;Williams College&lt;br/&gt;&lt;br/&gt;RUI: Modules and Parallel Specialization of Object Types &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;The goal of this research is to improve the design of statically-typed object-oriented programming languages, especially with regard to issues of programming in the medium to large scale. Research will focus on: &lt;br/&gt;&lt;br/&gt;1. Module systems for object-oriented languages: Modules provide support for organizing code, abstraction barriers to hide information, and support for separate compilation. However, current module systems lack the flexibility to capture a number of common ways in which to design programs in object-oriented languages. &lt;br/&gt;2. Simultaneous modification of mutually recursive types and classes: This research will develop ways to support incremental modification of mutually recursive types while preserving type safety and important &lt;br/&gt;relations between types and classes. &lt;br/&gt;3. Typed intermediate languages and virtual machines for object-oriented languages: Run-time systems like the target virtual machines for Java and C# lack support for advanced object-oriented languages and module systems. Exploring compilation techniques and virtual machines to support these features is necessary to ensure their eventual adoption.  This research will continue using LOOM as a test bed for further investigations into the best way to support features of object-oriented languages, while also investigating how to use the best of these ideas to enhance real languages like Java and its successors.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/07/2006</MinAmdLetterDate>
<MaxAmdLetterDate>06/07/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0632458</AwardID>
<Investigator>
<FirstName>Kim</FirstName>
<LastName>Bruce</LastName>
<EmailAddress>kim@cs.pomona.edu</EmailAddress>
<StartDate>06/07/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Pomona College</Name>
<CityName>Claremont</CityName>
<ZipCode>917114434</ZipCode>
<PhoneNumber>9096218328</PhoneNumber>
<StreetAddress>Alexander Hall</StreetAddress>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

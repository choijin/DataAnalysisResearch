<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Self-Preserving Digital Objects</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/15/2007</AwardEffectiveDate>
<AwardExpirationDate>03/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>540753.00</AwardTotalIntnAmount>
<AwardAmount>540753</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Vijayalakshmi Atluri</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The prevailing model for digital preservation is that archives should be similar to a fortress: a large,  protective infrastructure to protect a relatively small collection of data from attack by external forces. If data objects were not tethered to repositories, can we create objects that preserve themselves more effectively than repositories or web infrastructure can?&lt;br/&gt;&lt;br/&gt;Intellectual Merit&lt;br/&gt;&lt;br/&gt;This project will advance the science and engineering of digital preservation in several areas:  complex digital object metadata formats, web object design, P2P algorithms, automatic format migration and object repository interaction. Some areas, such as the format migration services and migration preference language will be new contributions. Other areas will be a matter of novel adaptation, integration and deployment. Technical highlights of this proposal include:&lt;br/&gt;&lt;br/&gt;i) Adopting flocking rules for data objects in digital libraries (DLs), thus allowing complex emergent behavior of the archived data objects from a small number of simple, easily implemented rules. ii)  Making data objects responsible for the conversion and translation of their own holdings according to preferences that were specifed at creation time. The data objects will rely on transient, network-accessible services that are not attached to repositories. iii) Creating a preservation testbed with real content in self-preserving digital objects, repositories, and in the general web.&lt;br/&gt;&lt;br/&gt;Broader Impacts&lt;br/&gt;&lt;br/&gt;In many ways, creating and integrating the technology necessary for self-preservation will be straight-forward; raising peoples' expectations from passive digital objects to self-preserving digital objects will be the biggest challenge. For this reason, a series of longitudinal experiments about preservation in general as well as self-preserving digital objects will be integrated across the four-year undergraduate computer science curriculum at Old Dominion University. The complimentary relationship between preservation and software engineering will be stressed. The content will be of interest to students, thereby avoiding listless, perfunctory participation. One example will include preserving  copies of old tests, assignments and projects  content the students will be highly motivated to preserve. This kind of preservation (digital or nondigital) is already performed to some extent by fraternities and other memory organizations.  This process will be codified and democratized with the appropriate information technology tools. The experiences reported by the students will be incorporated into future versions of the preservation software.</AbstractNarration>
<MinAmdLetterDate>12/22/2006</MinAmdLetterDate>
<MaxAmdLetterDate>03/23/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0643784</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Nelson</LastName>
<PI_MID_INIT>L</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael L Nelson</PI_FULL_NAME>
<EmailAddress>mln@cs.odu.edu</EmailAddress>
<PI_PHON>7576836393</PI_PHON>
<NSF_ID>000245189</NSF_ID>
<StartDate>12/22/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Old Dominion University Research Foundation</Name>
<CityName>Norfolk</CityName>
<ZipCode>235082561</ZipCode>
<PhoneNumber>7576834293</PhoneNumber>
<StreetAddress>4111 Monarch Way</StreetAddress>
<StreetAddress2><![CDATA[Suite 204]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>VA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>077945947</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OLD DOMINION UNIVERSITY RESEARCH FOUNDATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Old Dominion University]]></Name>
<CityName>Norfolk</CityName>
<StateCode>VA</StateCode>
<ZipCode>235290001</ZipCode>
<StreetAddress><![CDATA[5115 Hampton Blvd]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>VA02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0104000</Code>
<Name>Information Systems</Name>
</FoaInformation>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>1706</Code>
<Text>DIGITAL GOVERNMENT</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~106976</FUND_OBLG>
<FUND_OBLG>2008~103054</FUND_OBLG>
<FUND_OBLG>2009~112339</FUND_OBLG>
<FUND_OBLG>2010~106834</FUND_OBLG>
<FUND_OBLG>2011~111550</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Open Archives Initiative - Object Reused and Exchange (ORE): Perhaps the most important and general of this project is the participatio in the ORE standardization effort. &nbsp;While ORE is not a preservation effort per se, we see it is a necessary precondition to preservation: you must have a machine readable list of web resources that are being preserved before you can talk about "copying" the resource to a different location. The contribution of ORE is providing a machine-readable "splash page", know as the Resource Map (ReM). &nbsp;ReMs describe "aggregations", which are the conceptual objects that form a collection of web resources on the web. &nbsp;As shown in the figure, not all resources that go into a splash page are of interest: logos, navigational links and the like are typically out of scope when we talk about "refreshing" or "migrating" the content. &nbsp;Similarly, some resources are included in the aggregation but not directly linked from the splash page (e.g., the latex source is one level down from the splash page, but it is an integral part of the aggregation). &nbsp;More about ORE can be found at:&nbsp;http://www.openarchives.org/ore/</p> <p>&nbsp;</p> <p>Self-Preserving Digital Objects: &nbsp;We built extensive simulations of self-preserving digital objects and established the various algorithms for how the graph could grow and repair itself after attack without input from a repository administrator or other "master". &nbsp;Implementing the capabilities in the simulation into the current HTTP environment, presents a significant challenge. &nbsp;Inspired by crowdsourcing and social media, it is our intention to make preservation a social activity. &nbsp;We are finishing the creation of the "Preserve Me!" suite of Javascript and other services that allow people to instrument their splash pages with a Web 2.0-style button (see the image). &nbsp;When this button is clicked by interested users, it brings the preservation component of the web resource to life, performing maintenance and messaging activities. &nbsp;The idea is that the object will enlist the user to assist in the preservation process, especially considering things like making copies at new sites (e.g., clicking on approvals, solving captchas). &nbsp;The status of the digital object is encoded in the ORE ReM, including an ontology of link relations and variety of common messages that the objects will send to each other to inform them the network of objects about the arrival of new servers (where they can copy their content), the life or death of objects, and change in their own metadata status (e.g., refreshing and migrating aggregated resources). &nbsp;We are putting the finishing touches on the Preserve Me! library and the results will be announced at&nbsp;http://ws-dl.blogspot.com/ when they are ready for broad testing.</p> <p>&nbsp;</p> <p>HTTP Mailbox: One of the critical pieces of infrastructure we had to implement to transition from simulation to implementation is the HTTP Mailbox. &nbsp;We investigated a range of communication options, including Faye, Twitter, Statusnet, and others but they were not suitable for a range of reasons. &nbsp;We wanted to adopt Representational State Transfer (REST) approaches for our objects to communicate amongst themselves, but we continually ran into problems tunneling HTTP traffic through other services (e.g., Twitter). &nbsp;We eventually came up with a "mailbox" approach, where rather than having object1 send a message to object2 (for a variety of engineering reasons, neither object1 nor object2 are completely RESTful), object1 will (with the assistance of an interactive user) send a message to object2 via the mailbox. &nbsp;Then when object2 is woken up by a user visiting it and hitting the "Preserve Me!" button, it will check its mailbox and take action on what other objects have communicated to it (again, possibly enlisting the help of the ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Open Archives Initiative - Object Reused and Exchange (ORE): Perhaps the most important and general of this project is the participatio in the ORE standardization effort.  While ORE is not a preservation effort per se, we see it is a necessary precondition to preservation: you must have a machine readable list of web resources that are being preserved before you can talk about "copying" the resource to a different location. The contribution of ORE is providing a machine-readable "splash page", know as the Resource Map (ReM).  ReMs describe "aggregations", which are the conceptual objects that form a collection of web resources on the web.  As shown in the figure, not all resources that go into a splash page are of interest: logos, navigational links and the like are typically out of scope when we talk about "refreshing" or "migrating" the content.  Similarly, some resources are included in the aggregation but not directly linked from the splash page (e.g., the latex source is one level down from the splash page, but it is an integral part of the aggregation).  More about ORE can be found at: http://www.openarchives.org/ore/     Self-Preserving Digital Objects:  We built extensive simulations of self-preserving digital objects and established the various algorithms for how the graph could grow and repair itself after attack without input from a repository administrator or other "master".  Implementing the capabilities in the simulation into the current HTTP environment, presents a significant challenge.  Inspired by crowdsourcing and social media, it is our intention to make preservation a social activity.  We are finishing the creation of the "Preserve Me!" suite of Javascript and other services that allow people to instrument their splash pages with a Web 2.0-style button (see the image).  When this button is clicked by interested users, it brings the preservation component of the web resource to life, performing maintenance and messaging activities.  The idea is that the object will enlist the user to assist in the preservation process, especially considering things like making copies at new sites (e.g., clicking on approvals, solving captchas).  The status of the digital object is encoded in the ORE ReM, including an ontology of link relations and variety of common messages that the objects will send to each other to inform them the network of objects about the arrival of new servers (where they can copy their content), the life or death of objects, and change in their own metadata status (e.g., refreshing and migrating aggregated resources).  We are putting the finishing touches on the Preserve Me! library and the results will be announced at http://ws-dl.blogspot.com/ when they are ready for broad testing.     HTTP Mailbox: One of the critical pieces of infrastructure we had to implement to transition from simulation to implementation is the HTTP Mailbox.  We investigated a range of communication options, including Faye, Twitter, Statusnet, and others but they were not suitable for a range of reasons.  We wanted to adopt Representational State Transfer (REST) approaches for our objects to communicate amongst themselves, but we continually ran into problems tunneling HTTP traffic through other services (e.g., Twitter).  We eventually came up with a "mailbox" approach, where rather than having object1 send a message to object2 (for a variety of engineering reasons, neither object1 nor object2 are completely RESTful), object1 will (with the assistance of an interactive user) send a message to object2 via the mailbox.  Then when object2 is woken up by a user visiting it and hitting the "Preserve Me!" button, it will check its mailbox and take action on what other objects have communicated to it (again, possibly enlisting the help of the interactive user).  Although a central part of our design, we believe this approach for HTTP messaging will be of interest to other developers as well.  The code can be downloaded from: https...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

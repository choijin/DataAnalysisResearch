<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Pervasive Programming with Event Correlation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/15/2007</AwardEffectiveDate>
<AwardExpirationDate>12/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>408000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>While the advent of mobile and tiny computing devices furthers the pervasion of our society's digital backbone, adequate programming support addressing the needs of adaptivity, versatility, autonomy, and reactivity of pervasive applications is still lacking. &lt;br/&gt;&lt;br/&gt;We advocate for event correlation as core interaction paradigm embracing the asynchronous and decoupled nature of pervasive systems. Applications define events, which are triggered by sources and multicast to sinks; sinks are characterized by their interests in combinations of events involving criteria on type, value, time, and --- typical of many applications in pervasive systems --- location. Our contributions are threefold. First, we propose a model which generalizes previous approaches and unifies one-to-one, one-to-many, and many-to-many interaction. Second, we devise programming language support for this model, both through specific extensions to mainstream programming languages, as well as through general-purpose programming language constructs conceived to support also alternative inter-process interaction models. Third, we propose novel location-based routing algorithms and protocols devised for overlay networks tailored to event correlation, making use of randomization, compression, hashing, and error coding techniques to tame complexity while achieving secure, reliable and efficient event dissemination. &lt;br/&gt;&lt;br/&gt;This research will advance the state of the art in event-based programming support by  combining expertise in areas considered largely independently so far, such as computer networks and programming languages. The resulting cross-fertilization will furthermore facilitate the education of tomorrow's designers and developers of pervasive systems.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/08/2007</MinAmdLetterDate>
<MaxAmdLetterDate>01/18/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0644013</AwardID>
<Investigator>
<FirstName>Patrick</FirstName>
<LastName>Eugster</LastName>
<PI_MID_INIT>T</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Patrick T Eugster</PI_FULL_NAME>
<EmailAddress>peugster@cs.purdue.edu</EmailAddress>
<PI_PHON>7654946015</PI_PHON>
<NSF_ID>000233715</NSF_ID>
<StartDate>01/08/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName>West Lafayette</CityName>
<StateCode>IN</StateCode>
<ZipCode>479072114</ZipCode>
<StreetAddress><![CDATA[Young Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~80000</FUND_OBLG>
<FUND_OBLG>2008~80000</FUND_OBLG>
<FUND_OBLG>2009~88000</FUND_OBLG>
<FUND_OBLG>2010~80000</FUND_OBLG>
<FUND_OBLG>2011~80000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project has investigated (1) models, (2) programming support, (3) middleware support, and (4) tool support for decentralized complex event-based software.</p> <p>Some of the highlights of the project in the respective categories are as follows:</p> <p>(1) We have proposed the FAIDECS (Fair Decentralized Event Correlation System) model for decentralized correlation, yielding a compromise between strong guarantees and efficient implementation. We have proven bounds of agreed event correlation, and have investigated the relationships between existing event correlation languages and FAIDECS. In a parallel track we have proposed the concept of parametric subscriptions to support dynamic event-based applications such as location-based applications.</p> <p>(2) We have designed and implemented the EventJava language for capturing the above-mentioned models and features. EventJava extends the mainstream Java programming language. Besides features for type-safe distributed event-based programming, EventJava also includes support for defining event contexts (called conspects) covering common meta-properties of events such as location or provenance.</p> <p>(3) We have proposed several novel event matching and routing algorithms. Examples include the Berretta extensible event matching algorithm which supports efficient subscription updates such as through parameteric subscriptions; TACMaN (Type/Attribute-Centric Matching Network) is another matching algorithm which leverages (optional) types and thus allows for interoperability between different (typed and untyped) languages; ALPS (Adaptive Location-based Publish/Subscribe) is a distributed routing algorithm for mobile wireless event-based programming which adapts to communication patterns; ACTrESS (Automatic Context Transformations for Event-based Software Systems) performs automatic event transformations to mediate between different event representations in federated event-based systems.&nbsp;</p> <p>(4) We have designed and implemented a resource-efficient tracing tool called TinyTracer for effective diagnosis of distributed event-based wireless sensor network applications. TinyTracer includes a novel hybrid online/offline compression technique called Prius, and a novel efficient scheme scheme called Cadet&nbsp;for tracing distributed event communication correctly in the presence of message reordering and loss in the network.&nbsp;</p><br> <p>            Last Modified: 06/05/2013<br>      Modified by: Patrick&nbsp;T&nbsp;Eugster</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project has investigated (1) models, (2) programming support, (3) middleware support, and (4) tool support for decentralized complex event-based software.  Some of the highlights of the project in the respective categories are as follows:  (1) We have proposed the FAIDECS (Fair Decentralized Event Correlation System) model for decentralized correlation, yielding a compromise between strong guarantees and efficient implementation. We have proven bounds of agreed event correlation, and have investigated the relationships between existing event correlation languages and FAIDECS. In a parallel track we have proposed the concept of parametric subscriptions to support dynamic event-based applications such as location-based applications.  (2) We have designed and implemented the EventJava language for capturing the above-mentioned models and features. EventJava extends the mainstream Java programming language. Besides features for type-safe distributed event-based programming, EventJava also includes support for defining event contexts (called conspects) covering common meta-properties of events such as location or provenance.  (3) We have proposed several novel event matching and routing algorithms. Examples include the Berretta extensible event matching algorithm which supports efficient subscription updates such as through parameteric subscriptions; TACMaN (Type/Attribute-Centric Matching Network) is another matching algorithm which leverages (optional) types and thus allows for interoperability between different (typed and untyped) languages; ALPS (Adaptive Location-based Publish/Subscribe) is a distributed routing algorithm for mobile wireless event-based programming which adapts to communication patterns; ACTrESS (Automatic Context Transformations for Event-based Software Systems) performs automatic event transformations to mediate between different event representations in federated event-based systems.   (4) We have designed and implemented a resource-efficient tracing tool called TinyTracer for effective diagnosis of distributed event-based wireless sensor network applications. TinyTracer includes a novel hybrid online/offline compression technique called Prius, and a novel efficient scheme scheme called Cadet for tracing distributed event communication correctly in the presence of message reordering and loss in the network.        Last Modified: 06/05/2013       Submitted by: Patrick T Eugster]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CT: Making Network Layer Proofs-of-Work Work</AwardTitle>
<AwardEffectiveDate>09/01/2006</AwardEffectiveDate>
<AwardExpirationDate>08/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>399711.00</AwardTotalIntnAmount>
<AwardAmount>399711</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>carl landwehr</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Making Network Layer Proofs-of-Work Work&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Denial-of-service (DoS) attacks continue to disrupt the flow of traffic on the Internet.  Proofs-of-work or "client puzzles" are a mechanism for protecting a number of protocols against DoS attacks. A puzzle is a cryptographically or combinatorially difficult problem that is generated by a server and must be solved by a client before it receives service. The difficulty of the puzzle is determined by the server as a function of previous client behavior, server load, etc. While puzzles have been used mostly at the application layer (and even there with only limited success), we argue that to prevent DoS attacks protection must exist in a layer common to all applications: the IP layer. Before this can be realized, there are a number of significant challenges that puzzle mechanisms must overcome, including efficiency, fairness, tamper-resistance, and control. More fundamentally, we believe that puzzles will not realize their full potential until there is a solid theoretical foundation for them. To date, one does not exist. &lt;br/&gt;&lt;br/&gt;In this project we will address each of these challenges. First, we will give the puzzle problem a full provable-security treatment. Specifically, we will give a formal definition of what is a puzzle scheme, formal definitions of security for puzzles, and build puzzle mechanisms that provably meet these definitions.  As part of this, we will formally analyze existing puzzle mechanisms based on previous work by us and others.  In addition, we will explore new designs, with special attention given to puzzles constructed from T-functions, which show promise for being a basis for fast and effective puzzles.  Our work will also address control-plane issues for intelligently setting puzzle difficulties. Finally, we will demonstrate the utility of our approaches by building a smart "Internet Tar Pit", a device that employs IP puzzles to selectively slow down DoS attacks, spam, port scans, and other undesirable network communication.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/25/2006</MinAmdLetterDate>
<MaxAmdLetterDate>06/28/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0627752</AwardID>
<Investigator>
<FirstName>Wu-chang</FirstName>
<LastName>Feng</LastName>
<EmailAddress>wuchang@cs.pdx.edu</EmailAddress>
<StartDate>08/25/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Thomas</FirstName>
<LastName>Shrimpton</LastName>
<EmailAddress>teshrim@cise.ufl.edu</EmailAddress>
<StartDate>08/25/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Portland State University</Name>
<CityName>Portland</CityName>
<ZipCode>972070751</ZipCode>
<PhoneNumber>5037259900</PhoneNumber>
<StreetAddress>1600 SW 4th Ave</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Oregon</StateName>
<StateCode>OR</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7371</Code>
<Text>CYBER TRUST</Text>
</ProgramElement>
<ProgramReference>
<Code>7254</Code>
<Text>CYBER SECURITY ACT PROPOSALS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

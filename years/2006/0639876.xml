<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Steps Toward the Reinvention of Programming</AwardTitle>
<AwardEffectiveDate>11/15/2006</AwardEffectiveDate>
<AwardExpirationDate>10/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>5337538.00</AwardTotalIntnAmount>
<AwardAmount>5337538</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ephraim Glinert</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Science uses models not just to represent theories, but to think with.  The models are most useful if they are powerful enough to capture the phenomena, and small enough to be comprehensible.  This is not done enough in the expedient world of computing, where the artifacts tend to be functional rather than understandable.  Much coding today uses techniques from the 60s, often resulting in millions of lines of code.  But one's sense of intuitive entropy insists the mathematical content is tiny compared to the code size.  Environments are not just used, but also lived in and learned.  So advances in self-explanation would lift both software engineering (a disclosable system would be of great utility for practical programming) and computer science (the requirements for understandability and disclosure would naturally lead to the invention of better and higher level computational structures).  These in turn would lift design (the visible system at all levels should be clean, compact, powerful, simple, and pretty, not dirty and ponderous).  The PI's long and illustrious research career has combined interests and inventions in computer science (object-oriented programming, reflective whole systems, and networking), UI (overlapping windows and icons), education (particularly for children), design (striving for beauty as well as problem solving), and computer engineering (learning how to efficiently make whole hardware/software systems).  The alternative systems he has developed have been small in comparison with standard practice.  Squeak, for example, covers much of personal computing (including its own applications, operating environment, UI and development tools, etc.) in ~2.8MB of code (about 200,000 lines).  With a careful new design the PI is confident it could be smaller by a factor of 10 or more.  In this project the PI and his team will design and build an extremely compact and practical model of an entire personal computing system from the metal upwards, including the equivalents of an operating system, development tools, graphical user interface, applications, media, end-user programming, and internet communications, sharing and media (analogous to the web++) - as an "Exploratorium" for itself that can be readily understood by teenagers on up.  Each part of the dynamic architecture will use wholly new or newly adapted powerful ideas that should help advance understanding of how to design and build whole systems from the metal up through UI and applications; much of the small model size will derive from abstracting "the many" into "the one" and other special mathematical approaches.  This funding is for support of the central part of this large project (which is partitioned so that a complete and interesting system will result from the NSF support alone).  The software developed will be freely disseminated on multiple platforms, and extensive user testing will be conducted in schools and universities.  A key platform will be the under-powered "$100 laptop", an acid test of the pragmatic depth of the system.&lt;br/&gt;&lt;br/&gt;Broader Impacts:  Most early learning of programming is done in a non-scalable way, somewhat equivalent to banging together a doghouse with nails and planks.  What is learned doesn't scale well by a factor of 5, let alone by factors of 100+.  Even more critically, the deeper mathematics-like nature of the most powerful ideas in computing is poorly described and learned via papers, which even if they are read are often difficult to understand.  Making a well-designed system that is also instrumented to promote learning and to facilitate changes will have a dramatic and positive impact on many areas of computing.  It will constitute an example of "the system is the curriculum" for learning many important and powerful ideas, especially by teenagers and university students who comprise tomorrow's programmers, and who will find ways to make great use of a simpler yet stronger approach to personal computing.</AbstractNarration>
<MinAmdLetterDate>11/15/2006</MinAmdLetterDate>
<MaxAmdLetterDate>03/04/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0639876</AwardID>
<Investigator>
<FirstName>Alan</FirstName>
<LastName>Kay</LastName>
<EmailAddress>alan.kay@vpri.org</EmailAddress>
<StartDate>11/15/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Kimberly</FirstName>
<LastName>Rose</LastName>
<EmailAddress>kim.rose@vpri.org</EmailAddress>
<StartDate>11/15/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Ingalls</LastName>
<EmailAddress>dan.ingalls@post.harvard.edu</EmailAddress>
<StartDate>11/15/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ian</FirstName>
<LastName>Piumarta</LastName>
<EmailAddress>piumarta@speakeasy.net</EmailAddress>
<StartDate>11/15/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>ViewPoints Research Institute Inc.</Name>
<CityName>Glendale</CityName>
<ZipCode>912012425</ZipCode>
<PhoneNumber>8183323002</PhoneNumber>
<StreetAddress>1209 Grand Central Ave.</StreetAddress>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
</Institution>
<FoaInformation>
<Code>0104000</Code>
<Name>Information Systems</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7367</Code>
<Text>HCC-Human-Centered Computing</Text>
</ProgramElement>
<ProgramReference>
<Code>7367</Code>
<Text>Cyber-Human Systems</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>Frames, Interpolation and Injective Envelopes</AwardTitle>
    <AwardEffectiveDate>07/01/2006</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2010</AwardExpirationDate>
    <AwardAmount>145598</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>03040000</Code>
      <Directorate>
        <LongName>Direct For Mathematical &amp; Physical Scien</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Mathematical Sciences</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Bruce P. Palka</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The proposed research will follow three main directions. The work on &lt;br/&gt;frames will seek to find optimal frames for minimizing the effects of &lt;br/&gt;partial data loss and of quantization errors. In addition, we will see if the projections that arise from these new and highly complex frames &lt;br/&gt;can have any impact on the epsilon-paving conjecture. The second &lt;br/&gt;line of research is concerned with obtaining generalizations of the &lt;br/&gt;Nevanlinna-Pick interpolation problem for other function algebras. &lt;br/&gt;For each finite codimension subalgebra of the disk algebra, we &lt;br/&gt;believe that one can construct a family of reproducing kernel &lt;br/&gt;Hilbert spaces that play the same role as the spaces of modulus &lt;br/&gt;automorphic functions play for multiply-connected regions. Finally, we &lt;br/&gt;will continue our study of applications of injective envelopes to various problems in operator algebras.&lt;br/&gt;&lt;br/&gt;My research on frames is really motivated by the following problem. A &lt;br/&gt;signal, such as a sound wave or an image, is inherently an infinite &lt;br/&gt;dimensional object. To represent it with complete accuracy, one would need infinitely many real numbers and to store even a single real number on a computer with infinite accuracy would require infinitely many bits of information. In practice such a signal is first &lt;br/&gt;approximated by finitely many, say d, real numbers. Now suppose that we &lt;br/&gt;wish to store this "signal" on a binary machine using only N=Md pieces of information. What is the "best" way to do this so that the d real numbers can be recovered as accurately as possible? In the past, each real number was treated separately and alloted M spaces. This guarantees that each number is approximated with a certain accuracy, but if d is very large, then the sum of all the errors could be very large. The newer idea is to imagine sets of d real numbers as vectors, so that they have both a magnitude and a direction. Then instead of treating each real number separately, we will look at how far the vector points in N different directions, which now gives us N real numbers, that we will approximate and store. The problem is to find the optimal such set of directions and to prove estimates that will tell how well these new schemes work compared &lt;br/&gt;to the old methods.&lt;br/&gt;&lt;br/&gt;My research on interpolation theory is concerned with constructing &lt;br/&gt;functions of minimum norm or "energy" given certain pieces of information about the function, such as its values at just a few points and some additional side conditions.</AbstractNarration>
    <MinAmdLetterDate>01/09/2006</MinAmdLetterDate>
    <MaxAmdLetterDate>01/09/2006</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0600191</AwardID>
    <Investigator>
      <FirstName>Vern</FirstName>
      <LastName>Paulsen</LastName>
      <EmailAddress>vern@math.uh.edu</EmailAddress>
      <StartDate>01/09/2006</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Houston</Name>
      <CityName>Houston</CityName>
      <ZipCode>772042015</ZipCode>
      <PhoneNumber>7137435773</PhoneNumber>
      <StreetAddress>4800 Calhoun Boulevard</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Texas</StateName>
      <StateCode>TX</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000099</Code>
      <Name>Other Applications NEC</Name>
    </FoaInformation>
  </Award>
</rootTag>

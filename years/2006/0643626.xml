<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: New Directions in Inapproximability and Probabilistically Checkable Proofs</AwardTitle>
    <AwardEffectiveDate>02/01/2007</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2008</AwardExpirationDate>
    <AwardAmount>160000</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Tracy J. Kimbrel</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The central question studied in theoretical computer science is: how efficiently (fast) can computational problems be solved?While many problems do have efficient algorithms, there is a wide class of important problems (called NP-complete problems) which are very unlikely to have efficient algorithms. In practice however, it may suffice to solve these problems approximately. This research investigates whether approximate solutions to NP-complete problems can be found efficiently, and how good is the quality of approximation.&lt;br/&gt; The main contribution of this research is negative results, i.e. proving that for certain NP-complete problems, efficiently finding even approximate solutions is very unlikely. To illustrate the significance of proving such negative results, the investigator proves that it is unlikely to break into a certain cryptosystem, giving a guarantee of its security against malicious attacks. Another related aspect of this research is Proababilistically Checkable Proofs, a method to specify proof formats for mathematical statements, such that the validity of the proof can be checked very efficiently, by looking at only a few places in the proof instead of reading the entire proof. The research has a potential for broader impact in terms of scientific workshops, collaboration between several international researchers, developement of graduate courses, promoting undergraduate research, and advising Ph.D. students.&lt;br/&gt;&lt;br/&gt; Many computational problems arising in theory and practice are NP-complete. An extensively studied approach to cope with NP-completeness is designing polynomial time algorithms that compute approximately optimal solutions. However, it turns out that for many problems, computing approximate solutions itself is an NP-complete problem, a famous result known as the PCP Theorem, discovered in 1992. In spite of the tremendous body of research that followed this discovery, for many NP-complete problems, there is a gap between the best known approximation result, and the best known inapproximability result. This research focusses on filling this gap by proving tight inapproximability results.&lt;br/&gt; The PCP Theorem can also be viewed as a result about proof checking (and that is how it was discovered). It gives a way of specifying proofs for NP-statements such that the validity of the proof can be checked very efficiently. The research investigates constructions of more efficient PCPs, with further applications to inapproximability results. The techniques developed are likely to have new applications to areas like metric embeddings and learning theory. The research has a potential for broader impact in terms of scientific workshops, collaboration between international researchers, developement of graduate courses, promoting undergraduate research and advising Ph.D.&lt;br/&gt; students.</AbstractNarration>
    <MinAmdLetterDate>01/22/2007</MinAmdLetterDate>
    <MaxAmdLetterDate>08/24/2007</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0643626</AwardID>
    <Investigator>
      <FirstName>Subhash</FirstName>
      <LastName>Khot</LastName>
      <EmailAddress>khot@cs.nyu.edu</EmailAddress>
      <StartDate>01/22/2007</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Georgia Tech Research Corporation</Name>
      <CityName>Atlanta</CityName>
      <ZipCode>303320420</ZipCode>
      <PhoneNumber>4048944819</PhoneNumber>
      <StreetAddress>Office of Sponsored Programs</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Georgia</StateName>
      <StateCode>GA</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>2860</Code>
      <Text>THEORY OF COMPUTING</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7351</Code>
      <Text>THEORETICAL FOUNDATIONS (TF)</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>1187</Code>
      <Text>PECASE- eligible</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>2860</Code>
      <Text>THEORY OF COMPUTING</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>

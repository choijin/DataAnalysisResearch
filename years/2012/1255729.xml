<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Software Susceptibility-Driven Non-Uniform Memory Error Protection</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/01/2013</AwardEffectiveDate>
<AwardExpirationDate>03/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>207000.00</AwardTotalIntnAmount>
<AwardAmount>207000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A memory device may exhibit errors due to manufacturing defects, device aging, or particle strikes from cosmic-ray-induced neutrons. Memory errors are an important threat to computer system reliability as semiconductor technologies continue to scale. This project develops a new approach that protects against memory errors non-uniformly by exploiting unequal error susceptibility at different memory regions in a computer system. Collaboration with industry researchers facilitates the integration of developed techniques into real-world memory technologies. Results of this project will contribute to comprehensive computer system reliability that is critical to society and the health of the world's economy. Curriculum enhancement and student training in this project enable advanced human resource development that is necessary for today's and tomorrow's digital workforce.&lt;br/&gt;&lt;br/&gt;Research and development efforts within this project include four synergistic components: First, this project introduces a new software approach that systematically uncovers important characteristics of memory error propagation and its consequences. Second, research develops new energy-efficient hardware support for flexible, dynamic adjustment of memory error protection on each memory area. Third, this project devises non-uniform memory error protection policies that optimize for reliability and efficiency based on software error susceptibility and hardware protection costs. Finally, the developed error susceptibility assessment and non-uniform protection techniques are evaluated using real application scenarios. Cross-layer (software/hardware) technologies developed in this project enable wide utilization of advanced memory reliability mechanisms without significant loss of performance or energy efficiency.</AbstractNarration>
<MinAmdLetterDate>01/03/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/16/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1255729</AwardID>
<Investigator>
<FirstName>Kai</FirstName>
<LastName>Shen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kai Shen</PI_FULL_NAME>
<EmailAddress>kshen@cs.rochester.edu</EmailAddress>
<PI_PHON>5852755426</PI_PHON>
<NSF_ID>000489991</NSF_ID>
<StartDate>01/03/2013</StartDate>
<EndDate>08/16/2016</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Huang</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael C Huang</PI_FULL_NAME>
<EmailAddress>michael.huang@rochester.edu</EmailAddress>
<PI_PHON>5852752111</PI_PHON>
<NSF_ID>000300067</NSF_ID>
<StartDate>08/16/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Huang</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael C Huang</PI_FULL_NAME>
<EmailAddress>michael.huang@rochester.edu</EmailAddress>
<PI_PHON>5852752111</PI_PHON>
<NSF_ID>000300067</NSF_ID>
<StartDate>01/03/2013</StartDate>
<EndDate>08/16/2016</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Rochester</Name>
<CityName>Rochester</CityName>
<ZipCode>146270140</ZipCode>
<PhoneNumber>5852754031</PhoneNumber>
<StreetAddress>518 HYLAN, RC BOX 270140</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY25</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041294109</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ROCHESTER</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041294109</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Rochester]]></Name>
<CityName>Rochester</CityName>
<StateCode>NY</StateCode>
<ZipCode>146270140</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8081</Code>
<Text>Failure Resistant Systems(FRS)</Text>
</ProgramElement>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~138000</FUND_OBLG>
<FUND_OBLG>2014~34500</FUND_OBLG>
<FUND_OBLG>2015~34500</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Even though they are quite infrequent, errors do happen in computers. When they do, people using them get affected in various ways: including having to invest significant time to find out what went wrong (see Fig. 1). What can we do about them? In fact, we already have the answers. Error protection is an age old technique that even predates modern computers. The real issue is that of cost. Error protection is often more costly then the cost of the consequence of errors. The reason is that error protection has been a fixed feature of the machine and therefore increases the cost of <em>every</em>&nbsp;program instance whereas typically only some applications are error-sensitive and even for those applications, only a part of their data or code are vulnerable.</p> <p>This project sets out to address this issue by designing cost-proportional protection mechanisms and vulnerability-driven protections. In other words, the system will make protection costly only for the cases where protection is needed, and future programs can more precisely describe its protection need to the system. We have made substantial progress in both targets.</p> <p>On the system hardware side, we have proposed, refined, and evaluated a design that significantly improved over the state of the art in many respects. First, our architecture allows selective protection and thus only incurs area, energy, and traffic cost for protected pages. And even these overheads are being reduced significantly through optimizations. Second, the design also changed a number of fundamental requirements the state-of-the-art design imposed and makes it much more accessible to low-end designs. In other words, while the state-of-the-art design requires a very aggressive baseline (e.g., lots of memory channels needed) to begin with, our design almost completely relaxed this requirement and can be implemented on essentially any architecture. The details of the design and analysis has been presented to industry collaborators, and summarized in an archival paper "Redundant Memory Array Architecture for Efficient Selective Protection" to be presented to the research community.&nbsp;</p> <p>On the software side, we have performed a number of systematic analyses (in several different papers) as well as case stuides to evaluate how such a selective memory protection system works. For instance, we took a widely used research simulation platform in plasma physics and converted it into a form where selective memory protection is requsted only on the most critical part of the code and data. Simultaneously, we leverage the inherent robustness due to the nature of the simulation for the remainder of the software. We found out that such a design would need comparatively little extra resources to protect the program at essentially the same degree of robustness when executed on the most advanced high-end memory protection system.</p> <p>The implication of our research findings can be significant. Today, scientists routinely deal with computer errors that could damage their work, compromise their analysis, or otherwise frustrate them. While we have the techniques to protect them just as we do so for financial transactions, the cost of deploying such techniques is simply too high. When our research finding gets translated into field practice, this "protection divide" can be all but eliminated. More broadly, the technology will also easily translate to consumer devices and help eliminate a large portion of computer error-related nuisance for society at large.</p><br> <p>            Last Modified: 05/25/2017<br>      Modified by: Michael&nbsp;C&nbsp;Huang</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2017/1255729/1255729_10226945_1495658534862_osiris_error--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1255729/1255729_10226945_1495658534862_osiris_error--rgov-800width.jpg" title="Fig. 1"><img src="/por/images/Reports/POR/2017/1255729/1255729_10226945_1495658534862_osiris_error--rgov-66x44.jpg" alt="Fig. 1"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Illustration of an actual error caught in diagnostic data. Clearly the rectangle region is abnormal and it's caused by computer error. However, scientists have to first suspect something is wrong and pore over large amount of data to find this particular frame to be certain of a computer error.</div> <div class="imageCredit">University of Rochester</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Michael&nbsp;C&nbsp;Huang</div> <div class="imageTitle">Fig. 1</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Even though they are quite infrequent, errors do happen in computers. When they do, people using them get affected in various ways: including having to invest significant time to find out what went wrong (see Fig. 1). What can we do about them? In fact, we already have the answers. Error protection is an age old technique that even predates modern computers. The real issue is that of cost. Error protection is often more costly then the cost of the consequence of errors. The reason is that error protection has been a fixed feature of the machine and therefore increases the cost of every program instance whereas typically only some applications are error-sensitive and even for those applications, only a part of their data or code are vulnerable.  This project sets out to address this issue by designing cost-proportional protection mechanisms and vulnerability-driven protections. In other words, the system will make protection costly only for the cases where protection is needed, and future programs can more precisely describe its protection need to the system. We have made substantial progress in both targets.  On the system hardware side, we have proposed, refined, and evaluated a design that significantly improved over the state of the art in many respects. First, our architecture allows selective protection and thus only incurs area, energy, and traffic cost for protected pages. And even these overheads are being reduced significantly through optimizations. Second, the design also changed a number of fundamental requirements the state-of-the-art design imposed and makes it much more accessible to low-end designs. In other words, while the state-of-the-art design requires a very aggressive baseline (e.g., lots of memory channels needed) to begin with, our design almost completely relaxed this requirement and can be implemented on essentially any architecture. The details of the design and analysis has been presented to industry collaborators, and summarized in an archival paper "Redundant Memory Array Architecture for Efficient Selective Protection" to be presented to the research community.   On the software side, we have performed a number of systematic analyses (in several different papers) as well as case stuides to evaluate how such a selective memory protection system works. For instance, we took a widely used research simulation platform in plasma physics and converted it into a form where selective memory protection is requsted only on the most critical part of the code and data. Simultaneously, we leverage the inherent robustness due to the nature of the simulation for the remainder of the software. We found out that such a design would need comparatively little extra resources to protect the program at essentially the same degree of robustness when executed on the most advanced high-end memory protection system.  The implication of our research findings can be significant. Today, scientists routinely deal with computer errors that could damage their work, compromise their analysis, or otherwise frustrate them. While we have the techniques to protect them just as we do so for financial transactions, the cost of deploying such techniques is simply too high. When our research finding gets translated into field practice, this "protection divide" can be all but eliminated. More broadly, the technology will also easily translate to consumer devices and help eliminate a large portion of computer error-related nuisance for society at large.       Last Modified: 05/25/2017       Submitted by: Michael C Huang]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

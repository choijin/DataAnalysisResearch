<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>BIGDATA: Mid-Scale: DA: Collaborative Research: Genomes Galore - Core Techniques, Libraries, and Domain Specific Languages for High-Throughput DNA Sequencing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/01/2013</AwardEffectiveDate>
<AwardExpirationDate>12/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>350000.00</AwardTotalIntnAmount>
<AwardAmount>350000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Wendy Nilsen</SignBlockName>
<PO_EMAI>wnilsen@nsf.gov</PO_EMAI>
<PO_PHON>7032922568</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The recent emergence of a variety of high-throughput DNA sequencing instrumentation, and the concomitant rapid decline in the cost per base, is causing severe data deluge in all areas of life sciences. The heterogeneity of sequencing instrumentation and the vast diversity of applications enabled by them are creating numerous analytics problems for the bioinformatics community to address. In addition, the conventional serial algorithms that have been the mainstay of bioinformatics research are severely challenged by the ever increasing data sets. The goal of the proposed project is to develop core techniques and software libraries to enable scalable, efficient, high performance computing solutions for high-throughput DNA sequencing, also known as next-generation sequencing (NGS). To empower the larger community, the project seeks to 1) identify a set of core functionalities that frequently occur in many types of high-throughput sequencing applications, 2) develop efficient parallel algorithms and high performance implementations for them, 3) pursue mapping to HPC architectures including clusters, multicores, and GPUs, 4) develop software libraries encapsulating these functionalities with the goal of enabling the bioinformatics community to exploit HPC architectures, and 5) design a domain specific language to enable bioinformatics researchers unfamiliar with parallel processing to benefit from this work through automatic generation of parallel codes. The research will be conducted in the context of challenging problems in human genetics and metagenomics, in collaboration with domain specialists.&lt;br/&gt;&lt;br/&gt;This project is focused on a key capacity building activity to facilitate pervasive use of parallelism by NGS bioinformatics researchers and practitioners. The goal is to empower the broader community to benefit from clever parallel algorithms, highly tuned implementations, and specialized HPC hardware, without requiring expertise in any of these. The software libraries will be released as open source for use, further development, enhancements, and incorporation by the community. The project will provide opportunities for training postdoctoral and graduate students in bigdata analytics and computer science driven interdisciplinary research. Diverse existing mechanisms at the partner institutions will be leveraged to advance goals of minority and women recruitment, undergraduate participation in research, and K-12 outreach.</AbstractNarration>
<MinAmdLetterDate>09/21/2012</MinAmdLetterDate>
<MaxAmdLetterDate>09/21/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1247701</AwardID>
<Investigator>
<FirstName>Oyekunle</FirstName>
<LastName>Olukotun</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Oyekunle A Olukotun</PI_FULL_NAME>
<EmailAddress>kunle@stanford.edu</EmailAddress>
<PI_PHON>6507253713</PI_PHON>
<NSF_ID>000320046</NSF_ID>
<StartDate>09/21/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Stanford University</Name>
<CityName>Stanford</CityName>
<ZipCode>943052004</ZipCode>
<PhoneNumber>6507232300</PhoneNumber>
<StreetAddress>450 Jane Stanford Way</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009214214</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>LELAND STANFORD JUNIOR UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009214214</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Stanford University]]></Name>
<CityName>Stanford</CityName>
<StateCode>CA</StateCode>
<ZipCode>943054100</ZipCode>
<StreetAddress><![CDATA[340 Panama S]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8083</Code>
<Text>Big Data Science &amp;Engineering</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8083</Code>
<Text>Big Data Science &amp;Engineering</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~350000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Genomics is transforming medicine and our understanding of biology in fundamental ways. Genomics data, however, is growing faster than Moore&rsquo;s Law. Modern sequencing technologies produce much longer reads than second generation technologies and reveal a much broader mutation spectrum of disease and evolution. The limitation in using these technologies is the cost of computation. Over 1,300 CPU hours are required for reference-guided assembly of the human genome, and over 15,600 CPU hours are required for de novo assembly. This motivates the need for much more efficient genomics computation methods. Field Programmable Gate Arrays (FPGA) are a potential solution to the Genomics computation bottleneck because they have the capability to provide orders of magnitude of performance improvement compared to a CPU. However, FPGAs are very difficult to program and application development for FPGA has none of the productivity benefits of CPUs; typical FPGA application development takes weeks beyond the software description of the algorithms.&nbsp;&nbsp;The key intellectual advance provided by this project is to enable Genomics algorithm developers to get the computation benefits of FPGAs while retaining programing productivity of CPUs.</p> <p>&nbsp;</p> <p>FPGAs can be used to efficiently process genomic data. There are multiple implementations of the Smith-Waterman algorithm for both DNA and protein sequences. However, all of these implementations have been done using low-level hardware description languages (HDLs) like Verilog and VHDL. HDLs have none of the productivity features of modern software languages. The current FPGA programming model has limited the creation of efficient custom hardware to experts in digital logic and hardware design. Our goal is to allow experts in Genomics algorithms to develop efficient hardware designs without becoming expert hardware designers. Over course of this project we have been investigating how parallel patterns and the Delite Domain Specific Language (DSL) compiler framework can be used to generate high-performance hardware for FPGAs. We have developed two domain specific languages (DSLs) for querying and analyzing next-generation sequencing data that can be compiled using the Delite framework into optimized FPGA implementations.</p> <p>&nbsp;</p> <p>The broader impacts of this work are to empower the broader Genomics community to benefit from clever parallel algorithms, and specialized FPGA hardware, without requiring expertise in any of these by using DSLs tuned to their Genomics processing tasks. Our tools have been released as open source for use, further development, enhancements, and incorporation by the community.&nbsp;The project has provided opportunities for graduate students in bigdata analytics and computer science driven interdisciplinary research.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 07/01/2018<br>      Modified by: Oyekunle&nbsp;A&nbsp;Olukotun</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Genomics is transforming medicine and our understanding of biology in fundamental ways. Genomics data, however, is growing faster than Moore?s Law. Modern sequencing technologies produce much longer reads than second generation technologies and reveal a much broader mutation spectrum of disease and evolution. The limitation in using these technologies is the cost of computation. Over 1,300 CPU hours are required for reference-guided assembly of the human genome, and over 15,600 CPU hours are required for de novo assembly. This motivates the need for much more efficient genomics computation methods. Field Programmable Gate Arrays (FPGA) are a potential solution to the Genomics computation bottleneck because they have the capability to provide orders of magnitude of performance improvement compared to a CPU. However, FPGAs are very difficult to program and application development for FPGA has none of the productivity benefits of CPUs; typical FPGA application development takes weeks beyond the software description of the algorithms.  The key intellectual advance provided by this project is to enable Genomics algorithm developers to get the computation benefits of FPGAs while retaining programing productivity of CPUs.     FPGAs can be used to efficiently process genomic data. There are multiple implementations of the Smith-Waterman algorithm for both DNA and protein sequences. However, all of these implementations have been done using low-level hardware description languages (HDLs) like Verilog and VHDL. HDLs have none of the productivity features of modern software languages. The current FPGA programming model has limited the creation of efficient custom hardware to experts in digital logic and hardware design. Our goal is to allow experts in Genomics algorithms to develop efficient hardware designs without becoming expert hardware designers. Over course of this project we have been investigating how parallel patterns and the Delite Domain Specific Language (DSL) compiler framework can be used to generate high-performance hardware for FPGAs. We have developed two domain specific languages (DSLs) for querying and analyzing next-generation sequencing data that can be compiled using the Delite framework into optimized FPGA implementations.     The broader impacts of this work are to empower the broader Genomics community to benefit from clever parallel algorithms, and specialized FPGA hardware, without requiring expertise in any of these by using DSLs tuned to their Genomics processing tasks. Our tools have been released as open source for use, further development, enhancements, and incorporation by the community. The project has provided opportunities for graduate students in bigdata analytics and computer science driven interdisciplinary research.           Last Modified: 07/01/2018       Submitted by: Oyekunle A Olukotun]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

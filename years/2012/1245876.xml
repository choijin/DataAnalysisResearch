<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Courseware for Improving Undergraduate Students' Debugging Skill in GPU Programming</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2013</AwardEffectiveDate>
<AwardExpirationDate>02/28/2018</AwardExpirationDate>
<AwardTotalIntnAmount>174021.00</AwardTotalIntnAmount>
<AwardAmount>174021</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Victor Piotrowski</SignBlockName>
<PO_EMAI>vpiotrow@nsf.gov</PO_EMAI>
<PO_PHON>7032925141</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project is developing educational materials to help undergraduate computer science students improve their debugging skill in GPU (Graphics Processing Unit) programming. As multi-core processor architecture becomes the norm, undergraduate computer science students need to shift their focus to multi-core parallel programming. GPU programming is an important part of multi-core parallel programming, especially in heterogeneous computing environments that use a mixture of CPUs, GPUs, and other specialty cores. To write GPU programs, students need to learn special programming languages and new debugging skills. Debugging is particularly challenging for GPU programming because of the complexity of parallel processing in multi-core environments. However, there is a shortage of educational materials for teaching how to debug GPU programs. The project goals are as follows:&lt;br/&gt;&lt;br/&gt;1. Software defect pattern analysis: Collect and analyze common mistakes made by novice programmers in GPU programming. &lt;br/&gt;2. Teaching materials: Based on the analysis of the software defects, develop teaching materials such as debugging checklists; create tutorials to teach debugging techniques in GPU programming; develop debugging exercises for students to practice their debugging skills.&lt;br/&gt;3. Evaluation: Apply the educational materials to parallel and distributed computing courses and computer graphics courses, and measure the efficacy of this approach.&lt;br/&gt;4. Dissemination: Share the educational materials online with students and instructors and publicize their existence through other online venues such as the ACM SIGGRAPH Education Committee site and print venues such as the IEEE Computer Graphics &amp; Applications Education Department.</AbstractNarration>
<MinAmdLetterDate>09/16/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/16/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1245876</AwardID>
<Investigator>
<FirstName>Scott</FirstName>
<LastName>Owen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Scott Owen</PI_FULL_NAME>
<EmailAddress>sowen@gsu.edu</EmailAddress>
<PI_PHON>4046510675</PI_PHON>
<NSF_ID>000470855</NSF_ID>
<StartDate>09/16/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ying</FirstName>
<LastName>Zhu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ying Zhu</PI_FULL_NAME>
<EmailAddress>yzhu@cs.gsu.edu</EmailAddress>
<PI_PHON>4044135713</PI_PHON>
<NSF_ID>000240283</NSF_ID>
<StartDate>09/16/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia State University Research Foundation, Inc.</Name>
<CityName>Atlanta</CityName>
<ZipCode>303032921</ZipCode>
<PhoneNumber>4044133570</PhoneNumber>
<StreetAddress>58 Edgewood Avenue</StreetAddress>
<StreetAddress2><![CDATA[PO Box 3999]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>GA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>837322494</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGIA STATE UNIVERSITY RESEARCH FOUNDATION, INC.</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Georgia State University Research Foundation, Inc.]]></Name>
<CityName>Atlanta</CityName>
<StateCode>GA</StateCode>
<ZipCode>303023994</ZipCode>
<StreetAddress><![CDATA[34 Peacthree Stree, suite 1441]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>GA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7513</Code>
<Text>TUES-Type 1 Project</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0413</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~174021</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The goal of this project is to develop educational materials to help undergraduate students improve their debugging skill in GPU (Graphics Processing Unit) programming. For two decades, GPU has been essential to computer graphics. Now it has also become essential for high performance computing. In the TOP500 supercomputer rankings published in June 2018, for the first time in history, GPUs outnumber CPUs in terms of computing performance in the world&rsquo;s most powerful supercomputers. Therefore, it is important for our students to learn how to write GPU programs.</p> <p>Writing programs for GPU is getting more complicated. As a result, debugging these programs is also getting more complicated. Debugging any program can be time consuming and frustrating. But debugging GPU programs can be particularly challenging due to the complexity of writing programs for both CPU and GPU. Debugging GPU programs also requires special debugging tools and techniques.</p> <p>Debugging is one of the hardest things for students to learn, and yet debugging is rarely taught in computer science courses. We surveyed many computer science courses that involve GPU programming and found very few of them taught GPU debugging in detail. Most textbooks and online tutorials on computer graphics and GPU computing also do not provide enough coverage on GPU debugging. Although there is a lot of educational materials on GPU programming, there is no comprehensive guide in GPU debugging. This project is an attempt to address this issue.</p> <p>The outcome of this project is a web site that contains three comprehensive debugging guides for GPU based programming: OpenGL Debugging Guide, WebGL Debugging Guide, and OpenCL Debugging Guide. OpenGL and WebGL are industry standard tools for 3D graphics programming. OpenCL is an industry standard tool for general purpose computing on GPU. Each debugging guide contains bug classifications, tutorials on various debugging techniques, and checklists for common errors. These tutorials teach students how to write code to retrieve error messages, how to read programs to track down bugs that do not generate error messages, and how to use various GPU debugging tools.&nbsp;</p> <p>This web site is designed primarily as supplemental teaching materials for college level courses on 3D computer graphics, game programming, or heterogeneous computing courses. Instructors may provide this web site as a reference to their students for learning GPU debugging techniques. Although the primary audience are undergraduate college students, anyone who is interested in learning GPU programming can benefit from this resource.</p> <p>The web site is at <a href="https://sites.google.com/site/debuggpuprograms/">https://sites.google.com/site/debuggpuprograms/</a> and it is open to the public.</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/02/2018<br>      Modified by: Ying&nbsp;Zhu</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The goal of this project is to develop educational materials to help undergraduate students improve their debugging skill in GPU (Graphics Processing Unit) programming. For two decades, GPU has been essential to computer graphics. Now it has also become essential for high performance computing. In the TOP500 supercomputer rankings published in June 2018, for the first time in history, GPUs outnumber CPUs in terms of computing performance in the world?s most powerful supercomputers. Therefore, it is important for our students to learn how to write GPU programs.  Writing programs for GPU is getting more complicated. As a result, debugging these programs is also getting more complicated. Debugging any program can be time consuming and frustrating. But debugging GPU programs can be particularly challenging due to the complexity of writing programs for both CPU and GPU. Debugging GPU programs also requires special debugging tools and techniques.  Debugging is one of the hardest things for students to learn, and yet debugging is rarely taught in computer science courses. We surveyed many computer science courses that involve GPU programming and found very few of them taught GPU debugging in detail. Most textbooks and online tutorials on computer graphics and GPU computing also do not provide enough coverage on GPU debugging. Although there is a lot of educational materials on GPU programming, there is no comprehensive guide in GPU debugging. This project is an attempt to address this issue.  The outcome of this project is a web site that contains three comprehensive debugging guides for GPU based programming: OpenGL Debugging Guide, WebGL Debugging Guide, and OpenCL Debugging Guide. OpenGL and WebGL are industry standard tools for 3D graphics programming. OpenCL is an industry standard tool for general purpose computing on GPU. Each debugging guide contains bug classifications, tutorials on various debugging techniques, and checklists for common errors. These tutorials teach students how to write code to retrieve error messages, how to read programs to track down bugs that do not generate error messages, and how to use various GPU debugging tools.   This web site is designed primarily as supplemental teaching materials for college level courses on 3D computer graphics, game programming, or heterogeneous computing courses. Instructors may provide this web site as a reference to their students for learning GPU debugging techniques. Although the primary audience are undergraduate college students, anyone who is interested in learning GPU programming can benefit from this resource.  The web site is at https://sites.google.com/site/debuggpuprograms/ and it is open to the public.          Last Modified: 10/02/2018       Submitted by: Ying Zhu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative Research: Designing a Patient-Oriented Prescription Language: An Executable Medical Algorithm for Gestational Diabetes Mellitus</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>24903.00</AwardTotalIntnAmount>
<AwardAmount>24903</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Preventable errors in healthcare are a leading cause of patient injury and death.  Despite considerable effort and the expenditure of billions of dollars, computerization has yet to improve the efficacy or safety of healthcare.  To this problem, the PIs bring a novel insight: a prescription is a program.  That is, they hypothesize that prescription writing is a long lost sibling of software engineering, using many computer programming constructs but without the benefit of the extensive conceptual framework provided by Computer Science.  This project will test this hypothesis by exploiting software engineering and programming languages know?how to create a highly?intuitive, domain specific language for building and executing prescriptions. The PIs will then build and validate a "patient oriented prescription" to manage the care of patients with Gestational Diabetes Mellitus (GDM), a disease affecting 600,000 women annually.&lt;br/&gt;&lt;br/&gt;Limitations of current GDM management include low patient adherence, modest efficacy of interventions, time?burden for clinicians, and cost.  Using extensive archives of rich data from real patients, including diet, activity, glucose readings, and insulin use, the PIs will perform pure computer-based simulations that will help them determine how their POP-GDM program will respond to real-world data.  They will also perform simulations with real clinicians, actor patients, and simulated inputs from smartphones, glucometers, and accelerometers in our state of the art medical simulation facility.  The PIs expect this work to generate multiple new insights regarding the building and maintenance of multi-stage programs, the development of new kinds of analyses of programs, and the discovery of new general methods for developing high-reliability software that facilitates collaboration between machines and humans.</AbstractNarration>
<MinAmdLetterDate>08/30/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/30/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1218103</AwardID>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Flatt</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Matthew R Flatt</PI_FULL_NAME>
<EmailAddress>mflatt@cs.utah.edu</EmailAddress>
<PI_PHON>8015879091</PI_PHON>
<NSF_ID>000348159</NSF_ID>
<StartDate>08/30/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<StreetAddress2><![CDATA[Second Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009095365</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF UTAH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009095365</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Utah]]></Name>
<CityName>Salt Lake City</CityName>
<StateCode>UT</StateCode>
<ZipCode>841129205</ZipCode>
<StreetAddress><![CDATA[50 Central Campus Dr Rm 3190]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~24903</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>POP-PL is a programming language for managing medical prescriptions, including a specific application in the treatment of Gestational Diabetes Mellitus. This combination of computer science and medical science &ndash; going beyond mere computerization of care, and instead importing the tools and techniques of software development to prescription development &ndash; depends on the Racket programming environment for the creation of the new programming language. Our portion of the project involves improving Racket to better support the needs and goals of POP-PL.</p> <p>Our improvements to Racket include better support for modern mobile devices, which are primary based on ARM processors and constrained to less resource-intensive frameworks than are commonly used on desktop systems. We improved Racket for ARM processors by retargeting and expanding Racket's internal just-in-time compiler. In addition, we restructured the Racket implementation into components that can be more easily selected for inclusion or omission on a target device.</p> <p>Meanwhile, efforts to improve Racket for POP-PL lead to the discovery of a new model for describing a facet of a programming language. The new model addresses that way that a program's variable are managed as the program is compiled into a lower-level representation for execution. For the immediate project, the new model of variable binding makes the POP-PL implementation more reliable. The improvement is more general, however, enabling better support for future programming languages that are created for different application domains &ndash; not only in Racket, but also in environment such as JavaScript and Rust.</p><br> <p>            Last Modified: 12/14/2015<br>      Modified by: Matthew&nbsp;R&nbsp;Flatt</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ POP-PL is a programming language for managing medical prescriptions, including a specific application in the treatment of Gestational Diabetes Mellitus. This combination of computer science and medical science &ndash; going beyond mere computerization of care, and instead importing the tools and techniques of software development to prescription development &ndash; depends on the Racket programming environment for the creation of the new programming language. Our portion of the project involves improving Racket to better support the needs and goals of POP-PL.  Our improvements to Racket include better support for modern mobile devices, which are primary based on ARM processors and constrained to less resource-intensive frameworks than are commonly used on desktop systems. We improved Racket for ARM processors by retargeting and expanding Racket's internal just-in-time compiler. In addition, we restructured the Racket implementation into components that can be more easily selected for inclusion or omission on a target device.  Meanwhile, efforts to improve Racket for POP-PL lead to the discovery of a new model for describing a facet of a programming language. The new model addresses that way that a program's variable are managed as the program is compiled into a lower-level representation for execution. For the immediate project, the new model of variable binding makes the POP-PL implementation more reliable. The improvement is more general, however, enabling better support for future programming languages that are created for different application domains &ndash; not only in Racket, but also in environment such as JavaScript and Rust.       Last Modified: 12/14/2015       Submitted by: Matthew R Flatt]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Shared Memory Architectures and Microarchitectures for Heterogeneous General-Purpose Chips</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2012</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The computing industry is currently producing and developing chips that include processor cores of different types.  The move towards heterogeneous chips is due to two trends: the ability to squeeze more transistors on each chip and the improved power-efficiency of using specific cores for specific purposes.  This research project extends the inter-core communication systems and precise specifications of homogeneous chips to heterogeneous chips.   The benefits of extending homogeneous communication paradigms include improved performance and improved power-efficiency, and preliminary results show orders of magnitude improvements in both metrics.  Society relies upon computers for ever more purposes, and qualitatively improving their performance and power-efficiency are critical to future computing platforms.  Furthermore, by extending homogeneous specification methodologies, this research project facilitates chip testing and validation for heterogeneous chips, which is a significant fraction of industry effort in chip development, and eases the programming of these chips, which is among the biggest challenges in computing today.  &lt;br/&gt; &lt;br/&gt;This research project consists of two technical thrusts.  The first thrust is the development of memory systems for heterogeneous chips.  Rather than treat a heterogeneous chip as two distinct systems that happen to share a chip, the goal is to closely integrate the heterogeneous cores in a systematic fashion that enables most communication between cores to be performed via on-chip caches rather than via off-chip memory.   The second research thrust is to extend the notion of a computer architecture--an implementation-independent specification of a processor's behavior--from homogeneous systems to chip-wide heterogeneous systems.  This research project involves the design and experimental evaluation of heterogeneous processor chips, and the bulk of the experimental work uses full-system simulation and experiments on purchased hardware.  The contributions of this project will be heterogeneous processor chips that have significantly greater performance and power-efficiency, as well as implementation-independent architectures for heterogeneous chips.   Society will be using heterogeneous processor chips in personal computers, in smartphones, and via cloud-provided services.  Qualitatively improving these chips will enhance user computing experiences and enable new and exciting computing applications.</AbstractNarration>
<MinAmdLetterDate>07/27/2012</MinAmdLetterDate>
<MaxAmdLetterDate>07/27/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1216695</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Sorin</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel Sorin</PI_FULL_NAME>
<EmailAddress>sorin@ee.duke.edu</EmailAddress>
<PI_PHON>9196843030</PI_PHON>
<NSF_ID>000280417</NSF_ID>
<StartDate>07/27/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Duke University</Name>
<CityName>Durham</CityName>
<ZipCode>277054010</ZipCode>
<PhoneNumber>9196843030</PhoneNumber>
<StreetAddress>2200 W. Main St, Suite 710</StreetAddress>
<StreetAddress2><![CDATA[Erwin Square]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>044387793</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>DUKE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>044387793</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Duke University]]></Name>
<CityName/>
<StateCode>NC</StateCode>
<ZipCode>277080291</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~300000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In this project, we explored how to design and program new types of<br />computer chips that contain a variety of different processor types.<br />When we began the project, there were many questions regarding how to<br />organize such chips, with the most pressing question being how the<br />processor cores should communicate with each other.&nbsp; <br /><br />In this project, we made the following intellectual contributions:<br /><br />1) Hardware: We defied conventional wisdom by showing that a chip with<br />general-purpose processor (CPU) cores and graphics processor unit<br />(GPU) cores could use a technique known as hardware cache coherence<br />for communication.&nbsp; Previous research suggested that coherence would<br />not scale to chips with many cores, particularly if some of those<br />cores are GPU cores.&nbsp; This result is important in that coherence has<br />been a mainstay of modern CPU chips and it helps to provide a simpler<br />platform for programmers who would otherwise have to worry about how<br />to move data between cores.<br /><br />2) Hardware/Software Interface: We upset conventional wisdowm by<br />showing that a chip with many GPU-like cores could present a<br />"conservative" interface to the software.&nbsp; This interface, called<br />sequential consistency (SC), heavily restricts how the hardware can<br />interleave memory accesses performed by the cores (which could hurt<br />performance) but it is simpler for programmers to reason about.&nbsp; Our<br />work showed that SC is a viable interface for these chips, because the<br />software that runs on these chips cannot take advantage of hardware<br />reordering accesses to memory.<br /><br />3) Software: We developed the first "task-parallel" runtime system for<br />chips with CPU and GPU cores.&nbsp; With this runtime system, programmers<br />can take advantage of the performance of these heterogeneous-core<br />chips while using a programming model (task-parallel) that is<br />well-suited to certain algorithms.<br /><br />In addition to our technical contributions, we had the following broader impact:<br /><br />1) We trained several PhD students, including Mr. Blake Hechtman (now<br />designing heterogeneous chips at Oracle), Ms. Meng Zhang, and<br />Mr. Weidan Wu.<br /><br />2) We trained several undergraduate research assistants, including<br />Ms. Martha Barker (now working at Oracle).<br /><br />3) The lead PhD student, Blake Hechtman, spent a 6-month internship at<br />AMD, where we achieved significant technology transfer.<br /><br /></p><br> <p>            Last Modified: 08/01/2016<br>      Modified by: Daniel&nbsp;Sorin</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In this project, we explored how to design and program new types of computer chips that contain a variety of different processor types. When we began the project, there were many questions regarding how to organize such chips, with the most pressing question being how the processor cores should communicate with each other.    In this project, we made the following intellectual contributions:  1) Hardware: We defied conventional wisdom by showing that a chip with general-purpose processor (CPU) cores and graphics processor unit (GPU) cores could use a technique known as hardware cache coherence for communication.  Previous research suggested that coherence would not scale to chips with many cores, particularly if some of those cores are GPU cores.  This result is important in that coherence has been a mainstay of modern CPU chips and it helps to provide a simpler platform for programmers who would otherwise have to worry about how to move data between cores.  2) Hardware/Software Interface: We upset conventional wisdowm by showing that a chip with many GPU-like cores could present a "conservative" interface to the software.  This interface, called sequential consistency (SC), heavily restricts how the hardware can interleave memory accesses performed by the cores (which could hurt performance) but it is simpler for programmers to reason about.  Our work showed that SC is a viable interface for these chips, because the software that runs on these chips cannot take advantage of hardware reordering accesses to memory.  3) Software: We developed the first "task-parallel" runtime system for chips with CPU and GPU cores.  With this runtime system, programmers can take advantage of the performance of these heterogeneous-core chips while using a programming model (task-parallel) that is well-suited to certain algorithms.  In addition to our technical contributions, we had the following broader impact:  1) We trained several PhD students, including Mr. Blake Hechtman (now designing heterogeneous chips at Oracle), Ms. Meng Zhang, and Mr. Weidan Wu.  2) We trained several undergraduate research assistants, including Ms. Martha Barker (now working at Oracle).  3) The lead PhD student, Blake Hechtman, spent a 6-month internship at AMD, where we achieved significant technology transfer.         Last Modified: 08/01/2016       Submitted by: Daniel Sorin]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

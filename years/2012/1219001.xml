<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Synthesis-Driven Methods for Reuse, Integration, and Programming of Specialized Accelerators in Systems-on-Chip</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2012</AwardEffectiveDate>
<AwardExpirationDate>06/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>450000.00</AwardTotalIntnAmount>
<AwardAmount>450000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A System-on-Chip (SoC) is the emerging computing platform that lies at the core of a variety of systems from computer servers in data centers to embedded systems and mobile devices. As semiconductor technology progresses, in order to deliver higher performance under tighter power constraints, SoCs increasingly combine various programmable cores, which provide precious flexibility through software, with many specialized accelerators, hardware modules optimized to execute only specific functions without dissipating too much power. The result is a heterogeneous system that is energy efficient but also very difficult to design. Indeed, the growth of SoC complexity has been outpacing progress in the computer-aided design (CAD) tools which are available to computer engineers. This design-productivity gap is a gloomy trend for the entire semiconductor industry.   The PI will address this challenge by establishing Supervised Design-Space Exploration as the foundation for a new component-based design environment in which hardware-accelerator developers, software programmers and system architects can interact effectively while they each pursue their specific goals. In particular, the PI will develop CAD methodologies and tools that:  (1) at the component-level, assist developers and programmers in the cost/performance modeling and optimization of accelerators to enable architectural exploration and to increase their reusability across many potential SoC designs; and (2) at the system-level, assist architects in the automatic integration of accelerators and other heterogeneous components to obtain an optimal implementation of a given SoC.&lt;br/&gt;&lt;br/&gt;This proposal will allow the PI to train graduate and undergraduate students in the design and programming of innovative SoC platforms for a variety of application domains from computer vision to security and networking. A core part of the proposal is the development of a new capstone course that is aimed at breaking the historical boundaries between software programming and hardware design which are still present across many electrical engineering and computer science curricula.</AbstractNarration>
<MinAmdLetterDate>06/05/2012</MinAmdLetterDate>
<MaxAmdLetterDate>05/08/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1219001</AwardID>
<Investigator>
<FirstName>Luca</FirstName>
<LastName>Carloni</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Luca Carloni</PI_FULL_NAME>
<EmailAddress>luca@cs.columbia.edu</EmailAddress>
<PI_PHON>2129397043</PI_PHON>
<NSF_ID>000490797</NSF_ID>
<StartDate>06/05/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Columbia University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100276902</ZipCode>
<PhoneNumber>2128546851</PhoneNumber>
<StreetAddress>2960 Broadway</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>049179401</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF COLUMBIA UNIVERSITY IN THE CITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>049179401</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Columbia University]]></Name>
<CityName>New York</CityName>
<StateCode>NY</StateCode>
<ZipCode>100276902</ZipCode>
<StreetAddress><![CDATA[2960 Broadway]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~400000</FUND_OBLG>
<FUND_OBLG>2014~50000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>Heterogeneous System-on-Chip (SoC) architectures have emerged as a fundamental computing platform for a variety of systems from mobile devices to data centers. In heterogeneous SoC architectures, designers combine computing components that have different natures, e.g. processor cores and specialized-hardware accelerators. Differently from a general-purpose processor that may execute a variety of software programs, an accelerator executes only a dedicated function but in a way that is orders of magnitude more efficient than software. Hence, adding many accelerators into a SoC provides higher performance and energy savings for critical functions that are computationally intensive. Heterogeneous architectures, however, increase design complexity in terms of hardware-software interactions, access to shared resources, and diminished regularity of the overall system design. </span></p> <p><span>The PI and his collaborators have addressed these challenges by developing an innovative methodology that improves the productivity of SoC designers and programmers as it promotes the use of virtual platforms, high-level synthesis (HLS), and component reuse. <span>&nbsp;</span>The methodology raises the level of abstraction in the design process to system-level design (SLD). With SLD, a hardware component like an accelerator can be designed more efficiently with a focus on its algorithmic properties, can be simulated faster under more significant environment conditions, and can be optimized more productively through the HLS-driven exploration of a broader design space.</span></p> <p><span>The proposed SLD methodology enables the rapid realization of complete SoC prototypes with multiple accelerators by leveraging field-programmable gate array (FPGA) technologies. </span><span>The methodology is supported by a combination of state-of-the-art commercial CAD tools with complementary tools that have been developed in-house to overcome some critical limitations of the commercial ones. For example, the Mnemosyne tool was developed to provide </span><span>missing capabilities for the optimization of the SoC memory subsystems. </span></p> <p><span>On-chip memory elements have </span><span>an impact on the area, performance, and power dissipation that grows with the complexity and size of the SoC accelerators. Memory elements may occupy more than 70% of a chip and are typically responsible for most of the area occupied by each accelerator. The PI and his collaborators completed the first quantitative study on the important issues of coupling accelerators and processors in SoC architectures, including accelerator invocation and interaction with other on-chip components. They considered these aspects by implementing seven high-throughput accelerators following three design models: tight coupling behind a processor core, loose out-of-core coupling with Direct Memory Access (DMA) to the last-level cache memory, and loose out-of-core coupling with DMA to off-chip main memory. A salient conclusion of this study is that working sets of non-trivial size are best served by loosely-coupled accelerators that integrate private local memory (PLM) blocks tailored to their needs: the resulting multi-ported memories enable the exploitation of parallelism inherent in kernels, which is where the potential for performance and energy efficiency improvements lies. With regards to software, abstracting these high-throughput loosely-coupled accelerators using device drivers similar to those for SoC on-chip devices shows to be a low-complexity and efficient approach. Building on this study, the PI and his collaborators demonstrated a technique that exploits the accelerator PLMs to reduce the opportunity cost of integrating accelerators. This innovative technique transparently exposes accelerator PLMs to the cache substrate, thereby extending its capacity while accelerators are not in use. </span></p> <p><span>The set of outcomes of this project includes the design and prototyping of many different accelerators for various application domains such as computer vision and biomedical engineering. In particular, the SLD methodology was applied to the design of two accelerators for two alternative microwave-imaging algorithms for breast-cancer detection, an important application that benefits from specialized hardware solutions to speed up the computation execution time and reduce its power consumption.</span></p> <p><span>The broader impact activities of this project include important curriculum enhancements. Based on the proposed methodology, the PI has developed the new course &ldquo;System-on-Chip Platform&rdquo;, which has become part of the senior-year curriculum for the undergraduate degrees in Computer Engineering, Electrical Engineering and Computer Science at Columbia University. In this course, the students learn the hardware and software aspects of:<span>&nbsp;</span>(1) integrating heterogeneous components into a</span><span> </span><span>complete system; (2) evaluating designs in a multi-objective optimization space; and (3) designing new components that are reusable across different systems, product generations, and implementation platforms. The course requires the completion of a project in the second half of the semester, after a series of homework assignments have helped students to gain practice with both the preliminary material and the CAD tools. The project, which is structured as a design contest among student teams, relies on a web-based infrastructure that allows teams to continuously assess their own performance with respect to the rest of the class. The project promotes an approach to design optimization that is based on successive refinements driven by quantitative metrics and it rewards both the design of reusable components and the integration of components developed by other teams into a complete system.</span></p> <p><span><br /></span></p><br> <p>            Last Modified: 08/05/2017<br>      Modified by: Luca&nbsp;Carloni</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Heterogeneous System-on-Chip (SoC) architectures have emerged as a fundamental computing platform for a variety of systems from mobile devices to data centers. In heterogeneous SoC architectures, designers combine computing components that have different natures, e.g. processor cores and specialized-hardware accelerators. Differently from a general-purpose processor that may execute a variety of software programs, an accelerator executes only a dedicated function but in a way that is orders of magnitude more efficient than software. Hence, adding many accelerators into a SoC provides higher performance and energy savings for critical functions that are computationally intensive. Heterogeneous architectures, however, increase design complexity in terms of hardware-software interactions, access to shared resources, and diminished regularity of the overall system design.   The PI and his collaborators have addressed these challenges by developing an innovative methodology that improves the productivity of SoC designers and programmers as it promotes the use of virtual platforms, high-level synthesis (HLS), and component reuse.  The methodology raises the level of abstraction in the design process to system-level design (SLD). With SLD, a hardware component like an accelerator can be designed more efficiently with a focus on its algorithmic properties, can be simulated faster under more significant environment conditions, and can be optimized more productively through the HLS-driven exploration of a broader design space.  The proposed SLD methodology enables the rapid realization of complete SoC prototypes with multiple accelerators by leveraging field-programmable gate array (FPGA) technologies. The methodology is supported by a combination of state-of-the-art commercial CAD tools with complementary tools that have been developed in-house to overcome some critical limitations of the commercial ones. For example, the Mnemosyne tool was developed to provide missing capabilities for the optimization of the SoC memory subsystems.   On-chip memory elements have an impact on the area, performance, and power dissipation that grows with the complexity and size of the SoC accelerators. Memory elements may occupy more than 70% of a chip and are typically responsible for most of the area occupied by each accelerator. The PI and his collaborators completed the first quantitative study on the important issues of coupling accelerators and processors in SoC architectures, including accelerator invocation and interaction with other on-chip components. They considered these aspects by implementing seven high-throughput accelerators following three design models: tight coupling behind a processor core, loose out-of-core coupling with Direct Memory Access (DMA) to the last-level cache memory, and loose out-of-core coupling with DMA to off-chip main memory. A salient conclusion of this study is that working sets of non-trivial size are best served by loosely-coupled accelerators that integrate private local memory (PLM) blocks tailored to their needs: the resulting multi-ported memories enable the exploitation of parallelism inherent in kernels, which is where the potential for performance and energy efficiency improvements lies. With regards to software, abstracting these high-throughput loosely-coupled accelerators using device drivers similar to those for SoC on-chip devices shows to be a low-complexity and efficient approach. Building on this study, the PI and his collaborators demonstrated a technique that exploits the accelerator PLMs to reduce the opportunity cost of integrating accelerators. This innovative technique transparently exposes accelerator PLMs to the cache substrate, thereby extending its capacity while accelerators are not in use.   The set of outcomes of this project includes the design and prototyping of many different accelerators for various application domains such as computer vision and biomedical engineering. In particular, the SLD methodology was applied to the design of two accelerators for two alternative microwave-imaging algorithms for breast-cancer detection, an important application that benefits from specialized hardware solutions to speed up the computation execution time and reduce its power consumption.  The broader impact activities of this project include important curriculum enhancements. Based on the proposed methodology, the PI has developed the new course "System-on-Chip Platform", which has become part of the senior-year curriculum for the undergraduate degrees in Computer Engineering, Electrical Engineering and Computer Science at Columbia University. In this course, the students learn the hardware and software aspects of: (1) integrating heterogeneous components into a complete system; (2) evaluating designs in a multi-objective optimization space; and (3) designing new components that are reusable across different systems, product generations, and implementation platforms. The course requires the completion of a project in the second half of the semester, after a series of homework assignments have helped students to gain practice with both the preliminary material and the CAD tools. The project, which is structured as a design contest among student teams, relies on a web-based infrastructure that allows teams to continuously assess their own performance with respect to the rest of the class. The project promotes an approach to design optimization that is based on successive refinements driven by quantitative metrics and it rewards both the design of reusable components and the integration of components developed by other teams into a complete system.          Last Modified: 08/05/2017       Submitted by: Luca Carloni]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Digital Yet Deliberately Random -- Synthesizing Logical Computation on Stochastic Bit Streams</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2012</AwardEffectiveDate>
<AwardExpirationDate>06/30/2015</AwardExpirationDate>
<AwardTotalIntnAmount>299999.00</AwardTotalIntnAmount>
<AwardAmount>314211</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Most digital systems operate on a positional representation of data, such as binary radix. This project advocates an alternative representation: random bit streams where the signal value is encoded by the probability of obtaining a one versus a zero. This representation is much less compact than binary radix. However, complex operations can be performed with very simple logic. In particular, arithmetic functions, consisting of operations like addition and multiplication can be implemented very efficiently. Complex functions, such as exponentials and trigonometric functions, can be computed through polynomial approximations. Because a stochastic representation is uniform, with all bits weighted equally, it is highly tolerant of soft errors (i.e., bit flips). Computation on stochastic bit streams offers tunable precision: as the length of the stochastic bit stream increases, the precision of the value represented by it also increases. Thus, without hardware redesign, one has the flexibility to tradeoff precision and computation time. In contrast, with a conventional binary-radix implementation, when a higher precision is required, the underlying hardware has to be redesigned. This project will develop and apply a unified framework for synthesizing such computation from the circuit level to the architectural and system level. Techniques for transforming probability values with combinational logic will be developed. &lt;br/&gt;&lt;br/&gt;As part of this grant, a new course on "Circuits, Computation, and Biology" offered jointly through the ECE Department and the new Biomedical Informatics and Computational Biology Program at the University of Minnesota. The researchers will try to incorporate stochastic ideas in computer design curriculum, The PIs will focus on building upon current research efforts that include female and underrepresented students.</AbstractNarration>
<MinAmdLetterDate>05/16/2012</MinAmdLetterDate>
<MaxAmdLetterDate>09/25/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1241987</AwardID>
<Investigator>
<FirstName>Ramesh</FirstName>
<LastName>Harjani</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ramesh Harjani</PI_FULL_NAME>
<EmailAddress>harjani@umn.edu</EmailAddress>
<PI_PHON>6126254032</PI_PHON>
<NSF_ID>000211068</NSF_ID>
<StartDate>05/16/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>David</FirstName>
<LastName>Lilja</LastName>
<PI_MID_INIT>J</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>David J Lilja</PI_FULL_NAME>
<EmailAddress>lilja@umn.edu</EmailAddress>
<PI_PHON>6126255007</PI_PHON>
<NSF_ID>000306578</NSF_ID>
<StartDate>05/16/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Kia</FirstName>
<LastName>Bazargan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kia Bazargan</PI_FULL_NAME>
<EmailAddress>kia@umn.edu</EmailAddress>
<PI_PHON>6126254588</PI_PHON>
<NSF_ID>000294367</NSF_ID>
<StartDate>05/16/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Marc</FirstName>
<LastName>Riedel</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Marc Riedel</PI_FULL_NAME>
<EmailAddress>mriedel@umn.edu</EmailAddress>
<PI_PHON>6126256086</PI_PHON>
<NSF_ID>000488744</NSF_ID>
<StartDate>05/16/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Minnesota-Twin Cities</Name>
<CityName>Minneapolis</CityName>
<ZipCode>554552070</ZipCode>
<PhoneNumber>6126245599</PhoneNumber>
<StreetAddress>200 OAK ST SE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Minnesota</StateName>
<StateCode>MN</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MN05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>555917996</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF MINNESOTA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>117178941</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Minnesota-Twin Cities]]></Name>
<CityName>Minneapolis</CityName>
<StateCode>MN</StateCode>
<ZipCode>554550167</ZipCode>
<StreetAddress><![CDATA[200 Union St. S.E.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Minnesota</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MN05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~299999</FUND_OBLG>
<FUND_OBLG>2013~14212</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Most digital systems operate on a positional representation of data, such as binary radix. A positional representation is a compact way to encode signal values: in binary radix, 2<sup>n</sup> distinct values can be represented with n bits. However, operating on it requires complex logic: in each operation such as addition or multiplication, the signal must be "decoded," with the higher order bits weighted more than the lower order bits. &nbsp;This project advocates an alternative representation: random bit streams where the signal value is encoded by the probability of obtaining a one versus a zero. This representation is much less compact than binary radix. However, complex operations can be performed with very simple logic. &nbsp;In particular, arithmetic functions, consisting of operations like addition and multiplication can be implemented very efficiently. Complex functions, such as exponentials and trigonometric functions, can be computed through polynomial approximations.</p> <p><br />Because a stochastic representation is uniform, with all bits weighted equally, it is highly tolerant of soft errors (i.e., bit flips). &nbsp;Computation on stochastic bit streams offers tunable precision: as the length of the stochastic bit stream increases, the precision of the value represented by it also increases. Thus, without hardware redesign, one has the flexibility to tradeoff precision and computation time. In contrast, with a conventional binary-radix implementation, when a higher precision is required, the underlying hardware has to be redesigned.</p> <p><br />This project developed and applied a unified framework for synthesizing such computation from the circuit level to the architectural and system level. A synthesis strategy for combinational constructs was developed, based on polynomial approximations. &nbsp;A synthesis strategy for sequential constructs was developed based on mesh topologies for finite-state machines. Hybrid encoding schemes, in which multiple stochastic bit streams are assigned positional weighting, were explored. &nbsp;Analog expertise was applied to the task of converting analog input and output signals into and out of stochastic bit streams: specifically, a method was developed that directly converts analog quantities to bit streams based on single-bit oversampling with sigma-delta converters.&nbsp;<br />This new approach to circuit design forms the basis of a novel view of computation: instead of transforming definite inputs into definite outputs, circuits and systems transform probability values into probability values; so, conceptually, real-valued probabilities are both the inputs and the outputs. &nbsp;The computation has a pseudo analog character, reminiscent of computations performed by physical systems such as electronics on continuously variable signals such as voltage. In the new paradigm, the variable signal is the probability of obtaining a one versus a zero in a stochastic yet digital bit stream. Indeed, the system can be built from ordinary digital electronics such as CMOS. Thus, the design methodology imposes an analog view on top digital values. (Of course, the digital values themselves are an abstraction sitting on top of analog voltages values.) With this paradigm change, expertise in analog computation can be brought to bear on the design of robust digital systems.&nbsp;<br /><br /></p><br> <p>            Last Modified: 01/10/2016<br>      Modified by: Marc&nbsp;Riedel</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Most digital systems operate on a positional representation of data, such as binary radix. A positional representation is a compact way to encode signal values: in binary radix, 2n distinct values can be represented with n bits. However, operating on it requires complex logic: in each operation such as addition or multiplication, the signal must be "decoded," with the higher order bits weighted more than the lower order bits.  This project advocates an alternative representation: random bit streams where the signal value is encoded by the probability of obtaining a one versus a zero. This representation is much less compact than binary radix. However, complex operations can be performed with very simple logic.  In particular, arithmetic functions, consisting of operations like addition and multiplication can be implemented very efficiently. Complex functions, such as exponentials and trigonometric functions, can be computed through polynomial approximations.   Because a stochastic representation is uniform, with all bits weighted equally, it is highly tolerant of soft errors (i.e., bit flips).  Computation on stochastic bit streams offers tunable precision: as the length of the stochastic bit stream increases, the precision of the value represented by it also increases. Thus, without hardware redesign, one has the flexibility to tradeoff precision and computation time. In contrast, with a conventional binary-radix implementation, when a higher precision is required, the underlying hardware has to be redesigned.   This project developed and applied a unified framework for synthesizing such computation from the circuit level to the architectural and system level. A synthesis strategy for combinational constructs was developed, based on polynomial approximations.  A synthesis strategy for sequential constructs was developed based on mesh topologies for finite-state machines. Hybrid encoding schemes, in which multiple stochastic bit streams are assigned positional weighting, were explored.  Analog expertise was applied to the task of converting analog input and output signals into and out of stochastic bit streams: specifically, a method was developed that directly converts analog quantities to bit streams based on single-bit oversampling with sigma-delta converters.  This new approach to circuit design forms the basis of a novel view of computation: instead of transforming definite inputs into definite outputs, circuits and systems transform probability values into probability values; so, conceptually, real-valued probabilities are both the inputs and the outputs.  The computation has a pseudo analog character, reminiscent of computations performed by physical systems such as electronics on continuously variable signals such as voltage. In the new paradigm, the variable signal is the probability of obtaining a one versus a zero in a stochastic yet digital bit stream. Indeed, the system can be built from ordinary digital electronics such as CMOS. Thus, the design methodology imposes an analog view on top digital values. (Of course, the digital values themselves are an abstraction sitting on top of analog voltages values.) With this paradigm change, expertise in analog computation can be brought to bear on the design of robust digital systems.          Last Modified: 01/10/2016       Submitted by: Marc Riedel]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

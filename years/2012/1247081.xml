<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: Collaborative Research: Representation-theoretic techniques for pseudorandomness and lower bounds</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/12/2012</AwardEffectiveDate>
<AwardExpirationDate>12/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>217664.00</AwardTotalIntnAmount>
<AwardAmount>225664</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Jack S. Snoeyink</SignBlockName>
<PO_EMAI>jsnoeyin@nsf.gov</PO_EMAI>
<PO_PHON>7032920000</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Fourier analysis, where we decompose a complex function into a sum of simple oscillations, is used in virtually every form of digital technology, from JPEG compression to voice recognition. In computer science, Fourier analysis has led to new algorithms for "pseudorandom numbers," i.e., numbers with no apparent pattern, which are useful both in cryptography and in algorithms for estimating functions and confirming computational claims. Fourier analysis also plays a key role in Shor's quantum algorithm for factoring, which breaks RSA public-key cryptography, and in proofs that some problems are hard to solve with certain kinds of parallel algorithms or circuits. &lt;br/&gt;&lt;br/&gt;Profs. Moore and Russell will use the more powerful tool of nonabelian Fourier analysis to obtain new results in these areas. In particular, they propose new ways to "derandomize" algorithms, replacing random numbers with pseudorandom ones. They will study the extent to which rich, high-dimensional structures can be embedded in low-dimensional spaces with only a small amount of distortion, and prove that certain problems require a long time even for quantum computers to solve. Finally, they will study whether some alternatives to RSA, such as the McEliece cryptosystem based on error-correcting codes, will remain secure even if and when quantum computers are built. Thus their research has important impacts on algorithms, security, and cryptography. They teach courses that train students from Physics and Computer Science to work at the boundary between these disciplines, and their outreach activities include bringing this material to high school and middle-school teachers.</AbstractNarration>
<MinAmdLetterDate>06/18/2012</MinAmdLetterDate>
<MaxAmdLetterDate>06/18/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1247081</AwardID>
<Investigator>
<FirstName>Cristopher</FirstName>
<LastName>Moore</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Cristopher D Moore</PI_FULL_NAME>
<EmailAddress>moore@santafe.edu</EmailAddress>
<PI_PHON>5059462763</PI_PHON>
<NSF_ID>000193005</NSF_ID>
<StartDate>06/18/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Santa Fe Institute</Name>
<CityName>SANTA FE</CityName>
<ZipCode>875018943</ZipCode>
<PhoneNumber>5059462727</PhoneNumber>
<StreetAddress>1399 HYDE PARK ROAD</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New Mexico</StateName>
<StateCode>NM</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NM03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>178044996</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>SANTA FE INSTITUTE OF SCIENCE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Santa Fe Institute]]></Name>
<CityName/>
<StateCode>NM</StateCode>
<ZipCode>875018943</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Mexico</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NM03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramReference>
<ProgramReference>
<Code>7928</Code>
<Text>QUANTUM COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~217664</FUND_OBLG>
<FUND_OBLG>2012~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Many of the best algorithms we know of involve some amount of randomness.&nbsp; This includes, for instance, the fastest algorithm known for telling whether a number is prime, and many search algorithms for hard optimization problems.&nbsp; By making random choices, algorithms can perform well almost all the time, instead of failing on a small fraction of hard examples.&nbsp; Randomness is also useful in communication, where we can share information very efficiently by compressing our messages in a random way.</p> <p>However, true randomness is hard to find, unless you want to connect your computer to a Geiger counter to draw random bits from quantum mechanics. In practice, we use pseudorandom generators&mdash;deterministic procedures that &ldquo;look random enough&rdquo; for most purposes. A good pseudorandom generator is much like a secure cryptosystem: if it looks random enough for a certain class of algorithms, that means that those algorithms cannot find any pattern in the generator&rsquo;s output, just as an eavesdropper cannot find any pattern in a securely encrypted message.</p> <p>This has generated a great deal of interest in pseudorandom sets: for instance, a set of points where we could sample a high-dimensional function in order to estimate its average, and which fairly samples from every part of the space on which that function is defined. This type of &ldquo;Monte Carlo&rdquo; technique is used e.g., in economics, where we need to evaluate economic models by integrating over many parameters.</p> <p>Inventing and analyzing these pseudorandom sets often involves deep mathematics.&nbsp; Our goal was to use ideas from group theory, the branch of mathematics that studies symmetry, to develop new pseudorandom generators, and to study their impact on protocols for computation and communication.&nbsp;</p> <p>We obtained a number of results in this direction and on related problems.&nbsp; These include disproving a popular conjecture about how easy it is to sample random elements of a group; studying a kind of error-correcting code that two people can use to communicate reliably, and carry out a joint computation; partly proving a conjecture about the sensitivity of certain functions to random noise; giving evidence that certain cryptosystems are resistant to attack, even by quantum computers; exactly determining the density of constraints at which certain search problems become unsolvable; and giving a new strategy for a cooperative game where two people are trying to rendezvous at a common location, or find a common radio frequency over which they can communicate, without having agreed upon one in advance.<strong></strong></p><br> <p>            Last Modified: 03/31/2016<br>      Modified by: Cristopher&nbsp;D&nbsp;Moore</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Many of the best algorithms we know of involve some amount of randomness.  This includes, for instance, the fastest algorithm known for telling whether a number is prime, and many search algorithms for hard optimization problems.  By making random choices, algorithms can perform well almost all the time, instead of failing on a small fraction of hard examples.  Randomness is also useful in communication, where we can share information very efficiently by compressing our messages in a random way.  However, true randomness is hard to find, unless you want to connect your computer to a Geiger counter to draw random bits from quantum mechanics. In practice, we use pseudorandom generators&mdash;deterministic procedures that "look random enough" for most purposes. A good pseudorandom generator is much like a secure cryptosystem: if it looks random enough for a certain class of algorithms, that means that those algorithms cannot find any pattern in the generatorÃ†s output, just as an eavesdropper cannot find any pattern in a securely encrypted message.  This has generated a great deal of interest in pseudorandom sets: for instance, a set of points where we could sample a high-dimensional function in order to estimate its average, and which fairly samples from every part of the space on which that function is defined. This type of "Monte Carlo" technique is used e.g., in economics, where we need to evaluate economic models by integrating over many parameters.  Inventing and analyzing these pseudorandom sets often involves deep mathematics.  Our goal was to use ideas from group theory, the branch of mathematics that studies symmetry, to develop new pseudorandom generators, and to study their impact on protocols for computation and communication.   We obtained a number of results in this direction and on related problems.  These include disproving a popular conjecture about how easy it is to sample random elements of a group; studying a kind of error-correcting code that two people can use to communicate reliably, and carry out a joint computation; partly proving a conjecture about the sensitivity of certain functions to random noise; giving evidence that certain cryptosystems are resistant to attack, even by quantum computers; exactly determining the density of constraints at which certain search problems become unsolvable; and giving a new strategy for a cooperative game where two people are trying to rendezvous at a common location, or find a common radio frequency over which they can communicate, without having agreed upon one in advance.       Last Modified: 03/31/2016       Submitted by: Cristopher D Moore]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

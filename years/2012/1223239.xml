<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TTP: Small: NFS4Sec: An Extensible Security Layer for Network Storage</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>486784.00</AwardTotalIntnAmount>
<AwardAmount>486784</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anita  Nikolich</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The Network File System (NFS) is a popular method for computers to access files across networks.  The latest major version of this IETF protocol, version 4, is widely accepted and includes numerous new features to improve security, performance, and usability when used over wide-area networks.  However, the NFSv4's security focus is on network-wide encryption (ensuring that user data cannot be intercepted) and user authentication (ensuring that only legitimate users can access their files); it does not address end-to-end data security (i.e., persistently stored data), does not address data integrity (malicious or benign data corruptions), and more.&lt;br/&gt;&lt;br/&gt;This project extends NFSv4 with a security layer that allows one to develop multiple, composable plugin modules to enhance the protocol's security.  This layer allows for interception of protocol requests between clients and servers to perform various useful security functions: logging access to files by users and hosts, useful for regulatory compliance reports and audits; inspecting files for malware patterns and automatically quarantining them; verifying the integrity of long-lived files against malicious changes (e.g., Trojan intrusions) and benign but serious ones (e.g., storage media degradation and hardware corruptions); detecting denial-of-service attempts and ensuring quality-of-service to legitimate users through load-balancing and redirection; automatic snapshotting and logging to allow for forensic analysis and recovery from failures and intrusions. In a cloud-based era where more data lives longer and is accessed over wide-area, insecure networks, this project helps elevate the level of security of every user's data files.</AbstractNarration>
<MinAmdLetterDate>08/28/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/28/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1223239</AwardID>
<Investigator>
<FirstName>Erez</FirstName>
<LastName>Zadok</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Erez Zadok</PI_FULL_NAME>
<EmailAddress>ezk@cs.stonybrook.edu</EmailAddress>
<PI_PHON>6316328461</PI_PHON>
<NSF_ID>000182603</NSF_ID>
<StartDate>08/28/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Radu</FirstName>
<LastName>Sion</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Radu Sion</PI_FULL_NAME>
<EmailAddress>sion@cs.stonybrook.edu</EmailAddress>
<PI_PHON>6316321672</PI_PHON>
<NSF_ID>000291432</NSF_ID>
<StartDate>08/28/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Stony Brook</Name>
<CityName>Stony Brook</CityName>
<ZipCode>117940001</ZipCode>
<PhoneNumber>6316329949</PhoneNumber>
<StreetAddress>WEST 5510 FRK MEL LIB</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>804878247</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Stony Brook]]></Name>
<CityName/>
<StateCode>NY</StateCode>
<ZipCode>117944400</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~486784</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The main goals of the project were to improve the security of data stored over a network, for example in remote servers and cloud providers. &nbsp;In a world where a lot of data is stored online, we have seen many break-ins by cyber-hackers stealing anything from celebrity photos (embarrassing to the celebrity) to lists of government employees that may inadvertently reveal who may be working in the intelligence sector (i.e., a spy whose life may be at risk).</p> <p><br />Intellectual merits: First, we designed and developed "DM-INTEGRITY," a system that guarantees the integrity of stored data. &nbsp;The system is able to detect when disks and data on them are modified by malicious actors, for example when safe computer executables are replaced with malware such as Trojan horses. &nbsp;This is particularly important in an age where so much data is stored remotely in cloud services; there, end-users have no way to verify whethere a malicious actor (cloud operator, its employees, or other cloud tenants) have modified files intentionally, or if files got modified inadvertently due to hardware or software corruption/bugs.</p> <p><br />Second, we developed "Kurma," a new open-source distributed secure storage architecture. &nbsp;Kurma employs secure proxies between end-user client computers and cloud servers. &nbsp;Kurma includes integrity features such as DM-INTEGRITY, but it also encrypts user files transparently to ensure their confidentiality. &nbsp;Kurma further inspects every file coming from end-users for malware, using anti-virus scanning: this helps prevent leakage of infected files to cloud servers by a compromised user's computer. &nbsp;All of these security features can add significant overheads, to a point where users may perceive poor performance; therefore, Kurma also includes a caching layer that is carefully integrated between several security layers. &nbsp;Our experimental results show acceptable small overheads.</p> <p><br />Broader Impacts: The systems we designed and developed can help increase the confidence and assurance that society can have when using remote cloud services to store and retrieve data. &nbsp;We have also trained and graduated several students, as well as exposed hundreds of others to topics of this project through classes we taught. &nbsp;Finally, we contributed fixes and enhancements to existing open-source projects, as well as released our own software.</p> <p>&nbsp;</p><br> <p>            Last Modified: 09/05/2015<br>      Modified by: Erez&nbsp;Zadok</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The main goals of the project were to improve the security of data stored over a network, for example in remote servers and cloud providers.  In a world where a lot of data is stored online, we have seen many break-ins by cyber-hackers stealing anything from celebrity photos (embarrassing to the celebrity) to lists of government employees that may inadvertently reveal who may be working in the intelligence sector (i.e., a spy whose life may be at risk).   Intellectual merits: First, we designed and developed "DM-INTEGRITY," a system that guarantees the integrity of stored data.  The system is able to detect when disks and data on them are modified by malicious actors, for example when safe computer executables are replaced with malware such as Trojan horses.  This is particularly important in an age where so much data is stored remotely in cloud services; there, end-users have no way to verify whethere a malicious actor (cloud operator, its employees, or other cloud tenants) have modified files intentionally, or if files got modified inadvertently due to hardware or software corruption/bugs.   Second, we developed "Kurma," a new open-source distributed secure storage architecture.  Kurma employs secure proxies between end-user client computers and cloud servers.  Kurma includes integrity features such as DM-INTEGRITY, but it also encrypts user files transparently to ensure their confidentiality.  Kurma further inspects every file coming from end-users for malware, using anti-virus scanning: this helps prevent leakage of infected files to cloud servers by a compromised user's computer.  All of these security features can add significant overheads, to a point where users may perceive poor performance; therefore, Kurma also includes a caching layer that is carefully integrated between several security layers.  Our experimental results show acceptable small overheads.   Broader Impacts: The systems we designed and developed can help increase the confidence and assurance that society can have when using remote cloud services to store and retrieve data.  We have also trained and graduated several students, as well as exposed hundreds of others to topics of this project through classes we taught.  Finally, we contributed fixes and enhancements to existing open-source projects, as well as released our own software.          Last Modified: 09/05/2015       Submitted by: Erez Zadok]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

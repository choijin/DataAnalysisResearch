<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2: Conceptualization: Dynamic Languages for Scalable Data Analytics</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2012</AwardEffectiveDate>
<AwardExpirationDate>03/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>200000.00</AwardTotalIntnAmount>
<AwardAmount>200000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Daniel Katz</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This planning grant gathers scientific community requirements for a set of capabilities termed Scalable Data Analytics.  The project investigates community needs to support scientific discovery by  providing an effective interface between extant hardware resources, data sources and repositories, and system software infrastructure. The proposed effort focuses on software environments and tools for data acquisition, management, visualization, sharing, and analysis for the working scientist, which can scale up to massively parallel and cloud fabrics, but, crucially, which can as easily scale down to a single laptop.&lt;br/&gt;&lt;br/&gt;Software systems for data analytics are integral to the fabric of scientific innovation. The ability to acquire, process, and analyze large amounts of complex structured and unstructured data is at the core of diverse disciplines. While scientists can exploit large repositories of software tools optimized and refined over the years, significant new challenges are posed by the rapidly evolving characteristics of scientific datasets. These challenges are addressed by software systems that enable development of new software incrementally, modification of existing methods, or techniques for integrating pipelines of off-the-shelf components. For such application needs, scientists increasingly rely on dynamic computer programming languages. These languages facilitate interactive prototyping, support rapid development, and can be embedded or used to manage complex scientific software pipelines.</AbstractNarration>
<MinAmdLetterDate>09/19/2012</MinAmdLetterDate>
<MaxAmdLetterDate>11/18/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1216853</AwardID>
<Investigator>
<FirstName>William</FirstName>
<LastName>Cleveland</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William S Cleveland</PI_FULL_NAME>
<EmailAddress>wsc@purdue.edu</EmailAddress>
<PI_PHON>7734029625</PI_PHON>
<NSF_ID>000194006</NSF_ID>
<StartDate>09/19/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ananth</FirstName>
<LastName>Grama</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ananth Grama</PI_FULL_NAME>
<EmailAddress>ayg@cs.purdue.edu</EmailAddress>
<PI_PHON>7654946964</PI_PHON>
<NSF_ID>000319590</NSF_ID>
<StartDate>09/19/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jan</FirstName>
<LastName>Vitek</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jan Vitek</PI_FULL_NAME>
<EmailAddress>j.vitek@neu.edu</EmailAddress>
<PI_PHON>6173732462</PI_PHON>
<NSF_ID>000290862</NSF_ID>
<StartDate>09/19/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Suresh</FirstName>
<LastName>Jagannathan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Suresh Jagannathan</PI_FULL_NAME>
<EmailAddress>suresh@cs.purdue.edu</EmailAddress>
<PI_PHON>7654940971</PI_PHON>
<NSF_ID>000181308</NSF_ID>
<StartDate>09/19/2012</StartDate>
<EndDate>11/18/2013</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Olga</FirstName>
<LastName>Vitek</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Olga Vitek</PI_FULL_NAME>
<EmailAddress>o.vitek@neu.edu</EmailAddress>
<PI_PHON>6173732462</PI_PHON>
<NSF_ID>000513686</NSF_ID>
<StartDate>09/19/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName>West Lafayette</CityName>
<StateCode>IN</StateCode>
<ZipCode>479072107</ZipCode>
<StreetAddress><![CDATA[305 N. University Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1165</Code>
<Text>ADVANCES IN BIO INFORMATICS</Text>
</ProgramElement>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>7477</Code>
<Text>CI-TEAM</Text>
</ProgramElement>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8211</Code>
<Text>S2I2 - Scient Sftwre Innovat Insts</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~200000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>Software systems for data analytics are integral to the fabric of scientific innovation. The ability to acquire, process, and analyze large amounts of complex structured and unstructured data is at the core of diverse disciplines such as high-energy physics, astronomy, chemistry, biology, economics, and social sciences. While scientists can exploit large repositories of software tools optimized and refined over the years, significant new challenges are posed by the rapidly evolving characteristics of scientific datasets. These challenges are addressed by software systems that enable development of new methods incrementally, modification of existing algorithms, or techniques for integrating pipelines of off-the-shelf components. For such application needs, scientists increasingly rely on dynamic computer programming languages and systems (Python, Perl, Matlab, Maple, Mathematica, JavaScript Octave, Julia and R). These languages facilitate interactive prototyping, support rapid development, and can be used to manage complex scientific software pipelines. In this role of providing an interface between scientists and computational infrastructure high-level dynamic languages have proven highly effective. However, their utility is significantly constrained by deficiencies in performance, their ability to handle data at scale, and their interface to underlying hardware (parallel and distributed environments) and software ecosystem (libraries for intrinsics, visual analytics).</span></p> <p><span>This report is a strategic plan for enabling science and education through an S2I2 institute aimed at supporting a sustained scientific software infrastructure. We will address the following key issues:</span></p> <ul> <li><span>the scientific community and specific grand challenge research questions that the S2I2 will support;</span></li> <li><span>the software elements relevant to the community, the sustainability challenges to address;</span></li> <li><span>the required organizational, personnel and management structures and operational processes;</span></li> <li><span>the integration of education and training, mentoring of students, postdoctoral fellows as well as software professionals;</span></li> <li><span>approaches for long-term sustainability of the software infrastructure as well as the software; and</span></li> <li><span>risks including risks associated with establishment and execution, infrastructure needs &amp; community engagement.</span></li> </ul> <p><span>The activities covered under this S2I2 Conceptualization grant consisted of a series of workshops that assessed the state of dynamic programming languages for scientific computing, the quality of the virtual execution environments that support them, and the degree to which such languages allow scientists to interact with the rest of the software and hardware infrastructure. In particular, we focused on problems related to data analytics at scale. The workshops investigated the need for a software institute that would support rapid scientific advances by acting as a bridge between experts in computing, languages, compilers, middleware, distributed systems, and the broader scientific community.</span></p> <p><span>The scientific activities on which we focused our discussion can broadly be termed <em>Scalable Data Analytics</em>. The basic scientific research aim of these activities is to provide tools for data acquisition, management and analysis for scientists which can scale up to massively parallel and cloud fabrics, but, crucially, which can as easily scale down to a single laptop. This smooth scaling from exploratory mode to production is a crucial attribute of any viable solution. While a software institute will impact many disciplines, we have identified key stakeholders in statistics, machine learning, physics, and biocomputing.</span></p> <p><span>This report summarizes the clear and present need fo...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Software systems for data analytics are integral to the fabric of scientific innovation. The ability to acquire, process, and analyze large amounts of complex structured and unstructured data is at the core of diverse disciplines such as high-energy physics, astronomy, chemistry, biology, economics, and social sciences. While scientists can exploit large repositories of software tools optimized and refined over the years, significant new challenges are posed by the rapidly evolving characteristics of scientific datasets. These challenges are addressed by software systems that enable development of new methods incrementally, modification of existing algorithms, or techniques for integrating pipelines of off-the-shelf components. For such application needs, scientists increasingly rely on dynamic computer programming languages and systems (Python, Perl, Matlab, Maple, Mathematica, JavaScript Octave, Julia and R). These languages facilitate interactive prototyping, support rapid development, and can be used to manage complex scientific software pipelines. In this role of providing an interface between scientists and computational infrastructure high-level dynamic languages have proven highly effective. However, their utility is significantly constrained by deficiencies in performance, their ability to handle data at scale, and their interface to underlying hardware (parallel and distributed environments) and software ecosystem (libraries for intrinsics, visual analytics).  This report is a strategic plan for enabling science and education through an S2I2 institute aimed at supporting a sustained scientific software infrastructure. We will address the following key issues:  the scientific community and specific grand challenge research questions that the S2I2 will support; the software elements relevant to the community, the sustainability challenges to address; the required organizational, personnel and management structures and operational processes; the integration of education and training, mentoring of students, postdoctoral fellows as well as software professionals; approaches for long-term sustainability of the software infrastructure as well as the software; and risks including risks associated with establishment and execution, infrastructure needs &amp; community engagement.   The activities covered under this S2I2 Conceptualization grant consisted of a series of workshops that assessed the state of dynamic programming languages for scientific computing, the quality of the virtual execution environments that support them, and the degree to which such languages allow scientists to interact with the rest of the software and hardware infrastructure. In particular, we focused on problems related to data analytics at scale. The workshops investigated the need for a software institute that would support rapid scientific advances by acting as a bridge between experts in computing, languages, compilers, middleware, distributed systems, and the broader scientific community.  The scientific activities on which we focused our discussion can broadly be termed Scalable Data Analytics. The basic scientific research aim of these activities is to provide tools for data acquisition, management and analysis for scientists which can scale up to massively parallel and cloud fabrics, but, crucially, which can as easily scale down to a single laptop. This smooth scaling from exploratory mode to production is a crucial attribute of any viable solution. While a software institute will impact many disciplines, we have identified key stakeholders in statistics, machine learning, physics, and biocomputing.  This report summarizes the clear and present need for common, open-source, software components to support data analytics in a variety of scientific communities. In particular research in high-level, domain specific, dynamic programming languages is needed, languages that can only be designed, created, and maintained under the auspices of a Soft...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Design Challenges and Stories: Integrating Reflective Design Learning in Computer Science</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>187195.00</AwardTotalIntnAmount>
<AwardAmount>187195</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Stephanie August</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Design is a core activity in computer science and software engineering and it determines the function and quality of software systems. As a result, it is vitally important that computer science graduates possess strong design skills. Conventional curricula, however, do not adequately support design learning since they isolate the explicit study of design to only a few selected courses while using ill-suited instructional techniques.&lt;br/&gt;&lt;br/&gt;This project is aiming at significantly improving the strategies used to support design learning in computer science, through two key thrusts: the first is developing a modular instructional approach that enables students to use reflective learning in creating narratives called design stories; the second thrust is developing the Design Learning Repository, which allows educators to search, access, and contribute instructional materials that adopt the project's approach. This work is addressing the shortcomings of current practice by infusing the study of design throughout the computer science curriculum.&lt;br/&gt;&lt;br/&gt;A solid grounding in reflection-based learning theories contributes to the project's intellectual merit, further added to by adopting techniques well-suited to the nature of design and by using evidence-based evaluations of learning gains. The broader impacts of this project have far reaching potential: the intervention method is being strongly institutionalized at the home university and is affecting a highly diverse student body, while collaborations are promoting adoption at partner universities. More broadly, the dissemination activities and transformative strategies being pursued may change how design learning is supported throughout the computer science educational community.</AbstractNarration>
<MinAmdLetterDate>04/26/2013</MinAmdLetterDate>
<MaxAmdLetterDate>04/26/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1245427</AwardID>
<Investigator>
<FirstName>James</FirstName>
<LastName>Palmer</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>James Palmer</PI_FULL_NAME>
<EmailAddress>James.Palmer@nau.edu</EmailAddress>
<PI_PHON>9285234880</PI_PHON>
<NSF_ID>000366550</NSF_ID>
<StartDate>04/26/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>John</FirstName>
<LastName>Georgas</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>John C Georgas</PI_FULL_NAME>
<EmailAddress>john.georgas@nau.edu</EmailAddress>
<PI_PHON>9285239984</PI_PHON>
<NSF_ID>000514746</NSF_ID>
<StartDate>04/26/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northern Arizona University</Name>
<CityName>Flagstaff</CityName>
<ZipCode>860110001</ZipCode>
<PhoneNumber>9285230886</PhoneNumber>
<StreetAddress>ARD Building #56, Suite 240</StreetAddress>
<StreetAddress2><![CDATA[1395 South Knoles Drive]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<StateCode>AZ</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>AZ01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>806345542</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTHERN ARIZONA UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>806345542</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Northern Arizona University]]></Name>
<CityName>Flagstaff</CityName>
<StateCode>AZ</StateCode>
<ZipCode>860110001</ZipCode>
<StreetAddress><![CDATA[Bldg., 69, S. McConnell Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>AZ01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7513</Code>
<Text>TUES-Type 1 Project</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0413</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~187195</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The design of software systems, both simple and complex, is a core activity in computer science and software engineering. The quality of a system&rsquo;s design has a fundamental impact on the functional (i.e. pertaining to the specific functions a software system is intended to perform) and non-functional (e.g. pertaining to performance, efficiency, or maintainability) properties of that system. A high-quality design is also important in reducing maintenance costs, which account for roughly 60% of a software system&rsquo;s total cost. As a result of this centrality of design, it is vitally important that computer science graduates possess strong design skills. Conventional curricula in the discipline, however, do not adequately support design learning since they isolate the explicit study of design to only a few selected courses while using ill-suited instructional techniques.</p> <p>This project developed improved strategies by which to support design learning in computer science curricula. Based on the recognition that post-design reflection is a highly effective technique to learn from prior design experiences, our instructional approach focused on supporting design learning by having students engage in solving design problems (referred to as design challenges), reflecting over the design options captured in their solutions, and creating reflective narratives of lessons learned (referred to as design stories). Rather than focusing on a specific set of training elements, such as design-oriented coursework, we instead emphasized the development of modular and lightweight design challenges that could be infused in multiple parts of a conventional curriculum and various modes by which these challenges could be deployed. Assessment and evaluation activities demonstrate that students see our approach as beneficial to their understanding of software design, particularly in identifying design trade-offs and alternatives that they failed to consider while solving their initial design challenges through reflective retrospection.</p> <p>This novel approach to supporting design learning in computer science curricula&mdash;solidly grounded on insights from discovery- and reflection-based learning&mdash;contributes an important demonstration of the effectiveness and applicability of a modular approach to supporting design learning, providing both a model of its application as well as concrete results of its effectiveness. Our work holds the potential to transform how conventional curricula foster the development of design skills and, by helping infuse improved design skills in graduates who become software development professionals, lower the cost of software system creation and maintenance.</p><br> <p>            Last Modified: 12/08/2017<br>      Modified by: John&nbsp;C&nbsp;Georgas</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The design of software systems, both simple and complex, is a core activity in computer science and software engineering. The quality of a system?s design has a fundamental impact on the functional (i.e. pertaining to the specific functions a software system is intended to perform) and non-functional (e.g. pertaining to performance, efficiency, or maintainability) properties of that system. A high-quality design is also important in reducing maintenance costs, which account for roughly 60% of a software system?s total cost. As a result of this centrality of design, it is vitally important that computer science graduates possess strong design skills. Conventional curricula in the discipline, however, do not adequately support design learning since they isolate the explicit study of design to only a few selected courses while using ill-suited instructional techniques.  This project developed improved strategies by which to support design learning in computer science curricula. Based on the recognition that post-design reflection is a highly effective technique to learn from prior design experiences, our instructional approach focused on supporting design learning by having students engage in solving design problems (referred to as design challenges), reflecting over the design options captured in their solutions, and creating reflective narratives of lessons learned (referred to as design stories). Rather than focusing on a specific set of training elements, such as design-oriented coursework, we instead emphasized the development of modular and lightweight design challenges that could be infused in multiple parts of a conventional curriculum and various modes by which these challenges could be deployed. Assessment and evaluation activities demonstrate that students see our approach as beneficial to their understanding of software design, particularly in identifying design trade-offs and alternatives that they failed to consider while solving their initial design challenges through reflective retrospection.  This novel approach to supporting design learning in computer science curricula&mdash;solidly grounded on insights from discovery- and reflection-based learning&mdash;contributes an important demonstration of the effectiveness and applicability of a modular approach to supporting design learning, providing both a model of its application as well as concrete results of its effectiveness. Our work holds the potential to transform how conventional curricula foster the development of design skills and, by helping infuse improved design skills in graduates who become software development professionals, lower the cost of software system creation and maintenance.       Last Modified: 12/08/2017       Submitted by: John C Georgas]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

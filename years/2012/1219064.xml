<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small:  Memory-Centric Real-Time Scheduling for Multicore Embedded Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>In modern automotive and avionics applications, the use of multiple sensors and especially real-time imaging sensors creates unprecedented workloads. From a computational perspective, multicore architectures have become mainstream; however, as a multicore chip is expected to process increasing volumes of data in real-time, the memory hierarchy becomes the bottleneck resource. In the worst case, task execution times can grow linearly with the number of cores in the system. This research aims at laying foundations for a modern memory-centric real-time scheduling theory that can effectively co-schedule the use of the memory hierarchy, the cores, and the on-chip network, including the I/O channels. According to the vision of Memory-Centric Scheduling, when the memory hierarchy is the system bottleneck, memory accesses should be scheduled to achieve high memory utilization. Performance of a real-time multicore system should be measured in terms of schedulable memory utilization rather than just core utilization. Ideally, the real-time constraints should be met as long as total memory utilization of all real-time applications (across all the cores contending for shared memory) is below 100%.&lt;br/&gt;&lt;br/&gt;The potential economic and social benefits of this research are significant since the developed theory will greatly increase the temporal predictability of embedded multicore software systems in general, while in particular reducing cost and time required to achieve the necessary safety certification of next generation avionic multicore computing architectures. As the new scheduling theory is being developed, key elements will be incorporated into graduate classes in real-time computing and then migrated to senior undergraduate classes.</AbstractNarration>
<MinAmdLetterDate>08/23/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/23/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1219064</AwardID>
<Investigator>
<FirstName>Lui</FirstName>
<LastName>Sha</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Lui Sha</PI_FULL_NAME>
<EmailAddress>lrs@illinois.edu</EmailAddress>
<PI_PHON>2177780691</PI_PHON>
<NSF_ID>000222870</NSF_ID>
<StartDate>08/23/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Marco</FirstName>
<LastName>Caccamo</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Marco Caccamo</PI_FULL_NAME>
<EmailAddress>mcaccamo@cs.uiuc.edu</EmailAddress>
<PI_PHON>2172440432</PI_PHON>
<NSF_ID>000299562</NSF_ID>
<StartDate>08/23/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName/>
<StateCode>IL</StateCode>
<ZipCode>618207473</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~500000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Traditional multicore platforms feature processing units that perform operations in parallel (i.e. can have parallel execution flows), while they share a substantial portion of the memory hierarchy &ndash; from shared CPU caches, to DRAM, to I/O peripherals. As a result, the processing load on a given core can significantly affect the performance, and hence the timing, of the tasks running on a different core.</p> <p>The intellectual merit of this project has been the development of a coscheduling theory and supporting technologies and tools that can effectively coschedule the use of the memory hierarchy, the cores, and the I/O channels. According to the proposed theory, when the memory hierarchy is the system bottleneck, memory&nbsp;accesses should be scheduled to achieve high memory utilization. Additionally, PIs have designed a SPM-centric Operating System such that memory operations can be parallelized with respect to execution. This RTOS is designed for performance isolation on multicore and it exploits specialization and scheduling of shared resources</p> <p>For broader impact, PIs have worked closely with avionics/automotive companies to receive continous feedback as they developed new technology and to enable its transfer. The findings of this project have been plubished in international conferences and journals. Seminars were offered at PI's home institution and top Universities like ETH, Zurich; EPFL Lausanne; TUM Munich, and Harvard. PIs believe that the proposed unified coscheduling theory and supporting technologies and tools fundamentally change the focus of scheduling theory away from the computation centric approach of the past thirty years. Some of this technology (See Memguard) has been integrated within a software framework named SingleCore Equivalence Technology (SCE).&nbsp;</p> <p>PI Caccamo also designed an Unmanned Aereal Vehicle (UAV) testbed in collaboration with Aerospace department at UIUC. This complex testbed required interdisciplinary skills and we hope that its demonstration will attract more students and minorities to the broad field of engineering.</p> <p>&nbsp;The UAV testbed development process was a great resource to train several undergraduate and graduate students. Multiple interdisciplinary projects were offered every semester. The students had access to a well-equipped lab where they discussed technical concepts spanning across aerospace engineering, electrical engineering, and computer science. As example of a former undergraduate project, we have a GUI Demonstration video for a Summer 2014 Computer Science project funded by NSF (See https://www.youtube.com/watch?v=GsJwuYM83Lc ). The GUI shows in real time the flight data logged during a manned flight for a small scale aerial vehicle built by a graduate student at UIUC.</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/21/2016<br>      Modified by: Marco&nbsp;Caccamo</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Traditional multicore platforms feature processing units that perform operations in parallel (i.e. can have parallel execution flows), while they share a substantial portion of the memory hierarchy &ndash; from shared CPU caches, to DRAM, to I/O peripherals. As a result, the processing load on a given core can significantly affect the performance, and hence the timing, of the tasks running on a different core.  The intellectual merit of this project has been the development of a coscheduling theory and supporting technologies and tools that can effectively coschedule the use of the memory hierarchy, the cores, and the I/O channels. According to the proposed theory, when the memory hierarchy is the system bottleneck, memory accesses should be scheduled to achieve high memory utilization. Additionally, PIs have designed a SPM-centric Operating System such that memory operations can be parallelized with respect to execution. This RTOS is designed for performance isolation on multicore and it exploits specialization and scheduling of shared resources  For broader impact, PIs have worked closely with avionics/automotive companies to receive continous feedback as they developed new technology and to enable its transfer. The findings of this project have been plubished in international conferences and journals. Seminars were offered at PI's home institution and top Universities like ETH, Zurich; EPFL Lausanne; TUM Munich, and Harvard. PIs believe that the proposed unified coscheduling theory and supporting technologies and tools fundamentally change the focus of scheduling theory away from the computation centric approach of the past thirty years. Some of this technology (See Memguard) has been integrated within a software framework named SingleCore Equivalence Technology (SCE).   PI Caccamo also designed an Unmanned Aereal Vehicle (UAV) testbed in collaboration with Aerospace department at UIUC. This complex testbed required interdisciplinary skills and we hope that its demonstration will attract more students and minorities to the broad field of engineering.   The UAV testbed development process was a great resource to train several undergraduate and graduate students. Multiple interdisciplinary projects were offered every semester. The students had access to a well-equipped lab where they discussed technical concepts spanning across aerospace engineering, electrical engineering, and computer science. As example of a former undergraduate project, we have a GUI Demonstration video for a Summer 2014 Computer Science project funded by NSF (See https://www.youtube.com/watch?v=GsJwuYM83Lc ). The GUI shows in real time the flight data logged during a manned flight for a small scale aerial vehicle built by a graduate student at UIUC.                      Last Modified: 11/21/2016       Submitted by: Marco Caccamo]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Understanding and advancing network design in planar domains</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2013</AwardEffectiveDate>
<AwardExpirationDate>06/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>523999</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy Kimbrel</SignBlockName>
<PO_EMAI>tkimbrel@nsf.gov</PO_EMAI>
<PO_PHON>7032927924</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computational intractability is the absence of provably efficient algorithms to solve a problem. Consider the traveling salesperson problem (TSP): visit a set of cities in an order that will minimize the distance traveled.  If one considers only efficient algorithms to solve this problem, then, pessimistically, one can only guarantee a solution that is at most 40% longer than the shortest tour.  One should ask whether their instance is really that bad, as often it is not.  In fact, many industrial instances of TSP are geographical and are well represented by Euclidean or planar-graph distances.  For these instances there are efficient algorithms that will find a tour that is very close to optimal.  In practice, heuristics do very well in solving even large instances.&lt;br/&gt;&lt;br/&gt;The research under this award will address two limitations of the start-of-the-art: neither the input domain is as perfect as a planar graph, nor the problem definition is as clean as TSP.  The PI will design efficient and accurate algorithms for a broader class of low-dimensional domains and problem constraints.  This will greatly advance the theoretical understanding of these low-dimensional metrics.  The PI will work with practitioners in energy and transportation systems in order to ensure the practicality of her algorithms and promote the design of practical heuristics inspired by these algorithms. &lt;br/&gt;&lt;br/&gt;The PI will involve the education and training of high school, undergraduate and graduate students.  With high-school students, the PI will develop video lectures on basic algorithmic-design and graph-theoretic concepts suitable to the general public.  Undergraduate students will be exposed to graph-theoretic aspects of this research through summer research experiences.  The effort will also design course materials for active-learning problem-solving sessions in advanced algorithms classes and develop lecture notes for a graduate course on domain-specific algorithm design.</AbstractNarration>
<MinAmdLetterDate>12/19/2012</MinAmdLetterDate>
<MaxAmdLetterDate>06/28/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1252833</AwardID>
<Investigator>
<FirstName>Glencora</FirstName>
<LastName>Borradaile</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Glencora Borradaile</PI_FULL_NAME>
<EmailAddress>glencora@eecs.oregonstate.edu</EmailAddress>
<PI_PHON>5417374933</PI_PHON>
<NSF_ID>000541388</NSF_ID>
<StartDate>12/19/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Oregon State University</Name>
<CityName>Corvallis</CityName>
<ZipCode>973318507</ZipCode>
<PhoneNumber>5417374933</PhoneNumber>
<StreetAddress>OREGON STATE UNIVERSITY</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Oregon</StateName>
<StateCode>OR</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OR04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>053599908</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OREGON STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>053599908</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Oregon State University]]></Name>
<CityName/>
<StateCode>OR</StateCode>
<ZipCode>973318507</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Oregon</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OR04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7796</Code>
<Text>ALGORITHMIC FOUNDATIONS</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~191923</FUND_OBLG>
<FUND_OBLG>2014~15999</FUND_OBLG>
<FUND_OBLG>2015~131914</FUND_OBLG>
<FUND_OBLG>2016~117018</FUND_OBLG>
<FUND_OBLG>2017~67145</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Problems can be difficult to solve -- even for computers. Some  problems can't be solved optimally in a reasonable amount of time (i.e.  efficiently) and other problems can't be solved at all.&nbsp; Even if you  focus on a single problem, its computational difficulty can depend on  the nature of the input to the problem.&nbsp;</p> <p>Take for example the  Travelling Salesperson Problem (TSP): you wish to visit a set of  locations and return home and travel the least distance (or spend the  least money) doing so.&nbsp; It is the type of problem that delivery  companies solve daily (or even hourly).&nbsp; If your locations are on a road  network without bridges or tunnels, we can solve this problem  efficiently to near-optimality with a type of algorithm known as a  polynomial-time approximation scheme (PTAS).&nbsp; The running time of a PTAS  depends not only on how large your road network is but also on how  close to an optimal solution you want.&nbsp; Solving to optimality would take  the PTAS a prohibitively long time, but solving to near-optimality can  be done quick enough.</p> <p>At the outset of this project, PTASes were  only known for instances of TSP given by networks that can be drawn on  simple surfaces without the edges crossing (think of a road network  without overpasses).&nbsp; Our project greatly expanded the set of inputs for  which there is a PTAS for TSP.&nbsp; In fact, we can characterize how far a  network is from being drawable on a surface with a complexity parameter  we can call H. We design a PTAS where H is an additional parameter in  the efficiency of the algorithm. As H gets bigger, our network can be  arbitrarily complex, but our algorithm gets prohibitively expensive.&nbsp;  However, many real-world networks (such as real road networks and  electical grids) have a small H parameter, so the set of inputs we can  handle is truly much larger as a result of this work.</p> <p>Indeed, you  can characterize the complexity of a network in many different ways, and  our algorithm design and analysis methods give a new way to approach  understanding other parameters of network complexity as well.</p> <p>This  project has been supported by the work of many students, who, in return  had rich educational experiences that for many have led to deeper  research.&nbsp; One high school student developed videos explaining the basic  mathematical tools behind this research for a high-school audience.&nbsp;  Six undergraduates worked on projects closely related to the  above-described work and four of those students have gone on to pursue  PhDs at top research universities.&nbsp; Two doctoral students derived their  dissertations from the work of this project and are continuing to do  research, one in industry and one in academia.</p><br> <p>            Last Modified: 10/18/2019<br>      Modified by: Glencora&nbsp;Borradaile</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Problems can be difficult to solve -- even for computers. Some  problems can't be solved optimally in a reasonable amount of time (i.e.  efficiently) and other problems can't be solved at all.  Even if you  focus on a single problem, its computational difficulty can depend on  the nature of the input to the problem.   Take for example the  Travelling Salesperson Problem (TSP): you wish to visit a set of  locations and return home and travel the least distance (or spend the  least money) doing so.  It is the type of problem that delivery  companies solve daily (or even hourly).  If your locations are on a road  network without bridges or tunnels, we can solve this problem  efficiently to near-optimality with a type of algorithm known as a  polynomial-time approximation scheme (PTAS).  The running time of a PTAS  depends not only on how large your road network is but also on how  close to an optimal solution you want.  Solving to optimality would take  the PTAS a prohibitively long time, but solving to near-optimality can  be done quick enough.  At the outset of this project, PTASes were  only known for instances of TSP given by networks that can be drawn on  simple surfaces without the edges crossing (think of a road network  without overpasses).  Our project greatly expanded the set of inputs for  which there is a PTAS for TSP.  In fact, we can characterize how far a  network is from being drawable on a surface with a complexity parameter  we can call H. We design a PTAS where H is an additional parameter in  the efficiency of the algorithm. As H gets bigger, our network can be  arbitrarily complex, but our algorithm gets prohibitively expensive.   However, many real-world networks (such as real road networks and  electical grids) have a small H parameter, so the set of inputs we can  handle is truly much larger as a result of this work.  Indeed, you  can characterize the complexity of a network in many different ways, and  our algorithm design and analysis methods give a new way to approach  understanding other parameters of network complexity as well.  This  project has been supported by the work of many students, who, in return  had rich educational experiences that for many have led to deeper  research.  One high school student developed videos explaining the basic  mathematical tools behind this research for a high-school audience.   Six undergraduates worked on projects closely related to the  above-described work and four of those students have gone on to pursue  PhDs at top research universities.  Two doctoral students derived their  dissertations from the work of this project and are continuing to do  research, one in industry and one in academia.       Last Modified: 10/18/2019       Submitted by: Glencora Borradaile]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

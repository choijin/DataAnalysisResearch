<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Flash Memory for Ubiquitous Hardware Security Functions</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2012</AwardEffectiveDate>
<AwardExpirationDate>06/30/2015</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Performing financial transactions on a smartphone raises a number of security concerns.  How can a bank be certain that a request is authentic?  How do we prevent the same transaction to be unintentionally repeated?  How can we ensure your sensitive information cannot be copied even if a phone is lost?  Strong hardware security functions such as device fingerprints and true random number generators are essential in addressing these questions.  However, traditional hardware security functions are difficult and expensive to build.  This project investigates using off-the-shelf Flash memory, which is already in most digital systems today, to provide security functions like device fingerprints, random number generators, and secure information storage.  These security functions will be extracted in a plug-and-play fashion from today's Flash without any customized modification, enabling hardware-based security in virtually all electronic devices.  Therefore, this project will greatly enhance security and privacy in an era where computing devices are everywhere. Also, the project will train and educate a new generation of interdisciplinary engineers who can understand both security and semiconductor device.&lt;br/&gt;&lt;br/&gt;To enable the proposed security functions, this project taps into inherent analog behaviors of Flash memory such as hidden variations, noises, aging, etc.  For example, random numbers can be generated from thermal or quantum noise in Flash memory.  The device fingerprints can be extracted from program/erase timing variations of each memory cell, which cannot be predicted or controlled even by the Flash memory manufacturer.  Information hiding can be achieved through selective stressing of bits to create probabilistic differences.  Such hidden information will be very difficult to copy or even detect unless a specific secret key is known.  These analog behaviors can be observed through the standard Flash memory interface without interfering with normal memory functions. Therefore, the proposed security functions will be broadly applicable to electronic systems with Flash memory.</AbstractNarration>
<MinAmdLetterDate>08/02/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/02/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1223955</AwardID>
<Investigator>
<FirstName>Edwin</FirstName>
<LastName>Kan</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Edwin C Kan</PI_FULL_NAME>
<EmailAddress>kan@ece.cornell.edu</EmailAddress>
<PI_PHON>6072553998</PI_PHON>
<NSF_ID>000306792</NSF_ID>
<StartDate>08/02/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Gookwon</FirstName>
<LastName>Suh</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Gookwon E Suh</PI_FULL_NAME>
<EmailAddress>gs272@cornell.edu</EmailAddress>
<PI_PHON>6072556856</PI_PHON>
<NSF_ID>000104889</NSF_ID>
<StartDate>08/02/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY23</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>872612445</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CORNELL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002254837</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Cornell University]]></Name>
<CityName/>
<StateCode>NY</StateCode>
<ZipCode>148502820</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY23</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~500000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Imagine performing financial transactions on a smartphone. How can a bank be certain that a request is authentic? How do we prevent the same transaction to be unintentionally repeated? How can we ensure your sensitive information cannot be copied even if a phone is lost? Strong hardware security functions such as device fingerprints and true random number generators are essential in addressing these questions. However, traditional hardware security functions are difficult and expensive to build.</p> <p>This project investigated using off-the-shelf Flash memory, which is already in most digital systems today, to provide such security functions &ndash; device fingerprints, random number generators, secure information storage (hiding), and chip layout authentication. The project showed that these security functions can be extracted from today&rsquo;s Flash without any customized modification, enabling hardware-based security in virtually any electronic devices with Flash memory. These security functions have a potential to greatly enhance security and privacy in an era where computing devices are everywhere.</p> <p>To enable the proposed security functions, the project developed techniques that tap into inherent analog behaviors of Flash memory such as hidden variations, noises, aging, etc. For example, random numbers can be generated from thermal or quantum noise in Flash memory. The device fingerprints can be extracted from program/erase timing variations of each memory cell, which cannot be predicted or controlled even by the Flash memory manufacturer. Information hiding can be achieved through selective stressing of bits to create probabilistic differences. Such hidden information will be very difficult to copy, erase, or even detect unless a specific secret key is known. A chip layout can be identified through systematic timing variations. These analog behaviors can be observed through the standard Flash memory interface without interfering with normal memory functions.</p> <p>In addition to developing new Flash-based security functions and experimentally demonstrating them on commercial Flash memory chips, the project also investigated physical origins of the Flash memory&rsquo;s analog behaviors that are leveraged for security. The study using physical and statistical modeling mapped random telegraph noise to random number generation, discrete dopant fluctuation to fingerprinting, &nbsp;single defect generation to data hiding, and optical proximity to layout authentication. These findings provide theoretical foundations on why these security functions are secure and will be usable even for future Flash memory.</p> <p>For broader impacts, we published its findings as conference and journal papers, gave multiple invited talks, and shared our Flash testbed with other research groups. The project also included multiple educational components. For example, the project trained many graduate and undergraduate students through research activities. The research outcome was used to developed a new course module in a graduate-level course that teach security challenges and techniques to future hardware engineers.</p><br> <p>            Last Modified: 10/06/2015<br>      Modified by: Gookwon&nbsp;E&nbsp;Suh</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Imagine performing financial transactions on a smartphone. How can a bank be certain that a request is authentic? How do we prevent the same transaction to be unintentionally repeated? How can we ensure your sensitive information cannot be copied even if a phone is lost? Strong hardware security functions such as device fingerprints and true random number generators are essential in addressing these questions. However, traditional hardware security functions are difficult and expensive to build.  This project investigated using off-the-shelf Flash memory, which is already in most digital systems today, to provide such security functions &ndash; device fingerprints, random number generators, secure information storage (hiding), and chip layout authentication. The project showed that these security functions can be extracted from todayÃ†s Flash without any customized modification, enabling hardware-based security in virtually any electronic devices with Flash memory. These security functions have a potential to greatly enhance security and privacy in an era where computing devices are everywhere.  To enable the proposed security functions, the project developed techniques that tap into inherent analog behaviors of Flash memory such as hidden variations, noises, aging, etc. For example, random numbers can be generated from thermal or quantum noise in Flash memory. The device fingerprints can be extracted from program/erase timing variations of each memory cell, which cannot be predicted or controlled even by the Flash memory manufacturer. Information hiding can be achieved through selective stressing of bits to create probabilistic differences. Such hidden information will be very difficult to copy, erase, or even detect unless a specific secret key is known. A chip layout can be identified through systematic timing variations. These analog behaviors can be observed through the standard Flash memory interface without interfering with normal memory functions.  In addition to developing new Flash-based security functions and experimentally demonstrating them on commercial Flash memory chips, the project also investigated physical origins of the Flash memoryÃ†s analog behaviors that are leveraged for security. The study using physical and statistical modeling mapped random telegraph noise to random number generation, discrete dopant fluctuation to fingerprinting,  single defect generation to data hiding, and optical proximity to layout authentication. These findings provide theoretical foundations on why these security functions are secure and will be usable even for future Flash memory.  For broader impacts, we published its findings as conference and journal papers, gave multiple invited talks, and shared our Flash testbed with other research groups. The project also included multiple educational components. For example, the project trained many graduate and undergraduate students through research activities. The research outcome was used to developed a new course module in a graduate-level course that teach security challenges and techniques to future hardware engineers.       Last Modified: 10/06/2015       Submitted by: Gookwon E Suh]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

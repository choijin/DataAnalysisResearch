<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Algorithmic and Software Foundations for Large-Scale Graph Analysis</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/01/2013</AwardEffectiveDate>
<AwardExpirationDate>06/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Alan Sussman</SignBlockName>
<PO_EMAI>alasussm@nsf.gov</PO_EMAI>
<PO_PHON>7032927563</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The proposed research aims at designing highly efficient and scalable algorithms for large graph-based computations on modern data sets and emerging parallel platforms. Graph abstractions and graph-theoretic computations play a critical role in the analysis of data from experimental devices, medical data sets, socially-generated data from the web and mobile devices, and scientific simulation data. The proposal aims to provide a fundamental understanding of parallel graph analytics, with the creation of novel algorithmic frameworks. Motivated by current terascale applications in genomics, proteomics, and social network analytics, the project will undertake the clean-slate design of four algorithmic frameworks that capture broad classes of graph-based computations: traversal-based static graph computations, dynamic graph analytics, subgraph enumeration and pattern search computations, and multiscale and multilevel graph computations. This research will lead to the design of new memory-efficient graph representations and data structures, the creation of novel linear time parallel algorithmic strategies based on data partitioning, and a deeper understanding of architectural features that impact graph processing efficiency and scalability. The expected outcome is to enable non-parallel computing experts design graph analytics at orders-of-magnitude higher levels of abstraction and performance than the current state-of-the-art.&lt;br/&gt;&lt;br/&gt;The proposed educational activities, closely related to the research goals, attempt to foster an environment of interdisciplinary computational research within Penn State. New graduate classes on parallel graph analysis, parallel algorithms for computational biology, and high-performance social data mining, will facilitate student involvement in current research activities of this project and its collaborators. The identification of new high-level data-centric parallel algorithm and software design principles will be a key broader impacts outcome. The project will actively collaborate with academic, industrial, and government laboratory partners that rely on graph-based analytics, release the algorithmic frameworks under open-source licenses, and train practitioners and interdisciplinary teams through virtual workshops and tutorials.</AbstractNarration>
<MinAmdLetterDate>12/10/2012</MinAmdLetterDate>
<MaxAmdLetterDate>12/10/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1253881</AwardID>
<Investigator>
<FirstName>Kamesh</FirstName>
<LastName>Madduri</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kamesh Madduri</PI_FULL_NAME>
<EmailAddress>madduri@cse.psu.edu</EmailAddress>
<PI_PHON>8148651372</PI_PHON>
<NSF_ID>000598267</NSF_ID>
<StartDate>12/10/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Pennsylvania State Univ University Park</Name>
<CityName>University Park</CityName>
<ZipCode>168021503</ZipCode>
<PhoneNumber>8148651372</PhoneNumber>
<StreetAddress>201 Old Main</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003403953</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PENNSYLVANIA STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003403953</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Pennsylvania State Univ University Park]]></Name>
<CityName>University Park</CityName>
<StateCode>PA</StateCode>
<ZipCode>168021503</ZipCode>
<StreetAddress><![CDATA[201 Old Main]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1045</Code>
<Text>CAREER: FACULTY EARLY CAR DEV</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~500000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>We are creating electronic data at an unprecedented rate. To derive new insights from data, we need fast and efficient analysis algorithms. The <em>graph</em> abstraction from discrete mathematics is commonly used to represent massive relational data sets. Graph <em>analytics</em> (or analysis methods) are frequently used in a wide range of data-intensive scientific domains, as well as in cybersecurity, financial, and biomedical applications. This project advanced the state of the art for analytics on terascale graphs, or graphs capturing <em>trillions</em> of relations. Fast analytics on terascale graphs requires use of modern high-performance computing platforms, and so this project focused on designing efficient and portable parallel algorithms and software. <br /><br />The project has resulted in several major technical contributions. We primarily developed parallel algorithms and software for graph connectivity, subgraph counting, partitioning, and hierarchical decomposition problems. Additionally, we developed new methods for the graph problems of shortest paths, edge sparsification, clustering, and node-link drawing. We identified several broadly applicable performance optimization strategies for these problems, as well as abstractions and templates to structure the algorithms. We have applied the parallel graph algorithms developed to diverse areas such as web data mining and hydrology data management.</p> <p>To complement the peer-reviewed research publications describing these algorithms, we made the source code for several software programs freely available online. The software programs include the Multistep for connectivity problems, FASCIA for approximate subgraph counting, FastPath for path enumeration, PuLP and XtraPuLP for label propagation-based graph partitioning, HPCGraph for distributed memory graph analytics, PKC for k-core decomposition, PKT for k-truss decomposition, and SpectralGraphDrawing for node-link graph drawings. The software developed through this project has pedagogical value related to graph algorithms and parallel programming.</p> <p>The project partially supported five doctoral students in Computer Science and Engineering. Four of the five students have graduated, and one student's dissertation is in progress. Also, three Masters students and three undergraduate students were supported as research assistants. Three of these six students are from groups traiditionally underrepresented in computing. The project's research outcomes have been incorporated into both undergraduate and graduate classes.</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/30/2019<br>      Modified by: Kamesh&nbsp;Madduri</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ We are creating electronic data at an unprecedented rate. To derive new insights from data, we need fast and efficient analysis algorithms. The graph abstraction from discrete mathematics is commonly used to represent massive relational data sets. Graph analytics (or analysis methods) are frequently used in a wide range of data-intensive scientific domains, as well as in cybersecurity, financial, and biomedical applications. This project advanced the state of the art for analytics on terascale graphs, or graphs capturing trillions of relations. Fast analytics on terascale graphs requires use of modern high-performance computing platforms, and so this project focused on designing efficient and portable parallel algorithms and software.   The project has resulted in several major technical contributions. We primarily developed parallel algorithms and software for graph connectivity, subgraph counting, partitioning, and hierarchical decomposition problems. Additionally, we developed new methods for the graph problems of shortest paths, edge sparsification, clustering, and node-link drawing. We identified several broadly applicable performance optimization strategies for these problems, as well as abstractions and templates to structure the algorithms. We have applied the parallel graph algorithms developed to diverse areas such as web data mining and hydrology data management.  To complement the peer-reviewed research publications describing these algorithms, we made the source code for several software programs freely available online. The software programs include the Multistep for connectivity problems, FASCIA for approximate subgraph counting, FastPath for path enumeration, PuLP and XtraPuLP for label propagation-based graph partitioning, HPCGraph for distributed memory graph analytics, PKC for k-core decomposition, PKT for k-truss decomposition, and SpectralGraphDrawing for node-link graph drawings. The software developed through this project has pedagogical value related to graph algorithms and parallel programming.  The project partially supported five doctoral students in Computer Science and Engineering. Four of the five students have graduated, and one student's dissertation is in progress. Also, three Masters students and three undergraduate students were supported as research assistants. Three of these six students are from groups traiditionally underrepresented in computing. The project's research outcomes have been incorporated into both undergraduate and graduate classes.          Last Modified: 10/30/2019       Submitted by: Kamesh Madduri]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

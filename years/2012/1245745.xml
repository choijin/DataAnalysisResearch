<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>An application-based learning approach to introductory C programming language courses</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>199354.00</AwardTotalIntnAmount>
<AwardAmount>199354</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>rebecca bates</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>PARTICIPATING INSTITUTION: &lt;br/&gt;University of Maryland College Park&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;PROJECT DESCRIPTION &lt;br/&gt;One of the first hurdles that college students majoring in electrical or computer engineering and related fields must overcome is a freshman programming class. Introductory programming courses for engineers are still typically taught in a traditional manner, with large classroom lectures and laboratory sessions where students implement software-only programming assignments. Lectures and assignments can too often obscure how programming can be embedded in a broader design problem. Therefore, introductory computing courses are perceived by many students as disconnected from issues of design and problem solving. As a result, many students lose enthusiasm toward their intended profession.&lt;br/&gt;&lt;br/&gt;The project is developing a project-driven programming course for first-year electrical engineering (EE) majors. The course assumes no previous programming or engineering knowledge. Students design C-programs in an integrated development environment (IDE) for microprocessor applications utilizing a variety of electronic sensors and actuators. In addition to teaching the syntax and semantics of a language necessary to be successful in more advanced programming classes, the course gives students an appreciation for the enabling role of programmable devices in technological systems and applications. &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;BROADER SIGNIFICANCE &lt;br/&gt;The project is focused on an important aspect of early engineering education by seeking to improve the teaching and learning of introductory programming. The applications will provide a rich context for learning to program, additionally serving as an introduction to components and techniques that are commonly utilized in the EE profession. Introducing students to engineering-relevant programming projects at the freshman level is also likely to have a positive effect on retention. The project tackles a national issue, improving computing education for engineers, with interwoven strands of basic research and curriculum development.&lt;br/&gt;&lt;br/&gt;The evaluation being conducted will help inform other educators that are considering revisions to entry-level programming courses. By following students into subsequent programming classes, the team is evaluating the longer-term effects of the new course. The existence of the current computing class running in parallel with the new class allows the project to more rigorously study the effects of the new approach.</AbstractNarration>
<MinAmdLetterDate>09/03/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/03/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1245745</AwardID>
<Investigator>
<FirstName>Wesley</FirstName>
<LastName>Lawson</LastName>
<PI_MID_INIT>G</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Wesley G Lawson</PI_FULL_NAME>
<EmailAddress>lawson@eng.umd.edu</EmailAddress>
<PI_PHON>3014054972</PI_PHON>
<NSF_ID>000228125</NSF_ID>
<StartDate>09/03/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Andrew</FirstName>
<LastName>Elby</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Andrew R Elby</PI_FULL_NAME>
<EmailAddress>ELBY@PHYSICS.UMD.EDU</EmailAddress>
<PI_PHON>7034652896</PI_PHON>
<NSF_ID>000196741</NSF_ID>
<StartDate>09/03/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Shuvra Shikhar</FirstName>
<LastName>Bhattacharyya</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shuvra Shikhar Bhattacharyya</PI_FULL_NAME>
<EmailAddress>ssb@umd.edu</EmailAddress>
<PI_PHON>3014053683</PI_PHON>
<NSF_ID>000334658</NSF_ID>
<StartDate>09/03/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ayush</FirstName>
<LastName>Gupta</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ayush Gupta</PI_FULL_NAME>
<EmailAddress>ayush@umd.edu</EmailAddress>
<PI_PHON>3014055445</PI_PHON>
<NSF_ID>000577853</NSF_ID>
<StartDate>09/03/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MD05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>790934285</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MARYLAND, COLLEGE PARK</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003256088</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Maryland, College Park]]></Name>
<CityName>College Park</CityName>
<StateCode>MD</StateCode>
<ZipCode>207425141</ZipCode>
<StreetAddress><![CDATA[3112 LEE BLDG 7809 Regents Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MD05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7513</Code>
<Text>TUES-Type 1 Project</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0413</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~199354</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>An innovative introductory C language programming course that utilizes hardware-based projects to motivate students to master language syntax and implement key programming concepts and best practices has been developed and taught multiple times in the past several years. The novel course has been run in parallel with a traditional introductory course and a mixed-methods evaluation approach has been used to compare student attitudes, self-perceptions, and success rates in these introductory courses and in a subsequent traditional intermediate-level C programming course. The methods included interviews, surveys, and direct observation. The two introductory courses had nearly identical learning objectives for the programming content; key differences for the two courses were (1) the collaborative and active learning format for novel course&rsquo;s hands-on lab projects and (2) the introduction and use of electronic hardware.</p> <p>The novel course appears to give sufficient preparation for the traditional intermediate programming class, as graduates from the novel course scored slightly higher in the intermediate course than graduates from the traditional introductory course, even though their overall GPAs were nearly identical. The novel course also had a small positive impact on student retention. In general, students who took the novel course were satisfied with the course and on average left with an improved self-image regarding their fitness as electrical engineering (EE) students and an improved understanding of the role of computer programming in their discipline. In contrast, students who took the traditional introductory course on average left with a negative change in their self-image regarding their fitness as an engineer and a lesser improvement of their understanding of the role of programming in electrical engineering. Identical conclusions for these two measures (fitness as an EE and the role of programming) also held for underrepresented minorities in electrical engineering, who were conceived of as women and non-Asian racial minorities for the purposes of this study and represented about 30% of the novel course student population.</p> <p>The course used data from the study to improve the course each time it was taught. The lab introduced students to many concepts from the electrical engineering discipline, including elements of circuit theory, electromagnetics, controls, and communication systems.&nbsp; The Raspberry Pi computer (RPi) was used as the vehicle for lab projects. Most labs were performed in groups of two and required students to program the RPi to control LEDs, motors, and sensors, and to take and analyze data from various sensors for temperature, light, distance, magnetic field, etc. Example labs would be to realize a device that can search for and follow a magnet, estimate distances to objects and identify outliers in the data, sense the presence of a stimulus (e.g. light, heat) and respond based on the absence or presence of that stimulus. The course also featured multi-week final individual and group (3-5 students) projects to demonstrate cumulative individual KSAs (knowledge, skills, and abilities) and teamwork and communication skills. The final group project was to use sensors to program an autonomous vehicle to follow an obstacle course from start to finish and then turn off the sensors and return to start. The final individual project varied, but designing a system to read and interpret Morse Code is a typical example. The novel lab component of the course was regarded by students as particularly valuable for their own learning.</p> <p>The course has been further modified and will be taught to pre-service teachers who have little or no previous programming experience. Python will be taught instead of C and labs will be drawn from the entirety of the STEM arena and not just from the EE discipline, but the key principles and techniques developed for the C course are featured in this course for teachers.</p> <p>&nbsp;</p><br> <p>            Last Modified: 09/21/2017<br>      Modified by: Wesley&nbsp;G&nbsp;Lawson</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ An innovative introductory C language programming course that utilizes hardware-based projects to motivate students to master language syntax and implement key programming concepts and best practices has been developed and taught multiple times in the past several years. The novel course has been run in parallel with a traditional introductory course and a mixed-methods evaluation approach has been used to compare student attitudes, self-perceptions, and success rates in these introductory courses and in a subsequent traditional intermediate-level C programming course. The methods included interviews, surveys, and direct observation. The two introductory courses had nearly identical learning objectives for the programming content; key differences for the two courses were (1) the collaborative and active learning format for novel course?s hands-on lab projects and (2) the introduction and use of electronic hardware.  The novel course appears to give sufficient preparation for the traditional intermediate programming class, as graduates from the novel course scored slightly higher in the intermediate course than graduates from the traditional introductory course, even though their overall GPAs were nearly identical. The novel course also had a small positive impact on student retention. In general, students who took the novel course were satisfied with the course and on average left with an improved self-image regarding their fitness as electrical engineering (EE) students and an improved understanding of the role of computer programming in their discipline. In contrast, students who took the traditional introductory course on average left with a negative change in their self-image regarding their fitness as an engineer and a lesser improvement of their understanding of the role of programming in electrical engineering. Identical conclusions for these two measures (fitness as an EE and the role of programming) also held for underrepresented minorities in electrical engineering, who were conceived of as women and non-Asian racial minorities for the purposes of this study and represented about 30% of the novel course student population.  The course used data from the study to improve the course each time it was taught. The lab introduced students to many concepts from the electrical engineering discipline, including elements of circuit theory, electromagnetics, controls, and communication systems.  The Raspberry Pi computer (RPi) was used as the vehicle for lab projects. Most labs were performed in groups of two and required students to program the RPi to control LEDs, motors, and sensors, and to take and analyze data from various sensors for temperature, light, distance, magnetic field, etc. Example labs would be to realize a device that can search for and follow a magnet, estimate distances to objects and identify outliers in the data, sense the presence of a stimulus (e.g. light, heat) and respond based on the absence or presence of that stimulus. The course also featured multi-week final individual and group (3-5 students) projects to demonstrate cumulative individual KSAs (knowledge, skills, and abilities) and teamwork and communication skills. The final group project was to use sensors to program an autonomous vehicle to follow an obstacle course from start to finish and then turn off the sensors and return to start. The final individual project varied, but designing a system to read and interpret Morse Code is a typical example. The novel lab component of the course was regarded by students as particularly valuable for their own learning.  The course has been further modified and will be taught to pre-service teachers who have little or no previous programming experience. Python will be taught instead of C and labs will be drawn from the entirety of the STEM arena and not just from the EE discipline, but the key principles and techniques developed for the C course are featured in this course for teachers.          Last Modified: 09/21/2017       Submitted by: Wesley G Lawson]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

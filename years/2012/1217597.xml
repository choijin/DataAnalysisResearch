<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Bringing Predictable Low Latency and Strong Consistency to Data Center Services</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>450000.00</AwardTotalIntnAmount>
<AwardAmount>450000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>To provide responsive services to end-users, cloud platforms are designed for low latency. Each layer of the stack, including local storage, distributed file systems, the communication layer, and coordination services, operates with a few milliseconds latency on average. However, a typical user request flows through dozens of services. As a result, the latency tail is as important to responsiveness as average latency: if 1 in 100 RPC requests experiences 50ms latency, then as the complexity of servicing an individual user request grows, so do does the likelihood that the latency of the user's request will be "dragged down" by an outlier.&lt;br/&gt;&lt;br/&gt;We are exploring techniques for constructing data center services that provide low latency tails. Hard drives can introduce high latency when seeking, whereas SSDs provide uniform access times even for random workloads. Distributed storage systems like GFS or BigTable provide good average latency, but at scale, "rare" events like tablet splitting become common.  We are designing techniques to reduce the latency impact of these rare events and that exploit redundancy to provide a fast path even if they occur. OSs and transport protocols are another source of latency noise; we are applying techniques from soft real-time systems and QoS-oriented networks to condition these layers as well.  By bringing down tail latency, we will also make protocols that provide strong data consistency more practical.&lt;br/&gt;&lt;br/&gt;As part of our work, we are incorporating these topics into the undergraduate and graduate curriculum, including a graduate course on operating systems.</AbstractNarration>
<MinAmdLetterDate>08/24/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/24/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1217597</AwardID>
<Investigator>
<FirstName>Steven</FirstName>
<LastName>Gribble</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Steven Gribble</PI_FULL_NAME>
<EmailAddress>gribble@cs.washington.edu</EmailAddress>
<PI_PHON>2066851958</PI_PHON>
<NSF_ID>000491026</NSF_ID>
<StartDate>08/24/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Washington</Name>
<CityName>Seattle</CityName>
<ZipCode>981950001</ZipCode>
<PhoneNumber>2065434043</PhoneNumber>
<StreetAddress>4333 Brooklyn Ave NE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<StateCode>WA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>605799469</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WASHINGTON</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042803536</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Washington]]></Name>
<CityName>Seattle</CityName>
<StateCode>WA</StateCode>
<ZipCode>981952350</ZipCode>
<StreetAddress><![CDATA[185 Stevens Way]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~450000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The major goal of our project is to understand the nature and causes of &ldquo;latency tails&rdquo; in distributed systems, with a particular focus on scalable services. To this end, we are conducting measurement studies to understand the nature of the latency tail in data centers, including which hardware devices, software layers, and protocol designs contribute to noise in the latency tail, and why.</p> <p>Once we have a better understanding of the nature of latency tails and their causes, our next goal is to apply what we have learned to design techniques for constructing systems and services that provide low tail latency, and to build tools that help systems designers and operators diagnose causes of latency spikes and variations in their systems.</p> <p>As part of this grant, we were successful in creating multiple research systems and peer-reviewed, cited publications in high-profile venues, including:</p> <p>&bull; "<span>FlexNIC," a flexible network DMA interface that can be used by operating systems and applications alike to reduce packet processing overheads</span></p> <p><span>&bull; "<span>TAPIR"&nbsp;&ndash; the Transactional Application Protocol for Inconsistent Replication &ndash; the first transaction protocol to use a novel replication protocol, called inconsistent replication, that provides fault tolerance without consistency</span></span></p> <p><span><span>&bull; "</span></span>Tales of the Tail &ndash; an identification of hardware, OS, and application-level sources of tail latency in server systems, and a description of scheduling and application-level techniques for mitigating them.</p><br> <p>            Last Modified: 10/21/2017<br>      Modified by: Steven&nbsp;Gribble</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The major goal of our project is to understand the nature and causes of "latency tails" in distributed systems, with a particular focus on scalable services. To this end, we are conducting measurement studies to understand the nature of the latency tail in data centers, including which hardware devices, software layers, and protocol designs contribute to noise in the latency tail, and why.  Once we have a better understanding of the nature of latency tails and their causes, our next goal is to apply what we have learned to design techniques for constructing systems and services that provide low tail latency, and to build tools that help systems designers and operators diagnose causes of latency spikes and variations in their systems.  As part of this grant, we were successful in creating multiple research systems and peer-reviewed, cited publications in high-profile venues, including:  &bull; "FlexNIC," a flexible network DMA interface that can be used by operating systems and applications alike to reduce packet processing overheads  &bull; "TAPIR" &ndash; the Transactional Application Protocol for Inconsistent Replication &ndash; the first transaction protocol to use a novel replication protocol, called inconsistent replication, that provides fault tolerance without consistency  &bull; "Tales of the Tail &ndash; an identification of hardware, OS, and application-level sources of tail latency in server systems, and a description of scheduling and application-level techniques for mitigating them.       Last Modified: 10/21/2017       Submitted by: Steven Gribble]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

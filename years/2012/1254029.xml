<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Programmable Smart Machines</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2013</AwardEffectiveDate>
<AwardExpirationDate>12/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>595021.00</AwardTotalIntnAmount>
<AwardAmount>595021</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Faster computers have enabled advances in science, commerce and daily life.  Unfortunately, computers have also become complex and more and more difficult to program efficiently.  This trend threatens the sustainability of future advances.  Perhaps, however, we can draw upon biologically inspired learning techniques to shed light into a new model of hybrid computers, a ``Programmable Smart Machine'', that inherently learns from its past behavior to automatically improve its performance without the burden of more complex programming.  Specifically this work explores the addition of a smart memory to a computer that gives it the abilities to learn, store and exploit patterns in past execution to improve its performance.&lt;br/&gt;&lt;br/&gt;Central to this work is the introduction of a new kind of global long-term machine learning based 'cache' that can be viewed as an auto-associative memory.  The 'cache' is fed raw low-level traces of execution, from which it extracts and stores commonly occurring patterns that can be recognized and predicted.  The core execution process is modified to send the trace to the 'cache' and to exploit its feedback to enact acceleration.  The long-term goal is a system whose performance improves with the size and contents of the 'cache', which can be constructed with local associative memory devices and a shared online repository that is contributed to and leveraged by many systems.  In this way a kind of shared computational history is naturally created and exploited.&lt;br/&gt;&lt;br/&gt;This work experimentally explores questions with respect to concretizing the ``Programmable Smart Machine'' model.  What are useful and tractable traces for detecting patterns in execution?  Can current unsupervised deep learning techniques detect, store and recall useful patterns?  How can the predictions from the machine learning based memory be utilized to automatically improve performance?  How big does the machine learning based memory need to be to yield useful predictions and acceleration?  This work explores these questions using simulation and controlled workload experiments to create complete traces including all instructions, register values, and I/O events.  Using the traces, at least two deep learning approaches will be evaluated with respect to the number and size of patterns they recognize.  The resulting trained models will be integrated into the published auto-parallelization methodology that established preliminary results for this work.  The simulation infrastructure, trace data and experimental results will be made publicly available to enable broader study.&lt;br/&gt;&lt;br/&gt;This work produces unique trace data of computer operation.  The PI has found that visual and audio presentations of the preliminary data reflect the kind of intuition that computer scientists develop about how computers work.  This aspect will be leveraged to develop both a seminar, ``From Bits to Chess to Supercomputers'' and an associated&lt;br/&gt;``Computing Intuition'' website that engages K-12 students with computing.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>04/08/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/12/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1254029</AwardID>
<Investigator>
<FirstName>Jonathan</FirstName>
<LastName>Appavoo</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jonathan Appavoo</PI_FULL_NAME>
<EmailAddress>jappavoo@bu.edu</EmailAddress>
<PI_PHON>6173538919</PI_PHON>
<NSF_ID>000552443</NSF_ID>
<StartDate>04/08/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Trustees of Boston University</Name>
<CityName>BOSTON</CityName>
<ZipCode>022151300</ZipCode>
<PhoneNumber>6173534365</PhoneNumber>
<StreetAddress>881 COMMONWEALTH AVE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>049435266</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF BOSTON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>049435266</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Trustees of Boston University]]></Name>
<CityName>Boston</CityName>
<StateCode>MA</StateCode>
<ZipCode>022151300</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~119100</FUND_OBLG>
<FUND_OBLG>2014~189211</FUND_OBLG>
<FUND_OBLG>2015~40000</FUND_OBLG>
<FUND_OBLG>2016~118625</FUND_OBLG>
<FUND_OBLG>2017~128085</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project had the ambitious aim of advancing a new kind of hybrid computing system, a Programmable Smart Machine (PSM), that combines biologically inspired capabilities with the programmable advantages of a classical computer. &nbsp;The goal was to shed light on how new computing systems might be able to maintain a simple human-friendly programming interface but who's behaviour, like biological systems, automatically and inherently improves with "experience" and system "size". &nbsp;The core idea is to expose a raw signal, akin to a "movie" whose frames capture the step-by-step operation of the computer, to biologically inspired information processing mechanisms. &nbsp;The hope is that doing so would allow systems to automatically learn and store common patterns that can be used to create short-cuts that improve the systems current and future behaviour. &nbsp;Such systems could progressively get better as they executes more programs (gain "experience") and as their storage capacity is increased (grows in physical "size").</p> <p>If the PSM model is viable one can imagine constructing a future global-scale shared Cloud Computing service, like Google, but whose function is to act like a global repository of computing patterns, a computational cortex, that becomes more powerful with every computer that contributes to it and enables every computer connected to behave more intelligently, avoiding repetition of unnecessary work andleveraging knowledge of what will likely need to be done next. Over the lifetime of this award the following key results were produced.</p> <p>1) We demonstrated that at least for some restricted computational program, written to a simple computer interface, one could detect, store and leverage patterns observed in their low-level operation to anticipate their future behaviour and implicitly leverage additional CPUs of a supercomputer to speed up their execution. [1: Waterland et.al, "Computational caches" in proceedings of the sixth International Systems and Storage Conference (SYSTOR '13). &nbsp;2: Waterland, et al.,"ASC: Automatically Scalable Computation", in proceedings of the nineteenth international International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS'14)].</p> <p>2) We established that the PSM model does indeed make it possible to interface biologically inspired neural network like devices to a deterministic computer. &nbsp;More specifically we developed a neural-inspired hardware component that we were able to directly interface with the low-level trace of deterministic operation. &nbsp;The device was able to detect patterns and relationships in the trace that could be leveraged to automatically predict future states of the computation. [3: Eldridge, et al.,"Towards General Purpose Neural Network Computing", in proceedings of the 24th International Conference on Parallel Architectures and Compilation Techniques (PACT'15). 4: Appavoo et al., "Programmable Smart Machines: A Hybrid Neuromorphic approach to General Purpose Computation", Neuromorphic Architectures (NeuroArch 2014)].</p> <p>3) We established a path for the PSM model to be used in the construction of a future cloud computing service via advanced operating system approaches. &nbsp;In particular, we first leveraged the nature of Cloud Computing to simplify the OS and application software organization to more readily serve as a basis for customization and optimization of a running application's operation. &nbsp;[5: Schatzberg, et. al, "A way forward: enabling operating system innovation in the cloud", in Proceedings of the 6th USENIX conference on Hot Topics in Cloud Computing. 6: Schatzberg, et al., "EbbRT: A Framework for Building Per-Application Library Operating Systems", &nbsp;in proceedings of the 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI 2016)]. &nbsp;Build on this foundation we then added the caching of program states to optimize a cloud hosted "Serverless" computing platform [7: Cadden, et al. "Accelerating Serverless Execution Using Snapshots", under submission]. &nbsp;This work is the foundation for exploring the PSM model in context of a general purpose Cloud service.</p> <p>4) While currently unpublished we observed that the PSM model enables a system to leverage knowledge of past runs of a program, stored in a neural networks, to be automatically leveraged to progressively improve future runs of the program on past and new data. &nbsp;Additionally, we have observed that the model can detect the interaction between the underlying algorithm and data to more effectively pre-compute future states of the computation.</p> <p>Key products of this award include, six peer reviewed publications, one publication under submission and results that will serve as the basis for future research. &nbsp;New, publicly available, software for prototyping cloud services amenable to the PSM model, was and continues to be developed. &nbsp;Significantly the award also provided training; introducing fourteen undergraduates to research, ten graduate students and one post doctoral fellow students obtained both practical research experience and mentorship.</p> <p>The PI is immeasurable thankful for the support of this award. &nbsp;It has enabled both unique scientific and educational benefits. &nbsp;The experience obtained continue to fuel and inspire the work and imagination of the student and the PI.</p><br> <p>            Last Modified: 05/30/2019<br>      Modified by: Jonathan&nbsp;Appavoo</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2019/1254029/1254029_10239981_1559243637757_CareerOutcomesimage--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1254029/1254029_10239981_1559243637757_CareerOutcomesimage--rgov-800width.jpg" title="Programmable Smart Machines Project Outcome Summary"><img src="/por/images/Reports/POR/2019/1254029/1254029_10239981_1559243637757_CareerOutcomesimage--rgov-66x44.jpg" alt="Programmable Smart Machines Project Outcome Summary"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Summary of Programmable Smart Machines research.</div> <div class="imageCredit">Jonathan Appavoo</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Jonathan&nbsp;Appavoo</div> <div class="imageTitle">Programmable Smart Machines Project Outcome Summary</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project had the ambitious aim of advancing a new kind of hybrid computing system, a Programmable Smart Machine (PSM), that combines biologically inspired capabilities with the programmable advantages of a classical computer.  The goal was to shed light on how new computing systems might be able to maintain a simple human-friendly programming interface but who's behaviour, like biological systems, automatically and inherently improves with "experience" and system "size".  The core idea is to expose a raw signal, akin to a "movie" whose frames capture the step-by-step operation of the computer, to biologically inspired information processing mechanisms.  The hope is that doing so would allow systems to automatically learn and store common patterns that can be used to create short-cuts that improve the systems current and future behaviour.  Such systems could progressively get better as they executes more programs (gain "experience") and as their storage capacity is increased (grows in physical "size").  If the PSM model is viable one can imagine constructing a future global-scale shared Cloud Computing service, like Google, but whose function is to act like a global repository of computing patterns, a computational cortex, that becomes more powerful with every computer that contributes to it and enables every computer connected to behave more intelligently, avoiding repetition of unnecessary work andleveraging knowledge of what will likely need to be done next. Over the lifetime of this award the following key results were produced.  1) We demonstrated that at least for some restricted computational program, written to a simple computer interface, one could detect, store and leverage patterns observed in their low-level operation to anticipate their future behaviour and implicitly leverage additional CPUs of a supercomputer to speed up their execution. [1: Waterland et.al, "Computational caches" in proceedings of the sixth International Systems and Storage Conference (SYSTOR '13).  2: Waterland, et al.,"ASC: Automatically Scalable Computation", in proceedings of the nineteenth international International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS'14)].  2) We established that the PSM model does indeed make it possible to interface biologically inspired neural network like devices to a deterministic computer.  More specifically we developed a neural-inspired hardware component that we were able to directly interface with the low-level trace of deterministic operation.  The device was able to detect patterns and relationships in the trace that could be leveraged to automatically predict future states of the computation. [3: Eldridge, et al.,"Towards General Purpose Neural Network Computing", in proceedings of the 24th International Conference on Parallel Architectures and Compilation Techniques (PACT'15). 4: Appavoo et al., "Programmable Smart Machines: A Hybrid Neuromorphic approach to General Purpose Computation", Neuromorphic Architectures (NeuroArch 2014)].  3) We established a path for the PSM model to be used in the construction of a future cloud computing service via advanced operating system approaches.  In particular, we first leveraged the nature of Cloud Computing to simplify the OS and application software organization to more readily serve as a basis for customization and optimization of a running application's operation.  [5: Schatzberg, et. al, "A way forward: enabling operating system innovation in the cloud", in Proceedings of the 6th USENIX conference on Hot Topics in Cloud Computing. 6: Schatzberg, et al., "EbbRT: A Framework for Building Per-Application Library Operating Systems",  in proceedings of the 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI 2016)].  Build on this foundation we then added the caching of program states to optimize a cloud hosted "Serverless" computing platform [7: Cadden, et al. "Accelerating Serverless Execution Using Snapshots", under submission].  This work is the foundation for exploring the PSM model in context of a general purpose Cloud service.  4) While currently unpublished we observed that the PSM model enables a system to leverage knowledge of past runs of a program, stored in a neural networks, to be automatically leveraged to progressively improve future runs of the program on past and new data.  Additionally, we have observed that the model can detect the interaction between the underlying algorithm and data to more effectively pre-compute future states of the computation.  Key products of this award include, six peer reviewed publications, one publication under submission and results that will serve as the basis for future research.  New, publicly available, software for prototyping cloud services amenable to the PSM model, was and continues to be developed.  Significantly the award also provided training; introducing fourteen undergraduates to research, ten graduate students and one post doctoral fellow students obtained both practical research experience and mentorship.  The PI is immeasurable thankful for the support of this award.  It has enabled both unique scientific and educational benefits.  The experience obtained continue to fuel and inspire the work and imagination of the student and the PI.       Last Modified: 05/30/2019       Submitted by: Jonathan Appavoo]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

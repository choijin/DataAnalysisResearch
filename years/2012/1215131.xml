<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase I:  Automatic Scalable Architectural Validation for Microprocessors</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2012</AwardEffectiveDate>
<AwardExpirationDate>12/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>149908.00</AwardTotalIntnAmount>
<AwardAmount>149908</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Muralidharan Nair</SignBlockName>
<PO_EMAI>mnair@nsf.gov</PO_EMAI>
<PO_PHON>7032927059</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This Small Business Innovation Research Phase I Project addresses the challenge of automating and scaling formal equivalence verification between architectural ESL/TLM SystemC models and RTL Verilog models for microprocessors and ASIC microcontrollers. The complexity of industrial processors, together with the differences in semantics of SystemC and Verilog, create a significant modeling gap that makes it infeasible to verify RTL Verilog implementations against their SystemC specification models. This gap impedes the progression currently taking place in EDA, wherein designers are moving upwards in the abstraction level for modeling and verifying hardware designs. Our formal equivalence verification technology will allow automatically obtaining RTL from ESL models using high-level synthesis tools, and formally verifying the correctness of the resulting models against the specification models. It will also allow manually written RTL models to be verified against ESL models originally created for architectural simulation. Expected challenges include overcoming the spatial and temporal modeling gaps, and verifying equivalence for an unlimited depth using finite equivalence formulations. By end of project, we anticipate to prototype a software program that will discover unintended behavior in microprocessor designs by ARM with respect to the reference architecture, or prove the lack of any bugs, with modest computational resources.&lt;br/&gt;&lt;br/&gt;Functional verification of microprocessor designs remains a key challenge for the industry due to exponentially growing verification costs - typically &gt;50% of a design budget. Formal verification has potential to reduce these costs, however existing formal technology can only handle small RTL blocks and is only used by a handful of formal domain experts. With the industry shifting towards larger design blocks and higher-level ESL languages such as SystemC, a turn-key tool such as ours is necessary to bridge the ESL/RTL verification gap and addresses the needs of design and verification engineers who do not necessarily have formal domain expertise. Our target market includes both the integrated design manufacturing and fabless ASIC/SoC suppliers. A typical customer would be an ASIC design company looking to lower verification costs, decrease time-to-market, and reduce the risks of discovering errors during post-silicon verification or post-production. Formal semiconductor verification tools such as ours play an especially vital role in mission-critical semiconductor design markets such as ASICs for medical equipment, high-availability sensors, and automotive semiconductors. Our long-term goal is to make formal verification technologies scalable and directly usable by designers at higher abstraction levels, enabling exponential growth in design complexity without exponential growth in verification cost.</AbstractNarration>
<MinAmdLetterDate>06/13/2012</MinAmdLetterDate>
<MaxAmdLetterDate>10/23/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1215131</AwardID>
<Investigator>
<FirstName>Zaher</FirstName>
<LastName>Andraus</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Zaher Andraus</PI_FULL_NAME>
<EmailAddress>zaher@revealda.com</EmailAddress>
<PI_PHON>7342728231</PI_PHON>
<NSF_ID>000557667</NSF_ID>
<StartDate>06/13/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Reveal Design Automation, Inc.</Name>
<CityName>Ann Arbor</CityName>
<ZipCode>481083230</ZipCode>
<PhoneNumber>7342728231</PhoneNumber>
<StreetAddress>3025 Boardwalk Dr Ste 209</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>832606417</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REVEAL DESIGN AUTOMATION, INC.</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Reveal Design Automation, Inc.]]></Name>
<CityName>Ann Arbor</CityName>
<StateCode>MI</StateCode>
<ZipCode>481052590</ZipCode>
<StreetAddress><![CDATA[1600 Huron Parkway]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5371</Code>
<Text>SBIR Phase I</Text>
</ProgramElement>
<ProgramReference>
<Code>5371</Code>
<Text>SMALL BUSINESS PHASE I</Text>
</ProgramReference>
<ProgramReference>
<Code>6840</Code>
<Text>ROBOTICS</Text>
</ProgramReference>
<ProgramReference>
<Code>8035</Code>
<Text>Hardware Devices</Text>
</ProgramReference>
<ProgramReference>
<Code>9139</Code>
<Text>INFORMATION INFRASTRUCTURE &amp; TECH APPL</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~149908</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In this Phase I Project, Reveal Design Automation prototyped a software-based system, and a corresponding methodology, for the verification of microprocessors and ASIC microcontrollers. The prototype leveraged the Reveal<sup>TM</sup> platform which uses reasoning engines and automated abstraction techniques for proving or disproving architectural properties of microprocessors modeled at the Register Transfer Level or Electronic System Level. The prototype was applied to verify models of a commercial microcontroller core.</p> <p>While formal verification as a methodology offers a compelling promise of &ldquo;complete coverage&rdquo;, the deployment of formal verification products is hindered by the capacity limitations of formal reasoning algorithms, and the difficulty in defining environment models and correctness criteria. These limitations exclude mainstream engineers from using formal verification products, and require laborious effort from formal verification experts, rendering formal verification an optional rather than a central avenue for verification.</p> <p>This project demonstrated that a high-capacity reasoning engine can be used to verify an RTL description of a commercial microcontroller core against an ESL description of its corresponding architecture. An RTL Verilog description was derived from the SystemC architectural model describing the semantics of op-code execution via a single-instruction-per-transaction loop. The Verilog<br />model was derived using a commercial High-level Synthesis solution, and<br />verified formally against the original SystemC description. The synthesized<br />model was then verified against the full-fledged RTL implementation of the core using architectural equivalence. Multiple genuine bugs, as well as tens of artificially injected bugs, were found in stable commercial products used in the project. When the bugs were fixed or purposely suppressed, proofs were established using modest computational resources.</p> <p>The main findings of the project confirm that (1) a high-capacity reasoning core (a) eliminates the need for manual intervention for complex formal proofs, (b) enables SystemC to Verilog equivalence for large designs, and (c) scales up equivalence-based formal verification applications to much more complex designs, including full processor cores; (2) a chip-level correctness formulation for microcontrollers (a) eliminates inter-block verification gaps and the need for complex block-level environment models, (b) enables architectural validation against executable ESL models, and (c) provides a more comprehensive verification methodology for verifying the behavior of the microcontroller for all possible infinite program executions; and (3) the overall methodology and usage scenarios of the product variations are effective in discovering genuine bugs both in RTL and ESL descriptions.</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/31/2013<br>      Modified by: Zaher&nbsp;S&nbsp;Andraus</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In this Phase I Project, Reveal Design Automation prototyped a software-based system, and a corresponding methodology, for the verification of microprocessors and ASIC microcontrollers. The prototype leveraged the RevealTM platform which uses reasoning engines and automated abstraction techniques for proving or disproving architectural properties of microprocessors modeled at the Register Transfer Level or Electronic System Level. The prototype was applied to verify models of a commercial microcontroller core.  While formal verification as a methodology offers a compelling promise of "complete coverage", the deployment of formal verification products is hindered by the capacity limitations of formal reasoning algorithms, and the difficulty in defining environment models and correctness criteria. These limitations exclude mainstream engineers from using formal verification products, and require laborious effort from formal verification experts, rendering formal verification an optional rather than a central avenue for verification.  This project demonstrated that a high-capacity reasoning engine can be used to verify an RTL description of a commercial microcontroller core against an ESL description of its corresponding architecture. An RTL Verilog description was derived from the SystemC architectural model describing the semantics of op-code execution via a single-instruction-per-transaction loop. The Verilog model was derived using a commercial High-level Synthesis solution, and verified formally against the original SystemC description. The synthesized model was then verified against the full-fledged RTL implementation of the core using architectural equivalence. Multiple genuine bugs, as well as tens of artificially injected bugs, were found in stable commercial products used in the project. When the bugs were fixed or purposely suppressed, proofs were established using modest computational resources.  The main findings of the project confirm that (1) a high-capacity reasoning core (a) eliminates the need for manual intervention for complex formal proofs, (b) enables SystemC to Verilog equivalence for large designs, and (c) scales up equivalence-based formal verification applications to much more complex designs, including full processor cores; (2) a chip-level correctness formulation for microcontrollers (a) eliminates inter-block verification gaps and the need for complex block-level environment models, (b) enables architectural validation against executable ESL models, and (c) provides a more comprehensive verification methodology for verifying the behavior of the microcontroller for all possible infinite program executions; and (3) the overall methodology and usage scenarios of the product variations are effective in discovering genuine bugs both in RTL and ESL descriptions.          Last Modified: 05/31/2013       Submitted by: Zaher S Andraus]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

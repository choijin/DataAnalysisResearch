<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Exploiting the "Naturalness" of Software</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
<AwardExpirationDate>02/28/2014</AwardExpirationDate>
<AwardTotalIntnAmount>200000.00</AwardTotalIntnAmount>
<AwardAmount>240000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A study of software code has revealed a surprising result:  that software code may be just as  (if not more)  "natural" as natural language itself (e.g., English) in that code is highly predictable and repetitive; statistical natural language techniques may be applied quite competently for  some software engineering tasks.  For example, N-grams may be quite effective at suggestion and completion tasks in code.  The evidence  supports further exploration of the applicability of statistical NLP techniques and tools to software development activities and processes.  The project explores the feasibility of establishing a scientific basis and tools for a variety of code-level software engineering functions -- including natural language summarization, code retrieval, software question answering, automated code completion, and assistive tools for disabled developers to support software engineering, forming not only a new and important domain for further research in NLP, but also a totally new approach to software development.</AbstractNarration>
<MinAmdLetterDate>08/23/2012</MinAmdLetterDate>
<MaxAmdLetterDate>09/11/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1247088</AwardID>
<Investigator>
<FirstName>Ronald</FirstName>
<LastName>Rosenfeld</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ronald Rosenfeld</PI_FULL_NAME>
<EmailAddress>roni@cmu.edu</EmailAddress>
<PI_PHON>4122687678</PI_PHON>
<NSF_ID>000231800</NSF_ID>
<StartDate>08/23/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>William</FirstName>
<LastName>Cohen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William Cohen</PI_FULL_NAME>
<EmailAddress>wcohen@cs.cmu.edu</EmailAddress>
<PI_PHON>4122687664</PI_PHON>
<NSF_ID>000148698</NSF_ID>
<StartDate>08/23/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie-Mellon University]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133890</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~200000</FUND_OBLG>
<FUND_OBLG>2013~40000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Statistical "big data" approaches have been used extensively for analyzing human languages, but have been used less extensively for analyzing programming languages, i.e., the artificial languages that have been designed for humans to communicate with computers. &nbsp;This may be because artificial languages are, by design, amenable to more traditional methods of analysis: however, such traditional analyses do not model the statistical regularities in how computer languages are be used (as opposed to the artificial constraints on how they can be used).</p> <p>In this project, we combined traditional software analysis with statistical natural language analysis, and used these hybrid methods to solve a number of specific problems. &nbsp;One problem was modeling the natural-language comments that are associated with code: we devised new statistical approaches which model both the statistical regularities in the comment text, and the statistical connections between that comment text and the code that it describes. &nbsp;We then used these models to build a smart editor that can auto-complete comment text very effectively, saving about half the typing a programmer would need to do in entering comments. &nbsp;The accompanying image shows how some of the models we developed worked on a small sample of text.</p> <p>The second problem we addressed with hybrid methods was assessing the semantic similarity of software modules: we showed that one important semantic relation ("coordinate terms") could be predicted much more accurately with hybrid methods than with either traditional or purely statistical approaches. &nbsp;The second accompanying image shows a graph of java classes, organized by this similarity relationship.</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/02/2014<br>      Modified by: William&nbsp;Cohen</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2014/1247088/1247088_10204833_1399050448634_comment-completion--rgov-214x142.jpg" original="/por/images/Reports/POR/2014/1247088/1247088_10204833_1399050448634_comment-completion--rgov-800width.jpg" title="Auto-completion results for a sample comment"><img src="/por/images/Reports/POR/2014/1247088/1247088_10204833_1399050448634_comment-completion--rgov-66x44.jpg" alt="Auto-completion results for a sample comment"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Saved text (predicted by the underlying model) are underlined.</div> <div class="imageCredit">Self</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">William&nbsp;Cohen</div> <div class="imageTitle">Auto-completion results for a sample comment</div> </div> </li> <li> <a href="/por/images/Reports/POR/2014/1247088/1247088_10204833_1399050654803_visualization--rgov-214x142.jpg" original="/por/images/Reports/POR/2014/1247088/1247088_10204833_1399050654803_visualization--rgov-800width.jpg" title="Visualization of Relations Between Software Classes"><img src="/por/images/Reports/POR/2014/1247088/1247088_10204833_1399050654803_visualization--rgov-66x44.jpg" alt="Visualization of Relations Between Software Classes"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Visualization of the Inferred Relationships Between Software Classes in the java.lang package.</div> <div class="imageCredit">self</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">William&nbsp;Cohen</div> <div clas...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Statistical "big data" approaches have been used extensively for analyzing human languages, but have been used less extensively for analyzing programming languages, i.e., the artificial languages that have been designed for humans to communicate with computers.  This may be because artificial languages are, by design, amenable to more traditional methods of analysis: however, such traditional analyses do not model the statistical regularities in how computer languages are be used (as opposed to the artificial constraints on how they can be used).  In this project, we combined traditional software analysis with statistical natural language analysis, and used these hybrid methods to solve a number of specific problems.  One problem was modeling the natural-language comments that are associated with code: we devised new statistical approaches which model both the statistical regularities in the comment text, and the statistical connections between that comment text and the code that it describes.  We then used these models to build a smart editor that can auto-complete comment text very effectively, saving about half the typing a programmer would need to do in entering comments.  The accompanying image shows how some of the models we developed worked on a small sample of text.  The second problem we addressed with hybrid methods was assessing the semantic similarity of software modules: we showed that one important semantic relation ("coordinate terms") could be predicted much more accurately with hybrid methods than with either traditional or purely statistical approaches.  The second accompanying image shows a graph of java classes, organized by this similarity relationship.          Last Modified: 05/02/2014       Submitted by: William Cohen]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

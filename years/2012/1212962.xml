<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Large:Collaborative Research: Architecting the Next Generation Memory Hierarchy - A Holistic Approach</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2012</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>340000.00</AwardTotalIntnAmount>
<AwardAmount>368800</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The memory system continues to be a major performance and power&lt;br/&gt;bottleneck in nearly all computing systems. And, it is becoming&lt;br/&gt;increasingly more so with major application, architecture, and&lt;br/&gt;technology trends. Embedded applications that acquire and&lt;br/&gt;process real-time data, Internet and cloud applications that have to&lt;br/&gt;analyze large databases, and the exa-scale era HPC applications that&lt;br/&gt;need to crunch voluminous data sets are just a few examples of&lt;br/&gt;increasingly data-intensive applications that require high memory&lt;br/&gt;capacity, performance, and energy efficiency. Thus, the well-known &lt;br/&gt;memory wall problem has become even more difficult to surmount and&lt;br/&gt;needs a fundamental rethinking of the memory hierarchy design for future&lt;br/&gt;computing platforms.&lt;br/&gt;&lt;br/&gt;The goal of this proposal is to fundamentally and holistically&lt;br/&gt;rethink the design of the entire memory hierarchy taking into consideration&lt;br/&gt;the emerging device/memory technologies and to exploit the design trade-offs&lt;br/&gt;at different layers of the system stack -- from devices to micro-architecture,&lt;br/&gt;compilers and runtime systems. The solution will cover innovations in&lt;br/&gt;architecting and optimizing the entire memory path consisting of the caches,&lt;br/&gt;on-chip networks, memory controller and main memory. The objective&lt;br/&gt;is to enable 100X improvement in memory capacity over the next&lt;br/&gt;decade, while providing 5X improvement in performance and&lt;br/&gt;10X improvement in energy efficiency. The proposed research has the potential to transform the design of&lt;br/&gt;next-generation memory systems for the multi-core era, which is expected&lt;br/&gt;to be a ubiquitous part of the entire IT sector.&lt;br/&gt;The cross-cutting nature of this research can foster new research directions&lt;br/&gt;in several areas, spanning technology/energy-aware design, computer architecture,&lt;br/&gt;compilers, and system/application software.  With the memory system forming&lt;br/&gt;the backbone of nearly every envisioned future application domain, the&lt;br/&gt;broader impact of this research can accelerate the design and deployment&lt;br/&gt;of future applications. This project will enable transfer of research&lt;br/&gt;results to industry, enhance undergraduate and graduate student training&lt;br/&gt;including under-represented students, and contribute to the development of new&lt;br/&gt;research and teaching tools.</AbstractNarration>
<MinAmdLetterDate>05/30/2012</MinAmdLetterDate>
<MaxAmdLetterDate>07/25/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1212962</AwardID>
<Investigator>
<FirstName>Onur</FirstName>
<LastName>Mutlu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Onur Mutlu</PI_FULL_NAME>
<EmailAddress>onur@cmu.edu</EmailAddress>
<PI_PHON>4122681186</PI_PHON>
<NSF_ID>000512629</NSF_ID>
<StartDate>05/30/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie-Mellon University]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152131111</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>7925</Code>
<Text>LARGE PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~200000</FUND_OBLG>
<FUND_OBLG>2013~82800</FUND_OBLG>
<FUND_OBLG>2015~86000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In today's computing systems, the memory hierarchy continues to be a major performance and power bottleneck.&nbsp; This bottleneck has been worsening over time, as we enter an age of data-intensive applications that process very large amounts of data at real-time, and as memory capacity and performance are having difficulty keeping up with the scaling of 1) the data size and data demand of applications and 2) the computational capabilities of the systems we build.&nbsp; For many data-intensive applications, the existing memory hierarchy designs leave much to be desired, due to their poor scalability, and the oftentimes unnecessary movement of data throughout the hierarchy.<br /><br />This research completely revisited the design of the modern computer memory hierarchies, developing a wide array of new designs that can improve the performance and efficiency of the memory hierarchy.&nbsp; We studied design trade-offs at different levels of the system stack, going from memory devices to the microarchitecture, and up to the system software runtime and applications.&nbsp; In doing so, we developed various techniques that can work together to deliver significant improvements in memory prformance and energy efficiency.&nbsp; In this summary, we highlight a few of the significant fundamental advances that we have developed.<br /><br />The project resulted in many new discoveries and techniques, including:<br /><br />- how best to integrate emerging resistive device and memory technologies within computing systems, including the development of intelligent managers for hybrid memory systems, and techniques to ensure consistency when an application using nonvolatile memory crashes. These techniques are steps toward enable the seamless adoption non-volatile and persistent memories in a computer's memory hierarchy;&nbsp;<br /><br />- how to understand and analyze the reliability of different memory technologies that make up the memory hierarchy, including a thorough investigation of and many new insights on how both DRAM and flash memory reliability is changing as manufacturers move to newer manufacturing technologies;<br /><br />- a wide array of mechanisms to improve the reliability of DRAM and flash memory, many of which have been adopted by industry. For example, the RowHammer problem in DRAM was discovered as part ofthis research, and has lead to significant new research and development in various communities (security, system software, hardware, devices) across both academia and industry;<br /><br />- several new techniques to greatly increase the performance of and reduce the amount of hardware used by on-chip networks, which are used to connect a large number of memory devices together;<br /><br />- several general-purpose mechanisms that avoid data movement by performing processing directly within the memory, reduce the overhead of performing operations within memory, and ensure that the programming model with processing-in-memory remains similar to the model that program developers use today, in order to ease adoption;<br /><br />- several solutions to improve how general-purpose GPU (GPGPU) applications use memory, and to alleviate memory contention within the GPU;<br /><br />- new tools to understand how these new technologies affect the performance of computing systems, which we have released publicly, and which we expect will have a wide impact on the research community. Two examples of these include 1) the Ramulator memory simulation tool, which is widely accepted as the state-of-the-art DRAM simulation tool in both academia and industry, and 2) the SofMC DRAM characterization infrastructure, which is the first open source DRAM testing infrastructure available to everyone.<br /><br />At its completion, this project educated and trained at least 10 graduate, and 2 undergraduate students, and produced 5 Ph.D. dissertations while contributing heavily to at least 2 other PhD dissertations. It also trained 2 postdocs.&nbsp; Our findings produced more than 50 papers at top venues.&nbsp; The project also resulted in new open course lectures and materials (see https://people.inf.ethz.ch/omutlu/teaching.html)&nbsp;that were released online via Youtube, free of charge to anyone (see https://people.inf.ethz.ch/omutlu/lecture-videos.html).&nbsp; As part of the project, there were many open source code releases, which are available for anyone to use at http://www.ece.cmu.edu/~safari/tools.html and https://github.com/CMU-SAFARI. We also delivered more than 100 lectures worldwide, including at least 10 keynote speeches and 2 distinguished lectures, in both industry and academia, to disseminate the results of the project and educate students and researchers.</p><br> <p>            Last Modified: 09/16/2017<br>      Modified by: Onur&nbsp;Mutlu</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In today's computing systems, the memory hierarchy continues to be a major performance and power bottleneck.  This bottleneck has been worsening over time, as we enter an age of data-intensive applications that process very large amounts of data at real-time, and as memory capacity and performance are having difficulty keeping up with the scaling of 1) the data size and data demand of applications and 2) the computational capabilities of the systems we build.  For many data-intensive applications, the existing memory hierarchy designs leave much to be desired, due to their poor scalability, and the oftentimes unnecessary movement of data throughout the hierarchy.  This research completely revisited the design of the modern computer memory hierarchies, developing a wide array of new designs that can improve the performance and efficiency of the memory hierarchy.  We studied design trade-offs at different levels of the system stack, going from memory devices to the microarchitecture, and up to the system software runtime and applications.  In doing so, we developed various techniques that can work together to deliver significant improvements in memory prformance and energy efficiency.  In this summary, we highlight a few of the significant fundamental advances that we have developed.  The project resulted in many new discoveries and techniques, including:  - how best to integrate emerging resistive device and memory technologies within computing systems, including the development of intelligent managers for hybrid memory systems, and techniques to ensure consistency when an application using nonvolatile memory crashes. These techniques are steps toward enable the seamless adoption non-volatile and persistent memories in a computer's memory hierarchy;   - how to understand and analyze the reliability of different memory technologies that make up the memory hierarchy, including a thorough investigation of and many new insights on how both DRAM and flash memory reliability is changing as manufacturers move to newer manufacturing technologies;  - a wide array of mechanisms to improve the reliability of DRAM and flash memory, many of which have been adopted by industry. For example, the RowHammer problem in DRAM was discovered as part ofthis research, and has lead to significant new research and development in various communities (security, system software, hardware, devices) across both academia and industry;  - several new techniques to greatly increase the performance of and reduce the amount of hardware used by on-chip networks, which are used to connect a large number of memory devices together;  - several general-purpose mechanisms that avoid data movement by performing processing directly within the memory, reduce the overhead of performing operations within memory, and ensure that the programming model with processing-in-memory remains similar to the model that program developers use today, in order to ease adoption;  - several solutions to improve how general-purpose GPU (GPGPU) applications use memory, and to alleviate memory contention within the GPU;  - new tools to understand how these new technologies affect the performance of computing systems, which we have released publicly, and which we expect will have a wide impact on the research community. Two examples of these include 1) the Ramulator memory simulation tool, which is widely accepted as the state-of-the-art DRAM simulation tool in both academia and industry, and 2) the SofMC DRAM characterization infrastructure, which is the first open source DRAM testing infrastructure available to everyone.  At its completion, this project educated and trained at least 10 graduate, and 2 undergraduate students, and produced 5 Ph.D. dissertations while contributing heavily to at least 2 other PhD dissertations. It also trained 2 postdocs.  Our findings produced more than 50 papers at top venues.  The project also resulted in new open course lectures and materials (see https://people.inf.ethz.ch/omutlu/teaching.html) that were released online via Youtube, free of charge to anyone (see https://people.inf.ethz.ch/omutlu/lecture-videos.html).  As part of the project, there were many open source code releases, which are available for anyone to use at http://www.ece.cmu.edu/~safari/tools.html and https://github.com/CMU-SAFARI. We also delivered more than 100 lectures worldwide, including at least 10 keynote speeches and 2 distinguished lectures, in both industry and academia, to disseminate the results of the project and educate students and researchers.       Last Modified: 09/16/2017       Submitted by: Onur Mutlu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

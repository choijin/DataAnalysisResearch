<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Secure OS Views for Modern Computing Platforms</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2013</AwardEffectiveDate>
<AwardExpirationDate>01/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The security architecture of consumer operating systems is currently undergoing a fundamental change. In platforms such as Android, iOS, and Windows 8, each application is a separate security principal that can own data. While this distinction is a vast improvement over traditional user-focused security architectures, sharing data between applications results in an unexpected loss of control of that data, potentially exposing security and privacy sensitive information. This research improves the security of these modern consumer operating systems by providing a holistic view of data protection. In particular, this work proposes a new operating system abstraction for transparently tracking and controlling access to all data, allowing policy to determine if a reader is given the true value, a fake or modified value, or no value at all. To efficiently and practically accomplish this goal, this work combines several existing and new techniques to track and control access to data. The new abstraction provided by this work not only solves a significant problem affecting modern consumer operating systems by enabling applications to retain pervasive control over their data, but also more broadly provides a new abstraction on which a variety of new security solutions can be built.</AbstractNarration>
<MinAmdLetterDate>01/29/2013</MinAmdLetterDate>
<MaxAmdLetterDate>02/02/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1253346</AwardID>
<Investigator>
<FirstName>William</FirstName>
<LastName>Enck</LastName>
<PI_MID_INIT>H</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William H Enck</PI_FULL_NAME>
<EmailAddress>whenck@ncsu.edu</EmailAddress>
<PI_PHON>9195137905</PI_PHON>
<NSF_ID>000593699</NSF_ID>
<StartDate>01/29/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Carolina State University</Name>
<CityName>Raleigh</CityName>
<ZipCode>276957514</ZipCode>
<PhoneNumber>9195152444</PhoneNumber>
<StreetAddress>2601 Wolf Village Way</StreetAddress>
<StreetAddress2><![CDATA[Admin. III, STE 240]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042092122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTH CAROLINA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>142363428</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[North Carolina State University]]></Name>
<CityName>Raleigh</CityName>
<StateCode>NC</StateCode>
<ZipCode>276958206</ZipCode>
<StreetAddress><![CDATA[890 Oval Dr.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~74783</FUND_OBLG>
<FUND_OBLG>2014~77379</FUND_OBLG>
<FUND_OBLG>2015~80124</FUND_OBLG>
<FUND_OBLG>2016~83032</FUND_OBLG>
<FUND_OBLG>2017~84682</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-0935570e-7fff-9a0c-8d9a-189ec1ee89cb"> </span></p> <p dir="ltr"><strong>Intellectual Merit:</strong><span> The focus of this award was to study the fundamental changes to access control that have emerged in modern computing platforms such as Android and iOS, and to identify new opportunities to enhance data protections for end users.</span></p> <p dir="ltr">The past decade witnessed a fundamental change in how operating systems define access control to protect end users from malicious and undesired behavior by software. When Android and iOS emerged in the late '00s, they rescoped the most basic access control entity (called a security principal) from capturing all actions of a user to capturing only the actions of individual application. This change followed the advice of decades of research proposals and was viewed as a significant step forward for the security of commodity operating systems. However, the incorporation of this concept into a commodity platform used by millions of users subsequently unearthed an unforeseen challenge: how should the OS control sharing of data between a user's applications?</p> <p dir="ltr">Our research conceptualized this challenge as the <em>data intermediary problem</em>, which captures the notion that whenever the user shares data from one application to another and to yet another, each receiving application must be completely trusted. This is not always desirable. For example, the user may wish for an application to only view a document and not send it off the device. As a solution, we turned to the classic concept of information flow control (IFC), and its recent variant, decentralized information flow control (DIFC). While IFC provides valuable flow-based access control semantics (e.g., control not just who can access data, but what can be done with the data once it is accessed), it has practical limitations that prevent its incorporation into commodity systems. Our research studied DIFC in the context of the Android platform. We proposed a novel DIFC policy logic tailored towards Android's runtime user interface workflow between application components. We further identified how Android's runtime itself is particularly amenable DIFC due to the way in which application logic is naturally partitioned. To make DIFC practical in Android, we proposed a novel label propagation model called <em>lazy polyinstantiation</em>, which spawns new instances of application components based on the runtime requirements.</p> <p dir="ltr">While studying the access control designs of Android and iOS, we also built several tools to help validate the correctness of their access control policies and the enforcement of those policies. Our tools for Android studied both the underlying SEAndroid policy (which is based on SELinux, but re-written for Android), as well as the hard-coded checks within Android's core services. Our tools for iOS reverse engineered and formally modeled sandbox policies on iOS. These efforts identified many vulnerabilities that were reported to Google and Apple and have been fixed in subsequent releases of Android and iOS.</p> <p dir="ltr"><strong>Broader Impact:</strong> The security of Android and iOS impacts billions of users worldwide. We have identified and reported many access control vulnerabilities in these platforms, which have been fixed in subsequent OS releases. PI Enck regularly interacted with the Raleigh Chapter of the Information Systems Security Association (ISSA), whose attendees typically include both security professionals and students attending technical schools such as Wake Technical Community College. These interactions included teaching multiple "Back-to-Basics" sessions on Android application programming and application security.</p> <p dir="ltr">The work has also led to a number of open source tools and proposed enhancements to the Android platform. It has had a positive impact on graduate students at North Carolina State University, contributing to the research of five PhD students advised or co-advised by PI Enck. The advancements in mobile platforms and OS access control were also directly incorporated both undergraduate and graduate courses.</p> <div><span><br /></span></div> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 04/25/2019<br>      Modified by: William&nbsp;H&nbsp;Enck</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Intellectual Merit: The focus of this award was to study the fundamental changes to access control that have emerged in modern computing platforms such as Android and iOS, and to identify new opportunities to enhance data protections for end users. The past decade witnessed a fundamental change in how operating systems define access control to protect end users from malicious and undesired behavior by software. When Android and iOS emerged in the late '00s, they rescoped the most basic access control entity (called a security principal) from capturing all actions of a user to capturing only the actions of individual application. This change followed the advice of decades of research proposals and was viewed as a significant step forward for the security of commodity operating systems. However, the incorporation of this concept into a commodity platform used by millions of users subsequently unearthed an unforeseen challenge: how should the OS control sharing of data between a user's applications? Our research conceptualized this challenge as the data intermediary problem, which captures the notion that whenever the user shares data from one application to another and to yet another, each receiving application must be completely trusted. This is not always desirable. For example, the user may wish for an application to only view a document and not send it off the device. As a solution, we turned to the classic concept of information flow control (IFC), and its recent variant, decentralized information flow control (DIFC). While IFC provides valuable flow-based access control semantics (e.g., control not just who can access data, but what can be done with the data once it is accessed), it has practical limitations that prevent its incorporation into commodity systems. Our research studied DIFC in the context of the Android platform. We proposed a novel DIFC policy logic tailored towards Android's runtime user interface workflow between application components. We further identified how Android's runtime itself is particularly amenable DIFC due to the way in which application logic is naturally partitioned. To make DIFC practical in Android, we proposed a novel label propagation model called lazy polyinstantiation, which spawns new instances of application components based on the runtime requirements. While studying the access control designs of Android and iOS, we also built several tools to help validate the correctness of their access control policies and the enforcement of those policies. Our tools for Android studied both the underlying SEAndroid policy (which is based on SELinux, but re-written for Android), as well as the hard-coded checks within Android's core services. Our tools for iOS reverse engineered and formally modeled sandbox policies on iOS. These efforts identified many vulnerabilities that were reported to Google and Apple and have been fixed in subsequent releases of Android and iOS. Broader Impact: The security of Android and iOS impacts billions of users worldwide. We have identified and reported many access control vulnerabilities in these platforms, which have been fixed in subsequent OS releases. PI Enck regularly interacted with the Raleigh Chapter of the Information Systems Security Association (ISSA), whose attendees typically include both security professionals and students attending technical schools such as Wake Technical Community College. These interactions included teaching multiple "Back-to-Basics" sessions on Android application programming and application security. The work has also led to a number of open source tools and proposed enhancements to the Android platform. It has had a positive impact on graduate students at North Carolina State University, contributing to the research of five PhD students advised or co-advised by PI Enck. The advancements in mobile platforms and OS access control were also directly incorporated both undergraduate and graduate courses.               Last Modified: 04/25/2019       Submitted by: William H Enck]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: Efficient Approximations for Dynamic Programs and Other Topics in Algorithms</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project supports new and ongoing research on several topics in algorithms and computational complexity.  A major focus of the project will be certain combinatorical optimization problems, such as determining the longest common subsequence of two data sequences, that can be formulated as shortest path problems in special networks.  The goal is to develop algorithms that provably give close approximations to the correct answer and are significantly faster than existing algorithms.  Another goal of the project is to construct sparse spanners for networks, which are subnetworks with few edges that preserve (partially or approximately) the connectivity or distance properties of the original network.  A third part of the project will seek to establish inherent limitations on the efficiency of parallel programs in the MapReduce paradigm, which is an increasingly popular paradigm for parallel programming in which computation occurs in a sequence of precisely defined rounds.  The aim is to establish some inherent limitations on this model by proving lower bounds on the number of computation rounds needed for certain basic computational tasks.  Another part of the project will develop new algorithms and determine limits to efficiency for the file maintenance problem, in which numbers are presented in an online manner and are loaded into a linear array (possibly with gaps between items) so that the left-to-right order of the items matches the natural order. The cost is measured by the total  number of times any item is moved during the loading process.  The aim here is to obtain better algorithms than the existing ones using randomization, or to establish that randomization can not significantly improve on the best existing algorithms.&lt;br/&gt;&lt;br/&gt;By advancing the theory of algorithms and complexity, this award will increase the set of tools available for efficient design of algorithms.  The algorithmic techniques developed for efficient estimation of dynamic programs may be useful for practitioners developing algorithms for problems such as string matching, which is a fundamental problem that arises in varied areas such as data retrieval and analysis of biological data.  Establishing inherent requirements on computational resources for solving various problems can guide the search for improved algorithms for related problems.  An important part of the project is the training of graduate students to do research in the field.</AbstractNarration>
<MinAmdLetterDate>08/06/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/06/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1218711</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Saks</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael Saks</PI_FULL_NAME>
<EmailAddress>saks@math.rutgers.edu</EmailAddress>
<PI_PHON>8484457952</PI_PHON>
<NSF_ID>000194921</NSF_ID>
<StartDate>08/06/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Rutgers University New Brunswick</Name>
<CityName>Piscataway</CityName>
<ZipCode>088543925</ZipCode>
<PhoneNumber>8489320150</PhoneNumber>
<StreetAddress>33 Knightsbridge Road</StreetAddress>
<StreetAddress2><![CDATA[2nd Floor East Wing]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NJ06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001912864</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RUTGERS, THE STATE UNIVERSITY OF NEW JERSEY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001912864</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Rutgers University New Brunswick]]></Name>
<CityName>Piscataway</CityName>
<StateCode>NJ</StateCode>
<ZipCode>088548019</ZipCode>
<StreetAddress><![CDATA[110 Frelinghuysen Rd Hill Center]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NJ06</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~400000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Progress was made on several problems in the theory of algorithms and&nbsp;computational complexity.<br />1. Very efficient approximation algorithms for some string problems.A string is a sequence of numbers, letters or other characters, which mightrepresent a sequence of numerical measurements, a portion of English text,or a DNA sequence. &nbsp;There are many basic algorithmic questions aboutstrings. &nbsp;Two examples are: (1) Given a string of numbers, what isthe length of the longest increasing subsequence? and (2) given two stringshow far apart are they &nbsp;(how many character changes are required toturn one string into the other). There are good standard algorithms for solvingthese problems exactly, but when one has many very large instances ofthe problem to solve, these algorithms may be too slow, or require too muchmemory. In this work, we developed new algorithms for these typesof problems that find an approximate solution (rather than an exact solution) but run much more efficiently that the standard algorithms. &nbsp;For the longest increasing subsequence problem, we develop an algorithm that makes one scan of the sequence and approximates the length of the longest increasing subsequence while using very little computer memory. For the edit distance problem we developed avery fast approximation algorithm for the special case that each of the two input strings is a string with no repeated characters.<br />2. Algorithms for file maintenance. &nbsp;Some basic problems in managing data can be modeled by the following problem, called the file maintenance problem. &nbsp;Numerical data is &nbsp;received one item at a time, and the items are to be stored in a large linear array. &nbsp;We must maintain the data in numerical order in the array, with empty locations allowed between data items. When an item arrives, we must insert this new item into the array whilemaintaining the numerical order. &nbsp;This may involve moving some of the data items already in the array. &nbsp;Each time a data item is moved within the array, we view this as having a fixed cost.The problem is to develop an algorithm that will handle any input data sequence while keeping the average cost per data item added small. &nbsp;Low cost algorithms were developed and analyzed many years ago, but it was a longstanding open problem whether there were algorithms for this problem that were substantially more efficient than the known algorithms. &nbsp;In a series of papers (begun as part of an earlier NSF project) we established that the existing algorithms are essentially best possible (up to a constant factorin the cost) for different versions of this problem.<br />3. Learning an unknown probability distribution in the presence of noise. &nbsp;Many natural and synthetic systems&nbsp;consist of a large collection (population) of objects (individuals) each of which can be classified according to certain characteristicsor measurements. &nbsp;An important step in understanding the system isto know the fraction of inviduals having certain characteristics or combination of characteristics. &nbsp;Standard techniques in statistical inference allow one to approximate these fractions from observationsof independent samples of individuals. &nbsp;The problem becomes more complex if the observations are subject to noise, so that whenobserving a given individual, some of the characteristics of that individualare incorrectly observed. &nbsp;In 2012, Dvir, Rao, Wigderson and Yehudayoff proposed a particular model of such processes and posedthe problem of efficiently estimating statistical properties ofthe population from noisy samples. &nbsp;We developed algorithms and analytical techniques which gave efficient algorithms in their model.</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/01/2016<br>      Modified by: Michael&nbsp;Saks</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Progress was made on several problems in the theory of algorithms and computational complexity. 1. Very efficient approximation algorithms for some string problems.A string is a sequence of numbers, letters or other characters, which mightrepresent a sequence of numerical measurements, a portion of English text,or a DNA sequence.  There are many basic algorithmic questions aboutstrings.  Two examples are: (1) Given a string of numbers, what isthe length of the longest increasing subsequence? and (2) given two stringshow far apart are they  (how many character changes are required toturn one string into the other). There are good standard algorithms for solvingthese problems exactly, but when one has many very large instances ofthe problem to solve, these algorithms may be too slow, or require too muchmemory. In this work, we developed new algorithms for these typesof problems that find an approximate solution (rather than an exact solution) but run much more efficiently that the standard algorithms.  For the longest increasing subsequence problem, we develop an algorithm that makes one scan of the sequence and approximates the length of the longest increasing subsequence while using very little computer memory. For the edit distance problem we developed avery fast approximation algorithm for the special case that each of the two input strings is a string with no repeated characters. 2. Algorithms for file maintenance.  Some basic problems in managing data can be modeled by the following problem, called the file maintenance problem.  Numerical data is  received one item at a time, and the items are to be stored in a large linear array.  We must maintain the data in numerical order in the array, with empty locations allowed between data items. When an item arrives, we must insert this new item into the array whilemaintaining the numerical order.  This may involve moving some of the data items already in the array.  Each time a data item is moved within the array, we view this as having a fixed cost.The problem is to develop an algorithm that will handle any input data sequence while keeping the average cost per data item added small.  Low cost algorithms were developed and analyzed many years ago, but it was a longstanding open problem whether there were algorithms for this problem that were substantially more efficient than the known algorithms.  In a series of papers (begun as part of an earlier NSF project) we established that the existing algorithms are essentially best possible (up to a constant factorin the cost) for different versions of this problem. 3. Learning an unknown probability distribution in the presence of noise.  Many natural and synthetic systems consist of a large collection (population) of objects (individuals) each of which can be classified according to certain characteristicsor measurements.  An important step in understanding the system isto know the fraction of inviduals having certain characteristics or combination of characteristics.  Standard techniques in statistical inference allow one to approximate these fractions from observationsof independent samples of individuals.  The problem becomes more complex if the observations are subject to noise, so that whenobserving a given individual, some of the characteristics of that individualare incorrectly observed.  In 2012, Dvir, Rao, Wigderson and Yehudayoff proposed a particular model of such processes and posedthe problem of efficiently estimating statistical properties ofthe population from noisy samples.  We developed algorithms and analytical techniques which gave efficient algorithms in their model.             Last Modified: 12/01/2016       Submitted by: Michael Saks]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

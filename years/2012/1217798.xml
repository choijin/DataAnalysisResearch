<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>III: Small: Provisioning for Autonomous Data Analysis and Scenario Exploration</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>nan zhang</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>In business intelligence and data-driven science, users often wish to consider various "what-if scenarios": hypothetical updates and query refinements.  Unfortunately current techniques do not support this type of exploration when query answers have high latency, when data sources charge fees, or in mobile, disconnected settings.  This project considers how, given a particular set of query aspects and updates, one can precompute a special data representation that can be stored on a client machine and can be used to directly answer queries under a variety of updates and what-if scenarios, without direct access to the data sources.  The project achieves this goal by developing "provisioned representations" that capture a form of parameterized data instances, from which complex queries (even with multiple levels of aggregation) can be answered.  The work develops: (1) the provisioned representation (PR) formalism, (2) means of encoding and storing PRs, (3) a query system and query processing techniques for PRs, (4) a "wizard" for generating PRs from parameterized scenarios, and (5) interactive tools for exploring changes to data and queries over PRs.  The work will improve decision support systems and help enable "information foresight" - the ability to provide, given a question, answers that include additional data relevant to a user's interests.  The project supports Ph.D. students, and also develops a new course on networked information management for the University of Pennsylvania's innovative Market and Social Systems Engineering undergraduate degree program on networks and markets.  Data and code will be disseminated through public collaborative portals (GitHub, Google Code) and the project Web site (https://dbappserv.cis.upenn.edu/home/?q=node/173).</AbstractNarration>
<MinAmdLetterDate>08/27/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/27/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1217798</AwardID>
<Investigator>
<FirstName>Val</FirstName>
<LastName>Tannen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Val Tannen</PI_FULL_NAME>
<EmailAddress>val@cis.upenn.edu</EmailAddress>
<PI_PHON>2158982665</PI_PHON>
<NSF_ID>000186637</NSF_ID>
<StartDate>08/27/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Zachary</FirstName>
<LastName>Ives</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Zachary Ives</PI_FULL_NAME>
<EmailAddress>zives@cis.upenn.edu</EmailAddress>
<PI_PHON>2157462789</PI_PHON>
<NSF_ID>000468327</NSF_ID>
<StartDate>08/27/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pennsylvania</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191046205</ZipCode>
<PhoneNumber>2158987293</PhoneNumber>
<StreetAddress>Research Services</StreetAddress>
<StreetAddress2><![CDATA[3451 Walnut St, 5th Flr Franklin]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042250712</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042250712</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Trustees of the University of Pennsylvania]]></Name>
<CityName>Philadelphia</CityName>
<StateCode>PA</StateCode>
<ZipCode>191046205</ZipCode>
<StreetAddress><![CDATA[3451 Walnut Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~500000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>With the advent of large scientific community repositories, business-to-business cooperatives, and enterprise warehouses &mdash; there are increasingly many settings with large numbers of data sources whether within a single database instance or across multiple distributed sites. Such sources of data may be used to answer a vast array of different questions. However, a typical end user of the data will likely be interested in a fairly restricted set of information: e.g., an account executive may care about the data and customers within his or her region, or a scientist may care about specific organisms or genes. A data analytics computation is applied to the data sources to produce the data of interest.<br />The users of such data (let's call them "analysts") often need to make decisions based on it. They practice <em>what if analysis</em>, a common technique for investigating the impact of decisions on outcomes in science or business. It almost always involves a complex data analytics computation. Nowadays such a computation typically processes very large amounts of data and thus may be expensive to perform, especially repeatedly. An analyst is interested in exploring the impact of multiple <em>scenarios</em> that assume modifications of the input to the analysis problem. Our general aim is to avoid repeating expensive computations for each scenario.&nbsp;<br />For a given problem, and starting from a given set of potential scenarios, we wish to perform just one possibly expensive computation producing a small <em>sketch</em> (i.e., a compressed representation of the input) such that the answer for any of the given scenarios can be derived rapidly from the sketch, without accessing the original (typically very large) input. We say that the sketch is &ldquo;provisioned&rdquo; to deal with the problem under any of the scenarios and we call the whole approach <em>provisioning</em>. Again, the goal of provisioning is to allow an analyst to efficiently explore a multitude of scenarios, using only the sketch and thus avoiding expensive recomputations for each scenario.<br />The computational burden in provisioning depends on two measures. One is the size of the data given as input to the data analytics computation. The theoretical and practical studies that we have done in this project show that sketches of size polylogarithmic in the size of the input are achievable and constitute a good measure of tractability or provisioning. The other measure for the computational burden is the number of "atomic" scenarios, what we call <em>hypotheticals</em>. Each hypothetical defines a subset of the input data. Scenarios of interest are then obtained by "switching on/off" the hypotheticals. Thus with K hypotheticals we have 2^K scenarios. A trivial solution to provisioning is to compute the answers for each of these 2^K scenarios and package it in the sketch. From our studies it follows that polynomial (in K) upper bounds on the size of the sketch are a good achievable choice for many problems. For other problems we prove that such bounds are mathematically impossible to achieve. For such scenarios, practical solutions are still achievable, using the techniques developed in previous work on data provenance.<br />Ideally, the analylist will interact with the results of the data analytics computation via an interactive application &mdash; whether a domain-specific application used by the analyst, a spreadsheet interface over a database management system, a visualization software tool, or even a conventional spreadsheet. Today, such a spreadsheet might not even be hosted on a conventional PC, but rather on a tablet or a phone. We have built proof-of-concept implementations that demonstrate that provisioning is feasible and desirable: using sketches is t<em>hree orders of magnitude faster</em> than recomputation for each scenario.</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Las...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ With the advent of large scientific community repositories, business-to-business cooperatives, and enterprise warehouses &mdash; there are increasingly many settings with large numbers of data sources whether within a single database instance or across multiple distributed sites. Such sources of data may be used to answer a vast array of different questions. However, a typical end user of the data will likely be interested in a fairly restricted set of information: e.g., an account executive may care about the data and customers within his or her region, or a scientist may care about specific organisms or genes. A data analytics computation is applied to the data sources to produce the data of interest. The users of such data (let's call them "analysts") often need to make decisions based on it. They practice what if analysis, a common technique for investigating the impact of decisions on outcomes in science or business. It almost always involves a complex data analytics computation. Nowadays such a computation typically processes very large amounts of data and thus may be expensive to perform, especially repeatedly. An analyst is interested in exploring the impact of multiple scenarios that assume modifications of the input to the analysis problem. Our general aim is to avoid repeating expensive computations for each scenario.  For a given problem, and starting from a given set of potential scenarios, we wish to perform just one possibly expensive computation producing a small sketch (i.e., a compressed representation of the input) such that the answer for any of the given scenarios can be derived rapidly from the sketch, without accessing the original (typically very large) input. We say that the sketch is "provisioned" to deal with the problem under any of the scenarios and we call the whole approach provisioning. Again, the goal of provisioning is to allow an analyst to efficiently explore a multitude of scenarios, using only the sketch and thus avoiding expensive recomputations for each scenario. The computational burden in provisioning depends on two measures. One is the size of the data given as input to the data analytics computation. The theoretical and practical studies that we have done in this project show that sketches of size polylogarithmic in the size of the input are achievable and constitute a good measure of tractability or provisioning. The other measure for the computational burden is the number of "atomic" scenarios, what we call hypotheticals. Each hypothetical defines a subset of the input data. Scenarios of interest are then obtained by "switching on/off" the hypotheticals. Thus with K hypotheticals we have 2^K scenarios. A trivial solution to provisioning is to compute the answers for each of these 2^K scenarios and package it in the sketch. From our studies it follows that polynomial (in K) upper bounds on the size of the sketch are a good achievable choice for many problems. For other problems we prove that such bounds are mathematically impossible to achieve. For such scenarios, practical solutions are still achievable, using the techniques developed in previous work on data provenance. Ideally, the analylist will interact with the results of the data analytics computation via an interactive application &mdash; whether a domain-specific application used by the analyst, a spreadsheet interface over a database management system, a visualization software tool, or even a conventional spreadsheet. Today, such a spreadsheet might not even be hosted on a conventional PC, but rather on a tablet or a phone. We have built proof-of-concept implementations that demonstrate that provisioning is feasible and desirable: using sketches is three orders of magnitude faster than recomputation for each scenario.             Last Modified: 11/30/2015       Submitted by: Val Tannen]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

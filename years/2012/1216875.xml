<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>RI: Small: Learning Meaning and Grammar from Interaction, Context, and the World</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2012</AwardEffectiveDate>
<AwardExpirationDate>07/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tatiana Korelsky</SignBlockName>
<PO_EMAI>tkorelsk@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Natural language processing  tasks like question answering or machine translation require sophisticated parsers: systems that extract grammatical dependency relations between words.  But traditional supervised methods of training parsers rely on very expensive hand-labeled datasets, and generalize poorly to new words, grammar, languages, or genres of text.  This project is pursuing three directions to significantly augment current unsupervised models of grammar induction.  First is a new mathematical model of dependency parsing that draws on linguistic intuitions of constituency.  Second is an architecture that jointly learns grammar and parts-of-speech, eliminating the need for supervised part-of-speech tags and hand-labeled datasets, and making grammar induction possible on a vast number of languages and genres. Third are ways to exploit new sources of data for unsupervised learning, including anchor text in web data, vastly expanding the scope of the problem from the small clean annotated treebanks commonly used in current work.&lt;br/&gt;&lt;br/&gt;Language understanding by machine is a crucial tool for our nation: machine translation makes international web sites broadly accessible, sentiment analysis helps newspapers make politics more  transparent, question answering systems help people disseminate knowledge, and information extraction helps corporations and people draw insights from vast databases of documents.  By improving the fundammental parsing technology that underlies each of these tasks, and making it possible to parse new languages and genres that have not been parsable before, this project has the power to vastly increase both the power and scope of these key applications.</AbstractNarration>
<MinAmdLetterDate>07/19/2012</MinAmdLetterDate>
<MaxAmdLetterDate>07/19/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1216875</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Jurafsky</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel S Jurafsky</PI_FULL_NAME>
<EmailAddress>jurafsky@stanford.edu</EmailAddress>
<PI_PHON>6507230924</PI_PHON>
<NSF_ID>000140878</NSF_ID>
<StartDate>07/19/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Stanford University</Name>
<CityName>Stanford</CityName>
<ZipCode>943052004</ZipCode>
<PhoneNumber>6507232300</PhoneNumber>
<StreetAddress>450 Jane Stanford Way</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009214214</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>LELAND STANFORD JUNIOR UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009214214</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Stanford University]]></Name>
<CityName>Stanford</CityName>
<StateCode>CA</StateCode>
<ZipCode>943019991</ZipCode>
<StreetAddress><![CDATA[450 Serra Mall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7495</Code>
<Text>Robust Intelligence</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~150000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Text on the web provides an important source of information for our day-to-day life, whether from news, consumer information like credit card legal statements, or health-related or other scientific materials.&nbsp; But the amount of text on the web is overwhelming, making it difficult to find answers to complex questions or solve problems whose answers may be available in text.&nbsp; For this reasons, systems that can extract information from large sources of text, for answering questions, for summarizing, for searching, or for solving real problems are an essential technology.&nbsp; Many such technologies rely on parsing, the task of recognizing and marking up the grammatical structures in text.&nbsp; Parse structures make it possible to extract the meaning of sentences by seeing how words relate to each other.&nbsp; The traditional way to do parsing is to have humans hand-label the parse structures for thousands of sentences and then train statistical models to predict these parses.&nbsp; But labeling sentences is very expensive (requiring highly trained labelers), very expensive (because it's slow) and tends to work best only if the labeled `training' sentence comes from a very similar kind of text to the sentence being parsed.&nbsp; For this reason, it is essential to solve the difficult problem of automatically inducing grammatical structure from text, learning the structure of raw sentences.&nbsp; Having systems that can perform this "grammar induction" task means that we could learn from millions of sentences on the web how to parse sentences, and then compute the parse over sentences to help us extract information.</p> <p>&nbsp;</p> <p>This project developed a suite of new ways to automatically discovering grammatical structures in text.&nbsp; One set of methods we developed show how to make use of hints in the text that correlate with syntactic structures (structures that consist of noun phrases like "the three requirements" or verb phrases&nbsp; like "confirm your participation").&nbsp; For example text between certain kinds of punctuation, or text that is marked up in boldface or italics often consists of a syntactic phrase. &nbsp; The words that occur at the beginning of sentences are also likely to occur at the beginning of phrases.&nbsp; The words that occur at the end of sentences are also likely to occur at the end of phrases.&nbsp; Capitalization can be a useful cue to learn what is a phrase.&nbsp; But in addition to making use of all these cues that improve our ability to&nbsp; automatically learn syntactic structure from raw text on the web, we developed new methods for performing the induction itself.&nbsp; With these new algorithms we model the process of assigning a syntactic structure to a sentence as a problem of search: we search through all possible structures, eliminating the ones that don't fit the constraints of the sentence.&nbsp; But search, while an important method for lots of artificial intelligence tasks like parsing, is known to be very difficult for certain kinds of problems (called non-convex optimization problems).&nbsp; We showed new methods for breaking down the search problem. One way to improve search is to build on previous partial solutions, taking a partial answer to a problem and modifying it slightly.&nbsp; We show that forgetting parts of previous solutions can often result in a good place to restart a search.&nbsp; Another way to improve search is to combine multiple methods: we show a way to combine the results of previous grammar induction methods to produce an even better method. &nbsp; The results of our work are a new method for grammar induction that works significantly better than all previous such methods at learning the syntactic structure of text, one that we hope will make it easier in the future to extract meaning from raw text of any kind.</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/31/2014<b...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Text on the web provides an important source of information for our day-to-day life, whether from news, consumer information like credit card legal statements, or health-related or other scientific materials.  But the amount of text on the web is overwhelming, making it difficult to find answers to complex questions or solve problems whose answers may be available in text.  For this reasons, systems that can extract information from large sources of text, for answering questions, for summarizing, for searching, or for solving real problems are an essential technology.  Many such technologies rely on parsing, the task of recognizing and marking up the grammatical structures in text.  Parse structures make it possible to extract the meaning of sentences by seeing how words relate to each other.  The traditional way to do parsing is to have humans hand-label the parse structures for thousands of sentences and then train statistical models to predict these parses.  But labeling sentences is very expensive (requiring highly trained labelers), very expensive (because it's slow) and tends to work best only if the labeled `training' sentence comes from a very similar kind of text to the sentence being parsed.  For this reason, it is essential to solve the difficult problem of automatically inducing grammatical structure from text, learning the structure of raw sentences.  Having systems that can perform this "grammar induction" task means that we could learn from millions of sentences on the web how to parse sentences, and then compute the parse over sentences to help us extract information.     This project developed a suite of new ways to automatically discovering grammatical structures in text.  One set of methods we developed show how to make use of hints in the text that correlate with syntactic structures (structures that consist of noun phrases like "the three requirements" or verb phrases  like "confirm your participation").  For example text between certain kinds of punctuation, or text that is marked up in boldface or italics often consists of a syntactic phrase.   The words that occur at the beginning of sentences are also likely to occur at the beginning of phrases.  The words that occur at the end of sentences are also likely to occur at the end of phrases.  Capitalization can be a useful cue to learn what is a phrase.  But in addition to making use of all these cues that improve our ability to  automatically learn syntactic structure from raw text on the web, we developed new methods for performing the induction itself.  With these new algorithms we model the process of assigning a syntactic structure to a sentence as a problem of search: we search through all possible structures, eliminating the ones that don't fit the constraints of the sentence.  But search, while an important method for lots of artificial intelligence tasks like parsing, is known to be very difficult for certain kinds of problems (called non-convex optimization problems).  We showed new methods for breaking down the search problem. One way to improve search is to build on previous partial solutions, taking a partial answer to a problem and modifying it slightly.  We show that forgetting parts of previous solutions can often result in a good place to restart a search.  Another way to improve search is to combine multiple methods: we show a way to combine the results of previous grammar induction methods to produce an even better method.   The results of our work are a new method for grammar induction that works significantly better than all previous such methods at learning the syntactic structure of text, one that we hope will make it easier in the future to extract meaning from raw text of any kind.          Last Modified: 10/31/2014       Submitted by: Daniel S Jurafsky]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

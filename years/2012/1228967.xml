<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Medium: Towards a Formally Verified Web Browser</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2012</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>1110000.00</AwardTotalIntnAmount>
<AwardAmount>1110000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The web browser is ubiquitous and indispensable. It runs applications&lt;br/&gt;like social networking, business productivity, and online banking, and&lt;br/&gt;promises isolation policies that keep these applications secure when&lt;br/&gt;run side-by-side. Because of its crucial role, we would like the&lt;br/&gt;browser to be robust and secure against attack; but in fact browsers&lt;br/&gt;are fragile. They are complex pieces of software with rich features&lt;br/&gt;that allow for flexibility and programmability, and even small bugs&lt;br/&gt;can make the browser vulnerable to attack. Indeed, browser&lt;br/&gt;vulnerabilities have been used to infiltrate the internal networks of&lt;br/&gt;American defense contractors and leading tech firms. Attempts to&lt;br/&gt;improve browser security are often ad-hoc engineering efforts; and&lt;br/&gt;even when formal guarantees are provided, they come in the form of&lt;br/&gt;proofs over a model or idealization of the browser, not the browser&lt;br/&gt;itself.  A buggy implementation can invalidate intended guarantees and&lt;br/&gt;leave users open to attack.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;The goal of this project is to build a browser inside the Coq proof&lt;br/&gt;assistant, along with a proof of its correctness. Unlike previous&lt;br/&gt;research efforts, the proof covers the actual browser implementation&lt;br/&gt;rather than a model or abstraction.  This provides extremely strong,&lt;br/&gt;precise guarantees about the security properties of the browser. The&lt;br/&gt;proof is made tractable by focusing the verification effort to a small&lt;br/&gt;browser kernel, and running legacy code in a sandbox to render&lt;br/&gt;web pages. In this way, the browser can provide meaningful isolation&lt;br/&gt;guarantees even when the legacy code that renders web pages is&lt;br/&gt;untrusted and potentially buggy.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;This project will provide:&lt;br/&gt;* For users of the web, browsers that are more reliable and secure;&lt;br/&gt;* For software developers, a new approach for developing high-assurance systems;&lt;br/&gt;* For researchers, a framework for formally reasoning about security policies;&lt;br/&gt;* For students, security and formal methods education.</AbstractNarration>
<MinAmdLetterDate>08/25/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/25/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1228967</AwardID>
<Investigator>
<FirstName>Sorin</FirstName>
<LastName>Lerner</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sorin Lerner</PI_FULL_NAME>
<EmailAddress>lerner@cs.ucsd.edu</EmailAddress>
<PI_PHON>8585348883</PI_PHON>
<NSF_ID>000068847</NSF_ID>
<StartDate>08/25/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Hovav</FirstName>
<LastName>Shacham</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Hovav Shacham</PI_FULL_NAME>
<EmailAddress>hovav@cs.utexas.edu</EmailAddress>
<PI_PHON>5124719792</PI_PHON>
<NSF_ID>000082153</NSF_ID>
<StartDate>08/25/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-San Diego</Name>
<CityName>La Jolla</CityName>
<ZipCode>920930934</ZipCode>
<PhoneNumber>8585344896</PhoneNumber>
<StreetAddress>Office of Contract &amp; Grant Admin</StreetAddress>
<StreetAddress2><![CDATA[9500 Gilman Drive, 0934]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>49</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA49</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>804355790</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, SAN DIEGO</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-San Diego]]></Name>
<CityName/>
<StateCode>CA</StateCode>
<ZipCode>920930404</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>49</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA49</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~1110000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>The web browser is ubiquitous and indispensable. It runs applications&nbsp;like social networking, business productivity, and online banking, and&nbsp;promises isolation policies that keep these applications secure when&nbsp;run side-by-side. Because of its crucial role, we would like the&nbsp;browser to be robust and secure against attack; but in fact browsers&nbsp;are fragile. They are complex pieces of software with rich features&nbsp;that allow for flexibility and programmability, and even small bugs&nbsp;can make the browser vulnerable to attack. Indeed, browser&nbsp;vulnerabilities have been used to infiltrate the internal networks of&nbsp;American defense contractors and leading tech firms. Attempts to&nbsp;improve browser security are often ad-hoc engineering efforts; and&nbsp;even when formal guarantees are provided, they come in the form of&nbsp;proofs over a model or idealization of the browser, not the browser&nbsp;itself. A buggy implementation can invalidate intended guarantees and&nbsp;leave users open to attack.</span></p> <p>The intellectual merit of this project was the development of several new techniques for making browsers more secure. These techniques were backed by mathematical foundations and proofs that provide strong guarantees about the browser implementation. In particular, the intellectual merit of this project included: (1) the first practical browser whose kernel was proved correct; (2) an efficient technique for defending against a particular kind of attack found in the wild, namely v-table hijacking; (3) an effective way of defending against certain kinds of timing attacks that can read pixels across frames (for example, any tab in your browser can read your bank tab); (4) an efficient way of seperating components that are vulnerable to attack based on a technique called Software Fault Isolation.</p> <p>The broader impact of this project includes: (1) safer browsers that are more resilient to attacks (2) the launching of Zachary Tatlock's career, who is now an Assistant Professor at the University of Washington.</p><br> <p>            Last Modified: 12/28/2017<br>      Modified by: Sorin&nbsp;Lerner</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The web browser is ubiquitous and indispensable. It runs applications like social networking, business productivity, and online banking, and promises isolation policies that keep these applications secure when run side-by-side. Because of its crucial role, we would like the browser to be robust and secure against attack; but in fact browsers are fragile. They are complex pieces of software with rich features that allow for flexibility and programmability, and even small bugs can make the browser vulnerable to attack. Indeed, browser vulnerabilities have been used to infiltrate the internal networks of American defense contractors and leading tech firms. Attempts to improve browser security are often ad-hoc engineering efforts; and even when formal guarantees are provided, they come in the form of proofs over a model or idealization of the browser, not the browser itself. A buggy implementation can invalidate intended guarantees and leave users open to attack.  The intellectual merit of this project was the development of several new techniques for making browsers more secure. These techniques were backed by mathematical foundations and proofs that provide strong guarantees about the browser implementation. In particular, the intellectual merit of this project included: (1) the first practical browser whose kernel was proved correct; (2) an efficient technique for defending against a particular kind of attack found in the wild, namely v-table hijacking; (3) an effective way of defending against certain kinds of timing attacks that can read pixels across frames (for example, any tab in your browser can read your bank tab); (4) an efficient way of seperating components that are vulnerable to attack based on a technique called Software Fault Isolation.  The broader impact of this project includes: (1) safer browsers that are more resilient to attacks (2) the launching of Zachary Tatlock's career, who is now an Assistant Professor at the University of Washington.       Last Modified: 12/28/2017       Submitted by: Sorin Lerner]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

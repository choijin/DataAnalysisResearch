<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Classroom Interventions to Reduce Procrastination</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/15/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>199922.00</AwardTotalIntnAmount>
<AwardAmount>199922</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Stephanie August</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Despite data confirming that computer science students who start programming projects early and spread their effort over time perform better, too many students put off their work to a point that restricts their chances to get assistance thus making it difficult to recover from unexpected hurdles. The overarching goal of this project is to produce a classroom strategy that measurably reduces procrastination and increases student project performance, while being applicable in larger classrooms without adding substantially to faculty overhead. This project designs and evaluates the effectiveness of three classroom interventions for multi-week programming assignments. Automated situational awareness alerts are based on a model of student progress and show students a comparison between their current efforts and a summary of past student performance data. Students also engage in active reflection and after each assignment write and discuss with classmates how their time management choices affected their work. Students also use scheduling sheets that require them to break down tasks and plan how much time to allocate for each piece to help them form, express, manage, and track smaller-scale deadlines. All three interventions are grounded in temporal motivation theory. The impact of the interventions is measured in terms of when students start a project, when and if they finish the project, their score on a project, their retention of the material covered by the project, and changes in their attitudes on procrastination. The interventions are automated through the open-source tool Web-CAT which supports analysis of student-written programs. A workshop is being held to assist faculty on using the interventions in their own classes. The interventions are not necessarily computer science specific and, if shown successful, can be adapted to other STEM disciplines.</AbstractNarration>
<MinAmdLetterDate>06/21/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/21/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1245334</AwardID>
<Investigator>
<FirstName>Clifford</FirstName>
<LastName>Shaffer</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Clifford A Shaffer</PI_FULL_NAME>
<EmailAddress>shaffer@vt.edu</EmailAddress>
<PI_PHON>5402314354</PI_PHON>
<NSF_ID>000234855</NSF_ID>
<StartDate>06/21/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Stephen</FirstName>
<LastName>Edwards</LastName>
<PI_MID_INIT>H</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Stephen H Edwards</PI_FULL_NAME>
<EmailAddress>edwards@cs.vt.edu</EmailAddress>
<PI_PHON>5402315723</PI_PHON>
<NSF_ID>000246007</NSF_ID>
<StartDate>06/21/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Tahereh</FirstName>
<LastName>Hall</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tahereh Hall</PI_FULL_NAME>
<EmailAddress>thall57@vt.edu</EmailAddress>
<PI_PHON>3369724551</PI_PHON>
<NSF_ID>000535840</NSF_ID>
<StartDate>06/21/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Virginia Polytechnic Institute and State University</Name>
<CityName>BLACKSBURG</CityName>
<ZipCode>240610001</ZipCode>
<PhoneNumber>5402315281</PhoneNumber>
<StreetAddress>Sponsored Programs 0170</StreetAddress>
<StreetAddress2><![CDATA[300 Turner Street NW, Suite 4200]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>VA09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003137015</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>VIRGINIA POLYTECHNIC INSTITUTE AND STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003137015</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Virginia Polytechnic Institute and State University]]></Name>
<CityName>Blacksburg</CityName>
<StateCode>VA</StateCode>
<ZipCode>240610001</ZipCode>
<StreetAddress><![CDATA[620 Drillfield Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>VA09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7513</Code>
<Text>TUES-Type 1 Project</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0413</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~199922</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Many students in intermediate-level Computer Science courses have problems with managing the larger programming projects that they are required to complete. Part of the problem is lack of time managment skills (this can result in procrastination), and part from lack of project manangement, testing, and debugging skills. The overarching goal of this project is to produce a classroom strategy that measurably increases student project performance, while being applicable in larger classrooms without requiring a burdensome manpower cost.</p> <p>We designed and implemented several interventions, and evaluated their performance in an intermediate-level programming course (Data Structures and Algorithms). The projects in this course typically have a 3-4 week lifecycle. Interventions that we tested included: (1) Automated&nbsp;<strong>situational awareness alerts</strong>&nbsp;based on a model of student progress that show students a comparison between their current efforts and a summary of past student performance data. (2)&nbsp;<strong>Active reflection</strong>, where students write a &ldquo;minute paper&rdquo; after each assignment on how their time management choices affected their work.&nbsp; (3) As students worked on their projects, they periodically filled out and turned in&nbsp;<strong>scheduling sheets</strong>&nbsp;that required them to break down tasks and show how much time they plan to allocate for each piece, helping them to form, express, manage, and track smaller-scale deadlines.&nbsp; All three interventions are grounded in temporal motivation theory, which explains why people procrastinate. Each of these three treatments was applied to a section of the Data Structures and Algorithms course at Virginia Tech, with a fourth section used as a control. We found a significant effect for the <strong>situational awareness alerts</strong>.</p> <p>In order to take best advantage of this result, we need to be able to accurately inform students of their progress as compared to either their peers or benchmark expectations of progress. This requires significant technical advances in capturing data about student project status, and modeling based on these data to assess both the percent toward completion of a project, and whether the student is using appropriate development techniques. To support these goals, we developed a system named <strong>DevEventTracker</strong>. DevEventTracker captures all activities performed by the student from within the widely used Eclipse IDE. All major events (such as compliation, runs, file saves, etc) are captured, and snapshots of the program source state are also captured, through an Eclipse plugin. We developed and tested analysis tools that can reliably estimate how complete a project is, and we have begun initial prototyping of an assessment for the quality of the development process that a given student has used. The final step will be to develop a new set of interventions that appropriately notify students about their status with respect to their peers during the project lifecycle.</p> <p><strong>Broader Impact:</strong> A generally applicable strategy for reducing procrastination is a critical need. CS education researchers can use such strategies across the board, and their impact is not limited to just computer science. Many lessons learned about successful interventions are not discipline-specific and will be applicable STEM-wide. Our strategy of integrating our technical work with existing open-source tools facilitates adoption by a large, pre-existing potential user base, and infrastructure availability means that adopters can easily measure the impact themselves. Finally, our specific technical work on measuring project completion progress and quality of the project development process can eventually be extended into tools for use by professional software developers.</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/01/2017<br>      Modified by: Clifford&nbsp;A&nbsp;Shaffer</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Many students in intermediate-level Computer Science courses have problems with managing the larger programming projects that they are required to complete. Part of the problem is lack of time managment skills (this can result in procrastination), and part from lack of project manangement, testing, and debugging skills. The overarching goal of this project is to produce a classroom strategy that measurably increases student project performance, while being applicable in larger classrooms without requiring a burdensome manpower cost.  We designed and implemented several interventions, and evaluated their performance in an intermediate-level programming course (Data Structures and Algorithms). The projects in this course typically have a 3-4 week lifecycle. Interventions that we tested included: (1) Automated situational awareness alerts based on a model of student progress that show students a comparison between their current efforts and a summary of past student performance data. (2) Active reflection, where students write a "minute paper" after each assignment on how their time management choices affected their work.  (3) As students worked on their projects, they periodically filled out and turned in scheduling sheets that required them to break down tasks and show how much time they plan to allocate for each piece, helping them to form, express, manage, and track smaller-scale deadlines.  All three interventions are grounded in temporal motivation theory, which explains why people procrastinate. Each of these three treatments was applied to a section of the Data Structures and Algorithms course at Virginia Tech, with a fourth section used as a control. We found a significant effect for the situational awareness alerts.  In order to take best advantage of this result, we need to be able to accurately inform students of their progress as compared to either their peers or benchmark expectations of progress. This requires significant technical advances in capturing data about student project status, and modeling based on these data to assess both the percent toward completion of a project, and whether the student is using appropriate development techniques. To support these goals, we developed a system named DevEventTracker. DevEventTracker captures all activities performed by the student from within the widely used Eclipse IDE. All major events (such as compliation, runs, file saves, etc) are captured, and snapshots of the program source state are also captured, through an Eclipse plugin. We developed and tested analysis tools that can reliably estimate how complete a project is, and we have begun initial prototyping of an assessment for the quality of the development process that a given student has used. The final step will be to develop a new set of interventions that appropriately notify students about their status with respect to their peers during the project lifecycle.  Broader Impact: A generally applicable strategy for reducing procrastination is a critical need. CS education researchers can use such strategies across the board, and their impact is not limited to just computer science. Many lessons learned about successful interventions are not discipline-specific and will be applicable STEM-wide. Our strategy of integrating our technical work with existing open-source tools facilitates adoption by a large, pre-existing potential user base, and infrastructure availability means that adopters can easily measure the impact themselves. Finally, our specific technical work on measuring project completion progress and quality of the project development process can eventually be extended into tools for use by professional software developers.          Last Modified: 12/01/2017       Submitted by: Clifford A Shaffer]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

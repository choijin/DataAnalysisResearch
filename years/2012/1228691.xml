<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: Software Institute for Abstractions and Methodologies for HPC Simulation Codes on Future Architectures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2012</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>33000.00</AwardTotalIntnAmount>
<AwardAmount>33000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rajiv Ramnath</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Large, complex, multi-scale, multi-physics simulation codes, running on high performance computing (HPC) platforms, are essential to advancing science and engineering research in disciplines such as lattice field theory, astrophysics and cosmology, computational fluid dynamics/fluid structure interaction,and high energy density physics. Progress in computational science together with the adoption of high-level frameworks and modular development have produced widely used community simulation software specific to individual communities. These state-of-the-art codes have been under development and optimization for several years and currently simulate multi-scale, multi-physics phenomena with unprecedented fidelity on petascale platforms. Currently each of these codes have solvers with varied performance characteristics, but all face challenges because of changing hardware architecture. Efforts underway to cope with these challenges, are largely fragmented. While it is true that the scientific codes used in various domains differ significantly from one another, many solutions are likely to be conceptually similar, even if they differ in details. The goal of the proposed conceptualization project, Software Institute for Methodologies and Abstractions for Codes (SIMAC) is to find common abstractions and frameworks applicable across a broad range of applications through cooperation, coordination and interdisciplinary interactions among the participants. The core group of participating codes includes FLASH (astrophysics, cosmology, CFD, HEDP), Cactus (CFD, numerical relativity, and quantum relativity), the code suite used by the Lattice QCD community, and Enzo (cosmology). &lt;br/&gt;&lt;br/&gt;The proposed collaborative research will produce benefit beyond the four simulation codes and collaborating institutions by exploring: a common software infrastructure applicable to a broad range of science and engineering application domains; an engagement model between computer science research and application development; a multidisciplinary immersion program for research, education and training of students, postdoctoral fellows and visitors on future platform architectures.</AbstractNarration>
<MinAmdLetterDate>09/10/2012</MinAmdLetterDate>
<MaxAmdLetterDate>09/10/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1228691</AwardID>
<Investigator>
<FirstName>Steven</FirstName>
<LastName>Brandt</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Steven Brandt</PI_FULL_NAME>
<EmailAddress>sbrandt@cct.lsu.edu</EmailAddress>
<PI_PHON>2255785431</PI_PHON>
<NSF_ID>000198513</NSF_ID>
<StartDate>09/10/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Frank</FirstName>
<LastName>Loffler</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Frank Loffler</PI_FULL_NAME>
<EmailAddress>knarf@cct.lsu.edu</EmailAddress>
<PI_PHON>2255787437</PI_PHON>
<NSF_ID>000574743</NSF_ID>
<StartDate>09/10/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Louisiana State University</Name>
<CityName>Baton Rouge</CityName>
<ZipCode>708032701</ZipCode>
<PhoneNumber>2255782760</PhoneNumber>
<StreetAddress>202 Himes Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Louisiana</StateName>
<StateCode>LA</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>LA06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>075050765</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>LOUISIANA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>940050792</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Louisiana State University and A&M College]]></Name>
<CityName>Baton Rouge</CityName>
<StateCode>LA</StateCode>
<ZipCode>708032701</ZipCode>
<StreetAddress><![CDATA[202 Himes Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Louisiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>LA06</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8211</Code>
<Text>S2I2 - Scient Sftwre Innovat Insts</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~33000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Large, complex, multi-scale, multi-physics simulation codes, running on high performance computing (HPC) platforms, have become essential to advancing science and engineering. Progress in computational science, together with the adoption of high-level frameworks and modular approaches, have enabled large code development efforts. Increasing the capabilities of these codes and maintaining their ability to run on future platforms are as crucial to these communities as continued improvements in instruments and facilities are to experimental scientists. However, the ability of code developers to achieve this faces a serious challenge with the paradigm shift underway in platform architecture from coarse grained parallelism with many highly capable processors, to fine grained parallelism with many more less capable and heterogeneous processors. Parallelism and performance management in these codes must be tackled at multiple levels, the requirements of which are often at cross-purposes with one another and lead therefore, to immensely complicate software design. All of these considerations make it essential to approach this challenge cooperatively as a community. We propose a Software Institute which aims to provide a cross-disciplinary hub around which the computational communities can rally. It will serve as a repository of tools and knowledge that will enable scientific code developers to produce architecture-aware software and successfully utilize the computational resources of future platforms. The Institute will train and support Computer Science researchers, industry vendors and users, software developers, as well as graduate students and postdoctoral fellows from a broad range of disciplines, such as Astronomy, Physics and Engineering. The Software Institute will also be charged with the development of common abstractions, frameworks, programming models and software development methodologies that can be applied across a broad range of complex simulation codes, as well as common software infrastructure to support them.</p> <p>The Software Institute is directly supported by science domain experts, lead developers of application codes, experts in programming challenges on future platforms, while concurrently partnering with manufacturers. Moreover, the large, multi-scale, multi-physics community codes FLASH, Cactus, Enzo and the Lattice QCD code suites are pledging support to the Institute and will act as experiment subjects for the transformation required by the new platforms. These codes represent a large part of the scientific communities of the aforementioned fields and have many thousands of scientists and researchers as their users. Thus the Software Institute is well-positioned to keep abreast of future-platforms efforts worldwide and exploit the solutions that are developed; at the same time, adoption of any solutions will have a world-wide impact on the domain research communities.</p> <p>During the course of this grant, three workshops were held:</p> <ol> <li>Dec 10-12, 2012: Domain scientists working on large programming frameworks presented their code characteristics, discussed future capabilities needed, and performance bottlenecks. http://flash.uchicago.edu/SIMAC/Workshops/Dec2012</li> <li>May 16-17, 2013: Industrial participants discussed their performance, and sustainability needs.&nbsp; http://www.ncsa.illinois.edu/Conferences/2013Meeting</li> <li>Nov 6-7, 2013: Focused on finding motifs and repeating patterns in constructs and data structures, programming models, and algorithm design priorities.&nbsp; http://blogs.bu.edu/simac3/</li> </ol> <p>Papers were produced:</p> <ol> <li>"Software Abstractions and Methodologies for HPC Simulation Codes on Future Architectures", Journal of Open Research Software, 2014, http://openresearchsoftware.metajnl.com/article/view/jors.aw/49</li> <li>"A survey of high level frameworks in block-structured adaptive mesh r...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Large, complex, multi-scale, multi-physics simulation codes, running on high performance computing (HPC) platforms, have become essential to advancing science and engineering. Progress in computational science, together with the adoption of high-level frameworks and modular approaches, have enabled large code development efforts. Increasing the capabilities of these codes and maintaining their ability to run on future platforms are as crucial to these communities as continued improvements in instruments and facilities are to experimental scientists. However, the ability of code developers to achieve this faces a serious challenge with the paradigm shift underway in platform architecture from coarse grained parallelism with many highly capable processors, to fine grained parallelism with many more less capable and heterogeneous processors. Parallelism and performance management in these codes must be tackled at multiple levels, the requirements of which are often at cross-purposes with one another and lead therefore, to immensely complicate software design. All of these considerations make it essential to approach this challenge cooperatively as a community. We propose a Software Institute which aims to provide a cross-disciplinary hub around which the computational communities can rally. It will serve as a repository of tools and knowledge that will enable scientific code developers to produce architecture-aware software and successfully utilize the computational resources of future platforms. The Institute will train and support Computer Science researchers, industry vendors and users, software developers, as well as graduate students and postdoctoral fellows from a broad range of disciplines, such as Astronomy, Physics and Engineering. The Software Institute will also be charged with the development of common abstractions, frameworks, programming models and software development methodologies that can be applied across a broad range of complex simulation codes, as well as common software infrastructure to support them.  The Software Institute is directly supported by science domain experts, lead developers of application codes, experts in programming challenges on future platforms, while concurrently partnering with manufacturers. Moreover, the large, multi-scale, multi-physics community codes FLASH, Cactus, Enzo and the Lattice QCD code suites are pledging support to the Institute and will act as experiment subjects for the transformation required by the new platforms. These codes represent a large part of the scientific communities of the aforementioned fields and have many thousands of scientists and researchers as their users. Thus the Software Institute is well-positioned to keep abreast of future-platforms efforts worldwide and exploit the solutions that are developed; at the same time, adoption of any solutions will have a world-wide impact on the domain research communities.  During the course of this grant, three workshops were held:  Dec 10-12, 2012: Domain scientists working on large programming frameworks presented their code characteristics, discussed future capabilities needed, and performance bottlenecks. http://flash.uchicago.edu/SIMAC/Workshops/Dec2012 May 16-17, 2013: Industrial participants discussed their performance, and sustainability needs.  http://www.ncsa.illinois.edu/Conferences/2013Meeting Nov 6-7, 2013: Focused on finding motifs and repeating patterns in constructs and data structures, programming models, and algorithm design priorities.  http://blogs.bu.edu/simac3/   Papers were produced:  "Software Abstractions and Methodologies for HPC Simulation Codes on Future Architectures", Journal of Open Research Software, 2014, http://openresearchsoftware.metajnl.com/article/view/jors.aw/49 "A survey of high level frameworks in block-structured adaptive mesh refinement packages", Journal of Parallel and Distributed Computing, 2014, http://www.sciencedirect.com/science/article/pii/S0743731514001178       ...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

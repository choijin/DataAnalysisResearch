<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Design Techniques for Repairable Data Systems</AwardTitle>
<AwardEffectiveDate>08/15/2004</AwardEffectiveDate>
<AwardExpirationDate>07/31/2009</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>280000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>National Science Foundation&lt;br/&gt;Distributed Systems Research &lt;br/&gt;CISE/CNS&lt;br/&gt;&lt;br/&gt;ABSTRACT&lt;br/&gt;&lt;br/&gt;Proposal Number: 0410694&lt;br/&gt;Principal Investigator: Chiueh, Tzi-Cker&lt;br/&gt;Institution: SUNY Stony Brook&lt;br/&gt;Proposal Title: Design Techniques for Repairable Data Systems&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;The ultimate goal of a computer security solution is to maximize the availability of the system it protects. Towards this goal, most past research focused on in-creasing the mean time between security breaches by improving methods to de-tect and prevent  attacks. However, there is another alternative, which is the approach that the Repairable Data System (RDS) project takes: reduce the time required to restore a system back to normal order after it is compromised. More specifically, a repairable data system can quickly restart itself after an intrusion and eliminate those and only those side effects directly or indirectly  left by the intrusion.  &lt;br/&gt;&lt;br/&gt;The key design issues in building repairable data systems are (1) how to log all updates so that every update is undoable, and (2) how to track the dependen-cies among updates so that all the updates affected by an attack can be identi-fied and erased. The RDS project develops novel techniques to solve these two problems in the context of network file servers and relational DBMS servers. The main result of this project is expected  to be a reusable implementation framework for adding a fast repair mechanism to existing network file servers and DBMS servers without requiring any modifications to their internals  The fast repair mechanism added drastically shortens the time taken by  and im-proves the accuracy of the post-intrusion repair process. Therefore, this tech-nology  renders existing information systems intrusion-tolerant in that  the im-pact of an intrusion is diminished to the point of a transient system outage. All the software resulting from this project will be published in the SourceForge web site for dissemination. &lt;br/&gt;&lt;br/&gt;Dr. Brett D. Fleisch&lt;br/&gt;Program Director, CISE/CNS&lt;br/&gt;June 30, 2004&lt;br/&gt;.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/04/2004</MinAmdLetterDate>
<MaxAmdLetterDate>07/24/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0410694</AwardID>
<Investigator>
<FirstName>Tzi-Cker</FirstName>
<LastName>Chiueh</LastName>
<EmailAddress>chiueh@cs.sunysb.edu</EmailAddress>
<StartDate>08/04/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Stony Brook</Name>
<CityName>Stony Brook</CityName>
<ZipCode>117940001</ZipCode>
<PhoneNumber>6316329949</PhoneNumber>
<StreetAddress>WEST 5510 FRK MEL LIB</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Enhancing Testing Techniques for Event-driven Software Applications</AwardTitle>
<AwardEffectiveDate>03/01/2005</AwardEffectiveDate>
<AwardExpirationDate>02/28/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>CCF-0447864&lt;br/&gt;Atif M Memon&lt;br/&gt;University of Maryland - College Park&lt;br/&gt;&lt;br/&gt;Enhancing Testing Techniques for Event-driven Software Applications&lt;br/&gt;&lt;br/&gt;A particular class of software that is fast becoming ubiquitous is event-driven software (EDS); examples include web applications, graphical user interfaces (GUIs), network protocols, device drivers, and embedded software.  All EDS take sequences of events (messages, mouse-clicks, etc.) as input, change their state, and sometimes output an event sequence. Existing testing techniques are not directly applicable to EDS because they pose unique challenges for test-case generation, event interaction modeling, test adequacy evaluation, verification, and execution.  The primary contribution of this research will be an EDS testing framework based on a new event-flow model that the PI has developed and successfully employed to automate certain aspects of GUI testing. Much like how existing control-flow and data-flow models capture the control&lt;br/&gt;and data interactions in a program, the event-flow model captures event interactions in a GUI.  The framework will combine the event-flow model with new techniques for automated test case generation, execution, coverage evaluation, and verification.  To provide focus, the research will create an event-flow model that is applicable to web applications, network protocols, and GUIs.  The commonalities of these EDS will be used to create a base event-flow model and differences between them will be used to develop domain-specific extensions.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>02/18/2005</MinAmdLetterDate>
<MaxAmdLetterDate>08/01/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0447864</AwardID>
<Investigator>
<FirstName>Atif</FirstName>
<LastName>Memon</LastName>
<EmailAddress>atif@cs.umd.edu</EmailAddress>
<StartDate>02/18/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0105</Code>
</Appropriation>
<Appropriation>
<Code>0106</Code>
</Appropriation>
<Appropriation>
<Code>0107</Code>
</Appropriation>
<Appropriation>
<Code>0108</Code>
</Appropriation>
</Award>
</rootTag>

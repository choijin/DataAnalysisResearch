<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Building Scalable and Adaptive Garbage Collector for Server Systems</AwardTitle>
<AwardEffectiveDate>08/01/2004</AwardEffectiveDate>
<AwardExpirationDate>07/31/2008</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>281000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>National Science Foundation&lt;br/&gt;Distributed Systems Research &lt;br/&gt;CISE/CNS&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;ABSTRACT&lt;br/&gt;PROPOSAL NUMBER: 0411043&lt;br/&gt;PRINCIPAL INVESTIGATOR: Srisa-an, Witawas&lt;br/&gt;INSTITUTION: Building Scalable and Adaptive Garbage Collector for Server Systems&lt;br/&gt;PROPOSAL TITLE: University of Nebraska-Lincoln&lt;br/&gt;&lt;br/&gt;Industry observers have predicted that application servers will become a 21 billion dollars per year business by the end of 2007 as more companies deploy web services to make applications or information available across the Internet. Object-oriented languages are currently the choice for the development of those applications. Object-oriented languages such as Java and computing platform such Microsoft .NET have adopted garbage collec-tion as the way to manage dynamic memory. However, this adoption poses at least two significant challenges: (1) server applications are multithreaded and are designed for mul-tiprocessor systems and (2) unlike desktop applications, the workloads and resources available for server systems can vary tremendously.&lt;br/&gt;&lt;br/&gt;This research addresses these issues by introducing a novel garbage collection system that can efficiently and dynamically respond to the specific needs and challenges of server applications. The proposed garbage collection scheme is fully scalable and thread-safe. It also discriminates between local and remote objects so that differentiated collec-tion strategies can be implemented according to locality. In addition, the garbage collec-tor is resource cognizant, that is, it can adjust the profiling and garbage collection policy based on the availability of resources on the server. As a result, the proposed work greatly improves the performance of application servers, distributed applications, and web services, which are the foundations of pervasive computing applications that already provide services for millions of users each day.&lt;br/&gt;&lt;br/&gt;Dr. Brett D. Fleisch&lt;br/&gt;Program Director, CISE/CNS&lt;br/&gt;June 23, 2004.&lt;br/&gt;.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/30/2004</MinAmdLetterDate>
<MaxAmdLetterDate>06/01/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0411043</AwardID>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Dwyer</LastName>
<EmailAddress>md3cn@virginia.edu</EmailAddress>
<StartDate>07/30/2004</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Sebastian</FirstName>
<LastName>Elbaum</LastName>
<EmailAddress>selbaum@virginia.edu</EmailAddress>
<StartDate>07/30/2004</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Witawas</FirstName>
<LastName>Srisa-an</LastName>
<EmailAddress>witty@cse.unl.edu</EmailAddress>
<StartDate>07/30/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Nebraska-Lincoln</Name>
<CityName>Lincoln</CityName>
<ZipCode>685031435</ZipCode>
<PhoneNumber>4024723171</PhoneNumber>
<StreetAddress>151 Prem S. Paul Research Center</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Nebraska</StateName>
<StateCode>NE</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Proposal:   Advances in Aspect-Oriented Languages, Methods, and Tools</AwardTitle>
<AwardEffectiveDate>10/01/2004</AwardEffectiveDate>
<AwardExpirationDate>09/30/2006</AwardExpirationDate>
<AwardTotalIntnAmount>132831.00</AwardTotalIntnAmount>
<AwardAmount>132831</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Abstract: Aspect-oriented programming (AOP) promotes new mechanisms and&lt;br/&gt;methods to improve separation of concerns in software design. AOP is not&lt;br/&gt;well understood in theory, and remains controversial among researchers and&lt;br/&gt;practitioners. One issue is that it relies on implementation-dependent,&lt;br/&gt;implicit side effects, contradicting traditional views on abstraction,&lt;br/&gt;information hiding, and compositional reasoning. The PIs' goals are to&lt;br/&gt;explicate fundamental mechanisms of AOP; assess and improve the impact of&lt;br/&gt;AOP on decomposition and coupling; and improve our understanding of the&lt;br/&gt;inherent complexity of, and potential for, compositional reasoning involving&lt;br/&gt;AOP. The approach is to ground AOP in an underlying ontology of implicit&lt;br/&gt;invocation and then to leverage knowledge in that domain to advance our&lt;br/&gt;understanding of AOP. The intellectual significance of the proposed work is&lt;br/&gt;in its potential to improve our understanding of AOP, including effects on&lt;br/&gt;modularity and abstraction, and the complexity of specification and&lt;br/&gt;verification. Broader impacts are anticipated to flow from regularized and&lt;br/&gt;improved AOP mechanisms, e.g., for event abstraction. The project will also&lt;br/&gt;support development and delivery of a senior-level undergraduate and early&lt;br/&gt;graduate course on AOP.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/16/2004</MinAmdLetterDate>
<MaxAmdLetterDate>07/11/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0429786</AwardID>
<Investigator>
<FirstName>Kevin</FirstName>
<LastName>Sullivan</LastName>
<EmailAddress>sullivan@cs.virginia.edu</EmailAddress>
<StartDate>09/16/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Virginia Main Campus</Name>
<CityName>CHARLOTTESVILLE</CityName>
<ZipCode>229044195</ZipCode>
<PhoneNumber>4349244270</PhoneNumber>
<StreetAddress>P.O.  BOX 400195</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

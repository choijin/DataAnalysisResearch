<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Better Systems With Extensible C</AwardTitle>
<AwardEffectiveDate>02/15/2005</AwardEffectiveDate>
<AwardExpirationDate>01/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Mohamed G. Gouda</SignBlockName>
</ProgramOfficer>
<AbstractNarration>As systems are increasingly integrated within a global computing environment, a crucial challenge is how to manage the resulting software complexity. Metaprogramming can help meet this challenge. To reconcile the gap between language/compiler efforts and systems practice, this work will explore the following research questions:    how can an unsafe and low-level programming language, C, be safely extended, including with new definitional constructs, such as objects, and new kinds of types, such as classes and how can language and compiler extensions be factored to maximize reuse, and what support is necessary for managing and composing the resulting fine-grained extensions .  The project will develop and build a macro system for C, called xtc for eXTensible C,  but unlike the C preprocessor, xtc macros are specified and implemented as transformations on a program's abstract syntax tree (AST) and preserve macro hygiene . The project will also explore methods such as a tree querying language that supports complex AST transformations,  an extensible type system, which supports the introduction of new kinds of types, and will investigate how to disable select language features, such as pointers, and how to express domain-specific compiler optimizations.  Software built with xtc will be more reliable and secure, which is of critical importance as business and government increasingly depend on IT for their livelihood. Furthermore, by opening up C, the proposed work enables language and compiler researchers to have more impact and educators to more easily explore new approaches to teaching computer science. To emphasize the last point, the project will leverage xtc in all appropriate courses, including the graduate-level compilers and will also develop a new undergraduate courseon object-oriented programming and the corresponding textbook, which explore not only the relevant concepts but also their underlying implementation (as xtc macros).</AbstractNarration>
<MinAmdLetterDate>02/03/2005</MinAmdLetterDate>
<MaxAmdLetterDate>02/08/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0448349</AwardID>
<Investigator>
<FirstName>Robert</FirstName>
<LastName>Grimm</LastName>
<EmailAddress>rgrimm@cs.nyu.edu</EmailAddress>
<StartDate>02/03/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>New York University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100121019</ZipCode>
<PhoneNumber>2129982121</PhoneNumber>
<StreetAddress>70 WASHINGTON SQUARE S</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SGER: Demonstrating the Feasibility of Semantic Reconfiguration and Semantic Checkpointing</AwardTitle>
<AwardEffectiveDate>11/01/2005</AwardEffectiveDate>
<AwardExpirationDate>10/31/2006</AwardExpirationDate>
<AwardAmount>80224</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Brett D. Fleisch</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This project addresses the provision of system support for applications that are forced or may benefit from use of alternate resources during their execution.  The objective is to provide the application user as much of a sense of continuity as possible across reorganization of the application, including significant remodularization of the application.  This project is an SGER that investigates and provides a proof of concept of two key problems: semantic reconfiguration and semantic checkpointing.  Semantic reconfiguration is the process of reorganizing and remodularizing an application, based on alternate resources, while retaining the overall semantics of the application.  Semantic checkpointing is the process of capturing and restoring state at the semantic level of the application itself, in contrast with capturing the state of the underlying hardware or operating system.  To this end, the project is based on a distributed database application with specific consistency requirements, moving among combinations of low and high capacity servers and networks. The initial, handcrafted system includes: specification of the application and state to be checkpointed, component composition, conversion of checkpointing state, and the checkpointing itself.  The contributions of this work are to 1) design and build the key algorithms to achieve semantic reconfiguration and semantic checkpointing, 2) understanding a path toward generalization and automation of these two tasks, and 3) identify and frame other key components required for complete automated transitions.  As mobile applications become more prevalent, such a systematic approach will become increasing critical.&lt;br/&gt; &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>11/08/2005</MinAmdLetterDate>
<MaxAmdLetterDate>11/08/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0451238</AwardID>
<Investigator>
<FirstName>Karen</FirstName>
<LastName>Sollins</LastName>
<EmailAddress>sollins@csail.mit.edu</EmailAddress>
<StartDate>11/08/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>Computer Systems Research (CSR</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9237</Code>
<Text>SMALL GRANTS-EXPLORATORY RSRCH</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

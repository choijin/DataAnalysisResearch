<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>More Modular Reasoning for Aspect-Oriented Programs</AwardTitle>
<AwardEffectiveDate>09/01/2004</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>54999.00</AwardTotalIntnAmount>
<AwardAmount>54999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Proposal 0428078&lt;br/&gt;TITLE More Modular Reasoning for Aspect-Oriented Programs&lt;br/&gt;Gary T. Leavens&lt;br/&gt;&lt;br/&gt;This project will advance the theory and practice of aspect-oriented software development.  Aspect-oriented languages allow  modularization of code for requirements that do not align with a program's architecture, reducing scattering and tangling of code for these cross-cutting requirements.&lt;br/&gt;&lt;br/&gt;The problem addressed by this project is how to recover static, modular reasoning in aspect-oriented programs.  The technical approach is to create the design discipline, based on an analogy to behavioral subtyping, and a small aspect-oriented programming language to support it.  By producing prototype tools and&lt;br/&gt;applying them in case studies, the researchers will experimentally validate the utility of the language and design discipline.  A formal study of specification and verification techniques will demonstrate&lt;br/&gt;soundness of static, modular reasoning in the language and design discipline.&lt;br/&gt;&lt;br/&gt;The discipline developed through the project will benefit software engineers and programmers by providing guidance for thinking about and applying aspect-oriented programming techniques.  The discipline may&lt;br/&gt;also improve software correctness and maintainability.  By showing how a language can support the discipline, the project will contribute to the design of programming and specification languages.  Like the&lt;br/&gt;notion of behavioral subtyping, a disciplined approach to thinking about aspect-oriented abstraction will help educators convey the key ideas of the paradigm.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/12/2004</MinAmdLetterDate>
<MaxAmdLetterDate>08/12/2004</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0428078</AwardID>
<Investigator>
<FirstName>Gary</FirstName>
<LastName>Leavens</LastName>
<EmailAddress>leavens@cs.ucf.edu</EmailAddress>
<StartDate>08/12/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Iowa State University</Name>
<CityName>AMES</CityName>
<ZipCode>500112207</ZipCode>
<PhoneNumber>5152945225</PhoneNumber>
<StreetAddress>1138 Pearson</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<StateCode>IA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

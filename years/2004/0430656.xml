<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Concrete Problems in Computational Complexity Theory</AwardTitle>
<AwardEffectiveDate>09/15/2004</AwardEffectiveDate>
<AwardExpirationDate>10/31/2006</AwardExpirationDate>
<AwardAmount>286677</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Richard Beigel</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Concrete Problems in Computational Complexity Theory&lt;br/&gt;&lt;br/&gt;Nicholas Pippenger&lt;br/&gt;Department of Computer Science&lt;br/&gt;Princeton University&lt;br/&gt;&lt;br/&gt;The goal of computational complexity theory is to determine the &lt;br/&gt;computational resources needed to carry out various computational tasks.&lt;br/&gt;The resources measured may involve hardware (such as gates used to &lt;br/&gt;construct a circuit, or area on a chip) or software (such as the time or &lt;br/&gt;space used in the execution of a program on a machine), and the tasks &lt;br/&gt;considered may range from a simple addition of two integers to a large &lt;br/&gt;algebraic or geometric computation.&lt;br/&gt;&lt;br/&gt;The proposed research will deal primarily with "low level" complexity &lt;br/&gt;theory, in which the resources required grow modestly (at most quadratically) &lt;br/&gt;with the size of the task. Examples of such tasks are furnished by the &lt;br/&gt;arithmetic operations (addition, subtraction, multiplication, division&lt;br/&gt;and square-root extraction) performed by the execution of single &lt;br/&gt;instructions in a computer. For these tasks, hardware-oriented resource &lt;br/&gt;measures are most appropriate in most cases.&lt;br/&gt;&lt;br/&gt;The proposed research will also explore problems involving fault-tolerant &lt;br/&gt;computing. There is a classical theory concerning transient errors in &lt;br/&gt;circuits that delineates fairly clearly the theoretical possibilities and &lt;br/&gt;limitations in this situation. The proposed research will deal with two &lt;br/&gt;aspects of fault-tolerant computing about which much less is known:&lt;br/&gt;permanent errors occurring over time, and transient errors in quantum &lt;br/&gt;communication and computation. For these questions, hardware-oriented &lt;br/&gt;resource measures are again most appropriate.&lt;br/&gt;&lt;br/&gt;The broader impacts of the proposed research lie in the promotion of &lt;br/&gt;interdisciplinary links between theoretical computer science on one hand, &lt;br/&gt;and mathematics and physics on the other. It has of course always been the &lt;br/&gt;case that computer scientists have drawn heavily on techniques and results &lt;br/&gt;from mathematics and physics, since mathematics and physics form the &lt;br/&gt;foundations of computer science and engineering. What is proposed here, &lt;br/&gt;however, is to return the favor by applying methods developed within &lt;br/&gt;theoretical computer science to problems of interest to mathematicians &lt;br/&gt;and physicists.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/09/2004</MinAmdLetterDate>
<MaxAmdLetterDate>09/09/2004</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0430656</AwardID>
<Investigator>
<FirstName>Nicholas</FirstName>
<LastName>Pippenger</LastName>
<EmailAddress>njp@math.hmc.edu</EmailAddress>
<StartDate>09/09/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

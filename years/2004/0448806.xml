<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:  A Generic Scheme for Graph Topology Optimization</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2005</AwardEffectiveDate>
<AwardExpirationDate>02/28/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>412000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07030000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>CMMI</Abbreviation>
<LongName>Div Of Civil, Mechanical, &amp; Manufact Inn</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Christina L. Bloebaum</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This career-development project will investigate the first generalized scheme for solving topological design problems. This approach combines aspects of optimization, graph theory, mathematical programming, artificial intelligence, and shape and graph grammars. While traditional optimization is typically used to find the best values for dimensions and parameters within an already detailed design, topology optimization can be used earlier in the design process to determine a configuration of constitutive elements. Configuring components can be tedious given the abundance and variety of component types and the pressures imposed by shorter design cycles. Such topological problems are prevalent in engineering design. Examples include the design of sheet metal components, the location and connection of roadways, and the choice and connection of processors in a chemical plant. Thus, a design synthesis method is proposed to automatically choose and configure elements.&lt;br/&gt;&lt;br/&gt;The research activities will be integrated with an educational plan that includes a project-intensive approach to teaching machine elements, a web-based portfolio tool geared towards high-school students interested in engineering and undergraduate students, and the development of two interdisciplinary graduate courses in design. &lt;br/&gt;It is expected that the broader impacts of the research will become significant when the new method is used to solve real engineering design problems. Since the method proposes to increase the representation abilities and improve the efficiency of the search process, more ambitious design problems can be addressed computationally. By developing and implementing generalized modules for solving search problems such as these, researchers will be able to implement their specific representation and evaluation code to work within the proposed framework. &lt;br/&gt;.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>02/15/2005</MinAmdLetterDate>
<MaxAmdLetterDate>05/24/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0448806</AwardID>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Campbell</LastName>
<PI_MID_INIT>I</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Matthew I Campbell</PI_FULL_NAME>
<EmailAddress>matt.campbell@oregonstate.edu</EmailAddress>
<PI_PHON>5417376549</PI_PHON>
<NSF_ID>000214511</NSF_ID>
<StartDate>02/15/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName>Austin</CityName>
<StateCode>TX</StateCode>
<ZipCode>787595316</ZipCode>
<StreetAddress><![CDATA[3925 W Braker Lane, Ste 3.340]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0308000</Code>
<Name>Industrial Technology</Name>
</FoaInformation>
<ProgramElement>
<Code>1464</Code>
<Text>ESD-Eng &amp; Systems Design</Text>
</ProgramElement>
<ProgramReference>
<Code>067E</Code>
<Text>DESIGN TOOLS</Text>
</ProgramReference>
<ProgramReference>
<Code>068E</Code>
<Text>DESIGN THEORY</Text>
</ProgramReference>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>116E</Code>
<Text>RESEARCH EXP FOR UNDERGRADS</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9148</Code>
<Text>TOOLS &amp; TECHNOL FOR MANUFACTURING DESIGN</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9231</Code>
<Text>SUPPL FOR UNDERGRAD RES ASSIST</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>MANU</Code>
<Text>MANUFACTURING</Text>
</ProgramReference>
<Appropriation>
<Code>0105</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2005~400000</FUND_OBLG>
<FUND_OBLG>2010~12000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In this five year grant the PI investigated and developed computational algorithms that improve design automation. Through artificial intelligence, we have seen that computers can help us plan trips, balance risk, and play games. However, the notion that the computer can be creative in defining new products or inventions is not well understood. This concept of design automation or computational design synthesis is useful in aiding engineers with tedious or difficult design decisions.<br />In this research, the PI combined artificial intelligence, numerical optimization, and graph theory to create a system that solves more ambitious design problems than previously thought possible. Through numerical optimization, one can create a computer program to tell an engineer the optimal diameter or even set of dimensions (think lengths and widths) for a particular problem. But, unlike previous copmutaional approaches, in this the computer is able to define topologies as well as determining optimal parameter values. In a loose sense, a topology is the number of parts in an engineering product and how they are connected. It is the configuration.&nbsp; In order to outfit the computer with the ability to design topologies, we introduce graphs and generative grammars as the underlying structure that the computer algorithm can manipulate. The concept of generative grammars is a product of Noam Chomsky and the modern view of linguistics. Where written language can be seen as a string of characters, engineering configurations or topologies can be viewed as a graph of nodes and arcs. The nodes often representing discrete components and the arcs the manner in which the components connect or relate to one another.<br />Using this concept of a generative graph grammar, the PI and his research assistants developed a framework to easily create, and test grammar rules (www.graphsynth.com; and see attached screen shot). They also generated grammar rules to define the language of gear trains, planar mechanisms (see attached figure), piping networks, sheet metal fabrication (see example sheet metal rule attached), CMOS fabrication, and product disassembly. Using these rules the computer can then create solutions which are optimal in terms of both their topology and the internal parameters. <br />As an example, a gear train is shown which was created automatically by invoking grammar rules which define the valid way to construct a gear train. In this particular problem the conversion from input speed to output speed is simpler than the conversion to the proper output location. The computer algorithms developed in this research are able to correctly reason about which gears are needed to create the best gear train. Like traditional optimization, there are a number of objectives, equality and inequality constraints that may be imposed. For this problem, the goal is to minimize cost, minimize error to desired output speed, minimize error in output location, avoid wear and fatigue constraints in the gears, and avoid spatial constraints with the desired box size. The depicted solution is comprised of real gears and it appears to satisfy these goals.<br />In the piping network optimization (see attached figure), the developed algorithms create optimal networks by choosing both discrete elements (t-junctions, elbows) and defining the lengths and angles between elements. In this work a pareto optimal (non-dominated) set of solutions are stored. In the end, only three solutions were optimal for the given problem and the given library of elements. The one depicted minimizing head loss (i.e. pressure drop) the best but it is also a more costly solution. A Pareto plot of solutions is created and can inform the engineering designer as to which solution is best given their tradeoffs in cost and head-loss.<br />The research has broader impacts in the way engineers design systems. By working more closely with...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In this five year grant the PI investigated and developed computational algorithms that improve design automation. Through artificial intelligence, we have seen that computers can help us plan trips, balance risk, and play games. However, the notion that the computer can be creative in defining new products or inventions is not well understood. This concept of design automation or computational design synthesis is useful in aiding engineers with tedious or difficult design decisions. In this research, the PI combined artificial intelligence, numerical optimization, and graph theory to create a system that solves more ambitious design problems than previously thought possible. Through numerical optimization, one can create a computer program to tell an engineer the optimal diameter or even set of dimensions (think lengths and widths) for a particular problem. But, unlike previous copmutaional approaches, in this the computer is able to define topologies as well as determining optimal parameter values. In a loose sense, a topology is the number of parts in an engineering product and how they are connected. It is the configuration.  In order to outfit the computer with the ability to design topologies, we introduce graphs and generative grammars as the underlying structure that the computer algorithm can manipulate. The concept of generative grammars is a product of Noam Chomsky and the modern view of linguistics. Where written language can be seen as a string of characters, engineering configurations or topologies can be viewed as a graph of nodes and arcs. The nodes often representing discrete components and the arcs the manner in which the components connect or relate to one another. Using this concept of a generative graph grammar, the PI and his research assistants developed a framework to easily create, and test grammar rules (www.graphsynth.com; and see attached screen shot). They also generated grammar rules to define the language of gear trains, planar mechanisms (see attached figure), piping networks, sheet metal fabrication (see example sheet metal rule attached), CMOS fabrication, and product disassembly. Using these rules the computer can then create solutions which are optimal in terms of both their topology and the internal parameters.  As an example, a gear train is shown which was created automatically by invoking grammar rules which define the valid way to construct a gear train. In this particular problem the conversion from input speed to output speed is simpler than the conversion to the proper output location. The computer algorithms developed in this research are able to correctly reason about which gears are needed to create the best gear train. Like traditional optimization, there are a number of objectives, equality and inequality constraints that may be imposed. For this problem, the goal is to minimize cost, minimize error to desired output speed, minimize error in output location, avoid wear and fatigue constraints in the gears, and avoid spatial constraints with the desired box size. The depicted solution is comprised of real gears and it appears to satisfy these goals. In the piping network optimization (see attached figure), the developed algorithms create optimal networks by choosing both discrete elements (t-junctions, elbows) and defining the lengths and angles between elements. In this work a pareto optimal (non-dominated) set of solutions are stored. In the end, only three solutions were optimal for the given problem and the given library of elements. The one depicted minimizing head loss (i.e. pressure drop) the best but it is also a more costly solution. A Pareto plot of solutions is created and can inform the engineering designer as to which solution is best given their tradeoffs in cost and head-loss. The research has broader impacts in the way engineers design systems. By working more closely with the computer to define a solution for a particular problem, the engineer can create more op...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

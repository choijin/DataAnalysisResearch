<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Vertically Integrated Program Analysis for Embedded Software</AwardTitle>
<AwardEffectiveDate>05/01/2005</AwardEffectiveDate>
<AwardExpirationDate>04/30/2010</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>CAREER: Vertically Integrated Program Analysis for Embedded Software&lt;br/&gt;&lt;br/&gt;In recent years, a great deal of progress has been made towards tool&lt;br/&gt;support for developing embedded software.  Tools solve a variety of&lt;br/&gt;difficult problems, for example by automating error-prone&lt;br/&gt;implementation tasks, by eliminating redundant and inefficient&lt;br/&gt;constructs, and by guaranteeing the absence of certain classes of&lt;br/&gt;errors, such as race conditions or out-of-memory exceptions.  This&lt;br/&gt;NSF CAREER research is about Vertically Integrated Program Analysis and&lt;br/&gt;Transformation (VIPAT), a new way to look at embedded software tools:&lt;br/&gt;as a collection of building blocks that can be connected together in&lt;br/&gt;different ways to support novel analyses and transformations.  The&lt;br/&gt;existing tools become mechanisms that are controlled by a high-level&lt;br/&gt;policy.  VIPAT is based on two main ideas.  First, the vertical&lt;br/&gt;integration of tools that operate at various levels of abstraction,&lt;br/&gt;which permits high-level transformations to be precisely targeted at&lt;br/&gt;parts of a system whose low-level resource usage is worst.  Second, a&lt;br/&gt;clean separation between mechanism and policy, enabling effective&lt;br/&gt;reuse of existing tools in new situations.  This research is a step&lt;br/&gt;towards a world where meaningful static guarantees about program&lt;br/&gt;behavior can be made, and where software can be automatically&lt;br/&gt;specialized to meet platform- and application-specific requirements&lt;br/&gt;such as time and energy constraints.  The high-level vision is&lt;br/&gt;"fearless reuse": developers should spend less time worrying about&lt;br/&gt;resource usage and potential failure modes of components that they&lt;br/&gt;reuse.</AbstractNarration>
<MinAmdLetterDate>02/08/2005</MinAmdLetterDate>
<MaxAmdLetterDate>02/08/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0448047</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Regehr</LastName>
<EmailAddress>regehr@cs.utah.edu</EmailAddress>
<StartDate>02/08/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

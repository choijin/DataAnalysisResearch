<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Translation Validation of Advanced Compiler Optimizations</AwardTitle>
<AwardEffectiveDate>08/15/2004</AwardEffectiveDate>
<AwardExpirationDate>05/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>113786.00</AwardTotalIntnAmount>
<AwardAmount>232512</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010500</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>ABSTRACT&lt;br/&gt;0306538&lt;br/&gt;Zuck, Lenore D.&lt;br/&gt;New York University&lt;br/&gt;&lt;br/&gt;The is a continuation of a project whose ultimate goal is to develop a&lt;br/&gt;methodology for the translation validation of advanced optimizing compilers, with an emphasis on EPIC-targeted compilers and the aggressive optimizations characteristic to such compilers.  The methods developed will handle an extensive set of optimizations and could be used to implement fully automatic certifiers for a wide range of compilers.&lt;br/&gt;Previous work has developed:&lt;br/&gt;1. the theory of a "correct translation"; 2. a general proof rule for translation validation of "structure preserving"    optimizations;&lt;br/&gt;3. TVOC -- a tool that implements the proof rule on an EPIC compiler (SGI Pro-64) and sends the proof obligations to be verified by a theorem prover (SRI's ICS.) &lt;br/&gt;4. a proof rule for dealing with many "structure modifying"   transformations, mostly loop optimizations; The proposed work extends the previous work as follows:&lt;br/&gt;1.develop the theory, and the supporting tools, that deal with inter- and intra-procedural optimizations.  &lt;br/&gt;2. build a special-purpose theorem prover will be built on top of CVC that will    be tailored to handle the verification conditions generated by the methodology.&lt;br/&gt;3. identify and construct run-time checks of speculative optimizations.  In addition, it will perform a compile-time validation of the transformation.&lt;br/&gt;4.Extend scoppe of project to machine-dependent optimizations, involving instruction scheduling and (software as well as hardware) pipelining.  This project will provide a major step towards ensuring an extremely high level of confidence in compilers in areas, such as safety-critical systems and compilation into silicon, where correctness is of paramount concern. &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/29/2004</MinAmdLetterDate>
<MaxAmdLetterDate>05/10/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0456163</AwardID>
<Investigator>
<FirstName>Lenore</FirstName>
<LastName>Zuck</LastName>
<EmailAddress>lenore@cs.uic.edu</EmailAddress>
<StartDate>09/29/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Chicago</Name>
<CityName>Chicago</CityName>
<ZipCode>606124305</ZipCode>
<PhoneNumber>3129962862</PhoneNumber>
<StreetAddress>809 S. Marshfield Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code/>
<Text/>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

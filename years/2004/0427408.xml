<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR:     Collaborative Research:   (ASE+NHS) - (int):    BFT-LS:   Byzantine Fault Tolerance for Large-Scale, High-Performance Distributed Storage Systems</AwardTitle>
<AwardEffectiveDate>09/15/2004</AwardEffectiveDate>
<AwardExpirationDate>09/30/2011</AwardExpirationDate>
<AwardAmount>273621</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Title:  ITR: COLLABORATIVE RESEARCH - (ASE+NHS) - (int): BFT-LS: Byzantine Fault Tolerance for Large-Scale, High-Performance Distributed Storage Systems&lt;br/&gt;&lt;br/&gt;Reliance on information available over the Internet is increasing every day. At the same time, the number of malicious attacks is growing.  Nevertheless, it is critical that online information be stored reliably: information must not be lost, must be accessible when needed, and what a user sees must be what is actually stored.  These requirements must be satisfied in spite of malicious attacks on the network or the storage nodes.  This project concerns research on a new storage system, BFT-LS (Byzantine Fault Tolerance - Large Scale), that satisfies these requirements.  &lt;br/&gt;&lt;br/&gt;BFT-LS is designed to support five main goals:  (1) Reliability. BFT-LS provides extremely reliable storage: stored objects are not lost, are available when needed, and are uncorrupted, in spite of malicious attacks and Byzantine failures in which a node behaves arbitrarily badly.  (2) Automatic Reconfiguration. BFT-LS is a dynamic system that reconfigures itself automatically, thus enhancing reliability by reducing reliance on operators. BFT-LS also allows nodes to be added to replace failed nodes and to improve service under increasing load.  (3) Application Independence.  BFT-LS provides a flexible interface that meets the needs of many applications, including file systems and databases.  (4) Extended Semantics.  BFT-LS supports atomic transactions that can read and write many objects.  In addition, read-only transactions can run in the recent past yet are guaranteed to see a consistent state.  (5) Efficient access at large scale. BFT-LS is intended to run efficiently at very large scale: it must store a vast quantity of state that is accessed by huge numbers of users who are physically located all over the world. It provides an infrastructure that allows clients to us data cached nearby, rather than communicating with far-away storage nodes.  Nearby nodes aren't trusted, however; instead a new reliable stream mechanism ensures data validity.&lt;br/&gt;&lt;br/&gt;BFT-LS is expected to provide greater functionality than earlier work while also providing outstanding performance.  Its extended functionality not only requires innovative new solutions in many areas, but also makes the system more generally useful because it can support a wide range of applications.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/07/2004</MinAmdLetterDate>
<MaxAmdLetterDate>09/07/2010</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0427408</AwardID>
<Investigator>
<FirstName>Liuba</FirstName>
<LastName>Shrira</LastName>
<EmailAddress>Liuba@cs.brandeis.edu</EmailAddress>
<StartDate>09/07/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Brandeis University</Name>
<CityName>WALTHAM</CityName>
<ZipCode>024532728</ZipCode>
<PhoneNumber>7817362121</PhoneNumber>
<StreetAddress>415 SOUTH ST MAILSTOP 116</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7314</Code>
<Text>ITR FOR NATIONAL PRIORITIES</Text>
</ProgramElement>
<ProgramElement>
<Code>7371</Code>
<Text>CYBER TRUST</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

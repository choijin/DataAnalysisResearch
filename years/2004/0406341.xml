<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:    NGS:     Dynamic Runtime and Compilation Support for I/O-Intensive Applications</AwardTitle>
<AwardEffectiveDate>08/01/2004</AwardEffectiveDate>
<AwardExpirationDate>07/31/2008</AwardExpirationDate>
<AwardTotalIntnAmount>336498.00</AwardTotalIntnAmount>
<AwardAmount>336498</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anita La Salle</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Abstract, CNS-0406341&lt;br/&gt;&lt;br/&gt;Tera-scale high-performance computing has enabled scientists to tackle very large and computationally challenging problems, such as those found in the scientific computing domain.  However, as computing scales to levels never seen before, it also becomes extremely data intensive and I/O intensive. Thus, I/O is becoming a major bottleneck, thereby slowing the expected pace of scientific discovery and analysis of data. Furthermore, in order to cope with larger problems and data sizes, models and applications are being designed to be dynamic in nature. That is, the applications are dynamic both in terms of their computation patterns as well as data access patterns. Due to the complexities of systems and applications, it is, therefore, very important to address research issues and develop dynamic techniques at the level of runtime systems and compilers to scale I/O in the right proportions. &lt;br/&gt;&lt;br/&gt;Technical Merit:&lt;br/&gt;&lt;br/&gt;The objectives of this project are to design and develop next generation software techniques to address the data, I/O, and storage bottlenecks for large-scale scientific applications. Particularly, this project aims to investigate dynamic runtime and compilation techniques for scalable I/O optimizations for largescale systems. Another important aspect  will be to drive these optimizations by learning and characterizing performance of I/O and data accesses, and subsequently using those to develop rules that will be used by dynamic runtime and compilation systems to enable high-performance I/O. Current state-of-the-art compiler support for I/O-intensive applications is tremendously lacking. Runtime needs of many large-scale I/O-intensive applications can benefit a lot from a robust dynamic compilation and linking infrastructure. The specific objectives of this project are:&lt;br/&gt;&lt;br/&gt;. Developing an understanding of dynamically varying data access needs of I/O-intensive applications,&lt;br/&gt;&lt;br/&gt;. Capturing dynamic access patterns and application steering information at runtime within a metadata manager,&lt;br/&gt;&lt;br/&gt;. Designing and implementing dynamic compilation techniques based on the runtime access patterns&lt;br/&gt;and performance statistics collected by the metadata manager,&lt;br/&gt;&lt;br/&gt;. Designing and implementing a layout manager that collects storage format (layout) suggestions from multiple concurrently executing applications and determines the globally acceptable storage layouts for disk-resident and tape-resident data,&lt;br/&gt;&lt;br/&gt;. Designing and implementing a high-level, dynamic, easy-to-use I/O library that can be invoked by the dynamic compiler/linker,&lt;br/&gt;&lt;br/&gt;. Investigating what types of user-specified hints can be passed to the runtime system/compiler, and&lt;br/&gt;how they can be incorporated to reduce the overheads associated with dynamic compilation,&lt;br/&gt;&lt;br/&gt;. Evaluating the performance of the developed dynamic compilation/linking infrastructure under&lt;br/&gt;realistic I/O-intensive workloads and quantifying the runtime overheads associated with dynamic&lt;br/&gt;compilation, and&lt;br/&gt;&lt;br/&gt;. Providing the developed infrastructure and experimental findings in the public domain, and&lt;br/&gt;incorporating the research findings into the undergraduate and graduate curriculum.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/25/2004</MinAmdLetterDate>
<MaxAmdLetterDate>06/29/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0406341</AwardID>
<Investigator>
<FirstName>Alok</FirstName>
<LastName>Choudhary</LastName>
<EmailAddress>choudhar@ece.northwestern.edu</EmailAddress>
<StartDate>06/25/2004</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northwestern University</Name>
<CityName>Chicago</CityName>
<ZipCode>606114579</ZipCode>
<PhoneNumber>3125037955</PhoneNumber>
<StreetAddress>750 N. Lake Shore Drive</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2884</Code>
<Text>NEXT GENERATION SOFTWARE PROGR</Text>
</ProgramElement>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

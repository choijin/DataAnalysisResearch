<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: A Framework for Bijective Data Transformations</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2010</AwardEffectiveDate>
<AwardExpirationDate>01/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>97500.00</AwardTotalIntnAmount>
<AwardAmount>97500</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A relatively small number of universal data types are used as basic building blocks in programming languages corresponding to a few well tested mathematical abstractions. This project is about structuring equivalences between them as bijective data type transformations connecting computational objects widely used by computer scientists and mathematicians, like sequences, sets, trees, logic circuits, graphs. An implementation of these transformations will be built in the form of an open source Data Transformation Library. It is also planned to make available the software in the form of a Java applet and a Mathematica notebook, having as broader impact various teaching applications and support for experimenting with data transformations in an intuitive, visual framework.&lt;br/&gt;&lt;br/&gt;The PI's recent work has showed that these bijections can be organized naturally as a finite groupoid with objects provided by the data types and morphisms provided by their transformations. The project plans to extend these encodings into a comprehensive data transformation framework providing a uniform view of the basic building blocks of various computational artifacts. It also plans exploring the transfer between data types of inductive definitions of their fundamental operations, opening the possibility to derive interesting new algorithms. As a proof of concept, algorithms performing arbitrary size arithmetic computations using symbolic representations like trees or graphs will be obtained. In a broader sense, the project is likely to bring significant simplifications to the ontology shared by computer science and engineering fields, resulting in better communication and synergy between them.</AbstractNarration>
<MinAmdLetterDate>08/12/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/12/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018172</AwardID>
<Investigator>
<FirstName>Paul</FirstName>
<LastName>Tarau</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Paul Tarau</PI_FULL_NAME>
<EmailAddress>paul.tarau@unt.edu</EmailAddress>
<PI_PHON>9403007171</PI_PHON>
<NSF_ID>000361730</NSF_ID>
<StartDate>08/12/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of North Texas</Name>
<CityName>Denton</CityName>
<ZipCode>762035017</ZipCode>
<PhoneNumber>9405653940</PhoneNumber>
<StreetAddress>1155 Union Circle #305250</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>614168995</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NORTH TEXAS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>064117963</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of North Texas]]></Name>
<CityName>Denton</CityName>
<StateCode>TX</StateCode>
<ZipCode>762035017</ZipCode>
<StreetAddress><![CDATA[1155 Union Circle #305250]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~97500</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;A relatively small number of universal data types are used as basic building blocks in programming languages corresponding to a few well tested mathematical abstractions. This project organizes equivalences between them as bijective data type transformations connecting computational objects widely used by computer scientists and mathematicians, like sequences, sets, trees, logic circuits, graphs. <br /><br />An implementation of these transformations has been built in the form of an open source data transformation Library available from http://logic.cse.unt.edu/tarau/Research/bijectiveNSF/ISO.hs and documented as a literate program at http://logic.cse.unt.edu/tarau/Research/bijectiveNSF/ISO.pdf.<br /><br />Various teaching applications and support for experimenting with data transformations have been integrated in a new PhD-level Computational Mathematics course.<br /><br />We have shown that these bijections can be organized naturally as a groupoid with objects provided by the data types and morphisms provided by their transformations. The project has extended these encodings into a comprehensive data transformation framework providing a uniform view of the basic building blocks of various computational artifacts. <br /><br />Of special interest are bijections between term algebras and the set of natural numbers (Goedel numberings). We have released an open source Scala package, available from http://code.google.com/p/bijective-goedel-numberings/ which provides a bijective size-preserving encoding of such term algebras.<br /><br />We have also explored the transfer between data types of inductive definitions of their fundamental operations, opening the possibility to derive interesting new algorithms. For instance, algorithms performing arbitrary size arithmetic computations using symbolic representations like trees or graphs have been obtained. An implementation is available at http://logic.cse.unt.edu/tarau/Research/bijectiveNSF/compWithTypes.hs, documented as a literate program at http://logic.cse.unt.edu/tarau/Research/bijectiveNSF/compWithTypes.pdf.<br /><br />In a broader sense, the project has brought significant simplifications to the ontology shared by computer science and engineering fields, resulting in better communication and synergy between them.</p><br> <p>            Last Modified: 04/25/2013<br>      Modified by: Paul&nbsp;Tarau</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  A relatively small number of universal data types are used as basic building blocks in programming languages corresponding to a few well tested mathematical abstractions. This project organizes equivalences between them as bijective data type transformations connecting computational objects widely used by computer scientists and mathematicians, like sequences, sets, trees, logic circuits, graphs.   An implementation of these transformations has been built in the form of an open source data transformation Library available from http://logic.cse.unt.edu/tarau/Research/bijectiveNSF/ISO.hs and documented as a literate program at http://logic.cse.unt.edu/tarau/Research/bijectiveNSF/ISO.pdf.  Various teaching applications and support for experimenting with data transformations have been integrated in a new PhD-level Computational Mathematics course.  We have shown that these bijections can be organized naturally as a groupoid with objects provided by the data types and morphisms provided by their transformations. The project has extended these encodings into a comprehensive data transformation framework providing a uniform view of the basic building blocks of various computational artifacts.   Of special interest are bijections between term algebras and the set of natural numbers (Goedel numberings). We have released an open source Scala package, available from http://code.google.com/p/bijective-goedel-numberings/ which provides a bijective size-preserving encoding of such term algebras.  We have also explored the transfer between data types of inductive definitions of their fundamental operations, opening the possibility to derive interesting new algorithms. For instance, algorithms performing arbitrary size arithmetic computations using symbolic representations like trees or graphs have been obtained. An implementation is available at http://logic.cse.unt.edu/tarau/Research/bijectiveNSF/compWithTypes.hs, documented as a literate program at http://logic.cse.unt.edu/tarau/Research/bijectiveNSF/compWithTypes.pdf.  In a broader sense, the project has brought significant simplifications to the ontology shared by computer science and engineering fields, resulting in better communication and synergy between them.       Last Modified: 04/25/2013       Submitted by: Paul Tarau]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

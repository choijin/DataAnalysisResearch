<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>III-COR-Medium: Design and Implementation of the DBO Database System</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2009</AwardEffectiveDate>
<AwardExpirationDate>07/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>722598.00</AwardTotalIntnAmount>
<AwardAmount>722598</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Frank Olken</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Commercial and government entities now spend around $10 billion per year on software and hardware systems for managing "data warehouses", which are very large electronic data archives. Despite the size and importance of this marketplace, existing data management solutions can be painfully slow (see, for example, www.tpc.org/tpch/ for recent benchmarking results). It is now possible to spend millions of dollars of hardware and software for a system that still takes hours to answer simple analytic questions. This is unfortunate, because there is much knowledge to be gained by interactive exploration of electronic archives.  Very long processing times make it likely that the data will stored away, and never looked at again.&lt;br/&gt;&lt;br/&gt;The DBO Database System project is concerned with the design and development of a unique system called DBO. Like traditional relational database systems, DBO can run database queries from start to finish and produce exact answers over very large archives. However, unlike any existing research or production system, DBO uses sampling algorithms to produce a statistical estimate for the final query answer at all times throughout query execution. An example of the sort of estimate produced by DBO is, "There is a 95% chance that the true answer is between $1.75 million an $1.80 million".  The longer a user waits, the more accurate the estimate becomes.  The potential benefit of such an estimate is that a user can stop execution whenever satisfied with the accuracy of the estimate, which may translate to dramatic time savings during exploratory processing. In this way, the goal of the DBO project is to render interactive data analysis a reality, even over the largest databases.&lt;br/&gt;&lt;br/&gt;All scientific and technical materials produced by the project, as well as any software available for download, can be obtained from http://www.cise.ufl.edu/~cjermain/DBO .</AbstractNarration>
<MinAmdLetterDate>07/23/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/01/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1007062</AwardID>
<Investigator>
<FirstName>Christopher</FirstName>
<LastName>Jermaine</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Christopher M Jermaine</PI_FULL_NAME>
<EmailAddress>Christopher.m.jermaine@rice.edu</EmailAddress>
<PI_PHON>7133483028</PI_PHON>
<NSF_ID>000439407</NSF_ID>
<StartDate>07/23/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>William Marsh Rice University</Name>
<CityName>Houston</CityName>
<ZipCode>770051827</ZipCode>
<PhoneNumber>7133484820</PhoneNumber>
<StreetAddress>6100 MAIN ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>050299031</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WILLIAM MARSH RICE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>050299031</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[William Marsh Rice University]]></Name>
<CityName>Houston</CityName>
<StateCode>TX</StateCode>
<ZipCode>770051827</ZipCode>
<StreetAddress><![CDATA[6100 MAIN ST]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~22116</FUND_OBLG>
<FUND_OBLG>2009~474099</FUND_OBLG>
<FUND_OBLG>2011~226383</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="tinyMCEContent"> <p>Data management systems have been in widespread use for decades, but recently a new class of applications termed&nbsp;<em>analytic processing</em>&nbsp;applications have become prevalent. In analytic processing, data is aggregated into a large data repository (somtimes called a&nbsp;<em>data warehouse</em>) and used for subsequent analysis---figuring out how customers react to sales promotions, how websites are viewed, how and why customers complain, and so on. It is not surprising that database and data management technology designed 30 years ago to ensure atomicity and correctness under concurrent reads and writes don't work that well in terms of performance when it is used to analyze 100 terabytes of analytic data at an aggregate level. This has resulted in significant pain in practice, as well as the development of an entire "NoSQL" ecosystem that attempts to use non-reational tools such as MapReduce to perform large-scale analytics.</p> <p>One way to address the pain is to more towards&nbsp;<em>online query processing</em>.&nbsp;<em>Online aggregation</em>&nbsp;is one well-known type of online query processing. In online processing, the database or data management system makes use of randomized algorithms to come up with a quick guess as to the answer to a query. As the user waits, the guess is refined, until eventually the "guess" is totally accurate as query processing is completed. This has the advantage of allowing the user to stop waiting for the final query answer as soon as the guess is "good enough". The potential benefit should be obvious: if it takes ten hours to get the exact answer, but only five minutes to get a high-quality guess, then we have saved a huge amount of both computer and user time. Analytic queries over a data warehouse are particularly amenable to this sort of approximation because the questions that are asked are almost always statistical in nature.</p> <p>There have been two main research efforts associated with the project.</p> <p>Our first main research effort was concerned with designing, implementing, and evaluating the randomized algorithms that will allow for accurate, statistically meaningful guesses to analytic database queries from startup thru completion. Taken together, the implementation of these algorithms form a system called&nbsp;<em>DBO</em>.</p> <p>Our second main research effort was concerned with implementing and designing the parallel database platform that DBO will run on top of, which we call&nbsp;<em>DataPath</em>.&nbsp;</p> <p>Over the lifetime of the project, we publised papers on both DBO and DataPath, as well as online aggregation in general. We considered issues such as how to process online aggregation queries in a distributed environment (on top of a MapReduce system) as well as how to implement very fast query processing engines on top of modern, inexpensive server machines. In addition, we have released the DataPath code for public use.&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> </div> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 04/08/2014<br>      Modified by: Christopher&nbsp;M&nbsp;Jermaine</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Data management systems have been in widespread use for decades, but recently a new class of applications termed analytic processing applications have become prevalent. In analytic processing, data is aggregated into a large data repository (somtimes called a data warehouse) and used for subsequent analysis---figuring out how customers react to sales promotions, how websites are viewed, how and why customers complain, and so on. It is not surprising that database and data management technology designed 30 years ago to ensure atomicity and correctness under concurrent reads and writes don't work that well in terms of performance when it is used to analyze 100 terabytes of analytic data at an aggregate level. This has resulted in significant pain in practice, as well as the development of an entire "NoSQL" ecosystem that attempts to use non-reational tools such as MapReduce to perform large-scale analytics.  One way to address the pain is to more towards online query processing. Online aggregation is one well-known type of online query processing. In online processing, the database or data management system makes use of randomized algorithms to come up with a quick guess as to the answer to a query. As the user waits, the guess is refined, until eventually the "guess" is totally accurate as query processing is completed. This has the advantage of allowing the user to stop waiting for the final query answer as soon as the guess is "good enough". The potential benefit should be obvious: if it takes ten hours to get the exact answer, but only five minutes to get a high-quality guess, then we have saved a huge amount of both computer and user time. Analytic queries over a data warehouse are particularly amenable to this sort of approximation because the questions that are asked are almost always statistical in nature.  There have been two main research efforts associated with the project.  Our first main research effort was concerned with designing, implementing, and evaluating the randomized algorithms that will allow for accurate, statistically meaningful guesses to analytic database queries from startup thru completion. Taken together, the implementation of these algorithms form a system called DBO.  Our second main research effort was concerned with implementing and designing the parallel database platform that DBO will run on top of, which we call DataPath.   Over the lifetime of the project, we publised papers on both DBO and DataPath, as well as online aggregation in general. We considered issues such as how to process online aggregation queries in a distributed environment (on top of a MapReduce system) as well as how to implement very fast query processing engines on top of modern, inexpensive server machines. In addition, we have released the DataPath code for public use.                     Last Modified: 04/08/2014       Submitted by: Christopher M Jermaine]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: Variability-Aware Software for Efficient Computing with Nanoscale Devices</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>3538000.00</AwardTotalIntnAmount>
<AwardAmount>3569996</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Abstract: The Variability Expedition&lt;br/&gt;Project: Variability-Aware Software for Efficient Computing with Nanoscale Devices&lt;br/&gt;&lt;br/&gt;As semiconductor manufacturers build ever smaller components, circuits and chips at the nano scale become less reliable and more expensive to produce ? no longer behaving like precisely chiseled machines with tight tolerances. Modern computing is effectively ignorant of the variability in behavior of underlying system components from device to device, their wear-out over time, or the environment in which the computing system is placed. This makes them expensive, fragile and vulnerable to even the smallest changes in the environment or component failures. We envision a computing world where system components -- led by proactive software -- routinely monitor, predict and adapt to the variability of manufactured systems. Changing the way software interacts with hardware offers the best hope for perpetuating the fundamental gains in computing performance at lower cost of the past 40 years. The Variability Expedition fundamentally rethinks the rigid, deterministic hardware-software interface, to propose a new class of computing machines that are not only adaptive but also highly energy efficient. These machines will be able to discover the nature and extent of variation in hardware, develop abstractions to capture these variations, and drive adaptations in the software stack from compilers, runtime to applications. The resulting computer systems will work and continue working while using components that vary in performance or grow less reliable over time and across technology generations. A fluid software-hardware interface will thus mitigate the variability of manufactured systems and make machines robust, reliable and responsive to the changing operating conditions.&lt;br/&gt;&lt;br/&gt;The Variability Expedition marshals the resources of researchers at the California Institute for Telecommunications and Information Technology (Calit2) at UC San Diego and UC Irvine, as well as UCLA, University of Michigan, Stanford and University of Illinois at Urbana-Champaign. With expertise in process technology, architecture, and design tools on the hardware side, and in operating systems, compilers and languages on the software side, the team also has the system implementation and applications expertise needed to drive and evaluate the research as well as transition the research accomplishments into practice via application drivers in wireless sensing, software radio and mobile platforms. &lt;br/&gt;&lt;br/&gt;A successful Expedition will dramatically change the computing landscape. By re-architecting software to work in a world where monitoring and adaptation are the norm, it will achieve more robust, efficient and affordable systems that are able to predict and withstand not only hardware failures, but other kinds of software bugs or even attacks. The new paradigm will apply across the entire spectrum of embedded, mobile, desktop and server-class computing machines, yielding particular gains in sensor information processing, multimedia rendering, software radios, search, medical imaging and other important applications. Transforming the relationship between hardware and software presents valuable opportunities to integrate research and education, and this Expedition will build on established collaborations with educator-partners in formal and informal arenas to promote interdisciplinary teaching, training, learning and research. The team has built strong industrial and community outreach ties to ensure success and reach out to high-school students through a combination of tutoring and summer school programs. The Variability Expedition will engage undergraduate and graduate students in software, hardware and systems research, while promoting participation by underrepresented groups at all levels and broadly disseminating results within academia and industry.</AbstractNarration>
<MinAmdLetterDate>08/19/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/11/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1029030</AwardID>
<Investigator>
<FirstName>Mani</FirstName>
<LastName>Srivastava</LastName>
<PI_MID_INIT>B</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mani B Srivastava</PI_FULL_NAME>
<EmailAddress>mbs@ucla.edu</EmailAddress>
<PI_PHON>3102672098</PI_PHON>
<NSF_ID>000468770</NSF_ID>
<StartDate>08/19/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Puneet</FirstName>
<LastName>Gupta</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Puneet Gupta</PI_FULL_NAME>
<EmailAddress>puneet@ee.ucla.edu</EmailAddress>
<PI_PHON>3108251376</PI_PHON>
<NSF_ID>000082779</NSF_ID>
<StartDate>08/19/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Lara</FirstName>
<LastName>Dolecek</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Lara Dolecek</PI_FULL_NAME>
<EmailAddress>dolecek@ee.ucla.edu</EmailAddress>
<PI_PHON>3107940102</PI_PHON>
<NSF_ID>000541683</NSF_ID>
<StartDate>08/19/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Los Angeles</Name>
<CityName>LOS ANGELES</CityName>
<ZipCode>900951406</ZipCode>
<PhoneNumber>3107940102</PhoneNumber>
<StreetAddress>10889 Wilshire Boulevard</StreetAddress>
<StreetAddress2><![CDATA[Suite 700]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>33</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA33</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>092530369</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, LOS ANGELES</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Los Angeles]]></Name>
<CityName>LOS ANGELES</CityName>
<StateCode>CA</StateCode>
<ZipCode>900951406</ZipCode>
<StreetAddress><![CDATA[10889 Wilshire Boulevard]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>33</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA33</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>7723</Code>
<Text>Expeditions in Computing</Text>
</ProgramElement>
<ProgramReference>
<Code>7723</Code>
<Text>EXPERIMENTAL EXPEDITIONS</Text>
</ProgramReference>
<ProgramReference>
<Code>7925</Code>
<Text>LARGE PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramReference>
<ProgramReference>
<Code>7969</Code>
<Text>FY 2010 Funding for PTR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~2122800</FUND_OBLG>
<FUND_OBLG>2011~12000</FUND_OBLG>
<FUND_OBLG>2012~1415200</FUND_OBLG>
<FUND_OBLG>2014~19996</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-8683c05c-8cc7-53c4-c3b2-28829b89772b">&nbsp;</span></p> <p dir="ltr"><span>Activities in the Variability Expedition, &nbsp;a multi-institutional collaborative project, focused on developing hardware and software technologies, algorithms, and foundational theories necessary for a new class of computing machines that operate efficiently and reliably in the presence of unprecedented variations in their hardware characteristics arising from manufacturing, operating conditions, application workloads, and aging. During the project, the UCLA researchers made the following contributions towards the project&rsquo;s objectives, and developed tools, methods, and software artifacts that have been adopted by companies and used by other researchers.</span></p> <p dir="ltr"><strong>1. Computing platforms capable of sensing variations</strong></p> <p dir="ltr"><span>For software to adapt to variations in the </span><span>characteristics of </span><span>underlying </span><span>hardware, a computer must have circuits that can sense those variations. </span><span>Project researchers developed a variety of delay variation sensing schemes and tested them in simulation as well as in silicon prototypes (Figure 1)). First, they developed &lsquo;</span><span>Design Dependent Ring Oscillators&rsquo;</span><span> &nbsp;and automated algorithms to synthesize them as an inexpensive circuit structure that mimics performance of the actual chip. Second, they developed &lsquo;</span><span>SlackProbe&rsquo;</span><span> scheme for generating minimum number of in-situ delay monitors which can minimize monitoring overhead by over 10x as observed on commercial microprocessor designs.</span></p> <p dir="ltr"><strong>2. Variation-aware Memory Management</strong></p> <p dir="ltr"><span>Memory circuits and subsystems where software stores intermediate results of computation are particularly susceptible to variations which cause degradation in memory reliability and energy efficient. Project researchers developed a suite of techniques (Figure 2) to opportunistically exploit memory variability for energy savings and cope with memory errors when they inevitably occur. First, they developed &lsquo;</span><span>ViPZonE&rsquo;</span><span> and &lsquo;</span><span>DPCS&rsquo;</span><span> which save energy in off-chip main memory and on-chip cache memories, respectively. Second, they developed &lsquo;</span><span>X-Mem</span><span>&rsquo; a new extensible memory characterization tool and &lsquo;</span><span>MEMRES&rsquo;</span><span> a fast large scale memory fault simulator. Finally, they demonstrated that </span><span>correctable</span><span> memory errors can have a significant impact on performance of datacenter computing systems.</span></p> <p dir="ltr"><strong>3. Theory-informed coding algorithms to exploit variations in memory and storage</strong></p> <p dir="ltr"><span>Project researchers developed a broad repertoire of novel error correction schemes, including tensor product codes and non-binary coding, to exploit variations in memory and storage. These schemes are based on advanced mathematical techniques introduced by them using tools from abstract algebra, combinatorics, and graphical methods. In contrast to long standing, conventional information theoretic methods that assume symmetric error correction, these new schemes explicitly take advantage of the underlying hardware variability to design provably better error corrections schemes. They offer impressive lifetime improvements (Figure 3) &nbsp;in modern memory devices, as well as theoretical guarantees that can be applied in other applications.</span></p> <p dir="ltr"><strong>4. Variability-aware duty-cycling for ultra-low-power embedded sensors</strong></p> <p dir="ltr"><span>UCLA researchers experimentally identified that manufacturing variations in turn result in more than an order of magnitude variation in sleep-mode power consumption of embedded computing devices such as wireless sensors. Based on this insight they developed open-source software packa </span><span>&nbsp;VaRTOS (a real-time operating system kernel that provides abstractions that explicitly handle idle and active power variations), ViRUS (a run-time for supporting variability aware applications based on the concept of virtual function replacement), and VarEmu (a simulation framework for the evaluation of variability-aware software techniques).</span></p> <p dir="ltr"><strong>5. Context variation aware software stack for smartphones</strong></p> <p dir="ltr"><span>Researchers at UCLA developed CAreDroid, an open-source software framework for enabling &nbsp;&nbsp;applications under Android mobile operating system to efficiently adapt to variations in platform resources and context. CAreDroid (Figure 5), &nbsp;implemented as part of the Android runtime system, allows developers to focus on the application logic by decoupling application logic from run-time tasks such as monitoring of user and platform state, and adaptation of process, battery, and other resources. It enables applications that are more energy efficient, robust, and easier to develop.</span></p> <p dir="ltr"><strong>6. Los Angeles Computing Circle</strong></p> <p><span>As part of the project the team members at UCLA created The Los Angeles Computing Circle, (</span><a href="http://lacc.ee.ucla.edu"><span>http://lacc.ee.ucla.edu</span></a><span>) an outreach program organized, supervised, and mentored by faculty members and graduate student volunteers with an objective of engaging and mentoring younger students for careers in computing and engineering. LACC, organized each summer as a sequence of self-contained modules, &nbsp;provides Grade 9-12 students an opportunity to learn advanced concepts in computing via lectures and hands-on design and programming laboratories. The program complements and go beyond the more abstract exposure to computing that the traditional high school computer science curriculum offers by way of AP Computer Science and related courses. Alumni of LACC have gone on to pursue advanced STEM degrees at top universities.</span></p> <p>&nbsp;</p><br> <p>            Last Modified: 02/12/2018<br>      Modified by: Mani&nbsp;B&nbsp;Srivastava</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488571349_screenshot_928--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488571349_screenshot_928--rgov-800width.jpg" title="Computing platforms capable of sensing variations"><img src="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488571349_screenshot_928--rgov-66x44.jpg" alt="Computing platforms capable of sensing variations"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Figure 1: Computing platforms capable of sensing variations</div> <div class="imageCredit">Puneet Gupta</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Mani&nbsp;B&nbsp;Srivastava</div> <div class="imageTitle">Computing platforms capable of sensing variations</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488622220_screenshot_929--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488622220_screenshot_929--rgov-800width.jpg" title="Opportunistic exploitation of memory variability for energy savings and tolerance to memory errors"><img src="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488622220_screenshot_929--rgov-66x44.jpg" alt="Opportunistic exploitation of memory variability for energy savings and tolerance to memory errors"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Figure 2: Opportunistic exploitation of memory variability for energy savings and tolerance to memory errors</div> <div class="imageCredit">Puneet Gupta</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Mani&nbsp;B&nbsp;Srivastava</div> <div class="imageTitle">Opportunistic exploitation of memory variability for energy savings and tolerance to memory errors</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488669877_screenshot_930--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488669877_screenshot_930--rgov-800width.jpg" title="Lifetime improvements  in modern memory devices from new coding methods"><img src="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488669877_screenshot_930--rgov-66x44.jpg" alt="Lifetime improvements  in modern memory devices from new coding methods"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Figure 3: Lifetime improvements  in modern memory devices from new coding methods</div> <div class="imageCredit">Lara Dolecek</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Mani&nbsp;B&nbsp;Srivastava</div> <div class="imageTitle">Lifetime improvements  in modern memory devices from new coding methods</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488730119_screenshot_931--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488730119_screenshot_931--rgov-800width.jpg" title="Software tool for guiding users of VaRTOS"><img src="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488730119_screenshot_931--rgov-66x44.jpg" alt="Software tool for guiding users of VaRTOS"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Figure 4: Software tool for guiding users of VaRTOS</div> <div class="imageCredit">Lucas Wanner & Paul Martin</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Mani&nbsp;B&nbsp;Srivastava</div> <div class="imageTitle">Software tool for guiding users of VaRTOS</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488790238_screenshot_932--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488790238_screenshot_932--rgov-800width.jpg" title="CAreDroid Open-source Software Framework for Context Adaptive Applications"><img src="/por/images/Reports/POR/2018/1029030/1029030_10021045_1518488790238_screenshot_932--rgov-66x44.jpg" alt="CAreDroid Open-source Software Framework for Context Adaptive Applications"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Figure 5: CAreDroid Open-source Software Framework for Context Adaptive Applications</div> <div class="imageCredit">Salma Elmalaki</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Mani&nbsp;B&nbsp;Srivastava</div> <div class="imageTitle">CAreDroid Open-source Software Framework for Context Adaptive Applications</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Activities in the Variability Expedition,  a multi-institutional collaborative project, focused on developing hardware and software technologies, algorithms, and foundational theories necessary for a new class of computing machines that operate efficiently and reliably in the presence of unprecedented variations in their hardware characteristics arising from manufacturing, operating conditions, application workloads, and aging. During the project, the UCLA researchers made the following contributions towards the project?s objectives, and developed tools, methods, and software artifacts that have been adopted by companies and used by other researchers. 1. Computing platforms capable of sensing variations For software to adapt to variations in the characteristics of underlying hardware, a computer must have circuits that can sense those variations. Project researchers developed a variety of delay variation sensing schemes and tested them in simulation as well as in silicon prototypes (Figure 1)). First, they developed ?Design Dependent Ring Oscillators?  and automated algorithms to synthesize them as an inexpensive circuit structure that mimics performance of the actual chip. Second, they developed ?SlackProbe? scheme for generating minimum number of in-situ delay monitors which can minimize monitoring overhead by over 10x as observed on commercial microprocessor designs. 2. Variation-aware Memory Management Memory circuits and subsystems where software stores intermediate results of computation are particularly susceptible to variations which cause degradation in memory reliability and energy efficient. Project researchers developed a suite of techniques (Figure 2) to opportunistically exploit memory variability for energy savings and cope with memory errors when they inevitably occur. First, they developed ?ViPZonE? and ?DPCS? which save energy in off-chip main memory and on-chip cache memories, respectively. Second, they developed ?X-Mem? a new extensible memory characterization tool and ?MEMRES? a fast large scale memory fault simulator. Finally, they demonstrated that correctable memory errors can have a significant impact on performance of datacenter computing systems. 3. Theory-informed coding algorithms to exploit variations in memory and storage Project researchers developed a broad repertoire of novel error correction schemes, including tensor product codes and non-binary coding, to exploit variations in memory and storage. These schemes are based on advanced mathematical techniques introduced by them using tools from abstract algebra, combinatorics, and graphical methods. In contrast to long standing, conventional information theoretic methods that assume symmetric error correction, these new schemes explicitly take advantage of the underlying hardware variability to design provably better error corrections schemes. They offer impressive lifetime improvements (Figure 3)  in modern memory devices, as well as theoretical guarantees that can be applied in other applications. 4. Variability-aware duty-cycling for ultra-low-power embedded sensors UCLA researchers experimentally identified that manufacturing variations in turn result in more than an order of magnitude variation in sleep-mode power consumption of embedded computing devices such as wireless sensors. Based on this insight they developed open-source software packa  VaRTOS (a real-time operating system kernel that provides abstractions that explicitly handle idle and active power variations), ViRUS (a run-time for supporting variability aware applications based on the concept of virtual function replacement), and VarEmu (a simulation framework for the evaluation of variability-aware software techniques). 5. Context variation aware software stack for smartphones Researchers at UCLA developed CAreDroid, an open-source software framework for enabling   applications under Android mobile operating system to efficiently adapt to variations in platform resources and context. CAreDroid (Figure 5),  implemented as part of the Android runtime system, allows developers to focus on the application logic by decoupling application logic from run-time tasks such as monitoring of user and platform state, and adaptation of process, battery, and other resources. It enables applications that are more energy efficient, robust, and easier to develop. 6. Los Angeles Computing Circle  As part of the project the team members at UCLA created The Los Angeles Computing Circle, (http://lacc.ee.ucla.edu) an outreach program organized, supervised, and mentored by faculty members and graduate student volunteers with an objective of engaging and mentoring younger students for careers in computing and engineering. LACC, organized each summer as a sequence of self-contained modules,  provides Grade 9-12 students an opportunity to learn advanced concepts in computing via lectures and hands-on design and programming laboratories. The program complements and go beyond the more abstract exposure to computing that the traditional high school computer science curriculum offers by way of AP Computer Science and related courses. Alumni of LACC have gone on to pursue advanced STEM degrees at top universities.          Last Modified: 02/12/2018       Submitted by: Mani B Srivastava]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

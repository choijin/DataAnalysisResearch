<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:  "Hands-On? Collaborative Reasoning across the Curriculum</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>47056.00</AwardTotalIntnAmount>
<AwardAmount>47056</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Suzanne Westbrook</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Software is ubiquitous, yet its development remains error-prone.  Software defects are expensive to fix and can result in mission failure, infrastructure damage, and loss of life.  To avoid another generation of software failure, our students must learn the skills necessary to reason rigorously about the software they develop.  This project is developing student exercises to teach principles of mathematical reasoning in multiple courses across the computer science curriculum.  Previous results suggest this approach increases student learning and attitude towards analytical reasoning.&lt;br/&gt;&lt;br/&gt;Expected outcomes include several web-based learning modules called Reasoning Assistants.  These interactive exercises and tutorials allow students to explore software verification, analytical performance, component-based contracts and testing.  The reasoning assistants are complemented by a collection of in-class collaborative exercises.  Materials are being used and assessed at a diverse set of institutions.  Several hundred students and a dozen faculty are expected to participate.</AbstractNarration>
<MinAmdLetterDate>08/09/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/09/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1020886</AwardID>
<Investigator>
<FirstName>Joan</FirstName>
<LastName>Krone</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Joan Krone</PI_FULL_NAME>
<EmailAddress>krone@denison.edu</EmailAddress>
<PI_PHON>7405876484</PI_PHON>
<NSF_ID>000247970</NSF_ID>
<StartDate>08/09/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Denison University</Name>
<CityName>Granville</CityName>
<ZipCode>430230000</ZipCode>
<PhoneNumber>7405876679</PhoneNumber>
<StreetAddress>100 W. College St.</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>069059111</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>DENISON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>069059111</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Denison University]]></Name>
<CityName>Granville</CityName>
<StateCode>OH</StateCode>
<ZipCode>430230000</ZipCode>
<StreetAddress><![CDATA[100 W. College St.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7492</Code>
<Text>CCLI-Type 2 (Expansion)</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0410</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~47056</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Every area of society depends insome ways on computer technology.&nbsp; Hence, it is important for computer scientists to have formal methods of reasoning about software to deal with two critical issues:&nbsp; There must be a precise specification of what software is supposed to do both from the user and the implementer's point of view, and there must be a way to reason about the software to determine whether it is correct.</p> <p>Our project concerns the need for educating future computer scientists to make them ready to face these two requirement for software.&nbsp; We believe that this means we need to figure out what mathematical reasoning skills our students need and what methods are best for teaching those skills not just in one course, but throughout the computer science curriculum.&nbsp; We also must find ways to assess whether our methods are effective.</p> <p>We have addressed the challenge of teaching mathematical reasoning across the Computer Science curriculum by</p> <p>1.&nbsp; developing a Reasoning Concept Inventory (RCI) which identifies just what topics in mathematical reasoning are necessary for computer scientists.</p> <p>2.&nbsp; preparing materials for teaching the topics identified in the RCI.</p> <p>3.&nbsp; holding several workshops at national and regional conferences to share those materials with computer science faculty from a variety of colleges and universities.</p> <p>4.&nbsp; directing student research in using the materials prepared.</p> <p>5.&nbsp; using the materials in classes to teach mathematical reasoning.</p> <p>6.&nbsp; identifying ways to assess the materials, including pre and post tests for classes using our materials.</p> <p>7.&nbsp; employing collaborative teaching pedagogy to promote understanding of mathematical reasoning concepts.</p> <p>8.&nbsp; cooperating with partners at Clemson who have developed a web IDE for RESOLVE, a language that incorporates mathematics into a programming language to support mathematical reasoning about programs.</p> <p><br />Having carried out these eight activities, we do not see our work as complete, but rather as a beginning for strengthening computer science education on a permanent basis.&nbsp; At several colleges and universities, including&nbsp; Clemson, Indiana Universty SE, Cleveland State University, Denison University, and others, we are now using the materials and tools we have prepared and we are continuing to build on those materials and tools to help out students be prepared to employ good reasoning skills.&nbsp; We also continue to share our materials and tools with interested faculty both through the Clemson web IDE and by conducting workshops and tutorials at appropriate conferences.</p><br> <p>            Last Modified: 10/01/2013<br>      Modified by: Joan&nbsp;Krone</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Every area of society depends insome ways on computer technology.  Hence, it is important for computer scientists to have formal methods of reasoning about software to deal with two critical issues:  There must be a precise specification of what software is supposed to do both from the user and the implementer's point of view, and there must be a way to reason about the software to determine whether it is correct.  Our project concerns the need for educating future computer scientists to make them ready to face these two requirement for software.  We believe that this means we need to figure out what mathematical reasoning skills our students need and what methods are best for teaching those skills not just in one course, but throughout the computer science curriculum.  We also must find ways to assess whether our methods are effective.  We have addressed the challenge of teaching mathematical reasoning across the Computer Science curriculum by  1.  developing a Reasoning Concept Inventory (RCI) which identifies just what topics in mathematical reasoning are necessary for computer scientists.  2.  preparing materials for teaching the topics identified in the RCI.  3.  holding several workshops at national and regional conferences to share those materials with computer science faculty from a variety of colleges and universities.  4.  directing student research in using the materials prepared.  5.  using the materials in classes to teach mathematical reasoning.  6.  identifying ways to assess the materials, including pre and post tests for classes using our materials.  7.  employing collaborative teaching pedagogy to promote understanding of mathematical reasoning concepts.  8.  cooperating with partners at Clemson who have developed a web IDE for RESOLVE, a language that incorporates mathematics into a programming language to support mathematical reasoning about programs.   Having carried out these eight activities, we do not see our work as complete, but rather as a beginning for strengthening computer science education on a permanent basis.  At several colleges and universities, including  Clemson, Indiana Universty SE, Cleveland State University, Denison University, and others, we are now using the materials and tools we have prepared and we are continuing to build on those materials and tools to help out students be prepared to employ good reasoning skills.  We also continue to share our materials and tools with interested faculty both through the Clemson web IDE and by conducting workshops and tutorials at appropriate conferences.       Last Modified: 10/01/2013       Submitted by: Joan Krone]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Medium: Type-Specific Instruction Processing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2011</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>799990.00</AwardTotalIntnAmount>
<AwardAmount>799990</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This research project develops hardware software interfaces to enable standard&lt;br/&gt;software programs to benefit from specialized hardware accelerators.&lt;br/&gt;Standard CPUs are general purpose meaning that they are designed to execute&lt;br/&gt;all types of applications -- from graphics processing in video games to&lt;br/&gt;spreadsheets.  Because of the diversity of workloads they are expected to&lt;br/&gt;execute, general purpose processors can never be overly specialized for any&lt;br/&gt;individual one. By contrast, processors which are tailored to a single&lt;br/&gt;workload or workload domain are narrower in their applicability but more&lt;br/&gt;efficient at executing applications in their target domains.&lt;br/&gt;&lt;br/&gt;This research project examines specialized processors that target abstract&lt;br/&gt;datatypes: moderate to large scale data structures and their associated&lt;br/&gt;operations.  Modern software engineering practice encourages the use of such&lt;br/&gt;abstract types to improve programmer efficiency and software reliability.&lt;br/&gt;Abstract datatype processors thus align with these practices making the&lt;br/&gt;mapping of software to hardware intuitive and streamlined.  By delivering&lt;br/&gt;energy-efficient, application-specific hardware in an easy-to-program fashion,&lt;br/&gt;this research empowers programmers to write faster software that consumes less&lt;br/&gt;energy.&lt;br/&gt;&lt;br/&gt;The research activities span three fields of computer science: Hardware system&lt;br/&gt;and architecture research is carried out in software simulation.  This portion&lt;br/&gt;of the research explores multiple aspects of the hardware system including&lt;br/&gt;efficient implementations of software-style polymorphism and mechanisms to&lt;br/&gt;enforce data encapsulation.  The project is grounded in a specific,&lt;br/&gt;performance-critical, real-world problem of database query processing.  This&lt;br/&gt;component of the research identifies target types for hardware acceleration&lt;br/&gt;that are used in common, complex database operations such as range&lt;br/&gt;partitioning.  Performance results will be obtained both by direct measurement&lt;br/&gt;and by simulation.  Finally, the compiler segment of the project develops&lt;br/&gt;compiler techniques to link high-level languages to the accelerators available&lt;br/&gt;on the target hardware system.  The compiler adapts software at runtime to&lt;br/&gt;best utilize the available accelerators and to partition code among&lt;br/&gt;general-purpose and specialized processing cores.  &lt;br/&gt;&lt;br/&gt;As power and energy become the most critical resource in computing systems,&lt;br/&gt;mechanisms to conserve these resources have come under significant scientific&lt;br/&gt;scrutiny.  The broader impact of this research project is to harness software&lt;br/&gt;abstractions in specialized, energy efficient hardware.  By prioritizing&lt;br/&gt;programmability and efficiency equally, this research strives for usable,&lt;br/&gt;energy-efficient, next-generation computing platforms.  As a first area of&lt;br/&gt;application, this project targets databases, the software engines that store&lt;br/&gt;and index and compute on society's information.</AbstractNarration>
<MinAmdLetterDate>07/28/2011</MinAmdLetterDate>
<MaxAmdLetterDate>09/19/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1065338</AwardID>
<Investigator>
<FirstName>Kenneth</FirstName>
<LastName>Ross</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kenneth A Ross</PI_FULL_NAME>
<EmailAddress>kar@cs.columbia.edu</EmailAddress>
<PI_PHON>2129397058</PI_PHON>
<NSF_ID>000446976</NSF_ID>
<StartDate>07/28/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Stephen</FirstName>
<LastName>Edwards</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Stephen A Edwards</PI_FULL_NAME>
<EmailAddress>sedwards@cs.columbia.edu</EmailAddress>
<PI_PHON>2129397019</PI_PHON>
<NSF_ID>000277894</NSF_ID>
<StartDate>07/28/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Martha</FirstName>
<LastName>Kim</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Martha A Kim</PI_FULL_NAME>
<EmailAddress>martha@cs.columbia.edu</EmailAddress>
<PI_PHON>2129397094</PI_PHON>
<NSF_ID>000528915</NSF_ID>
<StartDate>07/28/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Columbia University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100276902</ZipCode>
<PhoneNumber>2128546851</PhoneNumber>
<StreetAddress>2960 Broadway</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>049179401</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF COLUMBIA UNIVERSITY IN THE CITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>049179401</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Columbia University]]></Name>
<CityName>NEW YORK</CityName>
<StateCode>NY</StateCode>
<ZipCode>100276902</ZipCode>
<StreetAddress><![CDATA[2960 Broadway]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7329</Code>
<Text>COMPILERS</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~625891</FUND_OBLG>
<FUND_OBLG>2013~174099</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;</p> <div> <div><span>Today, big data analytics are not just important, they are essential. Analyses must process large volumes of various data at or near real-time velocity.&nbsp;</span><span>This project explored how silicon circuits might be tailored to more efficiently support analytic data queries. &nbsp;Whereas standard processors are general purpose machines, supporting all workloads roughly equally well, specialized machines offer particular speed and energy efficiency on their target workload. &nbsp;</span></div> <div></div> <div><span>This project designed and evaluated a hardware design called the Q100, a performance- and energy-efficient data analysis accelerator. &nbsp;</span><span>The Q100 project used the standard data structures found in relational databases, namely tables and columns, streaming them amongst a&nbsp;</span><span>heterogeneous collection of fixed-function application-specific integrated circuit tiles, each of which implements a&nbsp;</span><span>well-known relational operator, such as a join or sort. &nbsp;As the project developed, the team examined more flexible designs that can be configured to&nbsp;run a variety of operators.</span><span>&nbsp;The team further developed a tool to translate a SQL query to the low-level code that runs on our machine. &nbsp;</span></div> <div></div> <div><span>Increased query speed and efficiency will make queries of large, and growing, datasets more tractable and feasible. &nbsp; Alternately, the efficiency dividends can be spent pushing data analysis into more power constrained, embedded devices.</span> <span>All of the project's research results are published in peer-reviewed computer architecture and database conferences.&nbsp;</span></div> </div> <p>&nbsp;</p><br> <p>            Last Modified: 10/17/2017<br>      Modified by: Martha&nbsp;A&nbsp;Kim</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[    Today, big data analytics are not just important, they are essential. Analyses must process large volumes of various data at or near real-time velocity. This project explored how silicon circuits might be tailored to more efficiently support analytic data queries.  Whereas standard processors are general purpose machines, supporting all workloads roughly equally well, specialized machines offer particular speed and energy efficiency on their target workload.    This project designed and evaluated a hardware design called the Q100, a performance- and energy-efficient data analysis accelerator.  The Q100 project used the standard data structures found in relational databases, namely tables and columns, streaming them amongst a heterogeneous collection of fixed-function application-specific integrated circuit tiles, each of which implements a well-known relational operator, such as a join or sort.  As the project developed, the team examined more flexible designs that can be configured to run a variety of operators. The team further developed a tool to translate a SQL query to the low-level code that runs on our machine.    Increased query speed and efficiency will make queries of large, and growing, datasets more tractable and feasible.   Alternately, the efficiency dividends can be spent pushing data analysis into more power constrained, embedded devices. All of the project's research results are published in peer-reviewed computer architecture and database conferences.            Last Modified: 10/17/2017       Submitted by: Martha A Kim]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

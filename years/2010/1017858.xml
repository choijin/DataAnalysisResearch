<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NeTS:  Small:  Exploiting Social Networks to Build Trustworthy Distributed Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>499997.00</AwardTotalIntnAmount>
<AwardAmount>499997</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Christopher Clifton</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project aims to develop a substrate called SocialLite that can use online social network data to obtain reliable identity and trust information. This work involves three steps: 1) identifying the rich variety of identity and trust information embedded in online social networks; 2) designing algorithms and software to efficiently and robustly abstract this information as a set of flexible API functions without violating a user?s privacy from large online social networks; and 3) evaluating the usefulness of the API by implementing a few sample applications. The SociaLite API can facilitate the development of robust and trustworthy distributed systems. Prototypes developed from this project will be released to the public to engage a broader developer community to use this API to build trustworthy applications. The algorithms developed in this project can advance the research community's understanding on trust metric computation and the utility of social-trust based computing. For further information, see the project website at http://www.cs.duke.edu/nds/wiki/sociallite.</AbstractNarration>
<MinAmdLetterDate>08/07/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/07/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017858</AwardID>
<Investigator>
<FirstName>Xiaowei</FirstName>
<LastName>Yang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xiaowei Yang</PI_FULL_NAME>
<EmailAddress>xwy@cs.duke.edu</EmailAddress>
<PI_PHON>9196606531</PI_PHON>
<NSF_ID>000095256</NSF_ID>
<StartDate>08/07/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Duke University</Name>
<CityName>Durham</CityName>
<ZipCode>277054010</ZipCode>
<PhoneNumber>9196843030</PhoneNumber>
<StreetAddress>2200 W. Main St, Suite 710</StreetAddress>
<StreetAddress2><![CDATA[Erwin Square]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>044387793</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>DUKE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>044387793</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Duke University]]></Name>
<CityName>Durham</CityName>
<StateCode>NC</StateCode>
<ZipCode>277054010</ZipCode>
<StreetAddress><![CDATA[2200 W. Main St, Suite 710]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~499997</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The high level goal of the project is to using trust embedded in<br />online social networks to build trustworthy distributed systems. To<br />this end, we have made contributions in three thrusts. First, we<br />developed a system called SybilRank, which can rank the accounts in a<br />large social network according to their likelihood to be authentic<br />user accounts. We deployed the system in the largest Spain social<br />network Tuenti and our results showed that SybilRank produced an<br />accurate ranking of accounts. This work was published at ACM NSDI'12.<br /><br />Second, we developed SynchroTrap, a system that can reliably detect<br />malicious social network accounts. SynchroTrap was designed based on<br />the observation that malicious accounts tend to act together as they<br />are typically controlled by automated scripts. We designed a scalable<br />clustering algorithm that is able to detect loosely synchronized<br />actions among a large number of accounts. SynchroTrap has been<br />successfully deployed at Facebook and Instagram to catch malicious<br />accounts.&nbsp; Within the month of August 2013, SynchroTrap detected more<br />than two million malicious accounts and thousands of large attack<br />campaigns, with a precision higher than 99%. These detected attack<br />campaigns involved hundreds of millions of malicious actions. This<br />work was published at ACM CCS'14. <br /><br />Finally, we developed a third technical, called Rejecto, that uses<br />unwanted friend requests to detect malicious accounts on social<br />networks. We observed that, to obtain social connections, malicious<br />accounts frequently send a large number of friend requests to other<br />users, but the ratio of accepted friend requests for them tends to be<br />lower than that of authenticated user accounts. We designed a graph<br />partition that partitions a social graph into two regions such that<br />the rate of acceptance of friend requests from one region to the other<br />is minimized. Using extensive simulations, we show that Rejecto can<br />discern friend spammers under a broad range of scenarios and that it<br />is resilient to strategic attackers. This work was published at IEEE<br />ICDCS'15.</p><br> <p>            Last Modified: 04/15/2016<br>      Modified by: Xiaowei&nbsp;Yang</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The high level goal of the project is to using trust embedded in online social networks to build trustworthy distributed systems. To this end, we have made contributions in three thrusts. First, we developed a system called SybilRank, which can rank the accounts in a large social network according to their likelihood to be authentic user accounts. We deployed the system in the largest Spain social network Tuenti and our results showed that SybilRank produced an accurate ranking of accounts. This work was published at ACM NSDI'12.  Second, we developed SynchroTrap, a system that can reliably detect malicious social network accounts. SynchroTrap was designed based on the observation that malicious accounts tend to act together as they are typically controlled by automated scripts. We designed a scalable clustering algorithm that is able to detect loosely synchronized actions among a large number of accounts. SynchroTrap has been successfully deployed at Facebook and Instagram to catch malicious accounts.  Within the month of August 2013, SynchroTrap detected more than two million malicious accounts and thousands of large attack campaigns, with a precision higher than 99%. These detected attack campaigns involved hundreds of millions of malicious actions. This work was published at ACM CCS'14.   Finally, we developed a third technical, called Rejecto, that uses unwanted friend requests to detect malicious accounts on social networks. We observed that, to obtain social connections, malicious accounts frequently send a large number of friend requests to other users, but the ratio of accepted friend requests for them tends to be lower than that of authenticated user accounts. We designed a graph partition that partitions a social graph into two regions such that the rate of acceptance of friend requests from one region to the other is minimized. Using extensive simulations, we show that Rejecto can discern friend spammers under a broad range of scenarios and that it is resilient to strategic attackers. This work was published at IEEE ICDCS'15.       Last Modified: 04/15/2016       Submitted by: Xiaowei Yang]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

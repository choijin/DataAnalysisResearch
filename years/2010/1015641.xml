<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAPSI:  Wavelet Frame Steganography</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2010</AwardEffectiveDate>
<AwardExpirationDate>05/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>5617.00</AwardTotalIntnAmount>
<AwardAmount>5617</AwardAmount>
<AwardInstrument>
<Value>Fellowship Award</Value>
</AwardInstrument>
<Organization>
<Code>01090000</Code>
<Directorate>
<Abbreviation>O/D</Abbreviation>
<LongName>Office Of The Director</LongName>
</Directorate>
<Division>
<Abbreviation>OISE</Abbreviation>
<LongName>Office Of Internatl Science &amp;Engineering</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anne Emig</SignBlockName>
<PO_EMAI>aemig@nsf.gov</PO_EMAI>
<PO_PHON>7032927241</PO_PHON>
</ProgramOfficer>
<AbstractNarration/>
<MinAmdLetterDate>06/07/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/07/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.079</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1015641</AwardID>
<Investigator>
<FirstName>Dominic</FirstName>
<LastName>Kramer</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dominic D Kramer</PI_FULL_NAME>
<EmailAddress/>
<PI_PHON>7153054187</PI_PHON>
<NSF_ID>000553502</NSF_ID>
<StartDate>06/07/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Kramer                  Dominic        D</Name>
<CityName>Ames</CityName>
<ZipCode>500104902</ZipCode>
<PhoneNumber/>
<StreetAddress/>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<StateCode>IA</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IA04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM/>
<ORG_LGL_BUS_NAME/>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Kramer                  Dominic        D]]></Name>
<CityName>Ames</CityName>
<StateCode>IA</StateCode>
<ZipCode>500104902</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IA04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7316</Code>
<Text>EAPSI</Text>
</ProgramElement>
<ProgramReference>
<Code>5927</Code>
<Text>EAST ASIA, OTHER</Text>
</ProgramReference>
<ProgramReference>
<Code>5978</Code>
<Text>EAST ASIA AND PACIFIC PROGRAM</Text>
</ProgramReference>
<ProgramReference>
<Code>7316</Code>
<Text>EAPSI</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~5617</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span style="font-size: small;">&nbsp; &nbsp;Linear algebra provides a mathematical framework that can be used to represent a set of data as a composition of more fundamental forms.  An image, for example, can be written mathematically as a list of numbers that describe the image as a composition of a collection of fixed simple images.  Given this list, one can then combine the appropriate simple images to reconstruct the original image.  Thus, to store an image, one only needs to store its associated list.</span></p> <p><span style="font-size: small;">&nbsp; &nbsp;A frame is a mathematical construct that extends this construction in a way that more simple images are used to describe the original image than absolutely necessary.  This redundancy is extremely valuable in the sense that if one was given a list of numbers describing an image, but some of the numbers were missing or incorrect, the redundancy would allow one to partially, and perhaps completely, reconstruct the original image.</span></p> <p><span style="font-size: small;">&nbsp; &nbsp;In our project, we explored the use of this redundancy to represent two completely different images by a single list of numbers.  This could be used, for example, to embed one image in a second image or to embed copyright information in an image.  Our project, in fact, explored embedding any set of data, satisfying certain properties, in another set of data.</span></p> <p><span style="font-size: small;">&nbsp; &nbsp;In particular, we developed a precise mathematical algorithm to take a representation of one set of data and embed it in a second set of data.  This data may, but does not have to, represent an image.  In this algorithm, we included security by enforcing the use of a key to recover the embedded data.  That is, given a list of numbers representing some data, a key is used to take a second set of data and embed it in the first.  The result is a new list of numbers that describes the first set of data but embeds the second.</span></p> <p><span style="font-size: small;">&nbsp; &nbsp;To someone not knowing the key, the list of numbers just appears to represent the first set of data.  However, with the key, the second set of data can be revealed from the first.  Thus, the second set of data is locked in the first set of data.  Furthermore, we characterized what data can be used to embed other data and what data can be embedded.</span></p> <p><span style="font-size: small;">&nbsp; &nbsp;The area of steganography, and more generally information hiding, studies such methods for embedding a set of data in another set of data.  In many known techniques for embedding an image in a second image, the image with and without an embedded image look slightly different.  The presence of the embedded image slightly alters the original image.  Thus an analysis of the image could revel evidence that an image is embedded inside.  In other words, the embedded image slightly changes the original image.</span></p> <p><span style="font-size: small;">&nbsp; &nbsp;Using the technique developed in our project, however, an image with an embedded second image would look identical to the original image (without the second image embedded).  Instead, the lists of numbers representing the image with and without the embedded image would differ.  This transfer of change, from the image to the list of numbers describing the image, is very useful because a person would normally not view the raw list of numbers but would instead view its corresponding image.  Thus, the presence of an embedded image would not disrupt a person's view of the image.  For example, copyright information could be embedded in an image without altering the appearance of the image.</span></p><br> <p>            Last Modified: 08/27/2011<br>      Modified by: Dominic&nbsp;D&nbsp;Kramer</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[    Linear algebra provides a mathematical framework that can be used to represent a set of data as a composition of more fundamental forms.  An image, for example, can be written mathematically as a list of numbers that describe the image as a composition of a collection of fixed simple images.  Given this list, one can then combine the appropriate simple images to reconstruct the original image.  Thus, to store an image, one only needs to store its associated list.     A frame is a mathematical construct that extends this construction in a way that more simple images are used to describe the original image than absolutely necessary.  This redundancy is extremely valuable in the sense that if one was given a list of numbers describing an image, but some of the numbers were missing or incorrect, the redundancy would allow one to partially, and perhaps completely, reconstruct the original image.     In our project, we explored the use of this redundancy to represent two completely different images by a single list of numbers.  This could be used, for example, to embed one image in a second image or to embed copyright information in an image.  Our project, in fact, explored embedding any set of data, satisfying certain properties, in another set of data.     In particular, we developed a precise mathematical algorithm to take a representation of one set of data and embed it in a second set of data.  This data may, but does not have to, represent an image.  In this algorithm, we included security by enforcing the use of a key to recover the embedded data.  That is, given a list of numbers representing some data, a key is used to take a second set of data and embed it in the first.  The result is a new list of numbers that describes the first set of data but embeds the second.     To someone not knowing the key, the list of numbers just appears to represent the first set of data.  However, with the key, the second set of data can be revealed from the first.  Thus, the second set of data is locked in the first set of data.  Furthermore, we characterized what data can be used to embed other data and what data can be embedded.     The area of steganography, and more generally information hiding, studies such methods for embedding a set of data in another set of data.  In many known techniques for embedding an image in a second image, the image with and without an embedded image look slightly different.  The presence of the embedded image slightly alters the original image.  Thus an analysis of the image could revel evidence that an image is embedded inside.  In other words, the embedded image slightly changes the original image.     Using the technique developed in our project, however, an image with an embedded second image would look identical to the original image (without the second image embedded).  Instead, the lists of numbers representing the image with and without the embedded image would differ.  This transfer of change, from the image to the list of numbers describing the image, is very useful because a person would normally not view the raw list of numbers but would instead view its corresponding image.  Thus, the presence of an embedded image would not disrupt a person's view of the image.  For example, copyright information could be embedded in an image without altering the appearance of the image.       Last Modified: 08/27/2011       Submitted by: Dominic D Kramer]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

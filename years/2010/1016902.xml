<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Auxiliary Hardware/Software Mechanisms for Flexible Memory Access Control</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>459980.00</AwardTotalIntnAmount>
<AwardAmount>459980</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Hong Jiang</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The reliability, safety, and security of today's applications depend on  controlled data accesses and updates during execution.  For instance, many emerging applications are composed of multiple software modules. To protect these modules from each other within a single address space, inter-module operations need to be carefully monitored and controlled.  Additionally, the reliability of online systems can benefit from live checking of memory access errors such as buffer overflows, memory leaks, and accesses to uninitialized data.  Similarly, memory access monitoring can support information flow mtracking in a complex system for enhanced security.&lt;br/&gt;&lt;br/&gt;Available mechanisms in today's processors are tied to support for virtual memory, making implementation of access control both heavy weight and coarse grained. The proposed research will design and utilize new light-weight memory access control mechanisms that are independent of and subordinate to existing system memory protection.  At the hardware level, this approach minimizes impact on the processor core by placing the access control mechanisms outside the common critical path.  At the operating system level, the required support is largely outside of the kernel memory management functions, incurring overhead only when exercised. Such auxiliary mechanisms are more amenable to practical deployment, yet they are capable of supporting fine-grained and flexible memory protection. In conjunction with these hardware/software mechanisms, the research will devise a new protection model that can be manipulated either at user or  privileged level based on an application's requirements. The flexible, efficient memory monitoring framework developed will enable debugging tools that can help detect memory access errors such as out-of-bound accesses, and help enforce data security or privacy policies in live systems.  The proposed work will target a wide variety of applications and utilizations with a view to validating the goal of improved programmer productivity.</AbstractNarration>
<MinAmdLetterDate>09/01/2010</MinAmdLetterDate>
<MaxAmdLetterDate>09/01/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1016902</AwardID>
<Investigator>
<FirstName>Sandhya</FirstName>
<LastName>Dwarkadas</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sandhya Dwarkadas</PI_FULL_NAME>
<EmailAddress>sandhya@cs.rochester.edu</EmailAddress>
<PI_PHON>5852755647</PI_PHON>
<NSF_ID>000368396</NSF_ID>
<StartDate>09/01/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Kai</FirstName>
<LastName>Shen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kai Shen</PI_FULL_NAME>
<EmailAddress>kshen@cs.rochester.edu</EmailAddress>
<PI_PHON>5852755426</PI_PHON>
<NSF_ID>000489991</NSF_ID>
<StartDate>09/01/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Rochester</Name>
<CityName>Rochester</CityName>
<ZipCode>146270140</ZipCode>
<PhoneNumber>5852754031</PhoneNumber>
<StreetAddress>518 HYLAN, RC BOX 270140</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY25</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041294109</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ROCHESTER</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041294109</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Rochester]]></Name>
<CityName>Rochester</CityName>
<StateCode>NY</StateCode>
<ZipCode>146270140</ZipCode>
<StreetAddress><![CDATA[518 HYLAN, RC BOX 270140]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~459980</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Modern computing systems increasingly work in a multitasking environment with high levels of concurrency. The reliability, safety, and security of today's applications&nbsp;depend on controlled data access and updates during execution. This project has developed new technologies at the hardware / software  intersection to improve the reliability, security, and efficiency of  future computer systems. &nbsp;The developed technologies will influence the  principle of hardware-assisted memory protection. &nbsp;They will also affect  the principled use of hardware statistics in adaptive software system  management. &nbsp;Specifically, we have developed value-based tainting to  support memory access monitoring and information flow tracking in a  complex system like operating systems. &nbsp;This technique can enhance  security as well as enable the analysis of memory error susceptibility  in a complex system environment. &nbsp;We have also designed and implemented a  set of techniques to develop hardware performance counter-based models and enable  adaptive system management. &nbsp;A particular example is the development of  the power containers facility that performs fine-grained resource  accounting and isolates power viruses in multi-core systems.</p> <p>Research and experimentation efforts in this project have enabled  students at both the graduate and undergraduate level to gain knowledge  and experience in advanced development at the hardware / software  interface. To date, the project has&nbsp;helped produce three Ph.D.  students.&nbsp;&nbsp; Experience from the research  conducted as part of this grant has been used to inform instruction on  protection issues. Students participating  in the projects have received training in the design of memory systems  and the metadata used to manage them.</p><br> <p>            Last Modified: 01/04/2015<br>      Modified by: Sandhya&nbsp;Dwarkadas</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Modern computing systems increasingly work in a multitasking environment with high levels of concurrency. The reliability, safety, and security of today's applications depend on controlled data access and updates during execution. This project has developed new technologies at the hardware / software  intersection to improve the reliability, security, and efficiency of  future computer systems.  The developed technologies will influence the  principle of hardware-assisted memory protection.  They will also affect  the principled use of hardware statistics in adaptive software system  management.  Specifically, we have developed value-based tainting to  support memory access monitoring and information flow tracking in a  complex system like operating systems.  This technique can enhance  security as well as enable the analysis of memory error susceptibility  in a complex system environment.  We have also designed and implemented a  set of techniques to develop hardware performance counter-based models and enable  adaptive system management.  A particular example is the development of  the power containers facility that performs fine-grained resource  accounting and isolates power viruses in multi-core systems.  Research and experimentation efforts in this project have enabled  students at both the graduate and undergraduate level to gain knowledge  and experience in advanced development at the hardware / software  interface. To date, the project has helped produce three Ph.D.  students.   Experience from the research  conducted as part of this grant has been used to inform instruction on  protection issues. Students participating  in the projects have received training in the design of memory systems  and the metadata used to manage them.       Last Modified: 01/04/2015       Submitted by: Sandhya Dwarkadas]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase I:  Computer Generation and Optimization of Image Processing Functions</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2010</AwardEffectiveDate>
<AwardExpirationDate>12/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Errol Arkilic</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This Small Business Innovation Research (SBIR) Phase I project proposes to enable computer generation of high performance software for image processing problems. For computing intensive functions, the by far most common approach is hand-optimization for every new platform.  SpiralGen's technology has the potential to demonstrate that it is possible to automatically produce performance-competitive code (code that is a good as human-written code and takes optimal advantage of multiple cores) for an important class of image processing functions.  The approach is based on a blend of mathematics, programming languages, symbolic computation, compilers, and optimization.&lt;br/&gt; &lt;br/&gt;Image processing (including its close cousin video processing) is one of the most demanding computing domains due to its higher-dimensional nature.  Key application domains that can benefit from the proposed technology include military applications (surveillance, target recognition), consumer multimedia processing, medical imaging (computer tomography), oil exploration, and computer vision.  The company's technology has the ability to provide a longterm solution to the porting and optimization problem: applications are ported by regenerating performance critical components optimized for the new platform. As a result, new more capable platforms can be deployed faster.</AbstractNarration>
<MinAmdLetterDate>04/21/2010</MinAmdLetterDate>
<MaxAmdLetterDate>04/21/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1013936</AwardID>
<Investigator>
<FirstName>Yevgen</FirstName>
<LastName>Voronenko</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Yevgen Voronenko</PI_FULL_NAME>
<EmailAddress>yvoronen@cmu.edu</EmailAddress>
<PI_PHON>4084809611</PI_PHON>
<NSF_ID>000547639</NSF_ID>
<StartDate>04/21/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SpiralGen Inc</Name>
<CityName>Pittsburgh</CityName>
<ZipCode>152133732</ZipCode>
<PhoneNumber>4125671010</PhoneNumber>
<StreetAddress>201 S. Craig St.</StreetAddress>
<StreetAddress2><![CDATA[Suite 2E]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>830728668</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>SPIRALGEN, INC.</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[SpiralGen Inc]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133732</ZipCode>
<StreetAddress><![CDATA[201 S. Craig St.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5371</Code>
<Text>SBIR Phase I</Text>
</ProgramElement>
<ProgramReference>
<Code>5371</Code>
<Text>SMALL BUSINESS PHASE I</Text>
</ProgramReference>
<ProgramReference>
<Code>6850</Code>
<Text>DIGITAL SOCIETY&amp;TECHNOLOGIES</Text>
</ProgramReference>
<ProgramReference>
<Code>9139</Code>
<Text>INFORMATION INFRASTRUCTURE &amp; TECH APPL</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~150000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>SpiralGen NSF Phase I Project Outcomes Report.</strong></p> <p>There is broad interest in the medical imaging community to decrease data acquisition / analysis times, improve data resolution, and reduce patient radiation dose.&nbsp; For example, in applications such as computed tomography (CT) diagnostic imaging, improved iterative image reconstruction algorithms can enable radiation dose reduction by providing a higher tolerance to noise (i.e., lower radiation level) while maintaining image quality.</p> <p>However, these iterative reconstruction algorithms can be impractically slow, taking several hours on realistic data sets, thus creating a barrier to deployment.&nbsp; Attempts to reduce reconstruction times by optimizing the software using human optimization experts have been less than successful to date.&nbsp; SpiralGen can solve this problem by optimizing the algorithms using automated software optimization technology, developed at Carnegie Mellon University over the past decade, called Spiral.</p> <p>The goal of Phase I of this SBIR program was to demonstrate the application of Spiral technology to improve the performance of iterative image reconstruction algorithms, and thereby enable their widespread deployment. &nbsp;As a demonstration we chose a recently proposed algorithm [Lustig 2008] that uses compressed sensing (CS) to reconstruct undersampled magnetic resonance imaging (MRI) images.&nbsp; This approach applies iterative techniques to &ldquo;fill in&rdquo; missing parts of the data, and has proven to be very effective in reconstructing clinical quality MRI images from undersampled data.&nbsp; However, CS-based reconstruction is a computationally expensive iterative algorithm. &nbsp;The computation time to reconstruct a single MRI slice measures in minutes, which is clinically unacceptable.</p> <p>The attached graph shows reconstruction times for a single 512x512 (0.5 sec vs. 16 sec), 1Kx1K (2.3 sec vs. 95 sec), and 2Kx2K (11.6 sec vs. 378 sec) image slice (45 algorithm iterations) for two implementations: a standard C code implementation of the Lustig algorithm, and an implementation optimized by Spiral.&nbsp; The Spiral optimized implementation effectively utilizes all 12 available cores and improves performance 30-40X by exploiting the in-slice parallelism.&nbsp; (Traditional optimization efforts would hit memory bandwidth barriers, limiting CPU core utilization to about 4 to 5 cores before performance improvements begin to flatten out.) The optimization achieved here can be further combined with parallel reconstruction of multiple slices to more efficiently use all of the available computation power.</p> <p>In Phase II of this SBIR program, SpiralGen intends to apply the same automated code generation technology to iterative algorithms for other imaging modalities such as CT and ultrasound.</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/31/2011<br>      Modified by: Yevgen&nbsp;Voronenko</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2011/1013936/1013936_10015089_1306843549388_Figure1--rgov-214x142.jpg" original="/por/images/Reports/POR/2011/1013936/1013936_10015089_1306843549388_Figure1--rgov-800width.jpg" title="Iterative sparse MRI reconstruction times"><img src="/por/images/Reports/POR/2011/1013936/1013936_10015089_1306843549388_Figure1--rgov-66x44.jpg" alt="Iterative sparse MRI reconstruction times"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Iterative sparse MR...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ SpiralGen NSF Phase I Project Outcomes Report.  There is broad interest in the medical imaging community to decrease data acquisition / analysis times, improve data resolution, and reduce patient radiation dose.  For example, in applications such as computed tomography (CT) diagnostic imaging, improved iterative image reconstruction algorithms can enable radiation dose reduction by providing a higher tolerance to noise (i.e., lower radiation level) while maintaining image quality.  However, these iterative reconstruction algorithms can be impractically slow, taking several hours on realistic data sets, thus creating a barrier to deployment.  Attempts to reduce reconstruction times by optimizing the software using human optimization experts have been less than successful to date.  SpiralGen can solve this problem by optimizing the algorithms using automated software optimization technology, developed at Carnegie Mellon University over the past decade, called Spiral.  The goal of Phase I of this SBIR program was to demonstrate the application of Spiral technology to improve the performance of iterative image reconstruction algorithms, and thereby enable their widespread deployment.  As a demonstration we chose a recently proposed algorithm [Lustig 2008] that uses compressed sensing (CS) to reconstruct undersampled magnetic resonance imaging (MRI) images.  This approach applies iterative techniques to "fill in" missing parts of the data, and has proven to be very effective in reconstructing clinical quality MRI images from undersampled data.  However, CS-based reconstruction is a computationally expensive iterative algorithm.  The computation time to reconstruct a single MRI slice measures in minutes, which is clinically unacceptable.  The attached graph shows reconstruction times for a single 512x512 (0.5 sec vs. 16 sec), 1Kx1K (2.3 sec vs. 95 sec), and 2Kx2K (11.6 sec vs. 378 sec) image slice (45 algorithm iterations) for two implementations: a standard C code implementation of the Lustig algorithm, and an implementation optimized by Spiral.  The Spiral optimized implementation effectively utilizes all 12 available cores and improves performance 30-40X by exploiting the in-slice parallelism.  (Traditional optimization efforts would hit memory bandwidth barriers, limiting CPU core utilization to about 4 to 5 cores before performance improvements begin to flatten out.) The optimization achieved here can be further combined with parallel reconstruction of multiple slices to more efficiently use all of the available computation power.  In Phase II of this SBIR program, SpiralGen intends to apply the same automated code generation technology to iterative algorithms for other imaging modalities such as CT and ultrasound.             Last Modified: 05/31/2011       Submitted by: Yevgen Voronenko]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

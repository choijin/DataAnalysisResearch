<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Summit on Education in Secure Software</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2010</AwardEffectiveDate>
<AwardExpirationDate>05/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>299723.00</AwardTotalIntnAmount>
<AwardAmount>299723</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Victor Piotrowski</SignBlockName>
<PO_EMAI>vpiotrow@nsf.gov</PO_EMAI>
<PO_PHON>7032925141</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project intends to organize a summit on education in secure software. metropolitan area. The summit brings together a multi-disciplinary group of experts in secure coding to develop a comprehensive agenda focused on the challenges of secure software education. Summit participants include representatives from academia and professional organizations across the public and private sectors; as well as policy makers and government representatives. This multi-disciplinary group advances the current state of education on trustworthy computing and a final project report summarizes the key discussions of the summit and the action items resulting from those discussions for stakeholder groups to consider.&lt;br/&gt;&lt;br/&gt;Intellectual Merit: The summit provides a forum to address three specific objectives: (1) to engage a multi-disciplinary group of cyber security stakeholders (educators, industry representatives, and professional certification and training organizations) in a comprehensive dialogue about the current state of education in secure software; (2) to use this dialogue as the basis of a collaborative effort to develop creative approaches that enhance the quality of trustworthy computing education; and (3) to outline the core elements of a comprehensive agenda for secure software education.&lt;br/&gt;&lt;br/&gt;Broader Impacts: PIs assemble a diverse group of approximately 60 invited participants representing several cyber security stakeholders (educators, professional certification and training organizations, and industry representatives). The PIs produce a white paper based on the summit that is disseminated through publication in a journal such as IEEE Security and Privacy, distributed to appropriate professional associate special interest groups, and circulated with summit participants. The Virtual Community of Practice is designed to support continued dialogue among summit participants.</AbstractNarration>
<MinAmdLetterDate>06/11/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/11/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1039564</AwardID>
<Investigator>
<FirstName>Matt</FirstName>
<LastName>Bishop</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Matt Bishop</PI_FULL_NAME>
<EmailAddress>mabishop@ucdavis.edu</EmailAddress>
<PI_PHON>5307528060</PI_PHON>
<NSF_ID>000454293</NSF_ID>
<StartDate>06/11/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Diana</FirstName>
<LastName>Burley</LastName>
<PI_MID_INIT>L</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Diana L Burley</PI_FULL_NAME>
<EmailAddress>dburley@gwu.edu</EmailAddress>
<PI_PHON>2029945829</PI_PHON>
<NSF_ID>000205505</NSF_ID>
<StartDate>06/11/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>George Washington University</Name>
<CityName>Washington</CityName>
<ZipCode>200520086</ZipCode>
<PhoneNumber>2029940728</PhoneNumber>
<StreetAddress>1922 F Street NW</StreetAddress>
<StreetAddress2><![CDATA[4th Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>District of Columbia</StateName>
<StateCode>DC</StateCode>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>DC00</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>043990498</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGE WASHINGTON UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[George Washington University]]></Name>
<CityName>Washington</CityName>
<StateCode>DC</StateCode>
<ZipCode>200520086</ZipCode>
<StreetAddress><![CDATA[1922 F Street NW]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>District of Columbia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>DC00</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1668</Code>
<Text>CYBERCORPS: SCHLAR FOR SER</Text>
</ProgramElement>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0410</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~299723</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Cybersecurity poses some of the most serious economic and national security challenges of the 21st century. In order to meet these challenges, the software that controls critical systems and infrastructure must be reliable, robust, and satisfy the requirements that are placed upon it. To this end, all people involved in the development and deployment of these systems and infrastructure, from the policymakers who determine the requirements, to the businesspeople who provide financial support, to the architects, implementers, and operators of these systems, must understand the criticality of reliable, robust, and secure software. Therefore, students studying a variety of technical and non-technical disciplines must recognize the difference between software that is sufficiently robust and software that is not.</p> <p>To address this need, the National Science Foundation Directorates of Computer and Information Science and Engineering and Education and Human Resources jointly sponsored the 2010 Summit on Education in Secure Software (SESS). Organized by Dr. Diana Burley from the George Washington University and Dr. Matt Bishop from the University of California at Davis, the summit focused on ways to advance and improve the state of education in secure<a href="#_ftn1">[1]</a> software. SESS participants included members of academia, government, industry, professional organizations, and policy makers from both the public and private sectors with expertise in secure software. This diverse group examined the challenges of teaching the design, implementation, and testing of secure software for six constituent groups: computer science students, non-computer science students, community college students, K-12 students, computer science professionals, and non-computer science professionals.</p> <p><strong>&nbsp;</strong></p> <p><strong>Summary of the Findings</strong></p> <p>The findings are presented in the form of &ldquo;roadmaps&rdquo; that describe ways to improve the state of education for constituent groups in secure programming. The roadmaps explain what the members of the constituent group should know, various methods by which they might be educated, and what resources will be necessary to achieve that level of education. The roadmaps also identify challenges to meeting these goals&mdash;the &ldquo;potholes&rdquo;. Each roadmap concludes with specific recommendations for meeting the articulated educational goals.</p> <p>Although presented as separate roadmaps, one for each constituent audience, the roadmaps should be considered as different views of a unified educational program that spans kindergarten through professional development, for audiences ranging from software developers to those who focus on management, policy and use to ordinary computer users. Thus, the educational goals in the roadmaps are the &ldquo;core fundamental end points&rdquo; to be reached through instruction guided by a curriculum for secure programming.</p> <p>Overall, SESS participants asserted that secure programming must be considered within the context of the system design and deployment process and highlighted 6 critical points:</p> <ol> <li>Understanding security, especially during design, requires a holistic approach;</li> <li>Understanding and being able to identify common and emerging attack vectors is a critical component of security;</li> <li>Well-tested principles and frameworks of software development can inhibit attacks;</li> <li>All frameworks have weaknesses and subtleties;</li> <li>Part of secure programming is using strategic approaches to overcome these weaknesses; and</li> <li>Users of tools that aid in secure programming must know how to use those tools, and understand their limitations.</li> </ol> <p><strong>&nbsp;</strong></p> <p><strong>Summary of the Recommendations</strong></p> <p>The ten recommendations below provide a starting point for stakeholders across constituen...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Cybersecurity poses some of the most serious economic and national security challenges of the 21st century. In order to meet these challenges, the software that controls critical systems and infrastructure must be reliable, robust, and satisfy the requirements that are placed upon it. To this end, all people involved in the development and deployment of these systems and infrastructure, from the policymakers who determine the requirements, to the businesspeople who provide financial support, to the architects, implementers, and operators of these systems, must understand the criticality of reliable, robust, and secure software. Therefore, students studying a variety of technical and non-technical disciplines must recognize the difference between software that is sufficiently robust and software that is not.  To address this need, the National Science Foundation Directorates of Computer and Information Science and Engineering and Education and Human Resources jointly sponsored the 2010 Summit on Education in Secure Software (SESS). Organized by Dr. Diana Burley from the George Washington University and Dr. Matt Bishop from the University of California at Davis, the summit focused on ways to advance and improve the state of education in secure[1] software. SESS participants included members of academia, government, industry, professional organizations, and policy makers from both the public and private sectors with expertise in secure software. This diverse group examined the challenges of teaching the design, implementation, and testing of secure software for six constituent groups: computer science students, non-computer science students, community college students, K-12 students, computer science professionals, and non-computer science professionals.     Summary of the Findings  The findings are presented in the form of "roadmaps" that describe ways to improve the state of education for constituent groups in secure programming. The roadmaps explain what the members of the constituent group should know, various methods by which they might be educated, and what resources will be necessary to achieve that level of education. The roadmaps also identify challenges to meeting these goals&mdash;the "potholes". Each roadmap concludes with specific recommendations for meeting the articulated educational goals.  Although presented as separate roadmaps, one for each constituent audience, the roadmaps should be considered as different views of a unified educational program that spans kindergarten through professional development, for audiences ranging from software developers to those who focus on management, policy and use to ordinary computer users. Thus, the educational goals in the roadmaps are the "core fundamental end points" to be reached through instruction guided by a curriculum for secure programming.  Overall, SESS participants asserted that secure programming must be considered within the context of the system design and deployment process and highlighted 6 critical points:  Understanding security, especially during design, requires a holistic approach; Understanding and being able to identify common and emerging attack vectors is a critical component of security; Well-tested principles and frameworks of software development can inhibit attacks; All frameworks have weaknesses and subtleties; Part of secure programming is using strategic approaches to overcome these weaknesses; and Users of tools that aid in secure programming must know how to use those tools, and understand their limitations.      Summary of the Recommendations  The ten recommendations below provide a starting point for stakeholders across constituent groups to begin to transform education in secure software.  Increase the number of faculty who understand the importance of secure programming principles, and will require students to practice them. Provide faculty support for the inclusion of security content in existing courses through clinics, labs, and othe...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Medium: Collaborative Research: Optimality in Homology - Algorithms and Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2011</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>352896.00</AwardTotalIntnAmount>
<AwardAmount>442276</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Jack S. Snoeyink</SignBlockName>
<PO_EMAI>jsnoeyin@nsf.gov</PO_EMAI>
<PO_PHON>7032920000</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Many applications in science and engineering encounter the problem of&lt;br/&gt;identifying and processing topologically interesting features in the&lt;br/&gt;digital representation of a geometry or data. Such features often need&lt;br/&gt;to be optimal with respect to some metric (measurement). It is&lt;br/&gt;recognized that homology groups from algebraic topology play an&lt;br/&gt;essential role in these computations. Although the study of structural&lt;br/&gt;properties of the homology groups has a rich history in mathematics,&lt;br/&gt;their computations in combination with geometry are not that well&lt;br/&gt;studied. The principal investigators (PIs) propose to study these&lt;br/&gt;fundamental questions thoroughly, along with their connections to&lt;br/&gt;practical problems from science and engineering.&lt;br/&gt;Intellectual merit: Efficient solutions of the optimality questions in&lt;br/&gt;homology computations require both mathematical and algorithmic&lt;br/&gt;developments. The PIs bring aboard these required expertise. Apart&lt;br/&gt;from the synergistic effect of the proposed study on mathematics and&lt;br/&gt;theoretical computer science, the close ties with various applications&lt;br/&gt;in science and engineering will play a synergistic role between&lt;br/&gt;computational fields such as computer graphics, computer vision,&lt;br/&gt;sensor networks, computer aided design, and scientific fields such as&lt;br/&gt;biology, physics, chemistry, and others.&lt;br/&gt;Broader impacts: Optimization of aspects of homology groups provides&lt;br/&gt;important insights in many scientific and engineering applications&lt;br/&gt;ranging from tunnels in protein molecules to voids in large&lt;br/&gt;machines. Solutions of such problems can aid in the manufacturing of&lt;br/&gt;better machines, designing of new drugs, and rapid modeling of&lt;br/&gt;customized objects. The educational impact of this project is in a&lt;br/&gt;large synergy between mathematics and computer science motivated by&lt;br/&gt;real applications. Course notes, internet distributions, and software&lt;br/&gt;systems developed through the project will enable the scientific&lt;br/&gt;community to study challenging problems in geometry, topology, and&lt;br/&gt;algorithms. Graduate students supported by the project will develop&lt;br/&gt;skills in mathematics and theoretical computer science and also in&lt;br/&gt;writing robust, efficient, and user-friendly software.</AbstractNarration>
<MinAmdLetterDate>06/21/2011</MinAmdLetterDate>
<MaxAmdLetterDate>04/30/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1064416</AwardID>
<Investigator>
<FirstName>Tamal</FirstName>
<LastName>Dey</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tamal K Dey</PI_FULL_NAME>
<EmailAddress>tamaldey@purdue.edu</EmailAddress>
<PI_PHON>6148436691</PI_PHON>
<NSF_ID>000290200</NSF_ID>
<StartDate>06/21/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Ohio State University</Name>
<CityName>Columbus</CityName>
<ZipCode>432101016</ZipCode>
<PhoneNumber>6146888735</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[1960 Kenny Road]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>832127323</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OHIO STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001964634</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Ohio State University]]></Name>
<CityName>Columbus</CityName>
<StateCode>OH</StateCode>
<ZipCode>432101016</ZipCode>
<StreetAddress><![CDATA[Office of Sponsored Programs]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7929</Code>
<Text>COMPUTATIONAL GEOMETRY</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~86593</FUND_OBLG>
<FUND_OBLG>2012~177929</FUND_OBLG>
<FUND_OBLG>2013~89380</FUND_OBLG>
<FUND_OBLG>2014~88374</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In this project we aspired to address the problem of computing cyclic features of a geometric shape of interest. The shape can be presented with a discretized version commonly known as a triangulation, or only through a point sample commonly referred as data. The challenge was to identify or approximate the `good' cycles, ideally the optimal ones. Data in high dimensions poses more difficulty. Our aim was to design algorithms for these problems with provable certificates, that is, we wanted to assure that the output of the designed algorithm has certain guarantees under some conditions that are precisely spelled out. We achieved this goal with the following key outcome:</p> <p>O1: Given a discretized shape (triangulation) sitting in a geometric space, cyclic features are often captured by computing a set of cycles forming a basis for the spaec of all cycles. There are well known algorithms for computing them. But, often the applications in question benefit when the computed cycle for a class is the shortest. This problem is known to be hard (NP-hard). Nevertheless, we showed in [1]&nbsp; that the problem is tractable (solvable in polynomial time) if the input satisfies a mild condition. This result spawned further results in the field.</p> <p>O2: Insted of computing a shortest cycle in a class, one may need to compute a shortest basis itself, that is, a set of cycles that generates the entire space of the cycles and whose total length is the smallest among all such possible sets of cycles. This problem was known to be hard as well for cycles of dimension greater than one. The open question about the 1-dimensional cycles was settled in this project. We first designed a polynomial time greedy algorithm for it in [2] and later improved its complexity in [3].</p> <p>O3: In computer graphics and geometric modeling, processing three dimensional shapes plays a central role. Computing some topological features such as `holes' become important in these applications. There were several attempts before to pinpoint the region that constitutes the `holes' in a shape. Drawing upon algebraic topology,&nbsp; we gave a concrete definition of `holes'&nbsp; in terms of cycles that can be of&nbsp; two types: `handles' and `tunnels', and presented an efficient algorithm in [4] to compute them. The algorithm used Reeb graphs for the first time to compute the handles and tunnels.</p> <p>O4: Often it is useful to simplify a shape to a lower diemsnional object for facilitating further analysis. For a function defined on a shape (such as temperature defined on the surface of earth), one can define a one dimensional structure called Reeb graph that preserves many structural information related to the function. We showed a structural result on Reeb graphs that was unknown before. In particular, in [5] we showed that the cycles in a Reeb graph necessarily come from the ones present in the original space. We also presented an algorithm to compute an approximation of the Reeb graphs from a point sample.</p> <p>O5: Two software were produced in this project that have been released for public use. They are available from [6] and [7].</p> <p>O6: Several Phd students were supported partially through this project. Among them Oleksiy Busaryev and Fengtao Fan have finished their Phds and joined Google Inc. Another student Dayu Shi is close to finishing his Phd.</p> <p>References:</p> <p>[1]<span style="font-family: helvetica;"><em> </em>Optimal                     homologous cycles, total unimodularity, and linear programming<strong>.</strong> T. K. Dey, A Hirani, and B. Krishnamoorthy. SIAM J. Computing, Vol. 40, pp. 1026--1044.</span></p> <p>[2] Approximating cycles in a shortest basis of the first homology group from point data. T. K. Dey, J. Sun, and Y. Wang. Inverse Problems, Vol. 27 (2011), 124004. doi: 10.1088/0266-5611/27/12/124004.<strong><br /></strong></p> <p>[3]&nbsp; <span style="font-family: helvetica;">Annotating     simplices with a homology basis and its application. O. Busaryev, S. Cabello, C. Chen, T. K. Dey, and Y. Wang. 13th Scandinavian Sympos. Workshops Algorithm Theory (SWAT 2012). Lecture Notes in Computer Science, Volume 7357, 2012, pp. 189--200.</span></p> <p><span style="font-family: helvetica;">[4] <span style="font-family: helvetica;">An efficient computation of handle and tunnel loops via Reeb graphs. T. K. Dey, F. Fan, and Y. Wang. ACM Trans. Graphics (Siggraph 2013), Vol. 32 (4).</span><small><br /> </small></span></p> <p>[5]&nbsp; <span style="font-family: helvetica;">Reeb graphs: approximation    and persistence. T. K. Dey and Y. Wang. Proc. 27th Annu. Sympos. Comput. Geom. (SoCG 2011), 226--235. Extended version in Discrete &amp; Computational Geometry, Vol. 49 (2013), 46--73.</span><small></small></p> <p>[6] http://web.cse.ohio-state.edu/~tamaldey/homology.html</p> <p>[7] http://web.cse.ohio-state.edu/~tamaldey/handle/hantun.html</p><br> <p>            Last Modified: 08/26/2016<br>      Modified by: Tamal&nbsp;K&nbsp;Dey</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2016/1064416/1064416_10101514_1472230262163_pcdloop--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1064416/1064416_10101514_1472230262163_pcdloop--rgov-800width.jpg" title="Cycle from point data"><img src="/por/images/Reports/POR/2016/1064416/1064416_10101514_1472230262163_pcdloop--rgov-66x44.jpg" alt="Cycle from point data"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Shortest basis cycles computed from point data</div> <div class="imageCredit">O. Busaryev and T. K. Dey</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Tamal&nbsp;K&nbsp;Dey</div> <div class="imageTitle">Cycle from point data</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/1064416/1064416_10101514_1472230419113_sig2013--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1064416/1064416_10101514_1472230419113_sig2013--rgov-800width.jpg" title="Handle and Tunnel loops"><img src="/por/images/Reports/POR/2016/1064416/1064416_10101514_1472230419113_sig2013--rgov-66x44.jpg" alt="Handle and Tunnel loops"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Short handle and tunnel loops computed on 3d shapes</div> <div class="imageCredit">Fengtao Fan</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Tamal&nbsp;K&nbsp;Dey</div> <div class="imageTitle">Handle and Tunnel loops</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In this project we aspired to address the problem of computing cyclic features of a geometric shape of interest. The shape can be presented with a discretized version commonly known as a triangulation, or only through a point sample commonly referred as data. The challenge was to identify or approximate the `good' cycles, ideally the optimal ones. Data in high dimensions poses more difficulty. Our aim was to design algorithms for these problems with provable certificates, that is, we wanted to assure that the output of the designed algorithm has certain guarantees under some conditions that are precisely spelled out. We achieved this goal with the following key outcome:  O1: Given a discretized shape (triangulation) sitting in a geometric space, cyclic features are often captured by computing a set of cycles forming a basis for the spaec of all cycles. There are well known algorithms for computing them. But, often the applications in question benefit when the computed cycle for a class is the shortest. This problem is known to be hard (NP-hard). Nevertheless, we showed in [1]  that the problem is tractable (solvable in polynomial time) if the input satisfies a mild condition. This result spawned further results in the field.  O2: Insted of computing a shortest cycle in a class, one may need to compute a shortest basis itself, that is, a set of cycles that generates the entire space of the cycles and whose total length is the smallest among all such possible sets of cycles. This problem was known to be hard as well for cycles of dimension greater than one. The open question about the 1-dimensional cycles was settled in this project. We first designed a polynomial time greedy algorithm for it in [2] and later improved its complexity in [3].  O3: In computer graphics and geometric modeling, processing three dimensional shapes plays a central role. Computing some topological features such as `holes' become important in these applications. There were several attempts before to pinpoint the region that constitutes the `holes' in a shape. Drawing upon algebraic topology,  we gave a concrete definition of `holes'  in terms of cycles that can be of  two types: `handles' and `tunnels', and presented an efficient algorithm in [4] to compute them. The algorithm used Reeb graphs for the first time to compute the handles and tunnels.  O4: Often it is useful to simplify a shape to a lower diemsnional object for facilitating further analysis. For a function defined on a shape (such as temperature defined on the surface of earth), one can define a one dimensional structure called Reeb graph that preserves many structural information related to the function. We showed a structural result on Reeb graphs that was unknown before. In particular, in [5] we showed that the cycles in a Reeb graph necessarily come from the ones present in the original space. We also presented an algorithm to compute an approximation of the Reeb graphs from a point sample.  O5: Two software were produced in this project that have been released for public use. They are available from [6] and [7].  O6: Several Phd students were supported partially through this project. Among them Oleksiy Busaryev and Fengtao Fan have finished their Phds and joined Google Inc. Another student Dayu Shi is close to finishing his Phd.  References:  [1] Optimal                     homologous cycles, total unimodularity, and linear programming. T. K. Dey, A Hirani, and B. Krishnamoorthy. SIAM J. Computing, Vol. 40, pp. 1026--1044.  [2] Approximating cycles in a shortest basis of the first homology group from point data. T. K. Dey, J. Sun, and Y. Wang. Inverse Problems, Vol. 27 (2011), 124004. doi: 10.1088/0266-5611/27/12/124004.   [3]  Annotating     simplices with a homology basis and its application. O. Busaryev, S. Cabello, C. Chen, T. K. Dey, and Y. Wang. 13th Scandinavian Sympos. Workshops Algorithm Theory (SWAT 2012). Lecture Notes in Computer Science, Volume 7357, 2012, pp. 189--200.  [4] An efficient computation of handle and tunnel loops via Reeb graphs. T. K. Dey, F. Fan, and Y. Wang. ACM Trans. Graphics (Siggraph 2013), Vol. 32 (4).    [5]  Reeb graphs: approximation    and persistence. T. K. Dey and Y. Wang. Proc. 27th Annu. Sympos. Comput. Geom. (SoCG 2011), 226--235. Extended version in Discrete &amp; Computational Geometry, Vol. 49 (2013), 46--73.  [6] http://web.cse.ohio-state.edu/~tamaldey/homology.html  [7] http://web.cse.ohio-state.edu/~tamaldey/handle/hantun.html       Last Modified: 08/26/2016       Submitted by: Tamal K Dey]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

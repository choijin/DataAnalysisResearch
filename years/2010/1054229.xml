<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Evidence in Federated Distributed Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2011</AwardEffectiveDate>
<AwardExpirationDate>01/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>508636.00</AwardTotalIntnAmount>
<AwardAmount>508636</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Susanne Wetzel</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>There is an increasing trend towards federated distributed systems, i.e., systems that are operated jointly by multiple different organizations or individuals. The interests of the participants in such a system are often highly diverse and/or in conflict with one another; for example, participants may be business competitors or based in hostile nations. Thus, federated systems are inherently vulnerable to insider attacks: the participants can try to subvert the system, exploit it for their own benefit, or attack other participants.&lt;br/&gt;&lt;br/&gt;However, the participants in a federated system are typically connected in the 'offline world' as well, e.g., through social networks or business relationships. This context can be leveraged to handle misbehavior through well-known, time-tested techniques like accountability and transparency. For example, if one participant can detect and prove that another participant has misbehaved, she can sue that participant for breach of contract.&lt;br/&gt;&lt;br/&gt;The goal of this research is to develop a key technology for enabling this approach, namely a reliable and general way to generate and verify evidence of misbehavior in federated systems. The project (i) studies the fundamental tradeoffs, requirements, and inherent costs of creating evidence; (ii) develops new algorithms for efficiently supporting different kinds of evidence; and (iii) evaluates these algorithms in the context of practical systems.&lt;br/&gt;&lt;br/&gt;The project is integrated with Penn's new undergraduate program in Market and Social Systems Engineering. It will produce and freely distribute software that can be used to defend federated systems against attacks and malicious insiders.</AbstractNarration>
<MinAmdLetterDate>01/12/2011</MinAmdLetterDate>
<MaxAmdLetterDate>01/17/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1054229</AwardID>
<Investigator>
<FirstName>Andreas</FirstName>
<LastName>Haeberlen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Andreas Haeberlen</PI_FULL_NAME>
<EmailAddress>ahae@cis.upenn.edu</EmailAddress>
<PI_PHON>2157466167</PI_PHON>
<NSF_ID>000562850</NSF_ID>
<StartDate>01/12/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pennsylvania</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191046205</ZipCode>
<PhoneNumber>2158987293</PhoneNumber>
<StreetAddress>Research Services</StreetAddress>
<StreetAddress2><![CDATA[3451 Walnut St, 5th Flr Franklin]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042250712</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042250712</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pennsylvania]]></Name>
<CityName>Philadelphia</CityName>
<StateCode>PA</StateCode>
<ZipCode>191046205</ZipCode>
<StreetAddress><![CDATA[Research Services]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~96133</FUND_OBLG>
<FUND_OBLG>2012~98928</FUND_OBLG>
<FUND_OBLG>2013~101803</FUND_OBLG>
<FUND_OBLG>2014~103960</FUND_OBLG>
<FUND_OBLG>2015~107812</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Many modern computer systems are federated - that is, they are operated jointly by multiple different individuals or organizations. The participants in such systems can have very different goals and interests, and their goals can be in conflict; for instance, they can be business competitors or based in hostile nations. Hence, there is a risk that these systems will be subverted "from within": the participants can easily change the software on their own machines, and thus cause them to "misbehave", if it helps them achieve their goals; they can even collude with other participants. Many instances of such misbehavior have been observed in widely deployed federated systems.<br /><br />This project has explored a new approach to this problem, which leverages the fact that the participants in a federated system are also connected in the "offline" world - e.g., through a social network or through business relationships. Because of this, it is not necessary to prevent all misbehavior: in many cases, the participants can be held accountable (e.g., in court), as long as there is a way to reliably detect that misbehavior has occurred, and to provably attribute it to a specific participant. This is difficult because, in general, there are many different ways in which participants can misbehave in a given system, and not all of them are necessarily known up front, when the system is designed. <br /><br />To enable this approach, the project has developed a range of new techniques for detecting misbehavior in federated systems and for generating evidence, including:<br /><br />* Algorithms that can (provably) detect a large class of misbehaviors and are applicable to a wide range of systems;<br />* Techniques for generating, verifying, and storing evidence efficiently;<br />* Ways to accommodate privacy concerns, e.g., when the system is handling sensitive data or the data is distributed across multiple participants;<br />* Techniques for detecting and proving timing-related misbehavior, such as slow processing speeds;<br />* Solutions for especially challenging forms of misbehavior, such as information leakage or covert timing channels;<br />* Generalizations to misbehavior that involves the omission of a required action; and<br />* Highly efficient algorithms that can generate evidence at very high speeds (e.g., for fast Internet connections) and can be implemented in hardware.<br /><br />We have shown how to apply our techniques to a wide range of systems and scenarios, including data analytics systems, peer-to-peer systems, cyber-physical systems, and the Internet's interdomain routing system. Implementations of our techniques are freely available under an open-source license. We have also worked on technology transfer with collaborators at Intel, BAE Systems, Akamai, and Microsoft. <br /><br />The project has contributed to several different areas. In distributed systems, it has established accountability as a new approach to handling faults and misbehavior; in security, it has introduced new types of evidence, and it has shown new ways to address challenging problems, such as information flow or covert channels; and in networking, it has provided new diagnostic and forensic techniques. Our work has also had impact beyond computer science: for instance, it has provided a way to add accountability for scientific studies that rely on private data, it has inspired a new approach to handling difficult product liability questions, and it has contributed to a new approach to measuring systemic risk in financial networks.<br /><br />The project has helped to train eight PhD students and one Master's student, and several of them have won awards, including a Yahoo KSC award and a MSR fellowship. Of the six students that have already graduated, one has become a tenure-track faculty member (at Rice University), and the five others have accepted positions in the tech industry (e.g., at Facebook, Intel, and Oracle). Results from the project have been integrated with two courses at Penn, and more than 1,000 undergraduate and graduate students have already learned about accountability using the materials we developed.</p><br> <p>            Last Modified: 04/19/2018<br>      Modified by: Andreas&nbsp;Haeberlen</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Many modern computer systems are federated - that is, they are operated jointly by multiple different individuals or organizations. The participants in such systems can have very different goals and interests, and their goals can be in conflict; for instance, they can be business competitors or based in hostile nations. Hence, there is a risk that these systems will be subverted "from within": the participants can easily change the software on their own machines, and thus cause them to "misbehave", if it helps them achieve their goals; they can even collude with other participants. Many instances of such misbehavior have been observed in widely deployed federated systems.  This project has explored a new approach to this problem, which leverages the fact that the participants in a federated system are also connected in the "offline" world - e.g., through a social network or through business relationships. Because of this, it is not necessary to prevent all misbehavior: in many cases, the participants can be held accountable (e.g., in court), as long as there is a way to reliably detect that misbehavior has occurred, and to provably attribute it to a specific participant. This is difficult because, in general, there are many different ways in which participants can misbehave in a given system, and not all of them are necessarily known up front, when the system is designed.   To enable this approach, the project has developed a range of new techniques for detecting misbehavior in federated systems and for generating evidence, including:  * Algorithms that can (provably) detect a large class of misbehaviors and are applicable to a wide range of systems; * Techniques for generating, verifying, and storing evidence efficiently; * Ways to accommodate privacy concerns, e.g., when the system is handling sensitive data or the data is distributed across multiple participants; * Techniques for detecting and proving timing-related misbehavior, such as slow processing speeds; * Solutions for especially challenging forms of misbehavior, such as information leakage or covert timing channels; * Generalizations to misbehavior that involves the omission of a required action; and * Highly efficient algorithms that can generate evidence at very high speeds (e.g., for fast Internet connections) and can be implemented in hardware.  We have shown how to apply our techniques to a wide range of systems and scenarios, including data analytics systems, peer-to-peer systems, cyber-physical systems, and the Internet's interdomain routing system. Implementations of our techniques are freely available under an open-source license. We have also worked on technology transfer with collaborators at Intel, BAE Systems, Akamai, and Microsoft.   The project has contributed to several different areas. In distributed systems, it has established accountability as a new approach to handling faults and misbehavior; in security, it has introduced new types of evidence, and it has shown new ways to address challenging problems, such as information flow or covert channels; and in networking, it has provided new diagnostic and forensic techniques. Our work has also had impact beyond computer science: for instance, it has provided a way to add accountability for scientific studies that rely on private data, it has inspired a new approach to handling difficult product liability questions, and it has contributed to a new approach to measuring systemic risk in financial networks.  The project has helped to train eight PhD students and one Master's student, and several of them have won awards, including a Yahoo KSC award and a MSR fellowship. Of the six students that have already graduated, one has become a tenure-track faculty member (at Rice University), and the five others have accepted positions in the tech industry (e.g., at Facebook, Intel, and Oracle). Results from the project have been integrated with two courses at Penn, and more than 1,000 undergraduate and graduate students have already learned about accountability using the materials we developed.       Last Modified: 04/19/2018       Submitted by: Andreas Haeberlen]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

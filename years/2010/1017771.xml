<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC: Small: To Configure or to Implement, That is the Access Control Question for Web Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>471970.00</AwardTotalIntnAmount>
<AwardAmount>506470</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Christopher Clifton</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>As the Web is playing a more and more important role in our lives,&lt;br/&gt;it has become criminals' preferred targets. &lt;br/&gt;Web-based vulnerabilities now outnumber traditional computer security &lt;br/&gt;concerns. We believe that the root cause of many of these attacks&lt;br/&gt;is the Web's current access control models: they are&lt;br/&gt;fundamentally inadequate to satisfy the protection needs of today's web.&lt;br/&gt;&lt;br/&gt;The objective of this project is to re-design the access control models&lt;br/&gt;for the Web to fix the security problems at the fundamental level. &lt;br/&gt;We target two essential components of the Web infrastructure: browser and database. &lt;br/&gt;We have designed a generic access control model for web browsers&lt;br/&gt;to enforce the browser-side access control needs of web&lt;br/&gt;applications. The model replaces the web's current Same Origin Policy (SOP) model,&lt;br/&gt;which is the culprit of many of the security problems. The success of this task &lt;br/&gt;will help significantly reduce the number of security problems at the browser side.&lt;br/&gt;We have also designed DAC-DB, a Discretionary &lt;br/&gt;Access Control (DAC) model for database to automate the enforcement of DAC in&lt;br/&gt;web applications. With this model, web application developers can be liberated &lt;br/&gt;from implementing the complicated and error-prone security enforcement logics. &lt;br/&gt;Both access control models are designed based on the well-established security principles.&lt;br/&gt;To help disseminate our results, we will implement our designs &lt;br/&gt;for open-source web browsers and databases, and persuade the web&lt;br/&gt;community to adopt our models. The outcome of this research will also&lt;br/&gt;be converted to hands-on labs to enhance students' learning in&lt;br/&gt;system security.</AbstractNarration>
<MinAmdLetterDate>08/16/2010</MinAmdLetterDate>
<MaxAmdLetterDate>05/03/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017771</AwardID>
<Investigator>
<FirstName>Wenliang</FirstName>
<LastName>Du</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Wenliang Du</PI_FULL_NAME>
<EmailAddress>wedu@ecs.syr.edu</EmailAddress>
<PI_PHON>3154439180</PI_PHON>
<NSF_ID>000483547</NSF_ID>
<StartDate>08/16/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Syracuse University</Name>
<CityName>SYRACUSE</CityName>
<ZipCode>132441200</ZipCode>
<PhoneNumber>3154432807</PhoneNumber>
<StreetAddress>OFFICE OF SPONSORED PROGRAMS</StreetAddress>
<StreetAddress2><![CDATA[211 Lyman Hall]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>24</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY24</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>002257350</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>SYRACUSE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002257350</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Syracuse University]]></Name>
<CityName>SYRACUSE</CityName>
<StateCode>NY</StateCode>
<ZipCode>132441200</ZipCode>
<StreetAddress><![CDATA[OFFICE OF SPONSORED PROGRAMS]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>24</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY24</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~471970</FUND_OBLG>
<FUND_OBLG>2011~7500</FUND_OBLG>
<FUND_OBLG>2012~15000</FUND_OBLG>
<FUND_OBLG>2013~12000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The main objective of this project is to improve the access control of the Web, in both traditional and mobile platforms. &nbsp;In the traditional platform, we have made the following discoveries. First, &nbsp;we linked many of the common security flaws made by web application developers to the stateless nature of the web, i.e., the design of the web architecture actually made it more difficult to develop secure code. That's why there are more vulnerabilities in web applications than those in the traditional applications. Second, based on this understanding, we have proposed and developed more effective access control systems for the web system, including browser and server. Through our evaluation, we have demonstrated that the number of security flaws will significantly drop if the web had adopted such an access control system.</p> <p><br />In the mobile platforms, people browse the Web mostly through dedicated mobile applications, instead of using browsers. This drastic difference (from the traditional platform) is enabled by mobile OS's decision to integrate the web browsing functionalities into mobile apps. We are the first group to study the security risks of such an app-web integration; we have identified several significant security problems through systematic studies. Our discoveries pointed out that in order to enable the seamless integration, some of the important security features implemented by the traditional browsers are weakened unintentionally. This could lead to severe problems in the future. The discovery was reported to Google, which, as results, provides us with a small gift grant to continue the research. Some of the decisions made by the later versions of Android are influenced by this work. The paper of this work is also frequently downloaded and cited by other researchers.</p> <p>Although the above discovery sounds severe when it was reported, the evidences were not sufficient to show that the potential problems were real; it was just a scientific prediction. Two years later, our prediction comes true. A new type of apps, called HTML5-based apps, are using the app-web integration feature, without realizing the weakened security feature. This type of apps are becoming more and more popular due to their portability advantages. Unfortunately, due to the weakening of the security features in the app-web integration, these apps, as we have discovered, are subject to a new type of code-injection attacks. The severe consequence is that if an app simply scans a QR code, reads an SMS message, plays MP3 songs or MP4 videos, or just looks for free Wi-Fi access points, they can be attacked. We have found over 400 vulnerable apps from our collection of 17,000 apps. To reach out to app developers as broadly as we can, in addition to the conventional academic venues, we, teaming up with the news media specialists in our university, reported our story to news media. Our story were successfully picked up by a number of news channels, potentially reaching out to many app developers. We have also developed countermeasures for the above problem, and made them freely available to developers. We have reached out to those who develop the frameworks for the HTML5-based apps, offering them the suggestions and patches to improve their frameworks against the attacks.</p> <p>In order to provide research training to undergraduate students, the project involved 5 undergraduate students in its life time, two of which are from under-represented&nbsp;minority groups. Three students plan to pursue a graduate degree due to their experiences in this project.&nbsp;</p> <p>The work produced by this research has been integrated to the Computer Security course that the PI has been teaching, potentially benefiting many students in the years to come. The PI also developed hands-on lab exercises based on the work from this project, and these labs are being used by the instructors fro...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The main objective of this project is to improve the access control of the Web, in both traditional and mobile platforms.  In the traditional platform, we have made the following discoveries. First,  we linked many of the common security flaws made by web application developers to the stateless nature of the web, i.e., the design of the web architecture actually made it more difficult to develop secure code. That's why there are more vulnerabilities in web applications than those in the traditional applications. Second, based on this understanding, we have proposed and developed more effective access control systems for the web system, including browser and server. Through our evaluation, we have demonstrated that the number of security flaws will significantly drop if the web had adopted such an access control system.   In the mobile platforms, people browse the Web mostly through dedicated mobile applications, instead of using browsers. This drastic difference (from the traditional platform) is enabled by mobile OS's decision to integrate the web browsing functionalities into mobile apps. We are the first group to study the security risks of such an app-web integration; we have identified several significant security problems through systematic studies. Our discoveries pointed out that in order to enable the seamless integration, some of the important security features implemented by the traditional browsers are weakened unintentionally. This could lead to severe problems in the future. The discovery was reported to Google, which, as results, provides us with a small gift grant to continue the research. Some of the decisions made by the later versions of Android are influenced by this work. The paper of this work is also frequently downloaded and cited by other researchers.  Although the above discovery sounds severe when it was reported, the evidences were not sufficient to show that the potential problems were real; it was just a scientific prediction. Two years later, our prediction comes true. A new type of apps, called HTML5-based apps, are using the app-web integration feature, without realizing the weakened security feature. This type of apps are becoming more and more popular due to their portability advantages. Unfortunately, due to the weakening of the security features in the app-web integration, these apps, as we have discovered, are subject to a new type of code-injection attacks. The severe consequence is that if an app simply scans a QR code, reads an SMS message, plays MP3 songs or MP4 videos, or just looks for free Wi-Fi access points, they can be attacked. We have found over 400 vulnerable apps from our collection of 17,000 apps. To reach out to app developers as broadly as we can, in addition to the conventional academic venues, we, teaming up with the news media specialists in our university, reported our story to news media. Our story were successfully picked up by a number of news channels, potentially reaching out to many app developers. We have also developed countermeasures for the above problem, and made them freely available to developers. We have reached out to those who develop the frameworks for the HTML5-based apps, offering them the suggestions and patches to improve their frameworks against the attacks.  In order to provide research training to undergraduate students, the project involved 5 undergraduate students in its life time, two of which are from under-represented minority groups. Three students plan to pursue a graduate degree due to their experiences in this project.   The work produced by this research has been integrated to the Computer Security course that the PI has been teaching, potentially benefiting many students in the years to come. The PI also developed hands-on lab exercises based on the work from this project, and these labs are being used by the instructors from many other schools.       Last Modified: 11/29/2014       Submitted by: Wenliang Du]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

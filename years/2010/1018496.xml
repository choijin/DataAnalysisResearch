<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Architectural Support for Security in the Many-core Age: Threats and Opportunities</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>539000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Modern multicore and manycore architectures have a number of new security threats. For example, shared microarchitecture components such as caches, core inter-connection networks, and memory controllers can be exploited for side-channel attacks or denial of service attacks. The evolution of workloads to exploit explicit parallelism will also likely lead to additional new threats. New forms of active viruses and trojans that reside on some cores and attempt to attack other applications are likely to arise. It is critical to anticipate such new forms of threats and design manycore systems in a manner that facilitates defeating them. If security is not treated as a first order design principle, these systems will be highly vulnerable to attacks, leading to enormous losses in money and productivity and a substantial effort to retrofit security in after the fact. The overall theme of this project is to identify and analyze security threats that can arise in a multicore and manycore environment and develop algorithms and techniques to address these threats in a complexity-effective manner and without sacrificing performance. Specific interest is on the techniques and solution patterns that can be reused to help with different threats. These include the use of additional cores and thread contexts to provide security without significant performance losses, and the development of techniques for virtual and physical isolation of shared resources to defend against sidechannel attacks and denial-of-service attacks. In addition, the project explores approaches for trading-off performance and security and also considers security vulnerabilities of new memory technologies.</AbstractNarration>
<MinAmdLetterDate>08/04/2010</MinAmdLetterDate>
<MaxAmdLetterDate>05/03/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018496</AwardID>
<Investigator>
<FirstName>Nael</FirstName>
<LastName>Abu-Ghazaleh</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nael Abu-Ghazaleh</PI_FULL_NAME>
<EmailAddress>nael@cs.binghamton.edu</EmailAddress>
<PI_PHON>6077774748</PI_PHON>
<NSF_ID>000275373</NSF_ID>
<StartDate>08/04/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Dmitry</FirstName>
<LastName>Ponomarev</LastName>
<PI_MID_INIT>V</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dmitry V Ponomarev</PI_FULL_NAME>
<EmailAddress>dponomar@binghamton.edu</EmailAddress>
<PI_PHON>6077772000</PI_PHON>
<NSF_ID>000126433</NSF_ID>
<StartDate>08/04/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Binghamton</Name>
<CityName>BINGHAMTON</CityName>
<ZipCode>139026000</ZipCode>
<PhoneNumber>6077776136</PhoneNumber>
<StreetAddress>4400 VESTAL PKWY E</StreetAddress>
<StreetAddress2><![CDATA[PO Box 6000]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY22</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>090189965</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Binghamton]]></Name>
<CityName>BINGHAMTON</CityName>
<StateCode>NY</StateCode>
<ZipCode>139026000</ZipCode>
<StreetAddress><![CDATA[4400 VESTAL PKWY E]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY22</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~500000</FUND_OBLG>
<FUND_OBLG>2011~8000</FUND_OBLG>
<FUND_OBLG>2012~15000</FUND_OBLG>
<FUND_OBLG>2013~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project investigated&nbsp; hardware support that can be provided in modern multi-core processors and memory systems to defend against a range of emerging attacks. &nbsp;Specifically, the project contributed techniques in three directions. First, we developed a new cache design (called Non-Monopolizable Cache) that protects against cache-based side-channel attacks on first-level caches through soft and flexible cache partitioning.&nbsp;The key idea is to provide every application sharing the cache with a small number of dedicated cache ways, while sharing&nbsp;the remaining ways dynamically.&nbsp;Second, we proposed a technique to perform efficient dynamic information flow tracking on a multithreaded processor by utilizing the hardware resources of a spare thread context. This technique relies on automatically generating security instructions in hardware and inserting them into the spare context that is repurposed to support secure execution. Third, we proposed two architectural mechaisms to defend systems against code reuse attacks. One technique is based on regulating the program control flow by dissallowing arbitrary control transfers from a function into a middle of another function, and the other technique is based on detecting the attack signatures using simple hardware that is located off of the critical path of the processor pipeline. All of the proposed mechanisms significantly enhance system security with low design complexity, small performance impact, and no (or minimal in some cases) changes to the application and systems software. The project also provided training for a number of graduate and undergraduate students at SUNY Binghamton.</p><br> <p>            Last Modified: 09/18/2014<br>      Modified by: Dmitry&nbsp;V&nbsp;Ponomarev</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project investigated  hardware support that can be provided in modern multi-core processors and memory systems to defend against a range of emerging attacks.  Specifically, the project contributed techniques in three directions. First, we developed a new cache design (called Non-Monopolizable Cache) that protects against cache-based side-channel attacks on first-level caches through soft and flexible cache partitioning. The key idea is to provide every application sharing the cache with a small number of dedicated cache ways, while sharing the remaining ways dynamically. Second, we proposed a technique to perform efficient dynamic information flow tracking on a multithreaded processor by utilizing the hardware resources of a spare thread context. This technique relies on automatically generating security instructions in hardware and inserting them into the spare context that is repurposed to support secure execution. Third, we proposed two architectural mechaisms to defend systems against code reuse attacks. One technique is based on regulating the program control flow by dissallowing arbitrary control transfers from a function into a middle of another function, and the other technique is based on detecting the attack signatures using simple hardware that is located off of the critical path of the processor pipeline. All of the proposed mechanisms significantly enhance system security with low design complexity, small performance impact, and no (or minimal in some cases) changes to the application and systems software. The project also provided training for a number of graduate and undergraduate students at SUNY Binghamton.       Last Modified: 09/18/2014       Submitted by: Dmitry V Ponomarev]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

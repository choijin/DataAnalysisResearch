<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>FIA:  Collaborative Research: MobilityFirst: A Robust and Trustworthy Mobility-Centric Architecture for the Future Internet</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>525000.00</AwardTotalIntnAmount>
<AwardAmount>525000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project is aimed at the design and experimental validation of a comprehensive clean-slate future Internet architecture. The proposed MobilityFirst architecture is motivated by the ongoing paradigm shift of Internet usage from today?s fixed PC/host (client)?server model to emerging mobile data services and pervasive computing applications. The major design goals of the architecture are: mobility as the norm with dynamic host and network mobility at scale; robustness with respect to intrinsic properties of the wireless medium; trustworthiness in the form of enhanced security and privacy; usability features such as support for context-aware services, evolvability, manageability and economic viability.  The key components of the MobilityFirst network design are: (1) separation of naming and addressing, implemented via a fast global dynamic name resolution service; (2) self-certifying public key network addresses to support strong authentication and security; (3) generalized delay-tolerant routing with in-network storage for packets in transit; (4) flat-label internetwork routing with public key addresses; (5) hop-by-hop transport protocols operating over segments rather than an end-to-end path; (6) a separate network management plane that provides enhanced visibility; (7) optional privacy features for user and location data; and (8) an integrated computing and storage layer to support programmability. The project?s scope includes architectural design, validation of key protocol components, testbed prototyping of the MobilityFirst architecture as a whole, and real-world protocol deployment on the GENI experimental infrastructure. The results of this project will provide architectural guidance for cellular-Internet convergence, and are expected to influence future technical standards in the networking industry.</AbstractNarration>
<MinAmdLetterDate>08/26/2010</MinAmdLetterDate>
<MaxAmdLetterDate>02/22/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1040626</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Reiter</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael Reiter</PI_FULL_NAME>
<EmailAddress>michael.reiter@duke.edu</EmailAddress>
<PI_PHON>9196606524</PI_PHON>
<NSF_ID>000161868</NSF_ID>
<StartDate>08/26/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of North Carolina at Chapel Hill</Name>
<CityName>CHAPEL HILL</CityName>
<ZipCode>275991350</ZipCode>
<PhoneNumber>9199663411</PhoneNumber>
<StreetAddress>104 AIRPORT DR STE 2200</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>608195277</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NORTH CAROLINA AT CHAPEL HILL</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>142363428</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of North Carolina at Chapel Hill]]></Name>
<CityName>CHAPEL HILL</CityName>
<StateCode>NC</StateCode>
<ZipCode>275991350</ZipCode>
<StreetAddress><![CDATA[104 AIRPORT DR STE 2200]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramReference>
<Code>7363</Code>
<Text>RES IN NETWORKING TECH &amp; SYS</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~525000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The outcomes of this project have been primarily in two areas.&nbsp; First,<br />the project has developed new approaches for scaling policy<br />enforcement on networks.&nbsp; Network security policies specify the<br />conditions that traffic must meet to be routed on the network; these<br />conditions might depend only on the packet header information (e.g.,<br />the source address, destination address, and protocol ports) or on<br />traffic content itself (e.g., whether analysis detects malware in the<br />packet).&nbsp; Traditional policy enforcement occurs at the ingress points<br />of a network, but this means that each ingress point must be<br />provisioned with enough hardware to perform analysis during the peak<br />demand at that ingress.&nbsp; Instead, our work has shown that there are<br />smarter ways to leverage available hardware resources elsewhere in the<br />network (e.g., at a datacenter) to enforce policies on network<br />traffic.&nbsp; In particular, our work shows how to do so while respecting<br />the capacities of links and nodes, as well as limits on how much<br />latency increase can be imposed on network traffic (to get the traffic<br />to the datacenter), for example.&nbsp; Moreover, we have shown that it is<br />possible to quickly recompute policy-enforcement assignments in<br />response to changes in the traffic patterns.&nbsp; While this capability<br />has immediate applications in scaling policy enforcement in networks<br />today, it was motivated by an envisioned future internet in which<br />internet service providers might enforce policies on traffic at the<br />request of other networks, e.g., to recognize and drop<br />denial-of-service traffic or other unwanted traffic well before it<br />reaches the destination network.&nbsp; The prospect of enforcing policies<br />on behalf of many destinations will place new scaling demands on these<br />systems that our innovations seek to address.<br /><br />Second, our work has demonstrated a new design for global-scale<br />services that are dominated by read operations on objects but that<br />still support frequent updates to them.&nbsp; In the context of a future<br />internet architecture, we anticipate this capability being used to<br />build services to support naming (somewhat like today's Domain Name<br />System, or DNS), routing, and propagating status updates about<br />different parts of the network.&nbsp; Among the most difficult challenges<br />to building such services is that updates in one part of the system<br />can take a long time to propagate to other parts of the system, in<br />which case many of the read results might be stale.&nbsp; At the core of<br />our design is a new approach to limiting how out-of-date a read result<br />can be.&nbsp; Previously known approaches to tightly limit the staleness of<br />read results also come with fundamental performance costs.&nbsp; In this<br />work we developed an alternative approach to limiting this staleness<br />that we believe should suffice for a wide range of applications.&nbsp; We<br />showed using traces of DNS requests served by the world's largest<br />content distribution network (Akamai) that our design is effective at<br />scaling to massive demand while strongly limiting the staleness of the<br />data read from it.</p> <p>This grant has served as the locus of research for two<br />Ph.D. students at the University of North Carolina at Chapel Hill.<br />One completed his dissertation during the course of this project and<br />has gone on to work in industry.&nbsp; The other laid the foundation for<br />his dissertation but will continue his research past the grant's<br />completion.</p><br> <p>            Last Modified: 11/26/2015<br>      Modified by: Michael&nbsp;Reiter</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The outcomes of this project have been primarily in two areas.  First, the project has developed new approaches for scaling policy enforcement on networks.  Network security policies specify the conditions that traffic must meet to be routed on the network; these conditions might depend only on the packet header information (e.g., the source address, destination address, and protocol ports) or on traffic content itself (e.g., whether analysis detects malware in the packet).  Traditional policy enforcement occurs at the ingress points of a network, but this means that each ingress point must be provisioned with enough hardware to perform analysis during the peak demand at that ingress.  Instead, our work has shown that there are smarter ways to leverage available hardware resources elsewhere in the network (e.g., at a datacenter) to enforce policies on network traffic.  In particular, our work shows how to do so while respecting the capacities of links and nodes, as well as limits on how much latency increase can be imposed on network traffic (to get the traffic to the datacenter), for example.  Moreover, we have shown that it is possible to quickly recompute policy-enforcement assignments in response to changes in the traffic patterns.  While this capability has immediate applications in scaling policy enforcement in networks today, it was motivated by an envisioned future internet in which internet service providers might enforce policies on traffic at the request of other networks, e.g., to recognize and drop denial-of-service traffic or other unwanted traffic well before it reaches the destination network.  The prospect of enforcing policies on behalf of many destinations will place new scaling demands on these systems that our innovations seek to address.  Second, our work has demonstrated a new design for global-scale services that are dominated by read operations on objects but that still support frequent updates to them.  In the context of a future internet architecture, we anticipate this capability being used to build services to support naming (somewhat like today's Domain Name System, or DNS), routing, and propagating status updates about different parts of the network.  Among the most difficult challenges to building such services is that updates in one part of the system can take a long time to propagate to other parts of the system, in which case many of the read results might be stale.  At the core of our design is a new approach to limiting how out-of-date a read result can be.  Previously known approaches to tightly limit the staleness of read results also come with fundamental performance costs.  In this work we developed an alternative approach to limiting this staleness that we believe should suffice for a wide range of applications.  We showed using traces of DNS requests served by the world's largest content distribution network (Akamai) that our design is effective at scaling to massive demand while strongly limiting the staleness of the data read from it.  This grant has served as the locus of research for two Ph.D. students at the University of North Carolina at Chapel Hill. One completed his dissertation during the course of this project and has gone on to work in industry.  The other laid the foundation for his dissertation but will continue his research past the grant's completion.       Last Modified: 11/26/2015       Submitted by: Michael Reiter]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Improving Software Diagnosability via Automatic Log Inferrence and Informative Logging</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>461979.00</AwardTotalIntnAmount>
<AwardAmount>477979</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Many applications require high reliability and availability. Unfortunately, as software has grown in size and complexity, many software bugs escape from testing into production runs and cause computer failures in real world. When a production run system fails, software engineers are frequently called upon emergency to diagnose and solve the issue within a tight time schedule. Because such errors directly impact customers? business, vendors make diagnosing and fixing them as the highest priority. Since in many cases it is impossible to reproduce production-run failures in house due to various reasons (privacy, execution environments, etc.), the common practice is that customers send back the logs generated by the failed system. Such logs are the sole data source (in addition to source code) for software engineers to troubleshoot the occurred failure. Based on what are in the logs, they manually infer what may have happened to narrow down the root cause.&lt;br/&gt;&lt;br/&gt;Unfortunately, the above diagnosis process is mostly manual, very often a trial-and-error guess game and therefore is time-consuming, error-prone and also expensive in terms of both labor cost and system down time. Especially because log messages are added in an ad-hoc way, many of them do not provide precise, informative clues to help narrow down the root cause. Furthermore, the rapidly growing size and complexity as well as software aging has greatly affected modern software?s diagnosability.&lt;br/&gt;&lt;br/&gt;To enable developers to quickly troubleshoot production-rune failures and shorten system downtime, we propose automatic log inference and informative logging to make real-world software more diagnosable. We not only will investigate new diagnosis tools that can analyze logs and source code together to help software engineers narrowing down the possible root causes, but also will explore new ways to automatically enhance software logging to make log messages more effective and efficient for diagnosis. As software has been widely used in our daily life, software reliability is becoming an important issue. Our proposed solutions will allow software engineers to quickly identify root causes and patches to fix the problem, which would significantly reduce the amount of system down time. As such, it benefits both software/system vendors and computer users, especially those financial companies where an hour of down time can result in multiple millions of dollars loss in business.</AbstractNarration>
<MinAmdLetterDate>07/22/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/25/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017784</AwardID>
<Investigator>
<FirstName>Yuanyuan</FirstName>
<LastName>Zhou</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Yuanyuan Zhou</PI_FULL_NAME>
<EmailAddress>yyzhou@cs.ucsd.edu</EmailAddress>
<PI_PHON>8588224663</PI_PHON>
<NSF_ID>000246561</NSF_ID>
<StartDate>07/22/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-San Diego</Name>
<CityName>La Jolla</CityName>
<ZipCode>920930934</ZipCode>
<PhoneNumber>8585344896</PhoneNumber>
<StreetAddress>Office of Contract &amp; Grant Admin</StreetAddress>
<StreetAddress2><![CDATA[9500 Gilman Drive, 0934]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>49</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA49</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>804355790</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, SAN DIEGO</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-San Diego]]></Name>
<CityName>La Jolla</CityName>
<StateCode>CA</StateCode>
<ZipCode>920930934</ZipCode>
<StreetAddress><![CDATA[Office of Contract &amp; Grant A]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>49</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA49</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~461979</FUND_OBLG>
<FUND_OBLG>2012~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="page" title="Page 1"> <div class="layoutArea"> <div class="column"> <p><span>Many applications require high reliability and availability. Unfortunately, as software has grown in size and complexity, many software bugs escape from testing into production runs and cause computer failures in real world.&nbsp;</span>Since in many cases it is impossible to reproduce production-run failures in house due to various reasons (privacy, execution environments, etc.), the common practice is that customers send back the logs generated by the failed system. Such logs are the sole data source (in addition to source code) for software engineers to troubleshoot the occurred failure. &nbsp;Unfortunately, the above diagnosis process is mostly manual, very often a trial-and-error guess game and therefore is time-consuming, error-prone and also expensive in terms of both labor cost and system down time. Especially because log messages are added in an ad-hoc way, many of them do not provide precise, informative clues to help narrow down the root cause. Furthermore, the rapidly growing size and complexity as well as software aging has greatly affected modern software&rsquo;s diagnosability.</p> <p><span>To enable developers to quickly troubleshoot production-rune failures and shorten system downtime, &nbsp;t</span>his project successfully addressed the issue regarding software logging for diagnosis. &nbsp;It was the first ever project attacking software logging quality and have proposed and evaluated several approaches to systematically improve logging to make it more useful and effective for software failure diagnosis. &nbsp;The work has published on the top peer-reviewed venues. and has attracted interests from several large companies including Cisco, EMC, etc. &nbsp; We have also trained 3 Ph.D students, one of whom joined University of Toront as a professor and the other two joined industry.</p> </div> </div> </div><br> <p>            Last Modified: 12/05/2016<br>      Modified by: Yuanyuan&nbsp;Zhou</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[    Many applications require high reliability and availability. Unfortunately, as software has grown in size and complexity, many software bugs escape from testing into production runs and cause computer failures in real world. Since in many cases it is impossible to reproduce production-run failures in house due to various reasons (privacy, execution environments, etc.), the common practice is that customers send back the logs generated by the failed system. Such logs are the sole data source (in addition to source code) for software engineers to troubleshoot the occurred failure.  Unfortunately, the above diagnosis process is mostly manual, very often a trial-and-error guess game and therefore is time-consuming, error-prone and also expensive in terms of both labor cost and system down time. Especially because log messages are added in an ad-hoc way, many of them do not provide precise, informative clues to help narrow down the root cause. Furthermore, the rapidly growing size and complexity as well as software aging has greatly affected modern software?s diagnosability.  To enable developers to quickly troubleshoot production-rune failures and shorten system downtime,  this project successfully addressed the issue regarding software logging for diagnosis.  It was the first ever project attacking software logging quality and have proposed and evaluated several approaches to systematically improve logging to make it more useful and effective for software failure diagnosis.  The work has published on the top peer-reviewed venues. and has attracted interests from several large companies including Cisco, EMC, etc.   We have also trained 3 Ph.D students, one of whom joined University of Toront as a professor and the other two joined industry.          Last Modified: 12/05/2016       Submitted by: Yuanyuan Zhou]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

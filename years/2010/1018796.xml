<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: DeNovo: Rethinking Hardware for Disciplined Parallelism</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Designing parallel systems that are scalable, low-cost, and power efficient, and yet easily programmable, is arguably one of the biggest challenges facing the computing industry today.  This proposal describes DeNovo, a hardware architecture and framework that rethinks shared memory system design from the ground up to take advantage of long term trends in disciplined parallel software. It takes the stance that, if shared memory multicore systems with hundreds of cores are to become widely used, programming languages and environments must evolve to enforce highly disciplined programming practices that greatly simplify the programmer's view of shared memory. Such languages must restrict shared memory interactions, enforcing data-race-freedom and determinism-by-default. Moreover, disciplined programming models communicate extensive information about shared memory access patterns (so the discipline can be enforced).  Exploiting the parallelism discipline and the communicated information can enable far simpler and more efficient hardware design than possible today.&lt;br/&gt;&lt;br/&gt;DeNovo proposes an extensive redesign of the memory hierarchy based on three ideas. First, the coherence protocol can be vastly simplified by taking advantage of the absence of software races to virtually eliminate races from the protocol and greatly reduce the number of hidden protocol states. Second, DeNovo uses application-level data sharing granularity (rather than software-oblivious cache lines) as the organizing principle for addressing, communication, and coherence granularities.  Third, DeNovo uses more efficient, point-to-point communication (close to explicit message passing) even for shared memory programs, by minimizing indirections through the directory and exploiting information about sharing granularity for bulk data transfers.  These changes will simultaneously simplify the hardware design, reduce power consumption, and improve performance.  Such a solution is highly unlikely without a fundamental rethinking of the memory system design, but is required to continue to reap the benefits of Moore's law.</AbstractNarration>
<MinAmdLetterDate>09/20/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/25/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018796</AwardID>
<Investigator>
<FirstName>Sarita</FirstName>
<LastName>Adve</LastName>
<PI_MID_INIT>V</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sarita V Adve</PI_FULL_NAME>
<EmailAddress>sadve@cs.uiuc.edu</EmailAddress>
<PI_PHON>2173338461</PI_PHON>
<NSF_ID>000232935</NSF_ID>
<StartDate>09/20/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Vikram</FirstName>
<LastName>Adve</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Vikram S Adve</PI_FULL_NAME>
<EmailAddress>vadve@cs.uiuc.edu</EmailAddress>
<PI_PHON>2172442016</PI_PHON>
<NSF_ID>000334755</NSF_ID>
<StartDate>09/20/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>Champaign</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207406</ZipCode>
<StreetAddress><![CDATA[1901 South First Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~329299</FUND_OBLG>
<FUND_OBLG>2012~170701</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Our society today relies on increased and energy-efficient compute performance for many of its endeavors. As silicon technology reaches its physical limits, however, it is becoming increasingly difficult to provide these performance increases from technology alone. We must rethink the architecture or organization of the machine to extract the next orders of magnitude of performance. Industry has moved to using multiple (parallel) and heterogeneous (application-customized) processors to unlock the performance potential for future systems. However, &nbsp;with both of these techniques, the memory system is a key source of inefficiency and an impediment to energy-efficient performance.</p> <p>This project, DeNovo, rethinks the memory system to make it more performance-, energy-, and complexity-efficient than the state-of-the-art. The key observation underlying the project was that many hardware inefficiencies occur because of undisciplined software practices (which also make software difficult to test and maintain). The thesis behind DeNovo was that if parallel programs became more disciplined (so they are easy to test and maintain), then hardware could be far more efficent as well.</p> <p>Led by a team of hardware and software researchers, the DeNovo project started with a notion of software discipline based on determinism - it showed that for deterministic programs, DeNovo was much simpler, higher performance, and more efficient than the state-of-the-art. While the community accepted this premise, there was considerable skepticism about the commercial viability of DeNovo because it was unclear if it could be applied to a broad enough class of software.</p> <p>The results of this project have laid the skepticism to rest by systematically showing &nbsp;that the benefits of DeNovo can in fact be obtained for software that obeys a simple discipline - the discipline of data-race-freedom that is already required by most high-level programming languages today. The stronger the discipline, the higher the benefits; but strong discipline is no longer necessary to benefit from the ideas developed in this project.</p> <p>This result is surprising and stands as a testament to the value and process of basic research. It is only by systematically starting with very disciplined programs that the project was able to &nbsp;uncover the fundamental sources of inefficiency in today's memory sytsems, develop solutions to those for restricted cases, and then slowly and systematically generalize them to increasingly unrestricted software.&nbsp;</p> <p>A particularly satisfying and unexpected bye-product of this research was that the same ideas applied equally well to heterogeneous systems. In hindsight, this is not surprising since the research was driven by concerns for fundamental limitations and not a specific commercial deployment.</p> <p>More specifically, for the specialist, the project shows a cache coherence protocol that is more<span>&nbsp;performance-, energy-, and complexity-efficient than the state-of-the-art because it has no invalidation/acknowledgement traffic, no directories, no false sharing, is a simple protocol without transient states, is easy to verify, and is easily extendable to communication optimizations.</span></p> <p><span>DeNovo's benefits have the potential to influence the design of next generation computing systems in a way that will help us stay on our trajectory of growing compute performance, which in turn is necessary for increased productivity and innovation in a growing number of societal endeavors today.</span></p> <p><span>The project has resulted in the training of several graduate students. Two students (one of whom is female) have already completed their PhD theses and joined the computing industry. &nbsp;Two more will be finishing their PhDs soon. One student received an M.S. and is working in a startup. The work has been disseminated in top public...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Our society today relies on increased and energy-efficient compute performance for many of its endeavors. As silicon technology reaches its physical limits, however, it is becoming increasingly difficult to provide these performance increases from technology alone. We must rethink the architecture or organization of the machine to extract the next orders of magnitude of performance. Industry has moved to using multiple (parallel) and heterogeneous (application-customized) processors to unlock the performance potential for future systems. However,  with both of these techniques, the memory system is a key source of inefficiency and an impediment to energy-efficient performance.  This project, DeNovo, rethinks the memory system to make it more performance-, energy-, and complexity-efficient than the state-of-the-art. The key observation underlying the project was that many hardware inefficiencies occur because of undisciplined software practices (which also make software difficult to test and maintain). The thesis behind DeNovo was that if parallel programs became more disciplined (so they are easy to test and maintain), then hardware could be far more efficent as well.  Led by a team of hardware and software researchers, the DeNovo project started with a notion of software discipline based on determinism - it showed that for deterministic programs, DeNovo was much simpler, higher performance, and more efficient than the state-of-the-art. While the community accepted this premise, there was considerable skepticism about the commercial viability of DeNovo because it was unclear if it could be applied to a broad enough class of software.  The results of this project have laid the skepticism to rest by systematically showing  that the benefits of DeNovo can in fact be obtained for software that obeys a simple discipline - the discipline of data-race-freedom that is already required by most high-level programming languages today. The stronger the discipline, the higher the benefits; but strong discipline is no longer necessary to benefit from the ideas developed in this project.  This result is surprising and stands as a testament to the value and process of basic research. It is only by systematically starting with very disciplined programs that the project was able to  uncover the fundamental sources of inefficiency in today's memory sytsems, develop solutions to those for restricted cases, and then slowly and systematically generalize them to increasingly unrestricted software.   A particularly satisfying and unexpected bye-product of this research was that the same ideas applied equally well to heterogeneous systems. In hindsight, this is not surprising since the research was driven by concerns for fundamental limitations and not a specific commercial deployment.  More specifically, for the specialist, the project shows a cache coherence protocol that is more performance-, energy-, and complexity-efficient than the state-of-the-art because it has no invalidation/acknowledgement traffic, no directories, no false sharing, is a simple protocol without transient states, is easy to verify, and is easily extendable to communication optimizations.  DeNovo's benefits have the potential to influence the design of next generation computing systems in a way that will help us stay on our trajectory of growing compute performance, which in turn is necessary for increased productivity and innovation in a growing number of societal endeavors today.  The project has resulted in the training of several graduate students. Two students (one of whom is female) have already completed their PhD theses and joined the computing industry.  Two more will be finishing their PhDs soon. One student received an M.S. and is working in a startup. The work has been disseminated in top publication venues and the PIs and students have presented this work at various companies (ARM, IBM, Intel, Nvidia, Qualcomm, etc.). While it is too early to predict commercial i...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

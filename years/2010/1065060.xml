<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC: Medium: Putting Differential Privacy To Work</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/15/2011</AwardEffectiveDate>
<AwardExpirationDate>02/28/2017</AwardExpirationDate>
<AwardTotalIntnAmount>1199950.00</AwardTotalIntnAmount>
<AwardAmount>1199950</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A wealth of data about individuals is constantly accumulating in various databases in the form of medical records, social network graphs, mobility traces in cellular networks, search logs, and movie ratings, to name only a few. There are many valuable uses for such datasets, but it is difficult to realize these uses while protecting privacy. Even when data collectors try to protect the privacy of their customers by releasing anonymized or aggregated data, this data often reveals much more information than intended. To reliably prevent such privacy violations, we need to replace the current ad-hoc solutions with a principled data release mechanism that offers strong, provable privacy guarantees. Recent research on DIFFERENTIAL PRIVACY has brought us a big step closer to achieving this goal. Differential privacy allows us to reason formally about what an adversary could learn from released data, while avoiding the need for many assumptions (e.g. about what an adversary might already know), the failure of which have been the cause of privacy violations in the past. However, despite its great promise, differential privacy is still rarely used in practice. Proving that a given computation can be performed in a differentially private way requires substantial manual effort by experts in the field, which prevents it from scaling in practice.  &lt;br/&gt;&lt;br/&gt;This project aims to put differential privacy to work---to build a system that supports differentially private data analysis, can be used by the average programmer, and is general enough to be used in a wide variety of applications. Such a system could be used pervasively and make strong privacy guarantees a standard feature wherever sensitive data is being released or analyzed. Specific contributions will include ENRICHING THE FUNDAMENTAL MODEL OF DIFFERENTIAL PRIVACY to address practical issues such as data with inherent correlations, increased accuracy, privacy of functions, or privacy for streaming data; DEVELOPING A DIFFERENTIALLY PRIVATE PROGRAMMING LANGUAGE, along with a compiler that can automatically prove programs in this language to be differentially private, and a runtime system that is hardened against side-channel attacks; and SHOWING HOW TO APPLY DIFFERENTIAL PRIVACY IN A DISTRIBUTED SETTING in which the private data is spread across many databases in different administrative domains, with possible overlaps, heterogeneous schemata, and different expectations of privacy.  The long-term goal is to combine ideas from differential privacy, programming languages, and distributed systems to make data analysis techniques with strong, provable privacy guarantees practical for general use. The themes of differential privacy are also being integrated into Penn's new undergraduate curriculum on Market and Social Systems Engineering.</AbstractNarration>
<MinAmdLetterDate>03/24/2011</MinAmdLetterDate>
<MaxAmdLetterDate>08/12/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1065060</AwardID>
<Investigator>
<FirstName>Benjamin</FirstName>
<LastName>Pierce</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Benjamin C Pierce</PI_FULL_NAME>
<EmailAddress>bcpierce@cis.upenn.edu</EmailAddress>
<PI_PHON>2158986222</PI_PHON>
<NSF_ID>000452070</NSF_ID>
<StartDate>03/24/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Andreas</FirstName>
<LastName>Haeberlen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Andreas Haeberlen</PI_FULL_NAME>
<EmailAddress>ahae@cis.upenn.edu</EmailAddress>
<PI_PHON>2157466167</PI_PHON>
<NSF_ID>000562850</NSF_ID>
<StartDate>03/24/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pennsylvania</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191046205</ZipCode>
<PhoneNumber>2158987293</PhoneNumber>
<StreetAddress>Research Services</StreetAddress>
<StreetAddress2><![CDATA[3451 Walnut St, 5th Flr Franklin]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042250712</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042250712</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pennsylvania]]></Name>
<CityName>Philadelphia</CityName>
<StateCode>PA</StateCode>
<ZipCode>191046205</ZipCode>
<StreetAddress><![CDATA[Research Services]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~263250</FUND_OBLG>
<FUND_OBLG>2012~624450</FUND_OBLG>
<FUND_OBLG>2013~312250</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>A wealth of data can be found in medical records, social network graphs, mobility traces in cellular networks, search logs, movie ratings, etc. There are many valuable uses for such datasets, but it is difficult to realize them while protecting privacy. To reliably prevent violations, we need to replace current ad-hoc solutions with a principled data release mechanism offering strong, provable privacy guarantees. Recent research on DIFFERENTIAL PRIVACY has brought us a big step closer to achieving this goal, allowing us to reason formally about what an adversary could learn from released data while avoiding the need for fragile assumptions about what an adversary does not already know. However, despite its promise, differential privacy has rarely been used in practice, partly because proving that a given computation can be performed privately requires substantial expert effort. &nbsp;The broad aim of this project has been to "put differential privacy to work" by designing, analyzing, and implementing systems that support differentially private analysis.</p> <p>FOUNDATIONS. &nbsp;We extended the theoretical foundations for conducting analyses of big datasets subject to privacy protections. This includes computing low-rank approximations to matrices (useful for recommendation engines), finding the most frequent elements amongst a large decentralized dataset (similar techniques have been put into practice at Google and Apple), producing high-quality "synthetic" datasets of high dimensional data (like the Netflix data set), and controlling over-fitting in machine learning.</p> <p>LANGUAGES AND VERIFICATION. &nbsp;We designed and implemented a series of programming languages for differentially private querying. &nbsp;The first language, FUZZ, is a simple functional programming language with a type system for inferring an upper bound on the sensitivity of functions; the results from this analysis can then be used to add the correct amount of noise to the results of the query. &nbsp;The second, DFUZZ, is an extension of Fuzz with a combination of "linear indexed types" and "lightweight dependent types", allowing a richer sensitivity analysis that is able to certify a larger class of queries as differentially private, including ones whose sensitivity depends on runtime information. Finally, ADAPTIVE FUZZ adds support for adaptive querying where, at each step, both the choice of the next function and its privacy parameters are informed by the results of prior queries.</p> <p>We also developed tools for VERIFYING differentially private algorithms. &nbsp;In particular, we implemented an algorithm for automatic sensitivity analysis for Fuzz programs, eliminating annotation burden and making verification less costly. &nbsp;Second, working jointly work with IMDEA software and Dundee University, we have developed a series of RELATIONAL PROGRAM LOGICS, which support checking properties referring to two runs of the same program, naturally capturing differential privacy.</p> <p>SYSTEMS. &nbsp;In practice, it is often useful to ask questions about sensitive data sets that are held by someone else. However, this is difficult to do efficiently - particularly when multiple parties are involved - and it creates additional privacy risks. We have developed algorithms that can mitigate these risks, and that can answer common types of distributed queries much faster: in a few minutes or hours, instead of several years. We have also found a way to verify that a question about sensitive data has been answered correctly, without revealing what the underlying data actually was.</p> <p>APPLICATIONS. &nbsp;In practice, it is often useful to ask questions about sensitive data sets that are held by someone else. However, this is difficult to do efficiently - particularly when multiple parties are involved - and it creates additional privacy risks. We have developed algorithms that can mitigate these risks, and that can answer common types of distributed queries much faster: in a few minutes or hours, instead of several years. &nbsp;We have also found a way to verify that a question about sensitive data has been answered correctly, without revealing what the underlying data actually was.<br />We applied our solutions to a number of common data mining algorithms, as well as to a larger case study: measuring systemic risk in financial networks. Systemic risk is though to have been a major factor in the financial crisis of 2008, but it is difficult to measure because it depends on sensitive financial data, which is heavily protected. We have developed a way to measure the risk privately, while giving strong guarantees to the banks that their data will not be leaked. Our results could serve as the foundation for an 'early-warning system' for future financial crises.</p> <p>EDUCATION AND OUTREACH. &nbsp;With Cynthia Dwork, Co-PI Roth published a monograph on differential privacy that has become a standard reference in the area. &nbsp;The theme of differential privacy was also integrated into a new sophomore-level course on scalable and cloud computing (NETS 212), one of the flagship courses in Penn's new undergraduate NETS curriculum.</p> <p>http://privacy.cis.upenn.edu.&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/16/2017<br>      Modified by: Benjamin&nbsp;C&nbsp;Pierce</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ A wealth of data can be found in medical records, social network graphs, mobility traces in cellular networks, search logs, movie ratings, etc. There are many valuable uses for such datasets, but it is difficult to realize them while protecting privacy. To reliably prevent violations, we need to replace current ad-hoc solutions with a principled data release mechanism offering strong, provable privacy guarantees. Recent research on DIFFERENTIAL PRIVACY has brought us a big step closer to achieving this goal, allowing us to reason formally about what an adversary could learn from released data while avoiding the need for fragile assumptions about what an adversary does not already know. However, despite its promise, differential privacy has rarely been used in practice, partly because proving that a given computation can be performed privately requires substantial expert effort.  The broad aim of this project has been to "put differential privacy to work" by designing, analyzing, and implementing systems that support differentially private analysis.  FOUNDATIONS.  We extended the theoretical foundations for conducting analyses of big datasets subject to privacy protections. This includes computing low-rank approximations to matrices (useful for recommendation engines), finding the most frequent elements amongst a large decentralized dataset (similar techniques have been put into practice at Google and Apple), producing high-quality "synthetic" datasets of high dimensional data (like the Netflix data set), and controlling over-fitting in machine learning.  LANGUAGES AND VERIFICATION.  We designed and implemented a series of programming languages for differentially private querying.  The first language, FUZZ, is a simple functional programming language with a type system for inferring an upper bound on the sensitivity of functions; the results from this analysis can then be used to add the correct amount of noise to the results of the query.  The second, DFUZZ, is an extension of Fuzz with a combination of "linear indexed types" and "lightweight dependent types", allowing a richer sensitivity analysis that is able to certify a larger class of queries as differentially private, including ones whose sensitivity depends on runtime information. Finally, ADAPTIVE FUZZ adds support for adaptive querying where, at each step, both the choice of the next function and its privacy parameters are informed by the results of prior queries.  We also developed tools for VERIFYING differentially private algorithms.  In particular, we implemented an algorithm for automatic sensitivity analysis for Fuzz programs, eliminating annotation burden and making verification less costly.  Second, working jointly work with IMDEA software and Dundee University, we have developed a series of RELATIONAL PROGRAM LOGICS, which support checking properties referring to two runs of the same program, naturally capturing differential privacy.  SYSTEMS.  In practice, it is often useful to ask questions about sensitive data sets that are held by someone else. However, this is difficult to do efficiently - particularly when multiple parties are involved - and it creates additional privacy risks. We have developed algorithms that can mitigate these risks, and that can answer common types of distributed queries much faster: in a few minutes or hours, instead of several years. We have also found a way to verify that a question about sensitive data has been answered correctly, without revealing what the underlying data actually was.  APPLICATIONS.  In practice, it is often useful to ask questions about sensitive data sets that are held by someone else. However, this is difficult to do efficiently - particularly when multiple parties are involved - and it creates additional privacy risks. We have developed algorithms that can mitigate these risks, and that can answer common types of distributed queries much faster: in a few minutes or hours, instead of several years.  We have also found a way to verify that a question about sensitive data has been answered correctly, without revealing what the underlying data actually was. We applied our solutions to a number of common data mining algorithms, as well as to a larger case study: measuring systemic risk in financial networks. Systemic risk is though to have been a major factor in the financial crisis of 2008, but it is difficult to measure because it depends on sensitive financial data, which is heavily protected. We have developed a way to measure the risk privately, while giving strong guarantees to the banks that their data will not be leaked. Our results could serve as the foundation for an 'early-warning system' for future financial crises.  EDUCATION AND OUTREACH.  With Cynthia Dwork, Co-PI Roth published a monograph on differential privacy that has become a standard reference in the area.  The theme of differential privacy was also integrated into a new sophomore-level course on scalable and cloud computing (NETS 212), one of the flagship courses in Penn's new undergraduate NETS curriculum.  http://privacy.cis.upenn.edu.              Last Modified: 05/16/2017       Submitted by: Benjamin C Pierce]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

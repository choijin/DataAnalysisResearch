<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Collaborative: Aster*x: Load-Balancing Web Traffic over Wide-Area Networks</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>75000.00</AwardTotalIntnAmount>
<AwardAmount>75000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Joseph Lyles</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project proposes a comprehensive load-balancing solution to minimize client response time and reduce system costs for services hosted in wide-area networks. The system, called Aster*x, uses the global state of server load and network congestion, and dynamically routes the requests over appropriate (server and path) pairs, calculated using the load-balancing algorithms developed by project staff. &lt;br/&gt;&lt;br/&gt;The GENI network infrastructure will be used for extensive deployment, evaluation, and demonstration of Aster*x. Aster*x exploits OpenFlow?s logically centralized controller to obtain the global network state and route flows of various granularities. It will use the PlanetLab and ProtoGENI-based computation substrate to host the replicated web service and to generate client requests from multiple locations. The project will provide an opportunity for students across four universities to collaborate and build a relatively large experimental system on GENI.</AbstractNarration>
<MinAmdLetterDate>08/07/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/07/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1050290</AwardID>
<Investigator>
<FirstName>Nick</FirstName>
<LastName>McKeown</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nick W McKeown</PI_FULL_NAME>
<EmailAddress>nickm@ee.stanford.edu</EmailAddress>
<PI_PHON>6507253641</PI_PHON>
<NSF_ID>000487607</NSF_ID>
<StartDate>08/07/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Stanford University</Name>
<CityName>Stanford</CityName>
<ZipCode>943052004</ZipCode>
<PhoneNumber>6507232300</PhoneNumber>
<StreetAddress>450 Jane Stanford Way</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009214214</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>LELAND STANFORD JUNIOR UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009214214</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Stanford University]]></Name>
<CityName>Stanford</CityName>
<StateCode>CA</StateCode>
<ZipCode>943052004</ZipCode>
<StreetAddress><![CDATA[450 Jane Stanford Way]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~75000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Most modern medium to large-scale Internet services load-balance incoming requests across a network of multiple geographically distributed servers in order to minimize response time for their clients. While load-balancers today can pick a server, they are not free to choose a good path to the server, placing them at the mercy of the network to choose the path for them.</p> <p>The goal of the project was twofold: (1) to explore the research of question of whether it is possible to build, at scale, an &ldquo;ideal&rdquo; load-balancing system that can jointly select the server as well as the path, and if done so, how much better would it be compared to a load-balancer that independently picks servers and paths. (2) to build a motivating application for the GENI testbed and demonstrate it at scale. The project was successful on both counts.</p> <p>We found that, given sufficient visibility and control over the network, it is indeed possible to build the &ldquo;ideal&rdquo; load-balancer. We demonstrated it by building a prototype load-balancer, called Aster*x, and running it live on a GENI slice spanning 9 campuses across the US. Aster*x was successfully demonstrated in the plenary session of GEC-9 held in Washington DC.</p> <p>Common sense suggests that the &ldquo;ideal&rdquo; load-balancer &ndash; that picks the (server, path) pair &ndash; will perform much better than a &ldquo;path-oblivious&rdquo; load-balancer that selects servers and paths independently. We accurately emulated a large number of different network topologies and routing strategies. We found, not surprisingly, that the ideal load-balancer significantly outperforms networks with shortest-path routing. Our results are more surprising when we compare the ideal load-balancer with a network that uses traffic engineering, independently from the load-balancer. Although the load-balancer and network have different goals, their interaction leads the system towards an equilibrium that is close to optimal. We developed a game-theoretic model to explain this behavior.</p> <p>The project is of both academic and commercial interest. The products of this project -- Aster*x and some of our evaluation results -- have formed the basis of a series of invited talks at various academic and industrial venues, including Amazon Web Services, University of Washington, Google, Facebook, and Netflix.</p><br> <p>            Last Modified: 05/21/2013<br>      Modified by: Nick&nbsp;W&nbsp;Mckeown</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Most modern medium to large-scale Internet services load-balance incoming requests across a network of multiple geographically distributed servers in order to minimize response time for their clients. While load-balancers today can pick a server, they are not free to choose a good path to the server, placing them at the mercy of the network to choose the path for them.  The goal of the project was twofold: (1) to explore the research of question of whether it is possible to build, at scale, an "ideal" load-balancing system that can jointly select the server as well as the path, and if done so, how much better would it be compared to a load-balancer that independently picks servers and paths. (2) to build a motivating application for the GENI testbed and demonstrate it at scale. The project was successful on both counts.  We found that, given sufficient visibility and control over the network, it is indeed possible to build the "ideal" load-balancer. We demonstrated it by building a prototype load-balancer, called Aster*x, and running it live on a GENI slice spanning 9 campuses across the US. Aster*x was successfully demonstrated in the plenary session of GEC-9 held in Washington DC.  Common sense suggests that the "ideal" load-balancer &ndash; that picks the (server, path) pair &ndash; will perform much better than a "path-oblivious" load-balancer that selects servers and paths independently. We accurately emulated a large number of different network topologies and routing strategies. We found, not surprisingly, that the ideal load-balancer significantly outperforms networks with shortest-path routing. Our results are more surprising when we compare the ideal load-balancer with a network that uses traffic engineering, independently from the load-balancer. Although the load-balancer and network have different goals, their interaction leads the system towards an equilibrium that is close to optimal. We developed a game-theoretic model to explain this behavior.  The project is of both academic and commercial interest. The products of this project -- Aster*x and some of our evaluation results -- have formed the basis of a series of invited talks at various academic and industrial venues, including Amazon Web Services, University of Washington, Google, Facebook, and Netflix.       Last Modified: 05/21/2013       Submitted by: Nick W Mckeown]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>FIA: Collaborative Research: NEBULA: A Future Internet That Supports Trustworthy Cloud Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>1005199.00</AwardTotalIntnAmount>
<AwardAmount>1005199</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Cloud computing provides economic advantages from shared resources, but security is a major risk for remote operations and a major barrier to the approach, with challenges for both hosts and the network. NEBULA is a potential future Internet architecture providing trustworthy networking for the emerging cloud computing model of always-available network services. NEBULA addresses many network security issues, including data availability with a new core architecture (NCore) based on redundant connections to and between NEBULA core routers, accountability and trust with a new policy-driven data plane (NDP), and extensibility with a new control plane (NVENT) that supports network virtualization, enabling results from other future Internet architectures to be incorporated in NEBULA. NEBULA?s data plane uses cryptographic tokens as demonstrable proofs that a path was both authorized and followed. The NEBULA control plane provides one or more authorized paths to NEBULA edge nodes; multiple paths provide reliability and load-balancing. The NEBULA core uses redundant high-speed paths between data centers and core routers, as well as fault-tolerant router software, for always-on core networking. The NEBULA architecture removes network (in) security as a prohibitive factor that would otherwise prevent the realization of many cloud computing applications, such as electronic health records and data from medical sensors. NEBULA will produce a working system that is deployable on core routers and is viable from both an economic and a regulatory perspective.</AbstractNarration>
<MinAmdLetterDate>08/26/2010</MinAmdLetterDate>
<MaxAmdLetterDate>02/12/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1040689</AwardID>
<Investigator>
<FirstName>Kenneth</FirstName>
<LastName>Birman</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kenneth Birman</PI_FULL_NAME>
<EmailAddress>ken@cs.cornell.edu</EmailAddress>
<PI_PHON>6072559199</PI_PHON>
<NSF_ID>000121896</NSF_ID>
<StartDate>08/26/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Zygmunt</FirstName>
<LastName>Haas</LastName>
<PI_MID_INIT>J</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Zygmunt J Haas</PI_FULL_NAME>
<EmailAddress>haas@utdallas.edu</EmailAddress>
<PI_PHON>9728833571</PI_PHON>
<NSF_ID>000468776</NSF_ID>
<StartDate>01/25/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Robbert</FirstName>
<LastName>VanRenesse</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Robbert VanRenesse</PI_FULL_NAME>
<EmailAddress>rvr@cs.cornell.edu</EmailAddress>
<PI_PHON>6072551021</PI_PHON>
<NSF_ID>000168047</NSF_ID>
<StartDate>08/26/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Hakim</FirstName>
<LastName>Weatherspoon</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Hakim Weatherspoon</PI_FULL_NAME>
<EmailAddress>hweather@cs.cornell.edu</EmailAddress>
<PI_PHON>6072555014</PI_PHON>
<NSF_ID>000508809</NSF_ID>
<StartDate>08/26/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY23</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>872612445</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CORNELL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002254837</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Cornell University]]></Name>
<CityName>Ithaca</CityName>
<StateCode>NY</StateCode>
<ZipCode>148502820</ZipCode>
<StreetAddress><![CDATA[373 Pine Tree Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY23</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7363</Code>
<Text>RES IN NETWORKING TECH &amp; SYS</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~670133</FUND_OBLG>
<FUND_OBLG>2012~335066</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Cornell's efforts within the NSF FIA-sponsored NEBULA focused on three topics.</strong></p> <p>&nbsp;</p> <p><strong>Our  first activity solved a long-open problem in network routing. &nbsp;Previous research  had shown that network disruptions often stem from transient instabilities  within the network routers that results in slow delivery of data to the user.&nbsp;  The user experiences choppy audio or video, slow page downloads, and such  efforts could be dangerous in the future when we start to see control systems  for the smart power grid, or for smart cars, that may depend on network access  to databases and other services. </strong></p> <p>&nbsp;</p> <p><strong>Companies  such as Cisco (with which we partnered) have made their hardware routers more  reliable, but the software infrastructures have lagged.&nbsp; For example, Cisco  showed us examples of routing instability that lasted two or three minutes,  triggered by rebooting a router daemon: an event that would normally require  less than a second to perform.&nbsp; In these episodes, the hardware and the routing  daemon were quickly back to normal, yet the Internet would &ldquo;ring like a bell.&rdquo;  &nbsp;&nbsp;The brief disruption to the routing protocols employed at the Internet&rsquo;s  lowest levels could be seen to propagate widely, dying out only over an extended  period of time.&nbsp; Clearly for the future Internet to play the intended roles,  this kind of issue needs to be resolved.</strong></p> <p>&nbsp;</p> <p><strong>Within  FIA, Cornell (Ken Birman, Robbert Van Renesse and PhD student Robert Surton) teamed with other groups to help Cisco demonstrate a  solution to this problem. &nbsp;The approach used was to make small changes to the  software used by the standard router daemon program, yielding a fault-tolerant  version that stores all of its routing information in a special kind of data  structure called a distributed hash table (DHT). A DHT remains available even if  some router components fail.&nbsp; &nbsp;Our approach required minimal changes to the  router daemon code: basically, the data structures within which it stored  routing information were modified to store data in the DHT and to reload data  from the DHT on restart, but was otherwise unmodifed.  &nbsp;Cornell&rsquo;s specific contribution was to show how we can completely mask the  daemon restart events from the perspective of other remote routers.&nbsp; We did this  by creating a new technology for <em>unbreakable TCP network links.&nbsp; </em>The work  could also be useful in building other forms of highly available services, like  cloud computing services that never crash &ndash; just the kinds of solutions that  will be needed for smart cars, the smart power grid, and other continuously  operational applications.&nbsp; We published this work in two venues: one article in  the IEEE Network Computing magazine discussed the overall project, while a more  technical one in the 2013 IEEE Dependable Systems and Networks conference  focused on our TCP-R protocol.</strong></p> <p>&nbsp;</p> <p><strong>Our  second big effort focused on the stability and performance of network traffic at  very high data rates: 10Gb/s and beyond.&nbsp; In work led by Cornell&rsquo;s Hakim  Weatherspoon, we determined that network disruptions can sometimes be traced to  unsteady data rates caused when high speed routers or network interfaces allow a  steady data flow (of the kind needed for voice or video) to become bursty by batching messages and then releasing the batch all  at once. &nbsp;Weatherspoon&rsquo;s group created a new kind of hardware solution, called  SONIC (the Software-Defined Network Interface Card) that can measure or control  inter-packet timing at very high resolution levels: accurate to tens of  picoseconds.&nbsp; SONIC makes it possible to pinpoint the causes of data loss in  high speed networks, to study the way that p...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Cornell's efforts within the NSF FIA-sponsored NEBULA focused on three topics.     Our  first activity solved a long-open problem in network routing.  Previous research  had shown that network disruptions often stem from transient instabilities  within the network routers that results in slow delivery of data to the user.   The user experiences choppy audio or video, slow page downloads, and such  efforts could be dangerous in the future when we start to see control systems  for the smart power grid, or for smart cars, that may depend on network access  to databases and other services.      Companies  such as Cisco (with which we partnered) have made their hardware routers more  reliable, but the software infrastructures have lagged.  For example, Cisco  showed us examples of routing instability that lasted two or three minutes,  triggered by rebooting a router daemon: an event that would normally require  less than a second to perform.  In these episodes, the hardware and the routing  daemon were quickly back to normal, yet the Internet would "ring like a bell."    The brief disruption to the routing protocols employed at the InternetÆs  lowest levels could be seen to propagate widely, dying out only over an extended  period of time.  Clearly for the future Internet to play the intended roles,  this kind of issue needs to be resolved.     Within  FIA, Cornell (Ken Birman, Robbert Van Renesse and PhD student Robert Surton) teamed with other groups to help Cisco demonstrate a  solution to this problem.  The approach used was to make small changes to the  software used by the standard router daemon program, yielding a fault-tolerant  version that stores all of its routing information in a special kind of data  structure called a distributed hash table (DHT). A DHT remains available even if  some router components fail.   Our approach required minimal changes to the  router daemon code: basically, the data structures within which it stored  routing information were modified to store data in the DHT and to reload data  from the DHT on restart, but was otherwise unmodifed.   CornellÆs specific contribution was to show how we can completely mask the  daemon restart events from the perspective of other remote routers.  We did this  by creating a new technology for unbreakable TCP network links.  The work  could also be useful in building other forms of highly available services, like  cloud computing services that never crash &ndash; just the kinds of solutions that  will be needed for smart cars, the smart power grid, and other continuously  operational applications.  We published this work in two venues: one article in  the IEEE Network Computing magazine discussed the overall project, while a more  technical one in the 2013 IEEE Dependable Systems and Networks conference  focused on our TCP-R protocol.     Our  second big effort focused on the stability and performance of network traffic at  very high data rates: 10Gb/s and beyond.  In work led by CornellÆs Hakim  Weatherspoon, we determined that network disruptions can sometimes be traced to  unsteady data rates caused when high speed routers or network interfaces allow a  steady data flow (of the kind needed for voice or video) to become bursty by batching messages and then releasing the batch all  at once.  WeatherspoonÆs group created a new kind of hardware solution, called  SONIC (the Software-Defined Network Interface Card) that can measure or control  inter-packet timing at very high resolution levels: accurate to tens of  picoseconds.  SONIC makes it possible to pinpoint the causes of data loss in  high speed networks, to study the way that precisely-spaced trains of packets  are perturbed as they flow through the network, and even to detect (or create)  covert channels that pass information by encoding it in the number of network  idle characters interposed between legitimate packets.  With standard network  cards this would not have been feasible because the granularity...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC:  Small: Securing Programs and Data In Remote and Hostile Environments</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>499219.00</AwardTotalIntnAmount>
<AwardAmount>499219</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Cryptographic protocols lie at the core of sound and trustworthy solutions to protect the integrity and secrecy of data stored in private computers and remote servers; and programs executed on hand held devices and remote host computers. Such protocols are guaranteed to preserve some pre-defined security requirements in the face of malicious attacks.&lt;br/&gt;&lt;br/&gt;The starting point of this research project is that the nature of these attacks has changed fundamentally in recent years. A fast growing worldwide trend is to view computation as a commodity. Organizations or individuals may pay specialized providers (such as the Amazon EC2) to carry out desired computations for them. This trend (often called ``Cloud Computing'') carries with it great promise in terms of overall computing efficiency, power consumption, and financial flexibility.  However, it also opens the door to much more acute security threats than those we have encountered so far. Without additional protection, the client must completely trust the provider to perform the computation correctly, and at the same time keep the secrecy of the clients' most sensitive private data.  Putting in protection to reduce this trust is a delicate and complex challenge which requires a paradigm shift. Traditional cryptographic techniques and concepts seem to be insufficient to address these new threats and opportunities&lt;br/&gt;&lt;br/&gt;In this project, we propose to address several challenges arising due to this new computing reality. These include: (1) Designing techniques for securing remote executable code both to safeguard the underlying algorithms and to enable limited time execution. (2) Designing techniques for achieving security against computational side-channel attacks on programs executed in hostile environments, (3) Diversifying the constructions of homomorphic encryption and further exploring their potential to current applications.&lt;br/&gt;&lt;br/&gt; Intellectual Merit and Broad Impact: Protecting the electronic information world is paramount to the success and stability of modern society.  The main goal of this project is to develop techniques for the security of remotely executed programs and cryptographic primitives. We ask basic questions underlying the development of such techniques: Can we build cryptographic primitives that resist various forms of inadvertent information leakage, such as the ones that occur due to side-channel attacks? can the computational assumptions that we have made thus far withstand the existence of extra auxiliary information about their solutions?  Can fully homomorphic encryption schemes be demonstrated that possess other useful properties such as leakage-resilience, circular security and the ability to test the ciphertext for predefined predicates?  Progress on any of these questions will significantly enhance our tool kit for the remote storage of data and program execution. We believe that this project addresses the most important area of investigation in cryptography today and will have broad impact on teaching us how to utilize remote computers to run your computations maintaining security. This may have far reaching conclusions for the safe use of cloud computing.</AbstractNarration>
<MinAmdLetterDate>07/28/2010</MinAmdLetterDate>
<MaxAmdLetterDate>07/28/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018064</AwardID>
<Investigator>
<FirstName>Shafrira</FirstName>
<LastName>Goldwasser</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shafrira Goldwasser</PI_FULL_NAME>
<EmailAddress>shafi.goldwasser@berkeley.edu</EmailAddress>
<PI_PHON>6172535914</PI_PHON>
<NSF_ID>000218683</NSF_ID>
<StartDate>07/28/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName>Cambridge</CityName>
<StateCode>MA</StateCode>
<ZipCode>021394301</ZipCode>
<StreetAddress><![CDATA[77 MASSACHUSETTS AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~499219</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Protecting the electronic information world is paramount to the stability of modern society.This includes, &nbsp;protecting the integrity&amp;secrecy of <em>data </em>stored in local computers and remote servers; protecting the integrity&amp;secrecy of <em>programs </em>executing on local and remote computers; and securing complex <em>electronic interactions</em> such as financial transactions, voting, and social-network communications.</p> <p>At the core of trustworthy solutions to these tasks are&nbsp;<em>cryptographic protocols,</em>&nbsp;which preserve pre-defined <em>security requirements </em>in face of &nbsp;attacks.</p> <p><span style="text-decoration: underline;"><strong>Project Goals</strong></span></p> <ul> <li>Address the above tasks in the emerging cloud-computing environment.</li> <li>Address side-channel attacks which cryptographic algorithms incur when they run on physical mediums which introduce "backdoor" leakage of information on secret keys.</li> <li>Diversify the constructions of fully homomorphic encryption (FHE), which enable computing on encrypted data.</li> </ul> <p><strong><span style="text-decoration: underline;">Project Outcome Highlights</span></strong></p> <p><strong>Leakage Security&nbsp;</strong></p> <p>We developed a large body of work on &nbsp;cryptography in the presence of leakage of information on the secret keys. Highlights are:</p> <p>(1) Constructed a <em>leakage resilient multiparty computation (MPC) protocol</em> for any polynomial time function f on distributed inputs secure even if a malicious adversary, in addition to corrupting 1-&epsilon; fraction of all parties for an arbitrarily small constant &epsilon; &gt;0, can leak information about the secret state of every<em>&nbsp;hones</em>t party. This leakage can be continuous for an unbounded number of executions of the MPC protocol, computing different functions on the same or different set of inputs. The security relies on standard cryptographic assumptions.</p> <p>(2) showed how to c<em>ompile general programs into leakage resilient programs.</em> The resulting program can run &nbsp;for an unbounded number of executions, in the presence of an adversary who observes partial information on the internal state of every computation during executions so that the adversary learns nothing, beyond the program input/output behavior. A remakrable feature of our compiler is that its security is unconditional Thus, it can be applied to running non-cryptographic algorithms, such as a proprietary search algorithm or a game on a cloud server where parts of the execution's internals might be observed in addition to cryptographic applications. &nbsp;</p> <p>(3) We showed &nbsp;how to acheive general program obfuscation using rely on only partially trusted as it leaks infromation. The focus is on minimizing the amount of usage of the hardware components, their complexity and their security requirements. Specifically, our obfuscation remains secure even if all the hardware devices leak a bounded amount of information every time they are used.</p> <p>(4) students partially supported on the grant&nbsp;solved a longstanding open problem in the design of public-key encryption resilient against continual leakage from the secret key, They show how to securely update a secret key while information is leaked, even if an attacker, at each time period, can probe the entire memory &nbsp;and &ldquo;leak&rdquo; up to a (1&minus;o(1)) fraction of the secret key. Security holds under the decisional linear assumption on bilinear groups. The above is also chieved for &nbsp;identity-based encryption and digital signature.</p> <p><strong>New &nbsp;Cryptographic Primitives for Cloud Computing</strong></p> <p><em>Fully Homomorphic Encryption(FHE) Breakthroughs:&nbsp;</em>Students and their collaborators designed a fully homomorphic encryption scheme whose security provably reduces &nbsp;to the worst-case (stan...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Protecting the electronic information world is paramount to the stability of modern society.This includes,  protecting the integrity&amp;secrecy of data stored in local computers and remote servers; protecting the integrity&amp;secrecy of programs executing on local and remote computers; and securing complex electronic interactions such as financial transactions, voting, and social-network communications.  At the core of trustworthy solutions to these tasks are cryptographic protocols, which preserve pre-defined security requirements in face of  attacks.  Project Goals  Address the above tasks in the emerging cloud-computing environment. Address side-channel attacks which cryptographic algorithms incur when they run on physical mediums which introduce "backdoor" leakage of information on secret keys. Diversify the constructions of fully homomorphic encryption (FHE), which enable computing on encrypted data.   Project Outcome Highlights  Leakage Security   We developed a large body of work on  cryptography in the presence of leakage of information on the secret keys. Highlights are:  (1) Constructed a leakage resilient multiparty computation (MPC) protocol for any polynomial time function f on distributed inputs secure even if a malicious adversary, in addition to corrupting 1-&epsilon; fraction of all parties for an arbitrarily small constant &epsilon; &gt;0, can leak information about the secret state of every honest party. This leakage can be continuous for an unbounded number of executions of the MPC protocol, computing different functions on the same or different set of inputs. The security relies on standard cryptographic assumptions.  (2) showed how to compile general programs into leakage resilient programs. The resulting program can run  for an unbounded number of executions, in the presence of an adversary who observes partial information on the internal state of every computation during executions so that the adversary learns nothing, beyond the program input/output behavior. A remakrable feature of our compiler is that its security is unconditional Thus, it can be applied to running non-cryptographic algorithms, such as a proprietary search algorithm or a game on a cloud server where parts of the execution's internals might be observed in addition to cryptographic applications.    (3) We showed  how to acheive general program obfuscation using rely on only partially trusted as it leaks infromation. The focus is on minimizing the amount of usage of the hardware components, their complexity and their security requirements. Specifically, our obfuscation remains secure even if all the hardware devices leak a bounded amount of information every time they are used.  (4) students partially supported on the grant solved a longstanding open problem in the design of public-key encryption resilient against continual leakage from the secret key, They show how to securely update a secret key while information is leaked, even if an attacker, at each time period, can probe the entire memory  and "leak" up to a (1&minus;o(1)) fraction of the secret key. Security holds under the decisional linear assumption on bilinear groups. The above is also chieved for  identity-based encryption and digital signature.  New  Cryptographic Primitives for Cloud Computing  Fully Homomorphic Encryption(FHE) Breakthroughs: Students and their collaborators designed a fully homomorphic encryption scheme whose security provably reduces  to the worst-case (standard) learning with errors (LWE) hardness assumption.  The LWE problem is as hard as well studied problems on general lattices for which the best known (even quantum) algorithms take exponential time, in contrast to  assumptions made by previous FHE schemes. The new encryption method uses a novel dimension (modulus)reduction technique, which shortens the ciphertexts significantly and reduces decryption complexity. Due to the dramatic efficiency improvements compared to previous schemes, variants of...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

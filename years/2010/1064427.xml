<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>G&amp;V: Medium: Collaborative Research: A Unified Approach to Material Appearance Modeling</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2011</AwardEffectiveDate>
<AwardExpirationDate>05/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ephraim Glinert</SignBlockName>
<PO_EMAI>eglinert@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Realistic image synthesis techniques from computer graphics enable the use of simulation in a wide variety of important fields including architecture, industrial design and communication, military, medical, and emergency training, cultural heritage preservation, film production, and gaming.  Realistic modeling of material appearance is an essential component of the image synthesis process.  Current approaches to material modeling include analytical modeling, numerical simulation, and image-based capture.  Each approach has distinct advantages and limitations, and different ranges of applicability.  The lack of unity makes material modeling difficult and has limited the useful application of computer graphics image synthesis.  This transformative research will change the way materials are modeled in computer graphics systems.  Rather than using disparate models as at present, this project will unify these approaches into a common physical and perceptual framework that will serve as the basis for a rich set of tools for material modeling that are physically accurate, phenomenologically expressive, computationally efficient, and easy to use.  This work should enable the use of computer-aided material design methods in a wide range of economically and culturally important applications.  Creating this framework will involve three subprojects.&lt;br/&gt;&lt;br/&gt;Development of a material simulation testbed:  In this subproject a suite of tools for material simulation will be developed that includes both Monte Carlo and deterministic algorithms.  Different classes of materials (paints, metals, textiles) will be modeled, and different numerical methods will be tested and compared.  The resulting simulation tools and a database of the simulated materials will be distributed.&lt;br/&gt;&lt;br/&gt;Unification of analytical, simulation, and image-based capture material modeling methods:  In this subproject the analytical models that represent general classes of materials will be unified with simulation and image-based capture data that represent specific material instances.  In the first part of this subproject simulation and capture data will be fit with a range of analytical models, considering both individual materials and "families" of materials generated by progressively changing the parameters of the simulation models.  In the second part of this project methods for inferring the microstructures of materials measured using image-based capture methods will be developed.  The approach will be to identify the class of a material and then vary the parameters of an appropriate simulation model to best reproduce the captured data.  The results of this subproject will be expressive and efficient analytical material models that are physically grounded because they are based on captured data and rigorous simulations.&lt;br/&gt;&lt;br/&gt;Development of perceptually-based material design tools:  An important criterion for material modeling is usability.  Material designers need to be able to easily specify and visualize material appearance properties.  This requires consideration of the human factors in material modeling.  In this subproject a series of psychophysical experiments on material perception will be conducted and the results will be used to derive perceptually-based material models with meaningful parameters.  How image properties affect the visual fidelity of rendered materials will also be investigated.  These findings will then be used to develop effective and easy-to-use interfaces for computer-aided material design.&lt;br/&gt;&lt;br/&gt;Broader Impacts:  Better methods for material modeling and rendering will lead to improved capability and productivity in fields such as architecture, industrial design and communication, training, cultural heritage, and entertainment.  The project will build a material appearance community that stretches across academic and commercial boundaries to include computer graphics, computer vision and human vision researchers along with a range of industrial collaborators, and which focuses on developing effective solutions to real-world problems.  The research will engage and train groups of students at 3 universities for scientific/technical careers that require working in interdisciplinary teams and partnering with coworkers in remote locations.</AbstractNarration>
<MinAmdLetterDate>03/22/2011</MinAmdLetterDate>
<MaxAmdLetterDate>04/01/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1064427</AwardID>
<Investigator>
<FirstName>Sumanta</FirstName>
<LastName>Pattanaik</LastName>
<PI_MID_INIT>N</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sumanta N Pattanaik</PI_FULL_NAME>
<EmailAddress>sumant@cs.ucf.edu</EmailAddress>
<PI_PHON>4078232638</PI_PHON>
<NSF_ID>000166427</NSF_ID>
<StartDate>03/22/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>The University of Central Florida Board of Trustees</Name>
<CityName>Orlando</CityName>
<ZipCode>328168005</ZipCode>
<PhoneNumber>4078230387</PhoneNumber>
<StreetAddress>4000 CNTRL FLORIDA BLVD</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<StateCode>FL</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>FL07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>150805653</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CENTRAL FLORIDA BOARD OF TRUSTEES, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>159621697</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[The University of Central Florida Board of Trustees]]></Name>
<CityName>Orlando</CityName>
<StateCode>FL</StateCode>
<ZipCode>328168005</ZipCode>
<StreetAddress><![CDATA[4000 CNTRL FLORIDA BLVD]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>FL07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7453</Code>
<Text>GRAPHICS &amp; VISUALIZATION</Text>
</ProgramElement>
<ProgramReference>
<Code>7453</Code>
<Text>GRAPHICS &amp; VISUALIZATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~101212</FUND_OBLG>
<FUND_OBLG>2012~97322</FUND_OBLG>
<FUND_OBLG>2013~99554</FUND_OBLG>
<FUND_OBLG>2014~101912</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>VRTE Solver</strong>: BRDF of most non-metallic real world materials has two components, (i) the surface BRDF due to the light reflecting from the surface of the material (Fresnel reflection) and (ii) the sub-surface BRDF due to the light entering and going through many scattering events inside the material before exiting the surface from (or very close to) the point of incidence at the surface. Each of these events modifies the light's path, power, polarization state. Polarization is an important attribute of light. Computing polarized sub-surface BRDF (pBRDF) of a material is challenging because it requires simulating the light transport inside the material. The transport of polarized light is modeled by the Vector Radiative Transfer Equation (VRTE), an integro-differential equation. The Discrete Ordinate Method (DOM) is a common approach to solving such an equation. We have developed a DOM based VRTE solver for computing polarized radiance field distribution at any point in the layered surface for any incident directional polarized irradiance. By iterative computation of the radiance field at the surface for a uniformly sampled set of incident directions on the incident hemisphere, we derive the pBRDF. <a title="Computation of polarized subsurface BRDF for rendering" href="http://graphics.cs.ucf.edu/tools/REPORT/VRTE.pdf" target="_blank">Here</a> is a link to an article that details our VRTE solver. Our solver, named VERT (short for VEctor Radiative Transport solver) is implemented in C/C++. VRTE solvers are very time-consuming for complex uses such as BRDF computation. We have also developed PIVERT (stands for Parallel Implementation of VERT), a GPU based DOM solution of the VRTE to expedite the sub-surface BRDF computation.&nbsp;<a title="GPU accelerated computation of Polarized Subsurface BRDF for Flat Particulate Layers" href="http://graphics.cs.ucf.edu/tools/REPORT/gpuVRTE.pdf" target="_blank">Here</a> is a link to the article that details our parallel VRTE solver. The source code for both the standard and accelerated version of the solver are available <a title="VRTE Solver" href="http://graphics.cs.ucf.edu/tools/REPORT/Code/Pivert/src/VRTE/solvers">here</a> for download. The solver takes scattering albedo and coefficients of Fourier expansions of the phase function of the layered material as input and outputs BRDF Mueller Matrix for a user specified number of incident and outgoing directions. The coefficients of the phase function for homogeneous spherical (mono or polydisperse) pigment particles in the layered material can be computed using Lorenz-Mie theory. Such computations are available in public domain. For example a Fortran implementation is available&nbsp;<a title="MieScattering" href="https://www.giss.nasa.gov/staff/mmishchenko/ftpcode/spher.pbrf.f" target="_blank">here</a>. For convenience, we have provided a <a title="C/C++ Port pf Mie Scattering" href="http://graphics.cs.ucf.edu/tools/REPORT/Code/Pivert/src/sphere" target="_blank">C/C++ port</a> of that code. So in principle, our VRTE solver can accept spherical particle size (or distribution), wavelength, and refractive index as input and internally compute the scattering albedo and coefficients of the phase function for pBRDF computation. We have also developed an <a title="PIVERT: a Parallel Implementation of VEctor Radiative Transfer" href="http://graphics.cs.ucf.edu/tools/PIVERT/" target="_blank">online tool</a> to allow the community use our VRTE solver. Using this tool the user can input the material composition and launch the execution of the solver. The solver is executed in our local server and the results are made available to the client browser. The computed BRDF data is visually presented to the user using our interactive WebGL lobe renderer running on the client&rsquo;s browser. The BRDF data is also made available to the user for download.</p> <p><strong>pBRDFs and </strong><strong>pBRDF</strong><strong> reader</strong>: &nbsp;We have pre-computed polarized BRDFs for different materials, and have made them available from <a title="pBRDF" href="http://graphics.cs.ucf.edu/tools/REPORT/pBRDFs" target="_blank">this page</a>. All the&nbsp;pBRDF&nbsp;files computed using our solver are named with VRTE as the prefix.&nbsp;Most of the pBRDFs are computed for layers of homogeneous materials considered thick enough to be opaque. pBRDFs are all written in JSON format. For the users unfamiliar with JSON format, we have made a <a title="pBRDF reader" href="http://graphics.cs.ucf.edu/tools/REPORT/Code/reader" target="_blank">C/C++ reader</a>&nbsp;available to read the&nbsp;pBRDFs.</p> <p><strong>pBRDFs</strong><strong> viewers</strong>: &nbsp;Standard BRDFs are scalar functions of incident outgoing directions. They are commonly visualized as 3D reflection lobes that are hemispherical plots of the BRDF values for outgoing directions for any interactively chosen incident direction. However, pBRDFs are Mueller matrix functions of the&nbsp;incident and outgoing directions. That means for every incident and outgoing direction there are 4x4 (i.e. 16) coefficients. We have developed two different web based visualization tools to their visualization. They are: (i)&nbsp;<a title="pBRDF Lobe Viewer" href="http://graphics.cs.ucf.edu/tools/REPORT/pBRDF4Lobes.html" target="_blank">pBRDF4Lobes.html</a>: (ii)&nbsp;<a title="pBRDF Contour Viewer" href="http://graphics.cs.ucf.edu/tools/REPORT/pBRDFcontours.html" target="_blank">pBRDFcontours.html</a>. A sample pBRDF visualization is shown in the attached images.&nbsp;</p> <p><strong><a title="Polarized Ray Tracer in Optix." href="http://graphics.cs.ucf.edu/tools/REPORT/Code/ppTracer" target="_blank">ppTracer: A Polarized Ray Tracer</a></strong>: We have developed&nbsp;a stand alone NVIDIA-Optix library based and an online OpenCL based polarized ray tracer (<a title="Parallel Ray Tracer" href="http://graphics.cs.ucf.edu/tools/PIRATE/" target="_blank">PIRATE</a>) that computes polarized global illumination in a scene with pBRDF&nbsp;as surface properties. The code for the standalone version is available for download. The online version can be used to see the polarized rendering of a sample scene.</p> <p><strong><a title="PPNG" href="http://graphics.cs.ucf.edu/tools/PPNG/" target="_blank">PPNG: Polarization extension to the PNG format</a></strong>: &nbsp;We have proposed an extension to the PNG&nbsp;format as a compact scheme to handle polarization information in images. The PPNG files can be opened in any image viewer handling PNG format, in which case the intensity (or the I component of the Stokes vector) image is <a title="PPNG image on a standard PNG Viewer" href="http://graphics.cs.ucf.edu/tools/PPNG/images/spheres.ppng" target="_blank">displayed</a>. The same file can show additional polarization related information when used with <a title="PPNG viewer" href="http://graphics.cs.ucf.edu/tools/PPNG/viewer.php" target="_blank">a specialized viewer</a>. A sample view from the viewer is shown as the attached image (titled: PPNG format).</p><br> <p>            Last Modified: 08/18/2017<br>      Modified by: Sumanta&nbsp;N&nbsp;Pattanaik</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503109468099_outcomeFig3--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503109468099_outcomeFig3--rgov-800width.jpg" title="PPNG format"><img src="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503109468099_outcomeFig3--rgov-66x44.jpg" alt="PPNG format"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Format for storage, transmission and visualization of a Stokes vector representation of a Polarized image.</div> <div class="imageCredit">http://graphics.cs.ucf.edu/tools/PPNG/</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Sumanta&nbsp;N&nbsp;Pattanaik</div> <div class="imageTitle">PPNG format</div> </div> </li> <li> <a href="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503111291981_outcomeFig1--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503111291981_outcomeFig1--rgov-800width.jpg" title="pBRDF4Lobes"><img src="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503111291981_outcomeFig1--rgov-66x44.jpg" alt="pBRDF4Lobes"></a> <div class="imageCaptionContainer"> <div class="imageCaption">3D Lobes Visualization of the 4 components of the reflection Stokes Vector lobe due to a user defined Stoke vector's interaction on a surface with a given Polarized BRDF.</div> <div class="imageCredit">http://graphics.cs.ucf.edu/tools/REPORT/pBRDF4Lobes.html?f=./pBRDFs/monoDisperse/Size/VRTE.tio2.650nm.0.2dia.json</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Sumanta&nbsp;N&nbsp;Pattanaik</div> <div class="imageTitle">pBRDF4Lobes</div> </div> </li> <li> <a href="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503111456805_outcomeFig2--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503111456805_outcomeFig2--rgov-800width.jpg" title="pBRDFcontours"><img src="/por/images/Reports/POR/2017/1064427/1064427_10080094_1503111456805_outcomeFig2--rgov-66x44.jpg" alt="pBRDFcontours"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Contour view of the 4x4 Mueller Matrix components of a given polarized BRDF.</div> <div class="imageCredit">http://graphics.cs.ucf.edu/tools/REPORT/pBRDFcontours.html?f=./pBRDFs/monoDisperse/Size/VRTE.tio2.650nm.0.2dia.json</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Sumanta&nbsp;N&nbsp;Pattanaik</div> <div class="imageTitle">pBRDFcontours</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ VRTE Solver: BRDF of most non-metallic real world materials has two components, (i) the surface BRDF due to the light reflecting from the surface of the material (Fresnel reflection) and (ii) the sub-surface BRDF due to the light entering and going through many scattering events inside the material before exiting the surface from (or very close to) the point of incidence at the surface. Each of these events modifies the light's path, power, polarization state. Polarization is an important attribute of light. Computing polarized sub-surface BRDF (pBRDF) of a material is challenging because it requires simulating the light transport inside the material. The transport of polarized light is modeled by the Vector Radiative Transfer Equation (VRTE), an integro-differential equation. The Discrete Ordinate Method (DOM) is a common approach to solving such an equation. We have developed a DOM based VRTE solver for computing polarized radiance field distribution at any point in the layered surface for any incident directional polarized irradiance. By iterative computation of the radiance field at the surface for a uniformly sampled set of incident directions on the incident hemisphere, we derive the pBRDF. Here is a link to an article that details our VRTE solver. Our solver, named VERT (short for VEctor Radiative Transport solver) is implemented in C/C++. VRTE solvers are very time-consuming for complex uses such as BRDF computation. We have also developed PIVERT (stands for Parallel Implementation of VERT), a GPU based DOM solution of the VRTE to expedite the sub-surface BRDF computation. Here is a link to the article that details our parallel VRTE solver. The source code for both the standard and accelerated version of the solver are available here for download. The solver takes scattering albedo and coefficients of Fourier expansions of the phase function of the layered material as input and outputs BRDF Mueller Matrix for a user specified number of incident and outgoing directions. The coefficients of the phase function for homogeneous spherical (mono or polydisperse) pigment particles in the layered material can be computed using Lorenz-Mie theory. Such computations are available in public domain. For example a Fortran implementation is available here. For convenience, we have provided a C/C++ port of that code. So in principle, our VRTE solver can accept spherical particle size (or distribution), wavelength, and refractive index as input and internally compute the scattering albedo and coefficients of the phase function for pBRDF computation. We have also developed an online tool to allow the community use our VRTE solver. Using this tool the user can input the material composition and launch the execution of the solver. The solver is executed in our local server and the results are made available to the client browser. The computed BRDF data is visually presented to the user using our interactive WebGL lobe renderer running on the client?s browser. The BRDF data is also made available to the user for download.  pBRDFs and pBRDF reader:  We have pre-computed polarized BRDFs for different materials, and have made them available from this page. All the pBRDF files computed using our solver are named with VRTE as the prefix. Most of the pBRDFs are computed for layers of homogeneous materials considered thick enough to be opaque. pBRDFs are all written in JSON format. For the users unfamiliar with JSON format, we have made a C/C++ reader available to read the pBRDFs.  pBRDFs viewers:  Standard BRDFs are scalar functions of incident outgoing directions. They are commonly visualized as 3D reflection lobes that are hemispherical plots of the BRDF values for outgoing directions for any interactively chosen incident direction. However, pBRDFs are Mueller matrix functions of the incident and outgoing directions. That means for every incident and outgoing direction there are 4x4 (i.e. 16) coefficients. We have developed two different web based visualization tools to their visualization. They are: (i) pBRDF4Lobes.html: (ii) pBRDFcontours.html. A sample pBRDF visualization is shown in the attached images.   ppTracer: A Polarized Ray Tracer: We have developed a stand alone NVIDIA-Optix library based and an online OpenCL based polarized ray tracer (PIRATE) that computes polarized global illumination in a scene with pBRDF as surface properties. The code for the standalone version is available for download. The online version can be used to see the polarized rendering of a sample scene.  PPNG: Polarization extension to the PNG format:  We have proposed an extension to the PNG format as a compact scheme to handle polarization information in images. The PPNG files can be opened in any image viewer handling PNG format, in which case the intensity (or the I component of the Stokes vector) image is displayed. The same file can show additional polarization related information when used with a specialized viewer. A sample view from the viewer is shown as the attached image (titled: PPNG format).       Last Modified: 08/18/2017       Submitted by: Sumanta N Pattanaik]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Feather: A High Productivity, Energy-Efficient Manycore System for Numerical Codes</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>376504.00</AwardTotalIntnAmount>
<AwardAmount>451591</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The availability of parallelism in single-chip microprocessors has increased exponentially over the last five years, as process technology parameters have led microprocessors designers to transition from single core to multi-core designs. This trend is certain to continue; designs with hundreds and even thousands of cores on a single chip are envisioned in future. These chips, often referred to as manycore processors, offer the opportunity to greatly increase our computational capabilities through continued exploitation of Moore's Law. However, with them the deep and difficult goals of programmability and energy efficiency have emerged as two of the central research challenges in computer engineering today.&lt;br/&gt;&lt;br/&gt;Recently, issues in programming multi- and many- core chips have led many members of the research community to believe that addressing the multi-core programmability crisis is one of the most critical issues in computer science research today. The goal of making multi-, and many- core architectures more useful calls for new approaches that will greatly reduce the programmer effort and skill required to attain good performance across a wide variety of programs. This research examines a manycore system called Feather, which attacks these programmability issues through a combination of automatic parallelization and novel architectural techniques. Feather focuses on heavily numerical applications, and is programmed using high level languages. Feather combines a tunable compiler, a run-time system, and an architecture into a system that seeks to ease performance brittleness and programmability issues for numerical codes on manycore systems.</AbstractNarration>
<MinAmdLetterDate>09/09/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/18/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018850</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Taylor</LastName>
<PI_MID_INIT>B</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael B Taylor</PI_FULL_NAME>
<EmailAddress>profmbt@cs.washington.edu</EmailAddress>
<PI_PHON/>
<NSF_ID>000069038</NSF_ID>
<StartDate>09/09/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-San Diego</Name>
<CityName>La Jolla</CityName>
<ZipCode>920930934</ZipCode>
<PhoneNumber>8585344896</PhoneNumber>
<StreetAddress>Office of Contract &amp; Grant Admin</StreetAddress>
<StreetAddress2><![CDATA[9500 Gilman Drive, 0934]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>49</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA49</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>804355790</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, SAN DIEGO</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-San Diego]]></Name>
<CityName>La Jolla</CityName>
<StateCode>CA</StateCode>
<ZipCode>920930934</ZipCode>
<StreetAddress><![CDATA[Office of Contract &amp; Grant A]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>49</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA49</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>6892</Code>
<Text>CI REUSE</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~376504</FUND_OBLG>
<FUND_OBLG>2012~75087</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>Chips that contain many processors, known as multicore or manycore processors, offer the opportunity to greatly increase our computational capabilities through continued exploitation of Moore's Law. However, with them the deep and difficult goals of programmability and energy efficiency have emerged as two of the central research challenges with putting these processors to use.</span><br /><br /><span>Recently, issues in programming multi- and many- core chips have led many members of the research community to believe that addressing the multi-core programmability crisis is one of the most critical issues in computer science research today. The goal of making multi-, and many- core architectures more useful calls for new approaches that will greatly reduce the programmer effort and skill required to attain good performance across a wide variety of programs.&nbsp;</span></p> <p><span>Our work under this grant has generated a vast wealth of new approaches to simplify the use of multi-core processors. We developed a programming tool called Kremlin (available open source at kremlin.ucsd.edu) that tells programmers where they should spent their time optimizing and parallelizing their code to make it run faster on multicore chips. We created new features for the multicore chips that allow resources to be shared more fairly inside the chips. We published important papers that were the first to examine the impact of dark silicon on multicore chips. &nbsp;We also examined the implications of building multicore chips with processors of many varying types, called accelerators, each of which is optimized for a particular task.</span></p> <p>Our PhD students in this project and have gone on to be professors at universities, or leaders in their industries, whether at Google or Intel.</p><br> <p>            Last Modified: 11/01/2015<br>      Modified by: Michael&nbsp;B&nbsp;Taylor</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Chips that contain many processors, known as multicore or manycore processors, offer the opportunity to greatly increase our computational capabilities through continued exploitation of Moore's Law. However, with them the deep and difficult goals of programmability and energy efficiency have emerged as two of the central research challenges with putting these processors to use.  Recently, issues in programming multi- and many- core chips have led many members of the research community to believe that addressing the multi-core programmability crisis is one of the most critical issues in computer science research today. The goal of making multi-, and many- core architectures more useful calls for new approaches that will greatly reduce the programmer effort and skill required to attain good performance across a wide variety of programs.   Our work under this grant has generated a vast wealth of new approaches to simplify the use of multi-core processors. We developed a programming tool called Kremlin (available open source at kremlin.ucsd.edu) that tells programmers where they should spent their time optimizing and parallelizing their code to make it run faster on multicore chips. We created new features for the multicore chips that allow resources to be shared more fairly inside the chips. We published important papers that were the first to examine the impact of dark silicon on multicore chips.  We also examined the implications of building multicore chips with processors of many varying types, called accelerators, each of which is optimized for a particular task.  Our PhD students in this project and have gone on to be professors at universities, or leaders in their industries, whether at Google or Intel.       Last Modified: 11/01/2015       Submitted by: Michael B Taylor]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

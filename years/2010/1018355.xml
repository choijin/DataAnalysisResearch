<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC: Small:  Improving System Security through Virtual Layered File Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>499998.00</AwardTotalIntnAmount>
<AwardAmount>499998</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Deborah Shands</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Desktop computers run many different applications, the&lt;br/&gt;compromise of any one of which can compromise the entire desktop given&lt;br/&gt;the lack of isolation among applications.  Recovering a compromised&lt;br/&gt;desktop remains a time consuming task, which typically requires wiping&lt;br/&gt;everything and reinstalling the system from scratch.  These &lt;br/&gt;security issues pose fundamental challenges as desktop computers are&lt;br/&gt;relied on for everything from financial transactions to&lt;br/&gt;medical records.  To address these problems, we are creating novel&lt;br/&gt;virtual layered file system (VLFS) technologies to improve system &lt;br/&gt;security.  Unlike a traditional file system which is a monolithic &lt;br/&gt;entity, a VLFS dynamically composes together a set of software layers&lt;br/&gt;into a single file system view for a desktop.  Changes to one layer&lt;br/&gt;are isolated and decoupled from changes to another.  The VLFS dynamic&lt;br/&gt;composition feature enables powerful and easy-to-use security&lt;br/&gt;functionality.  We are using VLFSes to build an architecture to enable&lt;br/&gt;security patches to be deployed effectively when managing large&lt;br/&gt;numbers of heterogeneously configured machines, and to speed system&lt;br/&gt;recovery from security exploits.  We are also using VLFSes to develop&lt;br/&gt;a transparent desktop application fault containment architecture that&lt;br/&gt;is effective at limiting the damage from exploits to enable quick&lt;br/&gt;recovery while being as easy to use as a traditional desktop system.&lt;br/&gt;The results of this proposal will provide a foundation for future&lt;br/&gt;computer innovations to provide improved system security for users'&lt;br/&gt;systems.  Because we are working with industry-standard operating&lt;br/&gt;systems and binary application and patch distributions, our results&lt;br/&gt;will be directly applicable to the commercial world.</AbstractNarration>
<MinAmdLetterDate>07/15/2010</MinAmdLetterDate>
<MaxAmdLetterDate>07/15/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018355</AwardID>
<Investigator>
<FirstName>Jason</FirstName>
<LastName>Nieh</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jason Nieh</PI_FULL_NAME>
<EmailAddress>nieh@cs.columbia.edu</EmailAddress>
<PI_PHON>2129397160</PI_PHON>
<NSF_ID>000304769</NSF_ID>
<StartDate>07/15/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Columbia University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100276902</ZipCode>
<PhoneNumber>2128546851</PhoneNumber>
<StreetAddress>2960 Broadway</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>049179401</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF COLUMBIA UNIVERSITY IN THE CITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>049179401</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Columbia University]]></Name>
<CityName>NEW YORK</CityName>
<StateCode>NY</StateCode>
<ZipCode>100276902</ZipCode>
<StreetAddress><![CDATA[2960 Broadway]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~499998</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Managing many computers and keeping them secure is difficult. Recent virtualization trends exacerbate this problem by making it easy to create and deploy multiple virtual appliances per physical machine, each of which can be configured with different applications and utilities. Increasing the number of systems in use increases the number of systems that have to get security updates applied to them. Although software patches are released for security threats, the need to constantly deploy patches and upgrade software creates a management nightmare as the number of machines and virtual appliances in the enterprise continues to rise.&nbsp; As machines are increasingly networked, this only complicates the management problem, given the myriad of viruses and other attacks commonplace today.</p> <p>To address these problems, we have investigated, developed, implemented, and evaluated novel virtual layered file system (VLFS) technologies to improve system security. A VLFS introduces the notion of a layer, a file hierarchy of related files that are typically changed or upgraded as a unit. For example, a software package or application can be stored as a file system layer.&nbsp; A VLFS is used as the file system for a machine. Unlike a traditional file system which is a monolithic entity, a VLFS is a collection of individual layers dynamically composed together into a single file system view. By dynamically building a VLFS out of discrete layers, we introduce file system composition as a simple yet powerful mechanism for assembling, managing, and securing systems and applications.&nbsp; We have developed multiple VLFS-based systems to improve system security by providing simplified machine management for deploying security updates, and easy-to-use application fault containment.</p> <p>Together with VLFS technologies, we have also introduced the concept of ephemeral containers. Ephemeral containers are execution environments with no access to the user&rsquo;s data that are quickly instantiated from a clean state for only a single application execution. When the application terminates, the container is archived and never used again. Ephemeral containers together with VLFS technologies provide several benefits, including preventing compromises by ensuring that exploits cannot persist even if triggered, protecting users from compromised applications, and protecting user privacy when using the Internet.</p> <p>The results of this research provide a basis for simplifying the assembly, management, and security of systems and applications, especially virtualized infrastructure. &nbsp;This provides a foundation for both commercial deployment and future computer systems innovations to provide improved system security and management for computing infrastructure.</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/17/2014<br>      Modified by: Jason&nbsp;Nieh</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Managing many computers and keeping them secure is difficult. Recent virtualization trends exacerbate this problem by making it easy to create and deploy multiple virtual appliances per physical machine, each of which can be configured with different applications and utilities. Increasing the number of systems in use increases the number of systems that have to get security updates applied to them. Although software patches are released for security threats, the need to constantly deploy patches and upgrade software creates a management nightmare as the number of machines and virtual appliances in the enterprise continues to rise.  As machines are increasingly networked, this only complicates the management problem, given the myriad of viruses and other attacks commonplace today.  To address these problems, we have investigated, developed, implemented, and evaluated novel virtual layered file system (VLFS) technologies to improve system security. A VLFS introduces the notion of a layer, a file hierarchy of related files that are typically changed or upgraded as a unit. For example, a software package or application can be stored as a file system layer.  A VLFS is used as the file system for a machine. Unlike a traditional file system which is a monolithic entity, a VLFS is a collection of individual layers dynamically composed together into a single file system view. By dynamically building a VLFS out of discrete layers, we introduce file system composition as a simple yet powerful mechanism for assembling, managing, and securing systems and applications.  We have developed multiple VLFS-based systems to improve system security by providing simplified machine management for deploying security updates, and easy-to-use application fault containment.  Together with VLFS technologies, we have also introduced the concept of ephemeral containers. Ephemeral containers are execution environments with no access to the userÃ†s data that are quickly instantiated from a clean state for only a single application execution. When the application terminates, the container is archived and never used again. Ephemeral containers together with VLFS technologies provide several benefits, including preventing compromises by ensuring that exploits cannot persist even if triggered, protecting users from compromised applications, and protecting user privacy when using the Internet.  The results of this research provide a basis for simplifying the assembly, management, and security of systems and applications, especially virtualized infrastructure.  This provides a foundation for both commercial deployment and future computer systems innovations to provide improved system security and management for computing infrastructure.          Last Modified: 12/17/2014       Submitted by: Jason Nieh]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

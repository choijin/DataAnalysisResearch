<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: Algorithm Design Using Spectral Graph Theory</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>498228.00</AwardTotalIntnAmount>
<AwardAmount>498228</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Balasubramanian Kalyanasundaram</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Spectral Graph Theory or Algebraic Graph Theory, as it is also known, is the study of the relationship between the eigenvalues and eigenvectors of graphs and their combinatorial properties.  The project will focus on furthering our understanding of this relationship and exploit this understanding to design new and efficient algorithms.  Included in this list of algorithmic problems will be fast and reliable linear system solvers and graph partitioners.  These new algorithms will in turn be used to find better and more efficient algorithms for problems in image processing, medical imaging, machine learning, and linear and non-linear optimizations. Enabling technology will include linear-work or O(m log m)-work algorithms for computing extreme eigenvalues of symmetric diagonally dominate systems.  The project will uses ideas and techniques from graph theory such as graph sparsifiers, graph cuts, and Steiner trees.  These graph theoretic ideas will be combined with numerical methods such as Krylov subspaces methods, interior point methods, and preconditioning methods to design and analyze these new algorithms.  When possible, code for the basic algorithms and their applications will be made available over the web to researchers.&lt;br/&gt;&lt;br/&gt;The use of Spectral Graph Theory in computer science applications has become  increasingly important and popular. A notable application is the algorithm patented by Google to rank order web pages.  Other applications include image processing, in particular,  medical image segmentation and  denoising.  This project will further contribute to the design of better algorithms for these problem domains by combining the best ideas from numerical analysis and graph theory.  The goal is to design algorithms with very strong guarantees for both run time and robustness so that these algorithms will be appropriate for critical applications such as real-time image processing in a clinician's office. Dissemination will not only include journal and conference publications, but also giving a biannual spectral graph theory class and spectral graph theory lectures in both undergraduate and graduate algorithm classes.</AbstractNarration>
<MinAmdLetterDate>09/10/2010</MinAmdLetterDate>
<MaxAmdLetterDate>11/20/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018463</AwardID>
<Investigator>
<FirstName>Gary</FirstName>
<LastName>Miller</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Gary Miller</PI_FULL_NAME>
<EmailAddress>glmiller@cs.cmu.edu</EmailAddress>
<PI_PHON>4122682631</PI_PHON>
<NSF_ID>000462221</NSF_ID>
<StartDate>09/10/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>David</FirstName>
<LastName>Tolliver</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>David Tolliver</PI_FULL_NAME>
<EmailAddress>tolliver@cs.cmu.edu</EmailAddress>
<PI_PHON>4122688746</PI_PHON>
<NSF_ID>000555691</NSF_ID>
<StartDate>09/10/2010</StartDate>
<EndDate>11/20/2014</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ioannis</FirstName>
<LastName>Koutis</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ioannis Koutis</PI_FULL_NAME>
<EmailAddress>ikoutis@njit.edu</EmailAddress>
<PI_PHON>4124500405</PI_PHON>
<NSF_ID>000555692</NSF_ID>
<StartDate>09/10/2010</StartDate>
<EndDate>11/20/2014</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie-Mellon University]]></Name>
<CityName>PITTSBURGH</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133815</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~498228</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Over the last several years there have been major breakthroughs in<br />the design of approximation algorithms for such classic problems as<br />finding the maximum flow in a graph. Maximum flow for undirected<br />graphs can now be approximately solved in near linear time.&nbsp; These<br />results by researchers at Berkeley, CMU, and MIT, I claim, is only the<br />beginning of a new era in efficient algorithm design.<br /><br />Graph theoretic optimization problems, that have been dormant for<br />fifty years are now seeing new and exciting algorithms. These advances<br />have been made possible by Spectral Graph Theory, the interplay<br />between linear algebra and combinatorial graph theory. One application<br />of this interplay is a nearly linear time solver for Symmetric<br />Diagonally Dominate systems (SDD).&nbsp; This seemingly restrictive class<br />of linear systems has received substantial interest in the last 15<br />years. Both algorithm design theory and practical implementations have<br />made major progress.&nbsp; Surprisingly, there is an ever growing list of<br />problems that can be efficiently solved using SDD solvers including<br />image segmentation, image denoising, finding solutions to elliptic<br />equations, computing maximum flow in a graph, graph sparsification,<br />and graphics. All these examples can be viewed as special cases of<br />convex optimization problems that arise from&nbsp; graph problems. I can<br />imagine a world where such optimization problems that seem to require at<br />least quadratic work will all be solvable by practical<br />algorithms guaranteed to run in near linear work and are very parallel.<br /><br />In particular, this project has contributed the following new<br />algorithms and analysis: 1) We have successfully found faster and faster<br />algorithms for solving linear systems that have the property that each<br />diagonal entry is greater or equal to the sum of its off diagonal entry, SDD<br />linear systems.&nbsp; The solution to these linear systems is central to<br />all to optimization problems listed above.<br /><br />Using the SDD solver we have found algorithms for processing medical<br />images. In particular we have the fastest known algorithm for a<br />rotationally invariant image denoising algorithm. This denoising<br />algorithm was used in our medical image segmentation algorithms This<br />segmentation algorithm also used our solver.<br /><br />In order to get these new fast solver algorithm we also need to new<br />more efficient graph algorithms.&nbsp; Many if not most graph algorithm on<br />undirected graphs use a clustering algorithm to decompose the graph<br />into low diameter subgraphs so that very few edges go between these<br />subgraphs. Classic approaches to solving this problem were either<br />highly sequential or not work efficient.&nbsp; Our new algorithm generates<br />the clusters in a work efficient parallel way by using start times<br />coming from an exponential distribution. Thus we get the same<br />guarantees as the fast sequential methods but in parallel, is much<br />easier to implement and has small constants.</p><br> <p>            Last Modified: 08/25/2015<br>      Modified by: Gary&nbsp;Miller</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Over the last several years there have been major breakthroughs in the design of approximation algorithms for such classic problems as finding the maximum flow in a graph. Maximum flow for undirected graphs can now be approximately solved in near linear time.  These results by researchers at Berkeley, CMU, and MIT, I claim, is only the beginning of a new era in efficient algorithm design.  Graph theoretic optimization problems, that have been dormant for fifty years are now seeing new and exciting algorithms. These advances have been made possible by Spectral Graph Theory, the interplay between linear algebra and combinatorial graph theory. One application of this interplay is a nearly linear time solver for Symmetric Diagonally Dominate systems (SDD).  This seemingly restrictive class of linear systems has received substantial interest in the last 15 years. Both algorithm design theory and practical implementations have made major progress.  Surprisingly, there is an ever growing list of problems that can be efficiently solved using SDD solvers including image segmentation, image denoising, finding solutions to elliptic equations, computing maximum flow in a graph, graph sparsification, and graphics. All these examples can be viewed as special cases of convex optimization problems that arise from  graph problems. I can imagine a world where such optimization problems that seem to require at least quadratic work will all be solvable by practical algorithms guaranteed to run in near linear work and are very parallel.  In particular, this project has contributed the following new algorithms and analysis: 1) We have successfully found faster and faster algorithms for solving linear systems that have the property that each diagonal entry is greater or equal to the sum of its off diagonal entry, SDD linear systems.  The solution to these linear systems is central to all to optimization problems listed above.  Using the SDD solver we have found algorithms for processing medical images. In particular we have the fastest known algorithm for a rotationally invariant image denoising algorithm. This denoising algorithm was used in our medical image segmentation algorithms This segmentation algorithm also used our solver.  In order to get these new fast solver algorithm we also need to new more efficient graph algorithms.  Many if not most graph algorithm on undirected graphs use a clustering algorithm to decompose the graph into low diameter subgraphs so that very few edges go between these subgraphs. Classic approaches to solving this problem were either highly sequential or not work efficient.  Our new algorithm generates the clusters in a work efficient parallel way by using start times coming from an exponential distribution. Thus we get the same guarantees as the fast sequential methods but in parallel, is much easier to implement and has small constants.       Last Modified: 08/25/2015       Submitted by: Gary Miller]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

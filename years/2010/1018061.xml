<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC: Small: Compositional End-to-End Security for Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>499995.00</AwardTotalIntnAmount>
<AwardAmount>499995</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Deborah Shands</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Compositional security is a recognized central scientific challenge for trustworthy computing.  Contemporary systems are built up from smaller components. However, even if each component is secure in isolation, the composed system may not achieve the desired end-to-end security property: an adversary may exploit complex interactions between components to compromise security. &lt;br/&gt;&lt;br/&gt;This project addresses this important problem by developing a general model of systems and adversaries and techniques for modular reasoning and design. A central idea is to view a trusted system in terms of the interfaces that the various components expose: larger trusted components are built by combining interface calls in known ways; the adversary is constrained to the interfaces it has access to, but may combine interface calls without restriction. At a technical level, we are developing an expressive concurrent programming language with recursive functions for modeling interfaces and higher-order data for modeling code obtained at run time, and a logic of programs to capture reasoning principles for compositional security. We are using this framework to develop a systematic basis for web security, to formalize attacker models for web browsers proposed in literature and develop new ones, and to build an understanding of relevant security policies, end-to-end security properties, attacks in the wild, and ways to defend and prove web applications secure against these attacks. This study could have impact on security mechanisms and policies used in web applications in practice. The reasoning methods developed in the project will be mechanized in a tool.</AbstractNarration>
<MinAmdLetterDate>07/30/2010</MinAmdLetterDate>
<MaxAmdLetterDate>07/30/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018061</AwardID>
<Investigator>
<FirstName>Anupam</FirstName>
<LastName>Datta</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Anupam Datta</PI_FULL_NAME>
<EmailAddress>danupam@andrew.cmu.edu</EmailAddress>
<PI_PHON>4122688746</PI_PHON>
<NSF_ID>000501887</NSF_ID>
<StartDate>07/30/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Limin</FirstName>
<LastName>Jia</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Limin Jia</PI_FULL_NAME>
<EmailAddress>liminjia@cmu.edu</EmailAddress>
<PI_PHON>4122688746</PI_PHON>
<NSF_ID>000555265</NSF_ID>
<StartDate>07/30/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Deepak</FirstName>
<LastName>Garg</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Deepak Garg</PI_FULL_NAME>
<EmailAddress>dg@cs.cmu.edu</EmailAddress>
<PI_PHON>4122688746</PI_PHON>
<NSF_ID>000555266</NSF_ID>
<StartDate>07/30/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie-Mellon University]]></Name>
<CityName>PITTSBURGH</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133815</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~499995</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>Compositional security principles are critical for scalable construction and analysis of secure systems. Contemporary systems are built up from smaller components, but even if each component is secure in isolation, a system composed of secure components may not meet its security requirements. Attacks using properties of one component to subvert another have shown up in practice in many different settings, including cryptographic protocols, systems software, application software, web browsers and infrastructure.&nbsp;</span></p> <p>The intellectual merit of the project is reflected in new theory of compositional security called&nbsp;Adversary-aware Assume Guarantee. In traditional assume-guarantee reasoning for reasoning about system correctness, system components assume that other components satisfy certain assumptions. These assumptions are discharged by analyzing the code of other components. In contrast, in the security setting addressed by the new theory, assumptions about adversarial components are&nbsp;enforced&nbsp;using a combination of cryptographic, hardware, and software protection mechanisms and associated&nbsp;program-directed methods&nbsp;for reasoning about them.</p> <p>Specifically, the project develops System M -- the first program logic that allows proofs of safety for higher-order programs that execute adversary-supplied code without requiring the adversarial code to be available for deep static analysis. It supports reasoning about invariants of adversarial components via interface-confinement (or sandboxing) and code identity checks. System M has been used to prove security properties of models of implemented hypervisors and trusted computing systems built at Carnegie Mellon University.&nbsp;</p> <p>The broader impact of the project includes impact on the emerging science of security and contributions to human resource development in this important area. The project has supported two PhD students who have transitioned to research and industry positions. It has also provided support for two co-PIs (one female, one male) who have transitioned from postdoctoral research positions to faculty positions.&nbsp;</p> <p><span><br /></span></p><br> <p>            Last Modified: 01/17/2016<br>      Modified by: Anupam&nbsp;Datta</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Compositional security principles are critical for scalable construction and analysis of secure systems. Contemporary systems are built up from smaller components, but even if each component is secure in isolation, a system composed of secure components may not meet its security requirements. Attacks using properties of one component to subvert another have shown up in practice in many different settings, including cryptographic protocols, systems software, application software, web browsers and infrastructure.   The intellectual merit of the project is reflected in new theory of compositional security called Adversary-aware Assume Guarantee. In traditional assume-guarantee reasoning for reasoning about system correctness, system components assume that other components satisfy certain assumptions. These assumptions are discharged by analyzing the code of other components. In contrast, in the security setting addressed by the new theory, assumptions about adversarial components are enforced using a combination of cryptographic, hardware, and software protection mechanisms and associated program-directed methods for reasoning about them.  Specifically, the project develops System M -- the first program logic that allows proofs of safety for higher-order programs that execute adversary-supplied code without requiring the adversarial code to be available for deep static analysis. It supports reasoning about invariants of adversarial components via interface-confinement (or sandboxing) and code identity checks. System M has been used to prove security properties of models of implemented hypervisors and trusted computing systems built at Carnegie Mellon University.   The broader impact of the project includes impact on the emerging science of security and contributions to human resource development in this important area. The project has supported two PhD students who have transitioned to research and industry positions. It has also provided support for two co-PIs (one female, one male) who have transitioned from postdoctoral research positions to faculty positions.           Last Modified: 01/17/2016       Submitted by: Anupam Datta]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

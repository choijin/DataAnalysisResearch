<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CPS: Small: Towards robust cyber-physical systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>530000.00</AwardTotalIntnAmount>
<AwardAmount>530000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Radhakisan Baheti</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The objective of this research is to develop the theoretical foundations of robust &lt;br/&gt;cyber-physical systems. Robustness is the property ensuring that slight &lt;br/&gt;perturbations in the cyber, physical, or in the interaction between the cyber and &lt;br/&gt;the physical components, e.g., noise in sensor measurements, causes only slight &lt;br/&gt;changes in the system execution. While it is theoretically possible to enumerate &lt;br/&gt;all possible faults that can occur in a cyber-physical system and to design &lt;br/&gt;software components that correctly handle all such faults, the resulting &lt;br/&gt;specifications would be unwieldy and difficult to understand or verify. Instead, this &lt;br/&gt;project investigates the design of software components that guarantee &lt;br/&gt;robustness of cyber-physical systems with respect to unmodeled faults. The &lt;br/&gt;approach consist in abstracting and generalizing several key ideas from robust &lt;br/&gt;control theory to cyber-physical systems. &lt;br/&gt;&lt;br/&gt;The project's intellectual merit is divided in two parts. The first part consists in  &lt;br/&gt;defining a notion of robustness for cyber-physical systems relying on finite-state &lt;br/&gt;abstractions of the physical world retaining metric information about physical &lt;br/&gt;quantities. The second part consists in developing the methods and tools for &lt;br/&gt;automatically synthesizing software modules enforcing desired specifications in a &lt;br/&gt;robust manner. &lt;br/&gt;&lt;br/&gt;The tools and techniques developed in this project will significantly enhance our &lt;br/&gt;ability to produce robust cyber-physical systems and thus have a broad impact in &lt;br/&gt;several application areas transcending computer science and control &lt;br/&gt;engineering. Moreover, the broader impact of the proposed research is amplified &lt;br/&gt;by explicitly addressing the lack of robustness in legacy software through the &lt;br/&gt;development of robustifying software patches. To enhance the transfer of the &lt;br/&gt;research results to industry, the PIs and the Electrical Engineering Office of &lt;br/&gt;Industrial Relations will host a workshop for the local industry on robust cyber-&lt;br/&gt;physical systems.</AbstractNarration>
<MinAmdLetterDate>09/02/2010</MinAmdLetterDate>
<MaxAmdLetterDate>09/02/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1035916</AwardID>
<Investigator>
<FirstName>Paulo</FirstName>
<LastName>Tabuada</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Paulo Tabuada</PI_FULL_NAME>
<EmailAddress>tabuada@ee.ucla.edu</EmailAddress>
<PI_PHON>3107944266</PI_PHON>
<NSF_ID>000225641</NSF_ID>
<StartDate>09/02/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Rupak</FirstName>
<LastName>Majumdar</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rupak Majumdar</PI_FULL_NAME>
<EmailAddress>rupak@cs.ucla.edu</EmailAddress>
<PI_PHON>3108258127</PI_PHON>
<NSF_ID>000490653</NSF_ID>
<StartDate>09/02/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Los Angeles</Name>
<CityName>LOS ANGELES</CityName>
<ZipCode>900951406</ZipCode>
<PhoneNumber>3107940102</PhoneNumber>
<StreetAddress>10889 Wilshire Boulevard</StreetAddress>
<StreetAddress2><![CDATA[Suite 700]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>33</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA33</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>092530369</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, LOS ANGELES</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Los Angeles]]></Name>
<CityName>LOS ANGELES</CityName>
<StateCode>CA</StateCode>
<ZipCode>900951406</ZipCode>
<StreetAddress><![CDATA[10889 Wilshire Boulevard]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>33</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA33</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7918</Code>
<Text>CPS-Cyber-Physical Systems</Text>
</ProgramElement>
<ProgramReference>
<Code>7918</Code>
<Text>CYBER-PHYSICAL SYSTEMS (CPS)</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~530000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Software systems are known to be brittle. How many times have we had to reboot our desktop or laptop computers due to a software error? While this is seen as an annoyance in the context of software-only systems, it is unacceptable in the context of cyber-physical systems such as cars and airplanes. While robustness is difficult to achieve for software systems, well designed control systems are known to be robust. In fact, robustness is a design requirement for control systems since we only have approximate models for the systems being controlled and sensors/actuators are always subject to noise.&nbsp;</p> <p>The major goal of this project was to build upon the existing robustness insights in control theory and create a robustness theory for cyber-physical systems. This includes the development of an appropriate notion of robustness along with algorithms for its verification and synthesis.</p> <p>The research conducted during this project resulted in two major outcomes:</p> <ol> <li>a notion of robustness for software systems and corresponding algorithms for verification and synthesis;</li> <li>a notion of robustness for cyber-physical systems and a compositional design methodology catering to robustness.</li> </ol> <p>We developed a new notion of robustness that encompasses two different notions of robustness that had been previously proposed in the literature on embedded systems and formal methods. Although our notion of robustness generalized existing attempts at defining robustness, it lead to efficient verification and synthesis algorithms. The addressed verification problem consists of determining if a given software module is robust whereas the addressed synthesis problem asks for the synthesis of a software "controller" that enforces robustness of an existing software module.</p> <p>We also developed a notion of robustness for cyber-physical systems that lead to a compositional design methodology. We can design continuous controllers, using control theoretic techniques, to enforce robustness with respect to continuous disturbances (imprecise models, sensor noise, ...) while ignoring discrete disturbances (bit flips, buffer overflows, ...). We can also synthesize discrete controllers enforcing robustness with respect to discrete disturbances, using the algorithms mentioned in the previous paragraph, while ignoring continuous disturbances. The resulting controllers can then be composed to produce a controller providing robustness with respect to discrete as well as continuous disturbances. This compositional design framework simplifies the design of robust cyber-physical systems while leveraging the existing knowledge in control theory regarding&nbsp;robust designs and the knowledge produced during this project regarding robust designs for software systems.</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/23/2014<br>      Modified by: Paulo&nbsp;Tabuada</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Software systems are known to be brittle. How many times have we had to reboot our desktop or laptop computers due to a software error? While this is seen as an annoyance in the context of software-only systems, it is unacceptable in the context of cyber-physical systems such as cars and airplanes. While robustness is difficult to achieve for software systems, well designed control systems are known to be robust. In fact, robustness is a design requirement for control systems since we only have approximate models for the systems being controlled and sensors/actuators are always subject to noise.   The major goal of this project was to build upon the existing robustness insights in control theory and create a robustness theory for cyber-physical systems. This includes the development of an appropriate notion of robustness along with algorithms for its verification and synthesis.  The research conducted during this project resulted in two major outcomes:  a notion of robustness for software systems and corresponding algorithms for verification and synthesis; a notion of robustness for cyber-physical systems and a compositional design methodology catering to robustness.   We developed a new notion of robustness that encompasses two different notions of robustness that had been previously proposed in the literature on embedded systems and formal methods. Although our notion of robustness generalized existing attempts at defining robustness, it lead to efficient verification and synthesis algorithms. The addressed verification problem consists of determining if a given software module is robust whereas the addressed synthesis problem asks for the synthesis of a software "controller" that enforces robustness of an existing software module.  We also developed a notion of robustness for cyber-physical systems that lead to a compositional design methodology. We can design continuous controllers, using control theoretic techniques, to enforce robustness with respect to continuous disturbances (imprecise models, sensor noise, ...) while ignoring discrete disturbances (bit flips, buffer overflows, ...). We can also synthesize discrete controllers enforcing robustness with respect to discrete disturbances, using the algorithms mentioned in the previous paragraph, while ignoring continuous disturbances. The resulting controllers can then be composed to produce a controller providing robustness with respect to discrete as well as continuous disturbances. This compositional design framework simplifies the design of robust cyber-physical systems while leveraging the existing knowledge in control theory regarding robust designs and the knowledge produced during this project regarding robust designs for software systems.          Last Modified: 12/23/2014       Submitted by: Paulo Tabuada]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative Research:  Languages and Tools for Multilingual Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>200026.00</AwardTotalIntnAmount>
<AwardAmount>200026</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Software developers are increasingly building applications in multiple languages both to reuse existing software libraries and to leverage the languages best suited to their problems. In fact, multilingual programs are already prevalent, as essentially all programs written in Java use code written in C as well. But developing multilingual programs poses more challenges and difficulties than developing single language programs. Current programming interfaces between multiple languages tend to be tedious and unsafe; and most programming tools only support a single language. As a consequence, real-world multilingual programs are full of cross-language bugs.&lt;br/&gt;&lt;br/&gt;This research seeks to substantially improve the correctness and development of multilingual programs. The investigators build on their prior multilingual language design (the Jeannie Java/C language), compilers (the xtc Jeannie compiler), and debuggers (the Blink Java/C debugger). Here, the investigators are designing and implementing novel approaches for validating the safety of existing multilingual interfaces and for creating safe multilingual programs. (1) The investigators are developing a framework for concisely capturing safety rules for multilingual interfaces and then automatically synthesizing the corresponding dynamic checker. (2) The investigators are exploring novel program analysis to refactor programs automatically that use unsafe multilingual interfaces into programs that use safe multilingual interfaces. If successful, the research impact will be improved correctness, efficiency, and reliability of multilingual programs.</AbstractNarration>
<MinAmdLetterDate>08/08/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/27/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018271</AwardID>
<Investigator>
<FirstName>Kathryn</FirstName>
<LastName>McKinley</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kathryn S McKinley</PI_FULL_NAME>
<EmailAddress>mckinley@cs.utexas.edu</EmailAddress>
<PI_PHON>5122327467</PI_PHON>
<NSF_ID>000242564</NSF_ID>
<StartDate>08/08/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName>Austin</CityName>
<StateCode>TX</StateCode>
<ZipCode>787595316</ZipCode>
<StreetAddress><![CDATA[3925 W Braker Lane, Ste 3.340]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~64705</FUND_OBLG>
<FUND_OBLG>2011~135321</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Technical Contributions</strong><br /><br />When developers build large-scale systems, they almost always compose<br />software written in multiple languages because they need to leverage<br />legacy code and to choose the language best suited to their<br />problems. For instance, the same program will use Java for<br />ease-of-programming, C to interface with the operating system, and<br />generate queries in SQL to interact with a backend database. <br /><br />These programs pose significant analysis, debugging, and testing<br />challenges because developers need to understand multiple languages<br />and reason about their interactions.&nbsp; The results of our project are<br />tools that improve the correctness and help developers of multilingual<br />programs.&nbsp; Specifically, we developed the following tools and<br />analyses.<br /><br />1. We developed a framework for capturing the safety rules in foreign<br />function interfaces (FFIs) through which different languages interact.<br /><br />2. We developed technology to synthesize dynamic safety analyses from<br />these safety rules. The resulting tool reports all dynamic violations<br />of the rules and thus vastly improves the correctness of multilingual<br />programs.<br /><br />3. We developed practical debugging and testing tools for multilingual<br />and concurrent programs that help developers quickly find the root<br />cause of multilingual and concurrency errors.<br /><br />We demonstrated our tools on mixed Java and C programs, mixed Python<br />and C programs, and .NET programs. We disseminated the results in<br />scholarly publications, which are available on the following webpage:<br />http://www.cs.utexas.edu/users/mckinley/papers.html<br /><br />We also made our tools publicly available for developers to use and so<br />that other programming language implementation researchers may build<br />upon them.&nbsp; The tools are available on the following webpage:<br />http://cs.nyu.edu/xtc/<br /><br /><br /><strong>Broader Technical Contributions</strong><br /><br />Programming language implementation underpins all computing<br />software. The tools we developed improve correctness, composition, and<br />debugging of large software applications that use multiple languages to<br />solve their problems. Our work therefore has broad consequences for<br />improving the correctness of large software applications in other<br />disciplines, government, and businesses, since most large software<br />systems compose languages to solve their problems.<br /><br /><br /><strong>Broader Contributions to Education and the Technology Workforce</strong><br /><br />Professor McKinley is the co-chair of CRA-Women (2011 to present),<br />which seeks to improve the participation and success of<br />under-represented minorities and women (URM+W) in computing research<br />careers.&nbsp; NCWIT analysis of patents and company demographics, as well<br />as other studies, show that a more diverse workforce leads to better<br />technology, more sales, and higher profits.&nbsp; CRA-Women has developed<br />national intervention programs with an army of volunteers to increase<br />the numbers and success of URM+W with PhDs to increase women in<br />technology leadership positions. <br /><br />This year CRA-W and the Coalition to Diversify Computing (CDC) with<br />NSF funding established the CRA Center for Evaluation of the Research<br />Pipeline, which evaluates intervention programs comparing them against<br />a national sample of computing students. This center is the first of<br />its kind in the nation and the initial results show that compared to<br />non-participants with similar experiences, participants in carefully<br />designed research experiences for undergraduates (REUs) and workshops<br />for computing graduate students improve the numbers who enroll and<br />succeed in PhD programs.&nbsp; Through her...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Technical Contributions  When developers build large-scale systems, they almost always compose software written in multiple languages because they need to leverage legacy code and to choose the language best suited to their problems. For instance, the same program will use Java for ease-of-programming, C to interface with the operating system, and generate queries in SQL to interact with a backend database.   These programs pose significant analysis, debugging, and testing challenges because developers need to understand multiple languages and reason about their interactions.  The results of our project are tools that improve the correctness and help developers of multilingual programs.  Specifically, we developed the following tools and analyses.  1. We developed a framework for capturing the safety rules in foreign function interfaces (FFIs) through which different languages interact.  2. We developed technology to synthesize dynamic safety analyses from these safety rules. The resulting tool reports all dynamic violations of the rules and thus vastly improves the correctness of multilingual programs.  3. We developed practical debugging and testing tools for multilingual and concurrent programs that help developers quickly find the root cause of multilingual and concurrency errors.  We demonstrated our tools on mixed Java and C programs, mixed Python and C programs, and .NET programs. We disseminated the results in scholarly publications, which are available on the following webpage: http://www.cs.utexas.edu/users/mckinley/papers.html  We also made our tools publicly available for developers to use and so that other programming language implementation researchers may build upon them.  The tools are available on the following webpage: http://cs.nyu.edu/xtc/   Broader Technical Contributions  Programming language implementation underpins all computing software. The tools we developed improve correctness, composition, and debugging of large software applications that use multiple languages to solve their problems. Our work therefore has broad consequences for improving the correctness of large software applications in other disciplines, government, and businesses, since most large software systems compose languages to solve their problems.   Broader Contributions to Education and the Technology Workforce  Professor McKinley is the co-chair of CRA-Women (2011 to present), which seeks to improve the participation and success of under-represented minorities and women (URM+W) in computing research careers.  NCWIT analysis of patents and company demographics, as well as other studies, show that a more diverse workforce leads to better technology, more sales, and higher profits.  CRA-Women has developed national intervention programs with an army of volunteers to increase the numbers and success of URM+W with PhDs to increase women in technology leadership positions.   This year CRA-W and the Coalition to Diversify Computing (CDC) with NSF funding established the CRA Center for Evaluation of the Research Pipeline, which evaluates intervention programs comparing them against a national sample of computing students. This center is the first of its kind in the nation and the initial results show that compared to non-participants with similar experiences, participants in carefully designed research experiences for undergraduates (REUs) and workshops for computing graduate students improve the numbers who enroll and succeed in PhD programs.  Through her efforts as a speaker, organizer, leader, and fund raiser for these projects, Prof. McKinley has impacted the lives of 1,000s of women computing professionals.  The education impact of this particular grant was training six graduate students (two women) in programming language technologies and thus contributing directly to the technology workforce.  Two students received their PhD during this period and we anticipate the graduation of the others soon. One is now a professor at GIST, Korea...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

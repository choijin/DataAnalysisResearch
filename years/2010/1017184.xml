<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: AfterBurner: Efficient Performance Scaling via Post-Retirement Processing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>330267.00</AwardTotalIntnAmount>
<AwardAmount>330267</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Hong Jiang</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The AfterBurner project looks at improving single-thread performance on&lt;br/&gt;both simple and high-performance out-of-order cores in an energy efficient way.  Aside from explicit parallelism, this is the primary challenge of multi-core architectures going forward. The most energy-efficient way to improve single-thread performance is to accelerate low-performing program regions.  This approach yields the greatest benefit.  It also has a low cost because it doesnot require high-bandwidth execution, making it applicable to both simple&lt;br/&gt;and high-performance cores.  Low single-thread performance is caused by squashes due to control and data mis-speculations and by long latency loads and stores which clog the pipeline.  AfterBurner unifies two recently proposed techniques---speculative retirement which can efficiently buffer large numbers of completed instructions and selective re-execution which can re-execute dynamically generated program subgraphs to back-patch program state---and uses them to tolerate all four classes of low-performance events. AfterBurner's multi-purpose infrastructure approach to performance reduces cost, simplifies design, and expands applicability to code that suffers from different low-performance events simulatenously.&lt;br/&gt;&lt;br/&gt;In addition to education and student tarining, the AfterBurner project marks the beginning of a systems research collaboration between Uniersity of Pennsylvania and Drexel computer science departments.</AbstractNarration>
<MinAmdLetterDate>09/09/2010</MinAmdLetterDate>
<MaxAmdLetterDate>04/30/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017184</AwardID>
<Investigator>
<FirstName>Amir</FirstName>
<LastName>Roth</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Amir Roth</PI_FULL_NAME>
<EmailAddress>amir@cis.upenn.edu</EmailAddress>
<PI_PHON>2158987293</PI_PHON>
<NSF_ID>000218727</NSF_ID>
<StartDate>09/09/2010</StartDate>
<EndDate>09/20/2012</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Milo</FirstName>
<LastName>Martin</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Milo Martin</PI_FULL_NAME>
<EmailAddress>milom@cis.upenn.edu</EmailAddress>
<PI_PHON>2157462972</PI_PHON>
<NSF_ID>000383219</NSF_ID>
<StartDate>09/20/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pennsylvania</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191046205</ZipCode>
<PhoneNumber>2158987293</PhoneNumber>
<StreetAddress>Research Services</StreetAddress>
<StreetAddress2><![CDATA[3451 Walnut St, 5th Flr Franklin]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042250712</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042250712</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pennsylvania]]></Name>
<CityName>Philadelphia</CityName>
<StateCode>PA</StateCode>
<ZipCode>191046205</ZipCode>
<StreetAddress><![CDATA[Research Services]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~330267</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>With computing devices important to all aspects of society and increasingly used in mobile environments, it is essential that the next generation of microprocessors are energy-efficient as well as able to run the software applications users care about faster than the old processors. In addition the design of energy-efficient processors requires cooperation between both processor architects and the circuit designers to implement designs that reduce energy consumption without running programs more slowly. This project invented new architecture techniques for the next generation of microprocessors. The project's three major results were: (1) finding that register reference counting can implemented efficiently and used to manage register allocation; (2) saving energy through intelligent management of the processor's register file through new gating and allocation algorithms; (3) inventing an energy-efficient latency-tolerant microarchitecture. The project disseminated results through public conference publications and PhD dissertations, and it provided training for three supported PhD students now employed by the high-technology industry in the United States. The Afterburner project was a collaboration between Professors Milo Martin and Amir Roth at the University of Pennsylvania and Professors Andrew Hilton at Duke University and Mark Hempstead at Drexel University under a subcontract.</p> <p>The goal of the Afterburner project was to study new microarchitecture techniques to improve the performance of regions of code that exhibit small amounts of instruction-level parallelism. These regions were &nbsp;target because they are a key factor limiting program performance. These new microarchitecture techniques were evaluated in terms of both performance and energy efficiency.&nbsp;</p> <p>Modern microprocessors contain large register files to store temporary values of the many simultaneous calculations, and the register file consumes a significant fraction of the total power consumed by a processor core. This project explored using register reference counting to track which registers have been allocated to software-visible registers using a single vector of bits, including the first detailed analysis of reference counting using detailed circuit and architecture simulations. The analysis indicates that reference counting can be used to assign registers to one region of the register file for more efficient power gating of the registers and also to save registers by eliminating unnecessary move instructions. These and other techniques using reference counting improved performance and energy-efficiency. This work was nominated for best paper at the conference on High Performance Computer Architecture (HPCA) 2012. &nbsp;</p> <p>The project also included studies on reducing the power consumption of a modern microprocessor through gating of unused portions of the processor&rsquo;s register file. These results are described in a manuscript published in the IEEE International Conference on Computer Design (ICCD) 2013, and it analyzes several different algorithms for allocating registers to register banks and policies for when to disable and enable a register file bank for the best power savings with the lowest costs. The study concluded that the best combination of algorithms is gating banks immediately when they are empty and allocating a new register to the fullest (but not completely full bank). Such approaches can save up to 50% of register file energy.</p> <p>The third contribution is the invention of a energy-efficient latency-tolerant microarchitecture. This architecture provides the performance benefits delivered by other latency-tolerant microarchitectures without the significant energy cost. The system predicts long-latency instructions---such as load instructions that miss in the cache---and sends these instructions and all of their dependent instructions to an in-order...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ With computing devices important to all aspects of society and increasingly used in mobile environments, it is essential that the next generation of microprocessors are energy-efficient as well as able to run the software applications users care about faster than the old processors. In addition the design of energy-efficient processors requires cooperation between both processor architects and the circuit designers to implement designs that reduce energy consumption without running programs more slowly. This project invented new architecture techniques for the next generation of microprocessors. The project's three major results were: (1) finding that register reference counting can implemented efficiently and used to manage register allocation; (2) saving energy through intelligent management of the processor's register file through new gating and allocation algorithms; (3) inventing an energy-efficient latency-tolerant microarchitecture. The project disseminated results through public conference publications and PhD dissertations, and it provided training for three supported PhD students now employed by the high-technology industry in the United States. The Afterburner project was a collaboration between Professors Milo Martin and Amir Roth at the University of Pennsylvania and Professors Andrew Hilton at Duke University and Mark Hempstead at Drexel University under a subcontract.  The goal of the Afterburner project was to study new microarchitecture techniques to improve the performance of regions of code that exhibit small amounts of instruction-level parallelism. These regions were  target because they are a key factor limiting program performance. These new microarchitecture techniques were evaluated in terms of both performance and energy efficiency.   Modern microprocessors contain large register files to store temporary values of the many simultaneous calculations, and the register file consumes a significant fraction of the total power consumed by a processor core. This project explored using register reference counting to track which registers have been allocated to software-visible registers using a single vector of bits, including the first detailed analysis of reference counting using detailed circuit and architecture simulations. The analysis indicates that reference counting can be used to assign registers to one region of the register file for more efficient power gating of the registers and also to save registers by eliminating unnecessary move instructions. These and other techniques using reference counting improved performance and energy-efficiency. This work was nominated for best paper at the conference on High Performance Computer Architecture (HPCA) 2012.    The project also included studies on reducing the power consumption of a modern microprocessor through gating of unused portions of the processorÆs register file. These results are described in a manuscript published in the IEEE International Conference on Computer Design (ICCD) 2013, and it analyzes several different algorithms for allocating registers to register banks and policies for when to disable and enable a register file bank for the best power savings with the lowest costs. The study concluded that the best combination of algorithms is gating banks immediately when they are empty and allocating a new register to the fullest (but not completely full bank). Such approaches can save up to 50% of register file energy.  The third contribution is the invention of a energy-efficient latency-tolerant microarchitecture. This architecture provides the performance benefits delivered by other latency-tolerant microarchitectures without the significant energy cost. The system predicts long-latency instructions---such as load instructions that miss in the cache---and sends these instructions and all of their dependent instructions to an in-order queue structure. This technique extends the instruction window of the microprocessor, allowing other instr...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC: Medium: Collaborative Research: Random Number Generation and Use in Virtualized Environments</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>749149.00</AwardTotalIntnAmount>
<AwardAmount>749149</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Hypervisors and virtualization simplify application and system deployment. The many benefits of virtualization have resulted in a headlong rush into a world where virtualization is ubiquitous. However, virtualization can break assumptions that applications and operating systems make about the platform. This research investigates an important case: the intersection of virtualization and random-number generators (RNGs). Strong randomization is requisite in today's computer security tools.&lt;br/&gt;&lt;br/&gt;Deployment of existing RNGs in virtualized settings introduces vulnerabilities. When RNGs fail, catastrophic attacks can be mounted on the the cryptographic services upon which modern information security relies. VM snapshots, which can be used to reset a VM and its contained applications, can cause RNGs to repeat outputs and break some encryption systems. Moreover, the environment presented by virtualization can degrade the quality of RNG outputs because entropy sources are virtual rather than physical hardware and hence lower quality.&lt;br/&gt;&lt;br/&gt;This research develops the theoretical and architectural foundations for the next generation of RNG designs and RNG-using mechanisms. The investigators quantify the scope of VM-introduced vulnerabilities using dynamic and static analysis of program source code. They develop new, secure RNG systems for use in VMs. Finally, the reserearch advances cryptographic theory by extending provable security techniques to better account for the realities of RNG deployment and use in virtualized settings.&lt;br/&gt;&lt;br/&gt;This work not only provides practical impact via stronger RNG systems but also opens up new directions in cryptographic theory in the important areas of generating and using randomness.</AbstractNarration>
<MinAmdLetterDate>03/17/2011</MinAmdLetterDate>
<MaxAmdLetterDate>03/26/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1065134</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Swift</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael M Swift</PI_FULL_NAME>
<EmailAddress>swift@cs.wisc.edu</EmailAddress>
<PI_PHON>6088900131</PI_PHON>
<NSF_ID>000103907</NSF_ID>
<StartDate>03/26/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Swift</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael M Swift</PI_FULL_NAME>
<EmailAddress>swift@cs.wisc.edu</EmailAddress>
<PI_PHON>6088900131</PI_PHON>
<NSF_ID>000103907</NSF_ID>
<StartDate>03/17/2011</StartDate>
<EndDate>03/26/2015</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Thomas</FirstName>
<LastName>Ristenpart</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Thomas Ristenpart</PI_FULL_NAME>
<EmailAddress>ristenpart@cornell.edu</EmailAddress>
<PI_PHON/>
<NSF_ID>000573673</NSF_ID>
<StartDate>03/17/2011</StartDate>
<EndDate>03/26/2015</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 6401]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WI02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>161202122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WISCONSIN SYSTEM</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041188822</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Wisconsin-Madison]]></Name>
<CityName>MADISON</CityName>
<StateCode>WI</StateCode>
<ZipCode>537151218</ZipCode>
<StreetAddress><![CDATA[21 North Park Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WI02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~749149</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-a7634258-0d62-1973-3692-0c01384a1109"> <p dir="ltr"><span>Modern computing systems must generate significant amounts of randomness (unpredictable bit strings) for security-critical operations such as cryptography and hardening against software exploits. Despite the presence of hardware random number generators (RNGs), security still relies on software-generated randomness. This grant pushed forward our understanding of random number generation in a variety of ways, both in practice and theory. The work focused in large part on the issue of building good RNGs in the virtualized settings to which, due to cloud computing, an increasing fraction of our software infrastructure is deployed. The investigators performed measurement studies to reveal vulnerabilities in widely used, critical RNGs offered by Linux, Windows, and other operating systems, while also showing that some perceived problems (such as the perceived lack of entropy sources in virtualized settings) are not in fact problematic in the studied RNG use cases. </span></p> <p dir="ltr"><span>In parallel, the investigators built new theoretical foundations for RNG design. In particular providing novel definitions for robustness of pseudorandom number generators (PRNG) that are a primary component of RNG systems and serve to extract from entropy sources cryptographically strong uniform bit strings. These definitions provided a new analytical framework for designing and evaluating the security of PRNGs, and, in particular, helped us to design several new PRNG designs for practical use. The investigators incorporated one of these into a new version of the Linux RNG, an RNG design &nbsp;referred to as Whirlwind, and discussed its integration with Linux kernel developers. &nbsp;</span></p> <p dir="ltr"><span>In addition, this grant helped fund work on understanding and mitigating backdoors in PRNGs such as the infamous Dual EC backdoor designed by the National Security Agency, developing cryptographic foundations for password protection and key-rotatable encryption, and more. &nbsp;This grant therefore led to improvements of security in practice (by way of fixed vulnerabilities in major software packages) while also progress on basic foundational questions about how to build secure systems that will be of utility moving forward.</span></p> <div><span><br /></span></div> </span></p> <p>&nbsp;</p><br> <p>            Last Modified: 11/30/2017<br>      Modified by: Michael&nbsp;M&nbsp;Swift</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Modern computing systems must generate significant amounts of randomness (unpredictable bit strings) for security-critical operations such as cryptography and hardening against software exploits. Despite the presence of hardware random number generators (RNGs), security still relies on software-generated randomness. This grant pushed forward our understanding of random number generation in a variety of ways, both in practice and theory. The work focused in large part on the issue of building good RNGs in the virtualized settings to which, due to cloud computing, an increasing fraction of our software infrastructure is deployed. The investigators performed measurement studies to reveal vulnerabilities in widely used, critical RNGs offered by Linux, Windows, and other operating systems, while also showing that some perceived problems (such as the perceived lack of entropy sources in virtualized settings) are not in fact problematic in the studied RNG use cases.  In parallel, the investigators built new theoretical foundations for RNG design. In particular providing novel definitions for robustness of pseudorandom number generators (PRNG) that are a primary component of RNG systems and serve to extract from entropy sources cryptographically strong uniform bit strings. These definitions provided a new analytical framework for designing and evaluating the security of PRNGs, and, in particular, helped us to design several new PRNG designs for practical use. The investigators incorporated one of these into a new version of the Linux RNG, an RNG design  referred to as Whirlwind, and discussed its integration with Linux kernel developers.   In addition, this grant helped fund work on understanding and mitigating backdoors in PRNGs such as the infamous Dual EC backdoor designed by the National Security Agency, developing cryptographic foundations for password protection and key-rotatable encryption, and more.  This grant therefore led to improvements of security in practice (by way of fixed vulnerabilities in major software packages) while also progress on basic foundational questions about how to build secure systems that will be of utility moving forward.             Last Modified: 11/30/2017       Submitted by: Michael M Swift]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

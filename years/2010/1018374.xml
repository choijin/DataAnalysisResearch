<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF:  Small:  Open Source Software Components:  Utilization Assessment and Automatic Retrieval</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>499619.00</AwardTotalIntnAmount>
<AwardAmount>499619</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Software quality has been an important but illusive concept for several decades, with experts different, sometimes conflicting, guidelines. Using an ecosystem of about 20,000 open source Java projects, this study will to try to discover correlations between open source component utilization and software quality metrics, in order to provide the strongest empirical evidence yet as to how the several metrics pertaining to software quality correlate with actual utilization of reusable components. This study will provide a scientific basis to some of the existing guidelines and to the dismissal of some others. If no correlations are found, this result will disrupt current conceptualizations of component quality, forcing researchers and developers to reassess their understanding of software quality and reusable components. Software being a foundation of modern society, and Open Source development being a significant movement in society at large, it is critical to gain a deeper understanding of software quality on a global scale, leading to the development of innovative tools and methods.&lt;br/&gt;&lt;br/&gt;The metrics used in this study are those defined by the SQO-OSS Quality Model. To understand correlations,  the following method will be used. First the dependency graph will be built, capturing software dependencies at the global scale. This requires overcoming technical challenges in cleaning up and clustering the data, as real world projects contain all sorts of idiosyncrasies related to the use of external components. Second, a suite of utilization metrics will be developed using this global dependency graph that capture the depth and breadth of component usage by these projects. Finally, the SQO-OSS Quality metrics for a significant subset of projects in the data set will be computed and compared with the projects' utilization metrics in order to reveal the correlations.</AbstractNarration>
<MinAmdLetterDate>07/26/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/01/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1018374</AwardID>
<Investigator>
<FirstName>Cristina</FirstName>
<LastName>Lopes</LastName>
<PI_MID_INIT>V</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Cristina V Lopes</PI_FULL_NAME>
<EmailAddress>lopes@ics.uci.edu</EmailAddress>
<PI_PHON>9498241525</PI_PHON>
<NSF_ID>000103290</NSF_ID>
<StartDate>07/26/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Irvine</Name>
<CityName>Irvine</CityName>
<ZipCode>926977600</ZipCode>
<PhoneNumber>9498247295</PhoneNumber>
<StreetAddress>160 Aldrich Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>45</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA45</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>046705849</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, IRVINE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Irvine]]></Name>
<CityName>Irvine</CityName>
<StateCode>CA</StateCode>
<ZipCode>926977600</ZipCode>
<StreetAddress><![CDATA[160 Aldrich Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>45</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA45</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~188315</FUND_OBLG>
<FUND_OBLG>2011~149293</FUND_OBLG>
<FUND_OBLG>2012~162011</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The main objective of this project was to discover correlations between open source component utilization and software quality metrics. We set out to find out if such correlations exist in a very large&nbsp; (~20,000) collection of Java projects. The metrics that we used in this study are those used by the SQO-OSS Quality Model described in Spinellis et al.&nbsp;</p> <p>In the process of investigating this primary question, the proposed research unveiled important knowledge, &nbsp;tools, and data related to the ecosystem of open source Java projects.</p> <p>First, it produced a very large collection of Java projects, as well as metadata about them (including dependencies); this data is publicly available for others to study.</p> <p>Second, it produced a ranking of reusable components based on their utilization, which can inform software developers when making decisions about which components to use.</p> <p>Third, it unveiled findings previously unknown on the relation between size of projects and internal quality metrics: according to these findings certain internal properties of projects grow super- or sub-linearly with project size.</p> <p>Fourth, it also unviled findings previously unknown on the quality of small snippets of code available from Q&amp;A sites such as StackOverflow.</p> <p>Finally, and related to the main goal of the project, we found no significant correlations between utilization and internal quality metrics. T<span>his result challenges current beliefs related to open source projects, as it seems that the amount of attention a project gets is not necessarily correlated with its internal quality.&nbsp;</span></p> <p>The significance of this project is twofold. First, on the scientific side: software quality has&nbsp;been an important but illusive concept for several decades, with troves of experts defining all sorts&nbsp;of different, sometimes conflicting, guidelines. Using an ecosystem of approximately 20,000 open source Java&nbsp;projects, this study provided the strongest empirical evidence yet as to how the several metrics&nbsp;pertaining to software quality correlate with actual utilization of reusable components, therefore&nbsp;giving a scientific basis to some of the existing guidelines and to the dismissal of some others. Since&nbsp;no correlations were found, this result challenges current conceptualizations of component quality,&nbsp;forcing researchers and developers to reassess their understanding of reusable components. Second,&nbsp;on the engineering design side: this research produced prototypes and datasets which researchers can leverage.</p> <p>Software being a foundation&nbsp;of modern society, and Open Source development being so important to the National Science&nbsp;Foundation and society at large, the deeper understanding of software quality, and the development&nbsp;of innovative tools that leverage information about software uses at the global scale, are critical&nbsp;activities.</p> <p><span><br /></span></p> <p>&nbsp;</p><br> <p>            Last Modified: 08/11/2016<br>      Modified by: Cristina&nbsp;V&nbsp;Lopes</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The main objective of this project was to discover correlations between open source component utilization and software quality metrics. We set out to find out if such correlations exist in a very large  (~20,000) collection of Java projects. The metrics that we used in this study are those used by the SQO-OSS Quality Model described in Spinellis et al.   In the process of investigating this primary question, the proposed research unveiled important knowledge,  tools, and data related to the ecosystem of open source Java projects.  First, it produced a very large collection of Java projects, as well as metadata about them (including dependencies); this data is publicly available for others to study.  Second, it produced a ranking of reusable components based on their utilization, which can inform software developers when making decisions about which components to use.  Third, it unveiled findings previously unknown on the relation between size of projects and internal quality metrics: according to these findings certain internal properties of projects grow super- or sub-linearly with project size.  Fourth, it also unviled findings previously unknown on the quality of small snippets of code available from Q&amp;A sites such as StackOverflow.  Finally, and related to the main goal of the project, we found no significant correlations between utilization and internal quality metrics. This result challenges current beliefs related to open source projects, as it seems that the amount of attention a project gets is not necessarily correlated with its internal quality.   The significance of this project is twofold. First, on the scientific side: software quality has been an important but illusive concept for several decades, with troves of experts defining all sorts of different, sometimes conflicting, guidelines. Using an ecosystem of approximately 20,000 open source Java projects, this study provided the strongest empirical evidence yet as to how the several metrics pertaining to software quality correlate with actual utilization of reusable components, therefore giving a scientific basis to some of the existing guidelines and to the dismissal of some others. Since no correlations were found, this result challenges current conceptualizations of component quality, forcing researchers and developers to reassess their understanding of reusable components. Second, on the engineering design side: this research produced prototypes and datasets which researchers can leverage.  Software being a foundation of modern society, and Open Source development being so important to the National Science Foundation and society at large, the deeper understanding of software quality, and the development of innovative tools that leverage information about software uses at the global scale, are critical activities.             Last Modified: 08/11/2016       Submitted by: Cristina V Lopes]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

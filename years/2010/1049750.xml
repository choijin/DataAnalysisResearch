<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Secure Execution Partition (SEP) for Remote Voting</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>169822.00</AwardTotalIntnAmount>
<AwardAmount>169822</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Voting is the most fundamental act of participation in our democracy, yet voting technology has suffered diverse failures and crises.  Voting is a remarkably hard, interdisciplinary problem, with seemingly conflicting goals of verifying ballots while maintaining secret ballots to safeguard against bribery and coercion. This project is producing innovative and fundamental computer security technologies supporting remote and kiosk voting scenarios, i.e. high assurance applications on un-trusted hardware/software.&lt;br/&gt;&lt;br/&gt;This research is designing and developing a secure execution partition (SEP) prototype based on an un-trusted hardware and software base. The research leverages the trusted components, e.g. Trusted Platform Module (TPM) and vPro chipsets, currently available on production motherboards, and programming language constructs producing a prototype that enables easy formal verification by third parties.&lt;br/&gt;&lt;br/&gt;The execution of high assurance software on un-trusted components has been a research problem for decades. While specifically addressing the remote voting problem in this effort, results will also significantly impact health care privacy, remote financial transactions, and remote authentication.&lt;br/&gt;&lt;br/&gt;The findings and experience from this research will be incorporated into UMD?s system's programming/architecture, operating systems, and information security courses at the graduate and under graduate level. Exceptional undergraduate students will be active solicited for participation in the research. Finally, the results of this research will impact society through improvements in future operating systems.</AbstractNarration>
<MinAmdLetterDate>08/26/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/26/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1049750</AwardID>
<Investigator>
<FirstName>William</FirstName>
<LastName>Arbaugh</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William A Arbaugh</PI_FULL_NAME>
<EmailAddress>waa@cs.umd.edu</EmailAddress>
<PI_PHON>3014052774</PI_PHON>
<NSF_ID>000286112</NSF_ID>
<StartDate>08/26/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MD05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>790934285</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MARYLAND, COLLEGE PARK</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003256088</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Maryland, College Park]]></Name>
<CityName>College Park</CityName>
<StateCode>MD</StateCode>
<ZipCode>207425141</ZipCode>
<StreetAddress><![CDATA[3112 LEE BLDG 7809 Regents Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MD05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~169822</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This research focused on the creation of a secure execution partition (SEP) with a specific use of case of improving the security of electronic voting. To do so, we focused on utilizing Intel's Trusted Platform Module (TPM) and Intel's Active Management Technology (AMT). The goal was to leverage these two secure components of commodity motherboards to build a SEP.</p> <p>The notion of SEP is that computations could be done either hidden from potential attackers or prevent attackers from influencing or changing the outcome of computations. Essentially, the goal was to create a protected microvisor.&nbsp;</p> <p>Unfortunately, the computational power of the AMT was insufficient for us to meet our goal. The TPM could hold secrets and allow us to verify the integrity of our code base. But, the AMT did not have sufficient power need to support our plans. As a result, we were unable to meet our goals.</p> <p>We did, however, have extensive conversations with interested companies about our findings and what would be needed to support the SEP notion. Two of those began small efforts to further investigate.</p> <p>In addition funding the above research, the grant enabled the PI to dramatically improve two undergraduate courses: Operating Systems, and Computer Security. The PI first redesigned the existing Operating Systems class from using a toy Unix like operating system developed at the University to a course focused on modifying and changing the Windows Academic kernel. Students wrote a scheduler, and a rootkit detector as part of the course projects. The PI also "flipped" the classroom for Computer Security by changing the classroom time from lectures to problem solving. Students were expected to watch videos or perform readings prior to class. The class room time was then focused on problem solving. Without this grant, neither course change would have been possible.</p> <p>In conclusion, while we did not achieve our objective. We did, however, learn vital information that may well enable the creation of secure execution partitions in the future.</p><br> <p>            Last Modified: 10/10/2017<br>      Modified by: William&nbsp;A&nbsp;Arbaugh</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This research focused on the creation of a secure execution partition (SEP) with a specific use of case of improving the security of electronic voting. To do so, we focused on utilizing Intel's Trusted Platform Module (TPM) and Intel's Active Management Technology (AMT). The goal was to leverage these two secure components of commodity motherboards to build a SEP.  The notion of SEP is that computations could be done either hidden from potential attackers or prevent attackers from influencing or changing the outcome of computations. Essentially, the goal was to create a protected microvisor.   Unfortunately, the computational power of the AMT was insufficient for us to meet our goal. The TPM could hold secrets and allow us to verify the integrity of our code base. But, the AMT did not have sufficient power need to support our plans. As a result, we were unable to meet our goals.  We did, however, have extensive conversations with interested companies about our findings and what would be needed to support the SEP notion. Two of those began small efforts to further investigate.  In addition funding the above research, the grant enabled the PI to dramatically improve two undergraduate courses: Operating Systems, and Computer Security. The PI first redesigned the existing Operating Systems class from using a toy Unix like operating system developed at the University to a course focused on modifying and changing the Windows Academic kernel. Students wrote a scheduler, and a rootkit detector as part of the course projects. The PI also "flipped" the classroom for Computer Security by changing the classroom time from lectures to problem solving. Students were expected to watch videos or perform readings prior to class. The class room time was then focused on problem solving. Without this grant, neither course change would have been possible.  In conclusion, while we did not achieve our objective. We did, however, learn vital information that may well enable the creation of secure execution partitions in the future.       Last Modified: 10/10/2017       Submitted by: William A Arbaugh]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

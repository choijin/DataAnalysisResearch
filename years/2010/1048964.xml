<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NSF Workshop on Software Development Environment for Science &amp; Engineering Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>49995.00</AwardTotalIntnAmount>
<AwardAmount>49995</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Gabrielle D. Allen</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Current software development practices and tools are inadequate for the computing power that is now becoming available. Applications that will run on today?s and tomorrow?s most powerful supercomputers will help improve our world in a variety of fields, including the study of severe storms, epidemic disease, earthquakes, and new product development. These applications must fully exploit hundreds of thousands of compute cores, hundreds of terabytes of memory, and tens of thousands of disk drives. In the future, such systems may well combine many different types of specialized computing elements. The workshop on ?Software Development Environment for Science &amp; Engineering Applications? will focus on the tools and practices needed to develop software for these incredibly complex supercomputers. It will also consider an integrated software development environment for science and engineering applications. Such an environment would allow researchers to build, edit, fix, and improve the performance of their software using more straightforward and graphically based tools than exist today.&lt;br/&gt;&lt;br/&gt;The workshop on ?Software Development Environment for Science &amp; Engineering Applications will focus on the set of software tools (editors, compilers, debuggers, optimization tools, etc.) needed to develop applications for petascale and beyond computers. It will also cover the numerical and communications libraries, programming languages, and software engineering practices needed by the scientists and engineers. The workshop will consider the feasibility of developing an integrated software development environment for science and engineering applications, similar in concept to the IDEs used in the commercial world. The workshop will help establish requirements for maximizing developer productivity. It will also address issues of application portability and maintenance in light of emerging architectural trends in high-performance computing.</AbstractNarration>
<MinAmdLetterDate>08/23/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/23/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1048964</AwardID>
<Investigator>
<FirstName>William</FirstName>
<LastName>Gropp</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William D Gropp</PI_FULL_NAME>
<EmailAddress>wgropp@illinois.edu</EmailAddress>
<PI_PHON>2172446720</PI_PHON>
<NSF_ID>000266820</NSF_ID>
<StartDate>08/23/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Marc</FirstName>
<LastName>Snir</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Marc Snir</PI_FULL_NAME>
<EmailAddress>snir@illinois.edu</EmailAddress>
<PI_PHON>2172446568</PI_PHON>
<NSF_ID>000165753</NSF_ID>
<StartDate>08/23/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Thomas</FirstName>
<LastName>Dunning</LastName>
<PI_MID_INIT>H</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Thomas H Dunning</PI_FULL_NAME>
<EmailAddress>thdjr@uw.edu</EmailAddress>
<PI_PHON>2066169976</PI_PHON>
<NSF_ID>000399097</NSF_ID>
<StartDate>08/23/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jay</FirstName>
<LastName>Alameda</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jay Alameda</PI_FULL_NAME>
<EmailAddress>alameda@illinois.edu</EmailAddress>
<PI_PHON>2172444696</PI_PHON>
<NSF_ID>000308578</NSF_ID>
<StartDate>08/23/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>Champaign</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207406</ZipCode>
<StreetAddress><![CDATA[1901 South First Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7556</Code>
<Text>CONFERENCE AND WORKSHOPS</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~49995</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Computational science is limited by the capabilities of its software. Codes typically do not use the computational resources as efficiently as possible; the adoption of new algorithms and techniques often takes years (and sometimes an entirely new project), and codes are rarely thoroughly tested and tuned. The result is wasted resources&mdash;both scarce high-end computer systems and even scarcer computational scientists. It doesn&rsquo;t have to be this way. There are many good ideas for improving software, but these are mostly encapsulated in isolated tools that do not work well together (or even work well alone). As a result, these tools, whose development often represents a significant investment, are rarely adopted. In addition, the problems are so challenging that no one approach is likely to provide a comprehensive solution. Fortunately, a solution is possible &ndash; by building interoperable tools and providing several modes of operation, including command-line and graphical user interfaces, powerful tools can be sustainably developed and deployed that will revolutionize the process of building and tuning computational science codes. To achieve this, a focused, comprehensive approach is needed to address the tools needs of applications in a way that permits the composition of tools and the development of appropriate and efficient user interfaces.</p> <p>This grant supported a workshop that produced a report summarizing the results of two and a half days of intensive discussion among representatives of computational scientists (users), tool developers, commercial vendors, and supercomputing center directors. Working groups addressed the key issues; scenarios were developed to provide concrete examples of the challenges and opportunities. The role of community involvement to ensure that the parts work well together was discussed; it is noted that this need not require the definition of new software standards. Outstanding technical issues are summarized. The role of education, outreach and training in the adoption of these tools is critical and will require integration of education, outreach, and training with the development of the tools and interfaces. In particularly, it is essential that EOT be a constant part of the process, providing feedback on the effectiveness and usability of the tools. The very nature of this effort will require the integration of crosscutting issues. Finally, the essential issue of how a software institute should be managed to ensure that the software meets the application community&rsquo;s needs is discussed.&nbsp;</p> <p>In the end, the evaluation of the success of an effort to provide better software tools is the impact on applications and the ability to use computation in science and engineering.</p><br> <p>            Last Modified: 10/30/2011<br>      Modified by: William&nbsp;D&nbsp;Gropp</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Computational science is limited by the capabilities of its software. Codes typically do not use the computational resources as efficiently as possible; the adoption of new algorithms and techniques often takes years (and sometimes an entirely new project), and codes are rarely thoroughly tested and tuned. The result is wasted resources&mdash;both scarce high-end computer systems and even scarcer computational scientists. It doesnÃ†t have to be this way. There are many good ideas for improving software, but these are mostly encapsulated in isolated tools that do not work well together (or even work well alone). As a result, these tools, whose development often represents a significant investment, are rarely adopted. In addition, the problems are so challenging that no one approach is likely to provide a comprehensive solution. Fortunately, a solution is possible &ndash; by building interoperable tools and providing several modes of operation, including command-line and graphical user interfaces, powerful tools can be sustainably developed and deployed that will revolutionize the process of building and tuning computational science codes. To achieve this, a focused, comprehensive approach is needed to address the tools needs of applications in a way that permits the composition of tools and the development of appropriate and efficient user interfaces.  This grant supported a workshop that produced a report summarizing the results of two and a half days of intensive discussion among representatives of computational scientists (users), tool developers, commercial vendors, and supercomputing center directors. Working groups addressed the key issues; scenarios were developed to provide concrete examples of the challenges and opportunities. The role of community involvement to ensure that the parts work well together was discussed; it is noted that this need not require the definition of new software standards. Outstanding technical issues are summarized. The role of education, outreach and training in the adoption of these tools is critical and will require integration of education, outreach, and training with the development of the tools and interfaces. In particularly, it is essential that EOT be a constant part of the process, providing feedback on the effectiveness and usability of the tools. The very nature of this effort will require the integration of crosscutting issues. Finally, the essential issue of how a software institute should be managed to ensure that the software meets the application communityÃ†s needs is discussed.   In the end, the evaluation of the success of an effort to provide better software tools is the impact on applications and the ability to use computation in science and engineering.       Last Modified: 10/30/2011       Submitted by: William D Gropp]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF:  Small:  Verifying Open Concurrent Real Time Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>470000.00</AwardTotalIntnAmount>
<AwardAmount>476000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The widespread prevalence of embedded devices, and networked collections of them, makes ensuring their reliability a social imperative. However, formal verification of such embedded systems is challenging as they are concurrent ``hybrid'' systems, i.e., coupled digital programs and physical entities that interact with an analog environment while meeting real-time constraints. Lured by the importance and scientific depth of the problem, the analysis of such hybrid systems for correctness has received widespread attention in the last couple of decades. Considerable progress has been made in defining languages and models for designing such systems, understanding the theoretical bounds to automated verification of such systems, and developing tools to simulate and verify formal hybrid models. However, key challenges remain. Current state of the art in formal methods allows for the automated analysis of single, closed hybrid systems with simple continuous dynamics. This is in contrast to the fact that, in practice, hybrid systems tend to have complex continuous dynamics, and usually consist of multiple modules interacting concurrently.&lt;br/&gt;&lt;br/&gt;This work addresses these challenges so as to enable the automated analysis of systems that are open, concurrent, and hybrid. Specifically, the following research tasks will be carried out: (a) Develop techniques to tightly approximate hybrid systems with complex continuous dynamics by hybrid systems with simple dynamics; (b) Develop decision procedures for the composition of hybrid systems; (c) Develop assume-guarantee reasoning for hybrid systems in the presence of approximate abstractions; (d) Apply the proposed methods to analyze software and algorithms deployed in HoTDeC, an environment for distributed control of hovercrafts.</AbstractNarration>
<MinAmdLetterDate>07/23/2010</MinAmdLetterDate>
<MaxAmdLetterDate>05/13/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1016989</AwardID>
<Investigator>
<FirstName>Geir</FirstName>
<LastName>Dullerud</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Geir E Dullerud</PI_FULL_NAME>
<EmailAddress>dullerudge@gmail.com</EmailAddress>
<PI_PHON>2172655078</PI_PHON>
<NSF_ID>000100212</NSF_ID>
<StartDate>07/23/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Mahesh</FirstName>
<LastName>Viswanathan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mahesh Viswanathan</PI_FULL_NAME>
<EmailAddress>vmahesh@uiuc.edu</EmailAddress>
<PI_PHON>2172656298</PI_PHON>
<NSF_ID>000210258</NSF_ID>
<StartDate>07/23/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>Champaign</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207406</ZipCode>
<StreetAddress><![CDATA[1901 South First Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~470000</FUND_OBLG>
<FUND_OBLG>2013~6000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The widespread prevalence of embedded devices, and networked collections of them, makes ensuring their reliability a social imperative. The most convenient way to formally model such systems is as a hybrid system, as they are coupled digital programs and physical entities that interact with an analog environment while meeting real-time constraints. While considerable progress has been made in developing techniques for the analysis of hybrid systems, key challenges remain. Current state of the art allows for the automated analysis of single, closed hybrid systems with simple continuous dynamics. This is in contrast to the fact that, in practice, hybrid systems tend to have complex continuous dynamics, and usually consist of multiple modules interacting concurrently.</p> <p>To address these concerns, this project focused to developing techniques that transform a hybrid system with complex continuous dynamics into an abstract hybrid system with simpler continuous dynamics, such that verification of the abstract model establishes the correctness of the original system. Abstraction for two canonical properties were explored --- safety and stability. Informally, a safety property requires that nothing bad happens in any execution of the system, while stability specifies that all behaviors that start close to an equilibrium point stay close to that equilibrium point.</p> <p>For safety properties, we developed a counter-example guided abstraction-refinement (CEGAR) framework for hybrid systems. CEGAR is a technique that attempts to automatically construct a simple abstract model that will establish the correctness of a more complex system. This approach has been implemented in a research tool called HARE that is available for download.</p> <p>It has been well known that constructing abstract models to reason about safety can be based on the mathematical notion of simulation. However, we observed that stability cannot be reasoned in the same way. Thus, we came up with a new mathematical foundation for abstraction based reasoning of stability properties. We also developed new algorithms to automatically prove the stability of hybrid systems.</p><br> <p>            Last Modified: 12/23/2014<br>      Modified by: Mahesh&nbsp;Viswanathan</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The widespread prevalence of embedded devices, and networked collections of them, makes ensuring their reliability a social imperative. The most convenient way to formally model such systems is as a hybrid system, as they are coupled digital programs and physical entities that interact with an analog environment while meeting real-time constraints. While considerable progress has been made in developing techniques for the analysis of hybrid systems, key challenges remain. Current state of the art allows for the automated analysis of single, closed hybrid systems with simple continuous dynamics. This is in contrast to the fact that, in practice, hybrid systems tend to have complex continuous dynamics, and usually consist of multiple modules interacting concurrently.  To address these concerns, this project focused to developing techniques that transform a hybrid system with complex continuous dynamics into an abstract hybrid system with simpler continuous dynamics, such that verification of the abstract model establishes the correctness of the original system. Abstraction for two canonical properties were explored --- safety and stability. Informally, a safety property requires that nothing bad happens in any execution of the system, while stability specifies that all behaviors that start close to an equilibrium point stay close to that equilibrium point.  For safety properties, we developed a counter-example guided abstraction-refinement (CEGAR) framework for hybrid systems. CEGAR is a technique that attempts to automatically construct a simple abstract model that will establish the correctness of a more complex system. This approach has been implemented in a research tool called HARE that is available for download.  It has been well known that constructing abstract models to reason about safety can be based on the mathematical notion of simulation. However, we observed that stability cannot be reasoned in the same way. Thus, we came up with a new mathematical foundation for abstraction based reasoning of stability properties. We also developed new algorithms to automatically prove the stability of hybrid systems.       Last Modified: 12/23/2014       Submitted by: Mahesh Viswanathan]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

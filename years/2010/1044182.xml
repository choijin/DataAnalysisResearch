<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>The POET Project: Investigating the Use of Visualization to Effectively Teach Optimization Modeling Skills</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2011</AwardEffectiveDate>
<AwardExpirationDate>12/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>199939.00</AwardTotalIntnAmount>
<AwardAmount>199939</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Gul Kremer</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The POET (Purdue Optimization modeling Education Tool) Project is creating, evaluating, and disseminating a web-based interactive learning environment for teaching students how to formulate valid and tractable optimization models. Optimization is a key component of an industrial engineering curriculum and an essential part of other areas of engineering, the natural sciences, and business administration; however, many students find it difficult to build effective optimization models. The project is gaining insights into how students learn mathematical optimization modeling in order to show that novice students can better formulate valid optimization models when provided with visualization tools for guiding self-assessment and enhancing conceptual understanding. The project is evaluating the effectiveness of visualization in learning optimization modeling skills through measures of student performance. The team is establishing a web-based platform to raise awareness of POET and is growing a network of students and instructors around the world who use and evaluate POET.  The project brings together researchers and educators in operations research, mathematics education, and human-computer interaction. The educational insights produced by this work represent a significant step in helping instructors improve the teaching of optimization modeling.</AbstractNarration>
<MinAmdLetterDate>03/31/2011</MinAmdLetterDate>
<MaxAmdLetterDate>06/27/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1044182</AwardID>
<Investigator>
<FirstName>Ji Soo</FirstName>
<LastName>Yi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ji Soo Yi</PI_FULL_NAME>
<EmailAddress>yij@purdue.edu</EmailAddress>
<PI_PHON>7654944600</PI_PHON>
<NSF_ID>000512027</NSF_ID>
<StartDate>06/27/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ji Soo</FirstName>
<LastName>Yi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ji Soo Yi</PI_FULL_NAME>
<EmailAddress>yij@purdue.edu</EmailAddress>
<PI_PHON>7654944600</PI_PHON>
<NSF_ID>000512027</NSF_ID>
<StartDate>03/31/2011</StartDate>
<EndDate>06/27/2012</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Nelson</FirstName>
<LastName>Uhan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nelson Uhan</PI_FULL_NAME>
<EmailAddress>nuhan@purdue.edu</EmailAddress>
<PI_PHON>7654967241</PI_PHON>
<NSF_ID>000524526</NSF_ID>
<StartDate>06/27/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Nelson</FirstName>
<LastName>Uhan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nelson Uhan</PI_FULL_NAME>
<EmailAddress>nuhan@purdue.edu</EmailAddress>
<PI_PHON>7654967241</PI_PHON>
<NSF_ID>000524526</NSF_ID>
<StartDate>03/31/2011</StartDate>
<EndDate>06/27/2012</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Rachael</FirstName>
<LastName>Kenney</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rachael Kenney</PI_FULL_NAME>
<EmailAddress>rhkenney@purdue.edu</EmailAddress>
<PI_PHON>7654966053</PI_PHON>
<NSF_ID>000541787</NSF_ID>
<StartDate>03/31/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName>West Lafayette</CityName>
<StateCode>IN</StateCode>
<ZipCode>479072114</ZipCode>
<StreetAddress><![CDATA[Young Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7513</Code>
<Text>TUES-Type 1 Project</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0411</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~199939</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span style="font-size: 14.666666666666666px; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline;">The project objective was to build, evaluate, and re?ne an interactive learning environment for teaching optimization modeling skills. We first developed a taxonomy of common student errors based on students&rsquo; work on optimization modeling problems. We found that certain types of errors occurred more frequently with specific types of modeling word problems. We next developed POETIC (Purdue Optimization modeling Education Tool - Interactive Component), an interactive visualization tool, to help students overcome one of these errors, the &ldquo;reversal error.&rdquo; This involves the reversal of natural referents for symbols (e.g., writing 6S=P when told that there are six times as many professors as students). POETIC&rsquo;s interface (see figure) was based on a &ldquo;test-case&rdquo; approach coupled with a &ldquo;room-box metaphor.&rdquo; &nbsp;We tested POETIC with 200 participants using Amazon&rsquo;s crowdsourcing platform, Mechanical Turk and with 90 engineering students on campus. &nbsp;Students were given 5 problems to solve without an interface, and 5 problems to solve using variations of the POETIC interface. We interviewed several students after their participation in the experiment. &nbsp;We found that the combination of test-cases and the room-box metaphor significantly decreased the frequency of reversal errors for certain types of word problems, suggesting that interactive visualization of equations can reduce the occurrence of the reversal error.</span></p> <p>&nbsp;</p> <p style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;" dir="ltr"><span style="font-size: 14.666666666666666px; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline;">We extended POETIC to POET (Purdue Optimization Modeling Education Tool), an interactive visualization tool designed to help students better understand how to solve complex linear programming modeling problems (see figure). POET includes additional feedback mechanisms where students can send their linear programs directly to a linear programming solver and automatically include the solver&rsquo;s optimal solutions in their list of test cases. </span></p> <p>&nbsp;</p> <p style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;" dir="ltr"><span style="font-size: 14.666666666666666px; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline;">To evaluate the POET tool, we gave three online assignments to a class of 156 engineering students enrolled in an Optimization course. We tracked students&rsquo; use of the POET tool, capturing details on problem solving strategies. &nbsp;We analyzed the time students spent with certain features of the tool (e.g., reviewing the text, modifying the mathematical model, using test cases) to better understand how POET serves their learning needs. &nbsp;&nbsp;We recruited 8 students to complete their assignments in the presence of an interviewer to obtain qualitative data on their work with the tool. &nbsp;&nbsp;We found that students were not using the &ldquo;room-box&rdquo; visualization component that we have built into the tool very much, but that they did greatly appreciate the other ways in which they felt the tool allowed them to &ldquo;visualize&rdquo; the problem. &nbsp;Specifically, they liked having the problem text and work space all visible on the same screen, they liked the ability to solve the model created, and they especially liked the indications that something was incorrect with their model w...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The project objective was to build, evaluate, and re?ne an interactive learning environment for teaching optimization modeling skills. We first developed a taxonomy of common student errors based on studentsÆ work on optimization modeling problems. We found that certain types of errors occurred more frequently with specific types of modeling word problems. We next developed POETIC (Purdue Optimization modeling Education Tool - Interactive Component), an interactive visualization tool, to help students overcome one of these errors, the "reversal error." This involves the reversal of natural referents for symbols (e.g., writing 6S=P when told that there are six times as many professors as students). POETICÆs interface (see figure) was based on a "test-case" approach coupled with a "room-box metaphor."  We tested POETIC with 200 participants using AmazonÆs crowdsourcing platform, Mechanical Turk and with 90 engineering students on campus.  Students were given 5 problems to solve without an interface, and 5 problems to solve using variations of the POETIC interface. We interviewed several students after their participation in the experiment.  We found that the combination of test-cases and the room-box metaphor significantly decreased the frequency of reversal errors for certain types of word problems, suggesting that interactive visualization of equations can reduce the occurrence of the reversal error.    We extended POETIC to POET (Purdue Optimization Modeling Education Tool), an interactive visualization tool designed to help students better understand how to solve complex linear programming modeling problems (see figure). POET includes additional feedback mechanisms where students can send their linear programs directly to a linear programming solver and automatically include the solverÆs optimal solutions in their list of test cases.     To evaluate the POET tool, we gave three online assignments to a class of 156 engineering students enrolled in an Optimization course. We tracked studentsÆ use of the POET tool, capturing details on problem solving strategies.  We analyzed the time students spent with certain features of the tool (e.g., reviewing the text, modifying the mathematical model, using test cases) to better understand how POET serves their learning needs.   We recruited 8 students to complete their assignments in the presence of an interviewer to obtain qualitative data on their work with the tool.   We found that students were not using the "room-box" visualization component that we have built into the tool very much, but that they did greatly appreciate the other ways in which they felt the tool allowed them to "visualize" the problem.  Specifically, they liked having the problem text and work space all visible on the same screen, they liked the ability to solve the model created, and they especially liked the indications that something was incorrect with their model when they made a mistake.      We also gave a pre- and post-assessment to students enrolled in the Optimization course in two consecutive semesters (n=86 and n=120 respectively), where 1/2 of the students completed 2 additional assignments using the POET tool, while the other 1/2 completed the assignments on paper (i.e. without the technology intervention). Our results show that POET did not drastically improve studentsÆ modeling skills, but did help them avoid particular types of errors. Additionally, through tracking studentsÆ behaviors on the tool, we were able to capture details on the ways in which students worked through these assignments.  We have used this data to better understand both their problem solving strategies and how POET serves their needs.  Using the data gathered, we have refined the tool and added new suggested features or deleted features that have not proven useful.    The final POET tool is accessible to instructors and students through a web-based homework assignment system: https://engineering.purdue.edu/POET/wiki/pmwiki.p...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

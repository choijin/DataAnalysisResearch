<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: STEM Real World Applications of Mathematics</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2010</AwardEffectiveDate>
<AwardExpirationDate>09/30/2014</AwardExpirationDate>
<AwardTotalIntnAmount>88000.00</AwardTotalIntnAmount>
<AwardAmount>88000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>John Haddock</SignBlockName>
<PO_EMAI>jhaddock@nsf.gov</PO_EMAI>
<PO_PHON>7032922671</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project builds upon the successful Phase 1 project, STEM Real World Applications Modules. New modules are developed which are closely tied to classroom concepts with mathematics used in industry. The team of investigators includes leaders in the mathematical research and educational communities, and mathematicians with years of industry experience. The overarching goal of this team is to show undergraduate students that strong mathematical skills leads to more employment options and greater chances of success.&lt;br/&gt;&lt;br/&gt;The dissemination plan has three main components. The project impacts students and faculty members nationwide through distribution of effective teaching materials. A key part of the dissemination starts with 12 faculty members at 7 additional institutions beta testing the developed modules. After beta-testing, the modules are made available on the project website. Finally presentations about the modules and their effect on student learning are given at conferences, and articles about the modules are submitted to educational and research journals.</AbstractNarration>
<MinAmdLetterDate>09/29/2010</MinAmdLetterDate>
<MaxAmdLetterDate>09/29/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1019448</AwardID>
<Investigator>
<FirstName>Joan</FirstName>
<LastName>Lucas</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Joan M Lucas</PI_FULL_NAME>
<EmailAddress>jlucas@brockport.edu</EmailAddress>
<PI_PHON>5853952196</PI_PHON>
<NSF_ID>000172083</NSF_ID>
<StartDate>09/29/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Rebecca</FirstName>
<LastName>Smith</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rebecca Smith</PI_FULL_NAME>
<EmailAddress>rebecca@brockport.edu</EmailAddress>
<PI_PHON>5853955183</PI_PHON>
<NSF_ID>000555867</NSF_ID>
<StartDate>09/29/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY College at Brockport</Name>
<CityName>Brockport</CityName>
<ZipCode>144202932</ZipCode>
<PhoneNumber>5853952444</PhoneNumber>
<StreetAddress>Research Foundation of SUNY</StreetAddress>
<StreetAddress2><![CDATA[350 New Campus Drive]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY25</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>152607024</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY College at Brockport]]></Name>
<CityName>Brockport</CityName>
<StateCode>NY</StateCode>
<ZipCode>144202932</ZipCode>
<StreetAddress><![CDATA[Research Foundation of SUNY]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7492</Code>
<Text>CCLI-Type 2 (Expansion)</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0410</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~88000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;</p> <p>The mathematical concepts that students learn in the undergraduate curriculum are often presented in the abstract, and students have difficulty understanding how and where these mathematical tools can be used to solve practical problems.&nbsp;The purpose of this project was to create small-sized, self-contained modules where students can directly see the application of mathematical to real-world problems.&nbsp; These modules are helpful in motivating and retaining students to study in the STEM disciplines.&nbsp; This project was part of a larger effort directed by Dr. Narayan of the Rochester Institute of Technology (RIT).&nbsp;&nbsp; Some of the modules developed can be obtained from the website <a href="http://people.rit.edu/dansma/realworldmath.html">http://people.rit.edu/dansma/realworldmath.html</a></p> <p>&nbsp;</p> <p>Supported by this grant, the investigators developed the<br />following modules:</p> <p>&nbsp;</p> <p>Maximum Matching in Graphs in a Health Care Setting.&nbsp; This module shows students how the classic matching problem in graphs can be directly applied to the problem of allocating kidneys to patients who need a kidney transplant, so that the most number of patients can be served.</p> <p>&nbsp;</p> <p>Shortest Path in a Graph and Package Delivery.&nbsp; This module illustrates how the well-known Dijkstra&rsquo;s shortest path problem can be applied to the problem of delivering packages in an urban environment in such a way that lowers the total cost to the shipping company.</p> <p>&nbsp;</p> <p>Directed Graphs and State Migration.&nbsp; This module teaches students the fundamental concepts and terminology of graph theory by placing those concepts in the context of how people move from one state to another.</p> <p>&nbsp;</p> <p>Recursion and Feral Cat Reproduction.&nbsp; This module shows students how recursion relations can be used to formulate and estimate cat populations, to better understand how the populations can be controlled over a long period of time.</p> <p>&nbsp;</p> <p>Using Graph Theory to Compromise Privacy in a Social Network. This module shows students how the graph theoretic topics of sub-graph structure,<br />combined with theories about random graphs and about graph automorphisms can be applied by a member of a social network in an attack that can reveal the connections that exist among some other members of the network.</p> <p>&nbsp;</p> <p>Using Breadth-First-Search in Graphs to Reveal Social Network Links. This module shows students how the attack outlined in the previous module can be efficiently implemented using the classic Breadth-First-Search graph-traversal algorithm.&nbsp; This algorithm is markedly faster than exhaustive-enumeration.</p> <p>&nbsp;</p> <p>Actuarial Mathematics. This module shows students how the fundamental set theorem of Inclusion/Exclusion can be applied by mathematics professionals such as actuaries in settings as diverse as insurance companies, hospitals,<br />marketing firms and grocery stores.&nbsp; These types of problems appear in part<br />or in whole on the probability Actuarial Exam which will be required of students who will become actuaries. &nbsp;</p> <p><br /><br /></p> <p>Gambling.&nbsp; In this module students apply Inclusion/Exclusion to analyze different hands that arise in the poker game Texas Hold-em.&nbsp; While it is very easy to find statistics comparing two hands online, the practice of figuring out what all the possibilities are that make one hand better than the other can be quite difficult. Realizing what is involved can make students better appreciate the depth of a game like poker.</p> <p>&nbsp;</p> <p>Tree Structures in the Java Programming Language.&nbsp; This module<strong> </strong>shows how tree structures arise in the modern object-oriented programming languages Java. &nbsp;Students explore the publically available Java API to see how the software th...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[    The mathematical concepts that students learn in the undergraduate curriculum are often presented in the abstract, and students have difficulty understanding how and where these mathematical tools can be used to solve practical problems. The purpose of this project was to create small-sized, self-contained modules where students can directly see the application of mathematical to real-world problems.  These modules are helpful in motivating and retaining students to study in the STEM disciplines.  This project was part of a larger effort directed by Dr. Narayan of the Rochester Institute of Technology (RIT).   Some of the modules developed can be obtained from the website http://people.rit.edu/dansma/realworldmath.html     Supported by this grant, the investigators developed the following modules:     Maximum Matching in Graphs in a Health Care Setting.  This module shows students how the classic matching problem in graphs can be directly applied to the problem of allocating kidneys to patients who need a kidney transplant, so that the most number of patients can be served.     Shortest Path in a Graph and Package Delivery.  This module illustrates how the well-known DijkstraÃ†s shortest path problem can be applied to the problem of delivering packages in an urban environment in such a way that lowers the total cost to the shipping company.     Directed Graphs and State Migration.  This module teaches students the fundamental concepts and terminology of graph theory by placing those concepts in the context of how people move from one state to another.     Recursion and Feral Cat Reproduction.  This module shows students how recursion relations can be used to formulate and estimate cat populations, to better understand how the populations can be controlled over a long period of time.     Using Graph Theory to Compromise Privacy in a Social Network. This module shows students how the graph theoretic topics of sub-graph structure, combined with theories about random graphs and about graph automorphisms can be applied by a member of a social network in an attack that can reveal the connections that exist among some other members of the network.     Using Breadth-First-Search in Graphs to Reveal Social Network Links. This module shows students how the attack outlined in the previous module can be efficiently implemented using the classic Breadth-First-Search graph-traversal algorithm.  This algorithm is markedly faster than exhaustive-enumeration.     Actuarial Mathematics. This module shows students how the fundamental set theorem of Inclusion/Exclusion can be applied by mathematics professionals such as actuaries in settings as diverse as insurance companies, hospitals, marketing firms and grocery stores.  These types of problems appear in part or in whole on the probability Actuarial Exam which will be required of students who will become actuaries.        Gambling.  In this module students apply Inclusion/Exclusion to analyze different hands that arise in the poker game Texas Hold-em.  While it is very easy to find statistics comparing two hands online, the practice of figuring out what all the possibilities are that make one hand better than the other can be quite difficult. Realizing what is involved can make students better appreciate the depth of a game like poker.     Tree Structures in the Java Programming Language.  This module shows how tree structures arise in the modern object-oriented programming languages Java.  Students explore the publically available Java API to see how the software there is organized into the tree structure known as "packages", and also into another tree structure, that of "inheritance".  Students investigate fundamental tree relationships, such as height, subtrees, ancestor-descendant, etc.     Graph Structures in the Java Programming Language. This module shows how the combinatorial structure of a DAG (directed acyclic graph) arises in the programming languages Java.  Students explore the p...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

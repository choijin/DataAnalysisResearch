<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase II:  A Multithreaded Storage Engine Using Highly-Concurrent Fractal Trees</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2011</AwardEffectiveDate>
<AwardExpirationDate>07/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>425000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Glenn H. Larsen</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This Small Business Innovation Research (SBIR) Phase II project will apply multithreading techniques to provide multi-terabyte (and larger) high-performance databases in MySQL. The company has developed a highperformance storage engine for MySQL, which maintains indexes on live data 100 times faster than current commonly-used structures. The technology solves the problem of maintaining indexes on large databases in the face of high trickle-load indexing rates. In Phase I, the company developed a multithreaded bulk loader to solve the problem of how to load data quickly. The next significant research problems for large MySQL databases are to allow online, or "hot", schema changes in which, for example, an index can be added without taking the database down, and to use multithreading to speed up joins and reductions so that the large data sets can be queried quickly. In this project, the researchers will investigate the use of multithreading to support hot indexing and parallel joins reductions.&lt;br/&gt;&lt;br/&gt;If successful, multi-terabyte and larger databases will be manageable and fast on modest hardware, and the hardware will be scalable both with CPU cores and disks. The broader impact of this work is driven by faster, cheaper, lower-power on-disk storage. Organizations that have very large databases will be able to use much less hardware, both saving money and reducing power consumption significantly. Currently many application areas do not employ databases because their performance is too slow. Speeding up databases by two orders-of-magnitude can help grow the market. Currently, many organizations fail to make good use of the data they have collected because they cannot manage it, index it, or query it fast enough to be useful. Applications in finance, retail, homeland security, telecommunications, and scientific computing will benefit from improved manageability and performance.  As users' appetite for data continues to outstrip the availability of fast memory, organizing multithreaded queries on disk-based data for performance will continue to grow in importance.</AbstractNarration>
<MinAmdLetterDate>01/31/2011</MinAmdLetterDate>
<MaxAmdLetterDate>08/08/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1058565</AwardID>
<Investigator>
<FirstName>Bradley</FirstName>
<LastName>Kuszmaul</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Bradley C Kuszmaul</PI_FULL_NAME>
<EmailAddress>bradley@mit.edu</EmailAddress>
<PI_PHON>6173246029</PI_PHON>
<NSF_ID>000407994</NSF_ID>
<StartDate>01/31/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Tokutek, Inc.</Name>
<CityName>Lexington</CityName>
<ZipCode>024214703</ZipCode>
<PhoneNumber>3392230680</PhoneNumber>
<StreetAddress>1 Militia Drive, Suite 11</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>796805328</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TOKUTEK, INC</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Tokutek, Inc.]]></Name>
<CityName>Lexington</CityName>
<StateCode>MA</StateCode>
<ZipCode>024214703</ZipCode>
<StreetAddress><![CDATA[1 Militia Drive, Suite 11]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5373</Code>
<Text>SBIR Phase II</Text>
</ProgramElement>
<ProgramReference>
<Code>5373</Code>
<Text>SMALL BUSINESS PHASE II</Text>
</ProgramReference>
<ProgramReference>
<Code>6850</Code>
<Text>DIGITAL SOCIETY&amp;TECHNOLOGIES</Text>
</ProgramReference>
<ProgramReference>
<Code>9139</Code>
<Text>INFORMATION INFRASTRUCTURE &amp; TECH APPL</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~425000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This Small Business Innovation Research (SBIR) Phase II projectapplied novel multithreading techniques to provide multi-terabyte (andlarger) high-performance databases in MySQL. &nbsp;Using traditional B-treeindexes, MySQL becomes unmanageable beyond about 500GB. &nbsp;Tokutek hasdeveloped TokuDB, a high-performance storage engine for MySQL, whichmaintains indexes on live data 100 times faster than B-trees. TokuDBsolves the problem of maintaining indexes on large databases in theface of high trickle-load indexing rates. &nbsp;In Phase I, Tokutekdeveloped a multithreaded bulk loader using Cilk to solve the problemof how to load data quickly. &nbsp;The next big research problems for largeMySQL databases were to allow online, or ``hot'', schema changes inwhich, for example, an index can be added without taking the databasedown, and to use multithreading to speed up joins and reductions sothat the large data sets can be queried quickly. &nbsp;In this project, theresearchers investigated the use of multithreading to support hotindexing (which employed new fractal-tree-specific techniques), andimproved multithreaded query perofrmance. As a result of thisreserach, multi-terabyte and larger databases are more manageable andfaster on modest hardware, and the perforamcne scales better both withCPU cores and disks.</p> <p><br />The broader impact of this work is driven by faster, cheaper,lower-power on-disk storage. &nbsp;Organizations that have very largedatabases can use much less hardware, both saving moneyand reducing power consumption significantly. &nbsp;Manyapplication areas do not employ databases because their performance istoo slow. &nbsp;Speeding up databases by two orders-of-magnitude can helpgrow the market by additional billions of dollars per year.Currently, many organizations fail to make good use of the data theyhave collected because they cannot manage it, index it, or query itfast enough to be useful. Applications in finance, retail, homelandsecurity, telecommunications, and scientific computing will benefitfrom improved manageability and performance. &nbsp;The research has alsofurthered our basic scientific understanding of how to lay out data ondisk and perform queries for a wide variety of data-intensiveproblems. &nbsp;As users' appetite for data continues to outstrip theavailability of fast memory, organizing multithreaded queries ondisk-based data for performance will continue to grow in importance.</p> <p>&nbsp;</p><br> <p>            Last Modified: 09/30/2013<br>      Modified by: Bradley&nbsp;C&nbsp;Kuszmaul</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This Small Business Innovation Research (SBIR) Phase II projectapplied novel multithreading techniques to provide multi-terabyte (andlarger) high-performance databases in MySQL.  Using traditional B-treeindexes, MySQL becomes unmanageable beyond about 500GB.  Tokutek hasdeveloped TokuDB, a high-performance storage engine for MySQL, whichmaintains indexes on live data 100 times faster than B-trees. TokuDBsolves the problem of maintaining indexes on large databases in theface of high trickle-load indexing rates.  In Phase I, Tokutekdeveloped a multithreaded bulk loader using Cilk to solve the problemof how to load data quickly.  The next big research problems for largeMySQL databases were to allow online, or ``hot'', schema changes inwhich, for example, an index can be added without taking the databasedown, and to use multithreading to speed up joins and reductions sothat the large data sets can be queried quickly.  In this project, theresearchers investigated the use of multithreading to support hotindexing (which employed new fractal-tree-specific techniques), andimproved multithreaded query perofrmance. As a result of thisreserach, multi-terabyte and larger databases are more manageable andfaster on modest hardware, and the perforamcne scales better both withCPU cores and disks.   The broader impact of this work is driven by faster, cheaper,lower-power on-disk storage.  Organizations that have very largedatabases can use much less hardware, both saving moneyand reducing power consumption significantly.  Manyapplication areas do not employ databases because their performance istoo slow.  Speeding up databases by two orders-of-magnitude can helpgrow the market by additional billions of dollars per year.Currently, many organizations fail to make good use of the data theyhave collected because they cannot manage it, index it, or query itfast enough to be useful. Applications in finance, retail, homelandsecurity, telecommunications, and scientific computing will benefitfrom improved manageability and performance.  The research has alsofurthered our basic scientific understanding of how to lay out data ondisk and perform queries for a wide variety of data-intensiveproblems.  As users' appetite for data continues to outstrip theavailability of fast memory, organizing multithreaded queries ondisk-based data for performance will continue to grow in importance.          Last Modified: 09/30/2013       Submitted by: Bradley C Kuszmaul]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

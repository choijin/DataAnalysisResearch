<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Workshop: Design of Large-scale Complex Systems; Fort Worth, Texas; September 12, 2010</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>02/28/2011</AwardExpirationDate>
<AwardTotalIntnAmount>49920.00</AwardTotalIntnAmount>
<AwardAmount>49920</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07030000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>CMMI</Abbreviation>
<LongName>Div Of Civil, Mechanical, &amp; Manufact Inn</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Christina L. Bloebaum</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The objective of this award will be to conduct a one day workshop with the aim of investigating whether the design of large complex systems, such as aircraft, spacecraft, or automobiles, should employ a process that allocates requirements down to each component design team, or a process that flows down objective functions.  A relevant example of requirements allocation would be an automobile transmission that is required to cost less than $700 to manufacture, last more than 200,000 miles, and transmit power to the wheels with an efficiency greater than 99%.  In contrast, an objective function would combine cost, life and efficiency into a scoring function and ask designers to make a transmission with the highest possible score.  The objective function fits into an optimization approach which is favored by many theories of engineering design.  However, requirements allocation is the standard presented in systems engineering manuals and is the process used throughout industry.  The two approaches are very different, and should lead to very different outcomes.  Which is better?  This award will fund a workshop which will bring together world class experts in systems engineering, engineering design, and engineering optimization to discuss and compare the advantages and disadvantages of each method for the first time.  Resulting from the workshop will be a research agenda aimed at significantly advancing the state of design of large-scale complex systems.&lt;br/&gt;&lt;br/&gt;Today, designs of large complex systems tend to overrun schedules, often by years, exceeding development and manufacturing budgets (by an average of about 50% in the Department of Defense and NASA).  Systems are often cancelled after years of development because cost and schedule are out of control.  Preliminary research suggests that most of these delays and overruns, amounting to tens of billions of dollars in losses per year, could be prevented by flowing down objective functions to enable better use of optimization in engineering.  A National Science Foundation workshop in February 2010 on fundamental issues in systems engineering identified requirements versus objective functions as the most important research question in the most critical area in systems engineering today.  Therefore, this workshop will critically compare the two approaches and recommend an agenda of research to develop the best process and bring it into practice.   The results will be disseminated through presentations, conference papers, and journal articles.</AbstractNarration>
<MinAmdLetterDate>08/31/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/31/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1049929</AwardID>
<Investigator>
<FirstName>Paul</FirstName>
<LastName>Collopy</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Paul D Collopy</PI_FULL_NAME>
<EmailAddress>paul.collopy@uah.edu</EmailAddress>
<PI_PHON>2568246749</PI_PHON>
<NSF_ID>000545827</NSF_ID>
<StartDate>08/31/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Value-Driven Design Institute, Inc.</Name>
<CityName>Urbana</CityName>
<ZipCode>618030247</ZipCode>
<PhoneNumber>2173675865</PhoneNumber>
<StreetAddress>PO Box 247</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>826851375</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>VALUE-DRIVEN DESIGN INSTITUTE, INC.</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Value-Driven Design Institute, Inc.]]></Name>
<CityName>Urbana</CityName>
<StateCode>IL</StateCode>
<ZipCode>618030247</ZipCode>
<StreetAddress><![CDATA[PO Box 247]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1464</Code>
<Text>ESD-Eng &amp; Systems Design</Text>
</ProgramElement>
<ProgramReference>
<Code>067E</Code>
<Text>DESIGN TOOLS</Text>
</ProgramReference>
<ProgramReference>
<Code>068E</Code>
<Text>DESIGN THEORY</Text>
</ProgramReference>
<ProgramReference>
<Code>073E</Code>
<Text>OPTIMIZATION &amp; DECISION MAKING</Text>
</ProgramReference>
<ProgramReference>
<Code>7556</Code>
<Text>CONFERENCE AND WORKSHOPS</Text>
</ProgramReference>
<ProgramReference>
<Code>9148</Code>
<Text>TOOLS &amp; TECHNOL FOR MANUFACTURING DESIGN</Text>
</ProgramReference>
<ProgramReference>
<Code>MANU</Code>
<Text>MANUFACTURING</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~49920</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p class="western">On September 12 and 13, 2010, the National Science Foundation sponsored a workshop in Ft. Worth, Texas, to explore the question, &ldquo;Which provides better guidance for design teams:  requirements or objective functions?&rdquo; with respect to systems engineering on very large complex systems like ships or space launch rockets.</p> <p class="western">Most formal approaches to design are built on optimization, a process that uses objective functions to guide the results.&nbsp; An objective function is a kind of scoring system that evaluates whether one design is better than another.</p> <p class="western">On the other hand, all systems engineering manuals mandate the use of requirements, such as, "the mass of the satellite shall be less than 325 kilograms," and all large design projects use requirements.&nbsp; Instead of comparing designs, requirements determine whether a design is good or bad.&nbsp;</p> <p class="western">Thus, there is a large gap between design theory and design practice regarding the use of requirements.&nbsp; The two methods are quite different and ought to produce very different results.&nbsp; The workshop was structured to explore the advantages and shortfalls of each approach in an informal debate format.&nbsp; Workshop participants included academic researchers and practicing systems engineers from industry and government.</p> <p class="western"><span>At the end of the debate, everyone on the objective functions team, as well as almost all the participants who were asked to argue for requirements, concluded that objective function <span>flowdown</span> is the better way to manage large projects.&nbsp; There were many reasons supporting this outcome, but the two strongest were that (1) objective functions provide clearer guidance to engineers making design decisions, whereas (2)&nbsp; requirements limit the design space and probably, in complex designs, rule out the very best designs.&nbsp; On the other hand, many details about how objective functions can be flowed down in large engineering projects have not been worked out.&nbsp; Considerable methodology remains to be developed.</span></p> <p class="western"><span>The workshop advanced the fundamental theory of systems engineering by placing a rigorous footing under guidance technologies used for coordinating and directing detailed design activities for organization of thousands of design engineers.  Much of the structure of systems engineering, including waterfall and spiral development processes, are anchored in the recursive process by which components at some level in the design hierarchy are decomposed into subcomponents at a lower level.  This decomposition encompasses two actions:  partitioning the component into subcomponents, and providing guidance to the subcomponent design.  This workshop focused on how guidance is provided to design, leading to the surprising result that today's primary guidance technology, requirements <span>flowdown</span>, needs to be replaced.</span></p> <p class="western">Previous research has suggested that, for large engineering design projects like aircraft and spacecraft, flowing down objective functions rather than allocating requirements could correct massive cost overruns&nbsp; (averaging 50% per program) and years of delays that are responsible for tens of billions of dollars of annual losses in the aerospace industry. The workshop outlined a program of rigorous research to provide a solid base for achieving the goal of eliminating such losses.</p> <p class="western">The workshop was strengthened by inviting a culturally diverse group of researchers, including women and under-represented minorities.</p><br> <p>            Last Modified: 06/28/2011<br>      Modified by: Paul&nbsp;D&nbsp;Collopy</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[On September 12 and 13, 2010, the National Science Foundation sponsored a workshop in Ft. Worth, Texas, to explore the question, "Which provides better guidance for design teams:  requirements or objective functions?" with respect to systems engineering on very large complex systems like ships or space launch rockets. Most formal approaches to design are built on optimization, a process that uses objective functions to guide the results.  An objective function is a kind of scoring system that evaluates whether one design is better than another. On the other hand, all systems engineering manuals mandate the use of requirements, such as, "the mass of the satellite shall be less than 325 kilograms," and all large design projects use requirements.  Instead of comparing designs, requirements determine whether a design is good or bad.  Thus, there is a large gap between design theory and design practice regarding the use of requirements.  The two methods are quite different and ought to produce very different results.  The workshop was structured to explore the advantages and shortfalls of each approach in an informal debate format.  Workshop participants included academic researchers and practicing systems engineers from industry and government. At the end of the debate, everyone on the objective functions team, as well as almost all the participants who were asked to argue for requirements, concluded that objective function flowdown is the better way to manage large projects.  There were many reasons supporting this outcome, but the two strongest were that (1) objective functions provide clearer guidance to engineers making design decisions, whereas (2)  requirements limit the design space and probably, in complex designs, rule out the very best designs.  On the other hand, many details about how objective functions can be flowed down in large engineering projects have not been worked out.  Considerable methodology remains to be developed. The workshop advanced the fundamental theory of systems engineering by placing a rigorous footing under guidance technologies used for coordinating and directing detailed design activities for organization of thousands of design engineers.  Much of the structure of systems engineering, including waterfall and spiral development processes, are anchored in the recursive process by which components at some level in the design hierarchy are decomposed into subcomponents at a lower level.  This decomposition encompasses two actions:  partitioning the component into subcomponents, and providing guidance to the subcomponent design.  This workshop focused on how guidance is provided to design, leading to the surprising result that today's primary guidance technology, requirements flowdown, needs to be replaced. Previous research has suggested that, for large engineering design projects like aircraft and spacecraft, flowing down objective functions rather than allocating requirements could correct massive cost overruns  (averaging 50% per program) and years of delays that are responsible for tens of billions of dollars of annual losses in the aerospace industry. The workshop outlined a program of rigorous research to provide a solid base for achieving the goal of eliminating such losses. The workshop was strengthened by inviting a culturally diverse group of researchers, including women and under-represented minorities.       Last Modified: 06/28/2011       Submitted by: Paul D Collopy]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

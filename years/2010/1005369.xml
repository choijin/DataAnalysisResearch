<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Topics on Computational Algebra</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>210000.00</AwardTotalIntnAmount>
<AwardAmount>210000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tie Luo</SignBlockName>
<PO_EMAI>tluo@nsf.gov</PO_EMAI>
<PO_PHON>7032928448</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computing Groebner bases and finding primary decomposition of polynomial ideals are two closely related topics that are fundamental in computational algebraic geometry. Groebner bases provide an essential tool for computation in algebra, especially in solving systems of multivariate polynomials. The primary decomposition theorem was proved by the late chess Master Emanuel Lasker in 1905 for polynomial rings and Emmy Noether in early 1920s for general Noetherian rings. Primary decomposition is a crucial step in computerizing schemes in algebraic geometry, yet it is still a big challenge to provide efficient algorithms for reasonable sized systems of polynomials. The major bottleneck is  in computing Groebner bases for systems of polynomials  that appear in the process of computing primary decomposition. The main goal of the project is to develop new efficient algorithms for computing Groebner bases and for finding primary decomposition.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Solving polynomial systems is ubiquitous in sciences and engineerings. &lt;br/&gt;Its applications include, but not limited to, computer vision, computer-aided designs, coding theory, cryptography, robot kinematics, computational biology, etc. Work in this project  would benefit major computer algebra systems and their users in education and industry. It also bears direct applications in reliable and secure communications from Internet commercial to military combats and from cell phones to outer space explorations.</AbstractNarration>
<MinAmdLetterDate>08/24/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/24/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1005369</AwardID>
<Investigator>
<FirstName>Shuhong</FirstName>
<LastName>Gao</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shuhong Gao</PI_FULL_NAME>
<EmailAddress>sgao@clemson.edu</EmailAddress>
<PI_PHON>8646562729</PI_PHON>
<NSF_ID>000256887</NSF_ID>
<StartDate>08/24/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Clemson University</Name>
<CityName>CLEMSON</CityName>
<ZipCode>296345701</ZipCode>
<PhoneNumber>8646562424</PhoneNumber>
<StreetAddress>230 Kappa Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 200]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>South Carolina</StateName>
<StateCode>SC</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>SC03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042629816</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CLEMSON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042629816</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Clemson University]]></Name>
<CityName>CLEMSON</CityName>
<StateCode>SC</StateCode>
<ZipCode>296345701</ZipCode>
<StreetAddress><![CDATA[230 Kappa Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>South Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>SC03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>7454</Code>
<Text>MSPA-INTERDISCIPLINARY</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~210000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Interllectual Merit.</strong>&nbsp;The project studies efficient algorithms for &nbsp;computing Groebner bases and for finding primary decomposition of polynomial ideals, which are two closely related topics that are fundamental in computational algebraic geometry. Groebner bases provides an essential tool for computation in algebra, especially in solving systems of multivariate polynomials. The primary decomposition theorem was proved by the late chess Master Emanuel Lasker in 1905 for polynomial rings and Emmy Noether in early 1920s for general Noetherian rings. &nbsp;Here we highlight two main contributions made during this project.&nbsp;</p> <p>Buchberger introduced in 1965 the first algorithm for computing Groebner bases, and it has been implementedin in most computer algebra systems including Maple, Mathematica, Magma, Sage, Singular, Macaulay 2, CoCoA, etc.&nbsp;There has been extensive effort in finding more efficient algorithms for computing Groebner bases. &nbsp;In 2002, Faugere presented his F5 algorithm that is significantly faster than Buchberger's. &nbsp;However, &nbsp;the F5 algorithm is difficult to understand and proofs of its&nbsp;correctness and finite termination contain significant gaps. &nbsp;In order to remedy this problem, several groups of researchers made extensive effort &nbsp;trying to modify the F5 algorithm. The major contribution of this project is &nbsp;the discovery of a new framework for computing Groebner bases for ideals and the related syzygy modules, in a joint work with Mingsheng Wang from Chinese Academy of Sciences and Frank Volny, a PhD student of the PI's. &nbsp;This framework provides a solid theoretical fundation for easy undertanding of signature-based algorithms proposed in the lieterature from 2002 up to 2014, and enables deeper understanding of designing efficient algorithms for computing Groebner bases.</p> <p>Another major contribution is in factoring sparse polynomials, which is a crucial step in computing primary decomposion of polynomial ideals. The last decade witnessed dramatic progress in factoring multivariate polinomials&nbsp;in dens&nbsp;input form (including the PI's&nbsp;PDE&nbsp;method based on closed differential 1-forms). For sparse polynomials (in terms of straightline programs), however, the story is completely different. Kaltofen and Trager&nbsp;(1990) gave an algorithm (blackbox&nbsp;approach) for finding&nbsp;factors of a sparse polynomial, but their algorithm is not practica. In a joint work with Trevisan Vilmar and Luiz Emilio Allem, we developed a new algorithm that is practical for sparse polynomials represented as straightline programs. Note, when expanded, these polynomials can not be stored in any computer, since they may have so many terms that can out number all the atoms in the universe (hence not enough storage in the world even if each atom can store one term)<span style="font-family: Verdana, Arial, Helvetica, sans-serif;"><span style="font-size: xx-small;">.</span></span></p> <p><strong>Broader Impact.&nbsp;</strong><span>Solving polynomial systems is ubiquitous in sciences and engineerings. &nbsp;</span>Its applications include, but not limited to, computer vision, computer-aided designs, coding theory, cryptography, robot kinematics, computational biology, etc. Work in this project would benefit major computer algebra systems and their users in education and industry. It also bears direct applications in reliable and secure communications from Internet commercial to military combats and from cell phones to outer space explorations.</p><br> <p>            Last Modified: 03/19/2015<br>      Modified by: Shuhong&nbsp;Gao</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Interllectual Merit. The project studies efficient algorithms for  computing Groebner bases and for finding primary decomposition of polynomial ideals, which are two closely related topics that are fundamental in computational algebraic geometry. Groebner bases provides an essential tool for computation in algebra, especially in solving systems of multivariate polynomials. The primary decomposition theorem was proved by the late chess Master Emanuel Lasker in 1905 for polynomial rings and Emmy Noether in early 1920s for general Noetherian rings.  Here we highlight two main contributions made during this project.   Buchberger introduced in 1965 the first algorithm for computing Groebner bases, and it has been implementedin in most computer algebra systems including Maple, Mathematica, Magma, Sage, Singular, Macaulay 2, CoCoA, etc. There has been extensive effort in finding more efficient algorithms for computing Groebner bases.  In 2002, Faugere presented his F5 algorithm that is significantly faster than Buchberger's.  However,  the F5 algorithm is difficult to understand and proofs of its correctness and finite termination contain significant gaps.  In order to remedy this problem, several groups of researchers made extensive effort  trying to modify the F5 algorithm. The major contribution of this project is  the discovery of a new framework for computing Groebner bases for ideals and the related syzygy modules, in a joint work with Mingsheng Wang from Chinese Academy of Sciences and Frank Volny, a PhD student of the PI's.  This framework provides a solid theoretical fundation for easy undertanding of signature-based algorithms proposed in the lieterature from 2002 up to 2014, and enables deeper understanding of designing efficient algorithms for computing Groebner bases.  Another major contribution is in factoring sparse polynomials, which is a crucial step in computing primary decomposion of polynomial ideals. The last decade witnessed dramatic progress in factoring multivariate polinomials in dens input form (including the PI's PDE method based on closed differential 1-forms). For sparse polynomials (in terms of straightline programs), however, the story is completely different. Kaltofen and Trager (1990) gave an algorithm (blackbox approach) for finding factors of a sparse polynomial, but their algorithm is not practica. In a joint work with Trevisan Vilmar and Luiz Emilio Allem, we developed a new algorithm that is practical for sparse polynomials represented as straightline programs. Note, when expanded, these polynomials can not be stored in any computer, since they may have so many terms that can out number all the atoms in the universe (hence not enough storage in the world even if each atom can store one term).  Broader Impact. Solving polynomial systems is ubiquitous in sciences and engineerings.  Its applications include, but not limited to, computer vision, computer-aided designs, coding theory, cryptography, robot kinematics, computational biology, etc. Work in this project would benefit major computer algebra systems and their users in education and industry. It also bears direct applications in reliable and secure communications from Internet commercial to military combats and from cell phones to outer space explorations.       Last Modified: 03/19/2015       Submitted by: Shuhong Gao]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

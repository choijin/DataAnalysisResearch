<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Programming Models for Green Software</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/01/2011</AwardEffectiveDate>
<AwardExpirationDate>12/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>362147.00</AwardTotalIntnAmount>
<AwardAmount>479391</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Energy efficiency is a critical goal for modern computing: power consumption represents a significant portion of operational cost for data centers and cloud computing providers; wireless sensor networks are only effective when individual nodes do not deplete their power quickly after deployment; increasing battery life is high on the wish list of millions of laptop and smartphone users. Prior research on energy-efficient computing is largely focused on innovations in VLSI, architectures, operating systems, and compiler optimizations.&lt;br/&gt;&lt;br/&gt;This project explores how innovations in programming models can contribute to energy-efficient computing. A focus on programming models has the distinctive benefits of promoting application-specific energy reduction, ensuring high portability in heterogeneous computing platforms, and facilitating the development of maintainable green software. The project centers around the design of a novel programming system where characteristics in energy-aware programming--such as power modes--can be declared or inferred as types, over which a type system can reason rigorously and compositionally. Types can further guide standard energy reduction techniques such as dynamic voltage and frequency scaling, and be exploited for certifying program energy characteristics in the Internet era. The outcome of the project includes the design of an energy-aware language and a compiler with novel features for energy reduction and certification. The project also brings the awareness of energy efficiency into computer programming classes and fosters next-generation green-conscious programmers--the contributors of a more sustainable society.</AbstractNarration>
<MinAmdLetterDate>12/10/2010</MinAmdLetterDate>
<MaxAmdLetterDate>01/20/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1054515</AwardID>
<Investigator>
<FirstName>Yu David</FirstName>
<LastName>Liu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Yu David Liu</PI_FULL_NAME>
<EmailAddress>davidl@cs.binghamton.edu</EmailAddress>
<PI_PHON>6077776136</PI_PHON>
<NSF_ID>000521321</NSF_ID>
<StartDate>12/10/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Binghamton</Name>
<CityName>BINGHAMTON</CityName>
<ZipCode>139026000</ZipCode>
<PhoneNumber>6077776136</PhoneNumber>
<StreetAddress>4400 VESTAL PKWY E</StreetAddress>
<StreetAddress2><![CDATA[PO Box 6000]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY22</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>090189965</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Binghamton]]></Name>
<CityName>BINGHAMTON</CityName>
<StateCode>NY</StateCode>
<ZipCode>139026000</ZipCode>
<StreetAddress><![CDATA[4400 VESTAL PKWY E]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY22</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1045</Code>
<Text>CAREER: FACULTY EARLY CAR DEV</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~92072</FUND_OBLG>
<FUND_OBLG>2012~108317</FUND_OBLG>
<FUND_OBLG>2013~178589</FUND_OBLG>
<FUND_OBLG>2014~12000</FUND_OBLG>
<FUND_OBLG>2015~88413</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Energy efficiency is a critical goal in modern computing, with impact on operational cost, battery life, thermal reliability, and environmental sustainability. This project researched on energy-aware software, leading to a number of application-centric techniques for improving energy efficiency of computer software systems. First, the project has produced a novel type system design called Energy Types for energy-aware programming. The key insight behind the type system is that both phase-based energy management and mode-based energy management follow principles that can be defined through types and enforced through type-based reasoning. A type checker has been implemented based on the ideas of Energy Types. The resulting compiler, called ET, has been developed and used for developing Android apps. Second, the project has developed techniques to improve the proactiveness and adaptiveness of energy-aware software development. This exploration lead to several programming abstractions to promote application-runtime interaction, and a type-based reasoning system that combines static typing with dynamic typing. We have realized these ideas in the Ent programming language, and used the new language in developing software on a variety of energy-conscious computer systems, from laptops, to smartphones, to Raspberry Pi. Studies show the new language can improve the programmability and debuggability of energy-aware programs, as well as energy efficiency. Third, the project has led to the design and implementation of optimization techniques for balancing the trade-off between energy and performance at the application level, including a compile-time program analysis for stream-based energy management, and a runtime-level optimization for thread management based on Dynamic Voltage and Frequency Scaling (DVFS). Fourth, the project spearheaded three empirical studies, investigating the impact of application-level concurrency on energy consumption, the relationship between data processing and performance/energy trade-off, and the role of programmers in developing energy-aware software, respectively. The results from the project have been published in premier computer science conferences spanning multiple research communities, such as ACM Conference on Object-Oriented Programming, Systems, Languages and Applications (OOPSLA), ACM Conference on Programming Language Design and Implementation (PLDI), ACM Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), and ACM/IEEE Conference on Software Engineering (ICSE). All software artifacts developed through the project are open-source, and available for download online. The project has supported 6 Ph.D. students, 5 Master's students and 4 undergraduate students. Among them, 3 are women. A new course ("Energy-Aware Programming Languages') have been developed, and an existing course ("Programming Models for Emerging Platforms") has been significantly enriched thanks to the research conducted under the project. The project helped the PI engage in K-12 education, and shed insight on how the human (programmers) and the machine (computers and devices) interact in our green-conscious society. <br /><br /></p><br> <p>            Last Modified: 03/03/2017<br>      Modified by: Yu David&nbsp;Liu</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Energy efficiency is a critical goal in modern computing, with impact on operational cost, battery life, thermal reliability, and environmental sustainability. This project researched on energy-aware software, leading to a number of application-centric techniques for improving energy efficiency of computer software systems. First, the project has produced a novel type system design called Energy Types for energy-aware programming. The key insight behind the type system is that both phase-based energy management and mode-based energy management follow principles that can be defined through types and enforced through type-based reasoning. A type checker has been implemented based on the ideas of Energy Types. The resulting compiler, called ET, has been developed and used for developing Android apps. Second, the project has developed techniques to improve the proactiveness and adaptiveness of energy-aware software development. This exploration lead to several programming abstractions to promote application-runtime interaction, and a type-based reasoning system that combines static typing with dynamic typing. We have realized these ideas in the Ent programming language, and used the new language in developing software on a variety of energy-conscious computer systems, from laptops, to smartphones, to Raspberry Pi. Studies show the new language can improve the programmability and debuggability of energy-aware programs, as well as energy efficiency. Third, the project has led to the design and implementation of optimization techniques for balancing the trade-off between energy and performance at the application level, including a compile-time program analysis for stream-based energy management, and a runtime-level optimization for thread management based on Dynamic Voltage and Frequency Scaling (DVFS). Fourth, the project spearheaded three empirical studies, investigating the impact of application-level concurrency on energy consumption, the relationship between data processing and performance/energy trade-off, and the role of programmers in developing energy-aware software, respectively. The results from the project have been published in premier computer science conferences spanning multiple research communities, such as ACM Conference on Object-Oriented Programming, Systems, Languages and Applications (OOPSLA), ACM Conference on Programming Language Design and Implementation (PLDI), ACM Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), and ACM/IEEE Conference on Software Engineering (ICSE). All software artifacts developed through the project are open-source, and available for download online. The project has supported 6 Ph.D. students, 5 Master's students and 4 undergraduate students. Among them, 3 are women. A new course ("Energy-Aware Programming Languages') have been developed, and an existing course ("Programming Models for Emerging Platforms") has been significantly enriched thanks to the research conducted under the project. The project helped the PI engage in K-12 education, and shed insight on how the human (programmers) and the machine (computers and devices) interact in our green-conscious society.          Last Modified: 03/03/2017       Submitted by: Yu David Liu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

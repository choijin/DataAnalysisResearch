<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>III: Small: Collection Construction Methodologies for Learning-to-Rank</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>488723.00</AwardTotalIntnAmount>
<AwardAmount>488723</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Maria Zemankova</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Modern search engines, especially those designed for the World Wide Web, commonly analyze and combine hundreds of features extracted from the submitted query and underlying documents (e.g., web pages) in order to assess the relative relevance of a document to a given query and thus rank the underlying collection. The sheer size of this problem has led to the development of learning-to-rank algorithms that can automate the construction of such ranking functions: Given a training set of (feature vector, relevance) pairs, a machine learning procedure learns how to combine the query and document features in such a way so as to effectively assess the relevance of any document to any query and thus rank a collection in response to a user input. Much thought and research has been placed on feature extraction and the development of sophisticated learning-to-rank algorithms. However, relatively little research has been conducted on the choice of documents and queries for learning-to-rank data sets nor on the effect of these choices on the ability of a learning-to-rank algorithm to "learn", effectively and efficiently.&lt;br/&gt;&lt;br/&gt;The proposed work investigates the effect of query, document, and feature selection on the ability of learning-to-rank algorithms to efficiently and effectively learn ranking functions.  In preliminary results on document selection, a pilot study has already determined that training sets whose sizes are as small as 2 to 5% of those typically used are just as effective for learning-to-rank purposes. Thus, one can train more efficiently over a much smaller (though effectively equivalent) data set, or, at an equal cost, one can train over a far "larger" and more representative data set.  In addition to formally characterizing this phenomenon for document selection, the proposed work investigate this phenomenon for query and feature selection as well, with the end goals of (1) understanding the effect of document, query, and feature selection on learning-to-rank algorithms and (2) developing collection construction methodologies that are efficient and effective for learning-to-rank purposes.&lt;br/&gt;&lt;br/&gt;In addition to characterizing and developing collection construction methodologies, the project plan includes development and release of new, efficient, and effective learning-to-rank data sets for use by academia and industry.  In fostering this effort, the project team has close ties with the National Institute of Standards and Technology (NIST) and Microsoft Research, two of the premier organizations that develop and release Information Retrieval data sets.  All research results and data sets developed as part of this project will be made available at the project website (http://www.ccs.neu.edu/home/jaa/IIS-1017903/). The project provides an educational and training experience for students.</AbstractNarration>
<MinAmdLetterDate>09/02/2010</MinAmdLetterDate>
<MaxAmdLetterDate>09/02/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017903</AwardID>
<Investigator>
<FirstName>Javed</FirstName>
<LastName>Aslam</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Javed A Aslam</PI_FULL_NAME>
<EmailAddress>jaa@ccs.neu.edu</EmailAddress>
<PI_PHON>6173738169</PI_PHON>
<NSF_ID>000312612</NSF_ID>
<StartDate>09/02/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northeastern University</Name>
<CityName>BOSTON</CityName>
<ZipCode>021155005</ZipCode>
<PhoneNumber>6173733004</PhoneNumber>
<StreetAddress>360 HUNTINGTON AVE</StreetAddress>
<StreetAddress2><![CDATA[177-500]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001423631</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTHEASTERN UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001423631</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Northeastern University]]></Name>
<CityName>BOSTON</CityName>
<StateCode>MA</StateCode>
<ZipCode>021155005</ZipCode>
<StreetAddress><![CDATA[360 HUNTINGTON AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~488723</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Modern search engines, especially those designed for the World Wide Web, commonly analyze and combine hundreds of features extracted from the submitted query and underlying documents (e.g., web pages) in order to assess the relative relevance of a document to a given query and thus produce a ranked list of documents (or web pages) for the user. Example features include the presence or absence of query terms in the document, the number of web pages that point to the document, and the document's length, age, and so forth. &nbsp;The sheer size of this problem has led to the development of learning-to-rank algorithms that can automate the construction of such ranking functions: Given a training set of (query, document, relevance) triples, a machine learning procedure learns how to combine the query and document features in such a way so as to effectively predict the relevance of any document to any query and thus rank a collection in response to a user input.</p> <p><br />For modern search engines, much thought and research has been placed on feature extraction and the development of sophisticated learning-to-rank algorithms. However, relatively little research has been conducted on the choice of documents and queries for training the learning-to-rank algorithm nor on the effect of these choices on the ability of a learning-to-rank algorithm to "learn", effectively and efficiently. &nbsp;Furthermore, relatively little research has been conducted on the effect of noisy training data in this process, particularly noisy or incorrect relevance assessments.</p> <p><br />Our work has demonstrated that noise and the careful choice of training data can have a profound effect on the ability of learning-to-rank algorithms to accurately "learn" to solve the search engine task. &nbsp;For example, we have shown that learning-to-rank algorithms are most effective when trained on data that is rather skewed in the sense that the training data include both highly relevant and highly non-relevant documents (for any given training query), whereas mediocre documents are of far less importance. Furthermore, we have shown that noisy relevance assessments in the training and testing data greatly affect the real and perceived quality of the trained ranker. &nbsp;Finally, we have shown that by incorporating a model of relevance assessment noise in the learning-to-rank algorithm itself, one can improve its ultimate performance significantly.</p> <p><br />Finally, this project provided research topics for three students who obtained their PhDs during the life of the project and two further students who will obtain their PhDs in the upcoming year. &nbsp;The graduated students have gone on to pursue careers in academia, industrial research, and development.</p> <p>&nbsp;</p><br> <p>            Last Modified: 01/14/2014<br>      Modified by: Javed&nbsp;A&nbsp;Aslam</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Modern search engines, especially those designed for the World Wide Web, commonly analyze and combine hundreds of features extracted from the submitted query and underlying documents (e.g., web pages) in order to assess the relative relevance of a document to a given query and thus produce a ranked list of documents (or web pages) for the user. Example features include the presence or absence of query terms in the document, the number of web pages that point to the document, and the document's length, age, and so forth.  The sheer size of this problem has led to the development of learning-to-rank algorithms that can automate the construction of such ranking functions: Given a training set of (query, document, relevance) triples, a machine learning procedure learns how to combine the query and document features in such a way so as to effectively predict the relevance of any document to any query and thus rank a collection in response to a user input.   For modern search engines, much thought and research has been placed on feature extraction and the development of sophisticated learning-to-rank algorithms. However, relatively little research has been conducted on the choice of documents and queries for training the learning-to-rank algorithm nor on the effect of these choices on the ability of a learning-to-rank algorithm to "learn", effectively and efficiently.  Furthermore, relatively little research has been conducted on the effect of noisy training data in this process, particularly noisy or incorrect relevance assessments.   Our work has demonstrated that noise and the careful choice of training data can have a profound effect on the ability of learning-to-rank algorithms to accurately "learn" to solve the search engine task.  For example, we have shown that learning-to-rank algorithms are most effective when trained on data that is rather skewed in the sense that the training data include both highly relevant and highly non-relevant documents (for any given training query), whereas mediocre documents are of far less importance. Furthermore, we have shown that noisy relevance assessments in the training and testing data greatly affect the real and perceived quality of the trained ranker.  Finally, we have shown that by incorporating a model of relevance assessment noise in the learning-to-rank algorithm itself, one can improve its ultimate performance significantly.   Finally, this project provided research topics for three students who obtained their PhDs during the life of the project and two further students who will obtain their PhDs in the upcoming year.  The graduated students have gone on to pursue careers in academia, industrial research, and development.          Last Modified: 01/14/2014       Submitted by: Javed A Aslam]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

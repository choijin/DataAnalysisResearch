<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Incremental Sampling Methods for Online Reactive Motion Planning with Temporal Logic Specifications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The objective of this project is to develop a new class of real-time motion planning and control algorithms, enabling mobile cyber-physical systems such as autonomous cars, aircraft, or mobile robots to behave in a provably safe, reliable and efficient fashion, in dynamically-changing, uncertain environments, shared with humans and other independent agents.  Safe interaction of such systems with humans, human-controlled systems, or other automated systems will require the ability to behave  according to accepted protocols and rules stated in high-level "human-like" languages, such as those arising from the rules of the road, ethical and privacy concerns, as well as rules of engagement in military or security applications.   The core of the project is a new approach to the synthesis of  real-time planning and control algorithms for mobile cyber-physical systems, combining incremental sampling algorithms for trajectory generation with efficient local model checking techniques. The proposed approach is intended to provide, in addition to provably correct and safe closed-loop behaviors, both asymptotic optimality guarantees and reactive planning capabilities.  As a concrete target application area, autonomous automobiles are considered. In particular, a concept is proposed for autonomy-enabled mobility-on-demand system, which could help reducing traffic congestion in metropolitan areas by providing low-cost, convenient, private, and flexible transportation options to city dwellers.</AbstractNarration>
<MinAmdLetterDate>07/21/2010</MinAmdLetterDate>
<MaxAmdLetterDate>07/22/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1016213</AwardID>
<Investigator>
<FirstName>Emilio</FirstName>
<LastName>Frazzoli</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Emilio Frazzoli</PI_FULL_NAME>
<EmailAddress>frazzoli@mit.edu</EmailAddress>
<PI_PHON>6172531991</PI_PHON>
<NSF_ID>000104873</NSF_ID>
<StartDate>07/21/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName>Cambridge</CityName>
<StateCode>MA</StateCode>
<ZipCode>021394301</ZipCode>
<StreetAddress><![CDATA[77 MASSACHUSETTS AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~163396</FUND_OBLG>
<FUND_OBLG>2011~336604</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="page" title="Page 3"> <div class="section"> <div class="layoutArea"> <div class="column"> <p>The objective of this project was to develop a new class of real-time motion planning and control algorithms, enabling mobile cyber-physical systems such as autonomous cars, aircraft, or mobile robots to behave in a provably safe, reliable and efficient fashion, in dynamically-changing, uncertain environments shared with humans and other independent agents. Safe interaction of such systems with humans, human-controlled systems, or other automated systems will require the ability to behave according to accepted protocols and rules stated in high-level "human-like" languages, such as those arising from the rules of the road, ethical and privacy concerns, as well as rules of engagement in military or security applications.&nbsp;As a concrete target application area, self-driving cars and autonomous aircraft were the main object of study.&nbsp;</p> <p>For example, how do we ensure that self-driving vehicles will be safe enough to operate on public roads, shared with humans and human-operated vehicles? Extensive simulations and experiments are necessary, but not sufficient at all. For example, even though Google&rsquo;s reported 500,000 miles of autonomous driving are an impressive number, one must remember that the &ldquo;mean distance between accidents&rdquo; for a human driver are of the order of a million miles. Hence any experimental campaign to establish the safety of an autonomous vehicle as comparable to a human driver will require extensive time and resources. Similar arguments hold for numerical simulation.</p> <p>A complementary approach to safety verification by experiments or simulation is the design of control software that is correct by construction. In other words, software that is developed in such a way to provide rigorous guarantees on the fact that it will generate behaviors that are safe, with respect to a certain set of rules, such as the rules of the road, and best practices for safe driving.</p> <p>Writing software that satisfies a set of rules of the road is very hard to do by hand, and typically even harder to verify. Many standard techniques, such as hand-crafted finite-state machines to evaluate rules, are hard to implement and very error prone. Handling &ldquo;hard&rdquo; and &ldquo;soft&rdquo; constraints (such as &ldquo;do not hit pedestrians&rdquo; and &ldquo;if possible stay in the left lane&rdquo;, respectively) is even more problematic.&nbsp;</p> <p>In order to address this issue, we have developed techniques that allow our cars to generate only trajectories that satisfy all the &ldquo;hard&rdquo; rules, while satisfying as many of the &ldquo;soft&rdquo; rules as possible. These techniques are based on the synthesis of a number of concepts from <strong>robotics</strong> and <strong>theoretical computer science</strong>:</p> <p>1)<strong>[Incremental concretization]</strong>: We construct incrementally a graph containing a (large, but finite) number of trajectories that the vehicle can execute; this can be done in a way that &ldquo;explores&rdquo; efficiently all possible behaviors of the vehicle. In practice, we generate thousands of new trajectories per second.</p> <p>2)<strong>[Incremental model checking]:</strong> Before adding trajectories to the graph, we check which trajectories are &ldquo;safe&rdquo; with respect to a number of prioritized temporal/logical constraints, expressed in languages such as Linear Temporal Logic (LTL) or mu-calculus. This can be done incrementally, in the sense that the computation remains efficient even when the graph of trajectories becomes very large.</p> <p>3)<strong>[Any-time control]:</strong> at any time at which we need to issue a command to the car, the &ldquo;safest&rdquo; trajectory (i.e., a trajectory satisfying ALL the hard constraints, and as many &ldquo;high-priority&rdquo; soft constrain...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[     The objective of this project was to develop a new class of real-time motion planning and control algorithms, enabling mobile cyber-physical systems such as autonomous cars, aircraft, or mobile robots to behave in a provably safe, reliable and efficient fashion, in dynamically-changing, uncertain environments shared with humans and other independent agents. Safe interaction of such systems with humans, human-controlled systems, or other automated systems will require the ability to behave according to accepted protocols and rules stated in high-level "human-like" languages, such as those arising from the rules of the road, ethical and privacy concerns, as well as rules of engagement in military or security applications. As a concrete target application area, self-driving cars and autonomous aircraft were the main object of study.   For example, how do we ensure that self-driving vehicles will be safe enough to operate on public roads, shared with humans and human-operated vehicles? Extensive simulations and experiments are necessary, but not sufficient at all. For example, even though GoogleÃ†s reported 500,000 miles of autonomous driving are an impressive number, one must remember that the "mean distance between accidents" for a human driver are of the order of a million miles. Hence any experimental campaign to establish the safety of an autonomous vehicle as comparable to a human driver will require extensive time and resources. Similar arguments hold for numerical simulation.  A complementary approach to safety verification by experiments or simulation is the design of control software that is correct by construction. In other words, software that is developed in such a way to provide rigorous guarantees on the fact that it will generate behaviors that are safe, with respect to a certain set of rules, such as the rules of the road, and best practices for safe driving.  Writing software that satisfies a set of rules of the road is very hard to do by hand, and typically even harder to verify. Many standard techniques, such as hand-crafted finite-state machines to evaluate rules, are hard to implement and very error prone. Handling "hard" and "soft" constraints (such as "do not hit pedestrians" and "if possible stay in the left lane", respectively) is even more problematic.   In order to address this issue, we have developed techniques that allow our cars to generate only trajectories that satisfy all the "hard" rules, while satisfying as many of the "soft" rules as possible. These techniques are based on the synthesis of a number of concepts from robotics and theoretical computer science:  1)[Incremental concretization]: We construct incrementally a graph containing a (large, but finite) number of trajectories that the vehicle can execute; this can be done in a way that "explores" efficiently all possible behaviors of the vehicle. In practice, we generate thousands of new trajectories per second.  2)[Incremental model checking]: Before adding trajectories to the graph, we check which trajectories are "safe" with respect to a number of prioritized temporal/logical constraints, expressed in languages such as Linear Temporal Logic (LTL) or mu-calculus. This can be done incrementally, in the sense that the computation remains efficient even when the graph of trajectories becomes very large.  3)[Any-time control]: at any time at which we need to issue a command to the car, the "safest" trajectory (i.e., a trajectory satisfying ALL the hard constraints, and as many "high-priority" soft constraints as possible) is extracted, and the relevant commands are sent to the car. Furthermore, the carÃ†s behavior converges to an optimal one as the computational resources increase. Note that the car maintains what we call "safety invariance" by never abandoning a "safe state" unless it is certain to reach another safe state.  We were able to demonstrate the safety and correctness of our approach on our autonomous vehicles, which, to the be...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

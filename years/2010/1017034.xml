<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC: Small: Increasing The Cost of Malware</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>498440.00</AwardTotalIntnAmount>
<AwardAmount>498440</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>As seen by the proliferation of commercial-grade malware, attacking networked applications is a profitable enterprise.  There are two advantages malware authors currently have against us.  The first advantage is that because users run a diverse set of applications on their systems, anti-virus and anti-malware programs must exhaustively search for specific malware instances across all pieces of software on a system.  Malware easily thwarts this through the use of polymorphism, metamorphism, obfuscation, and cryptographic packing, placing a financial burden on anti-malware vendors and a performance burden on their users.  The second advantage malware authors enjoy is that while there are a lot of applications to attack, each software target is static across many client machines.  As a result, malware authors only need to reverse and exploit a single instance of an application in order to compromise thousands of machines. This project examines two novel approaches for reversing the advantages held by malware authors.  The first approach explores a white-listed execution model that extends integrity-checks beyond the operating system and into the running application in an on-line manner.  The second approach explores the on-line, run-time transformation of applications in order to force a malware adversary to reverse and exploit a new application for each new client it wishes to compromise.  Finally, the project aims to demonstrate the impact these techniques have on the cost of developing malware.</AbstractNarration>
<MinAmdLetterDate>07/23/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/14/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017034</AwardID>
<Investigator>
<FirstName>Wu-chang</FirstName>
<LastName>Feng</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Wu-chang Feng</PI_FULL_NAME>
<EmailAddress>wuchang@cs.pdx.edu</EmailAddress>
<PI_PHON>5037254036</PI_PHON>
<NSF_ID>000148091</NSF_ID>
<StartDate>07/23/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Portland State University</Name>
<CityName>Portland</CityName>
<ZipCode>972070751</ZipCode>
<PhoneNumber>5037259900</PhoneNumber>
<StreetAddress>1600 SW 4th Ave</StreetAddress>
<StreetAddress2><![CDATA[Attn: Sponsored Projects Admin]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Oregon</StateName>
<StateCode>OR</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OR03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052226800</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PORTLAND STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052226800</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Portland State University]]></Name>
<CityName>Portland</CityName>
<StateCode>OR</StateCode>
<ZipCode>972070751</ZipCode>
<StreetAddress><![CDATA[1600 SW 4th Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Oregon</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OR03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~159173</FUND_OBLG>
<FUND_OBLG>2011~166032</FUND_OBLG>
<FUND_OBLG>2012~173235</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The goal of the project "Increasing the Cost of Malware" was to take the same techniques malware authors have been using against us for decades and to apply them towards securing systems instead. &nbsp; Specifically, the key observation is that malware has been using polymorphism and metamorphism to increase the cost of defending against attacks. &nbsp;Such techniques break signature detection schemes and require security analysts to repeatedly perform painstaking reverse engineering analysis. &nbsp;The aim of the project was to use polymorphism and metamorphism to protect legitimate software.</p> <p>Intellectual merit: &nbsp;Our work applied metamorphism and polymorphism directly to the problem of automated web attacks. &nbsp;CAPTCHAs and proof-of-work have been commonly used to protect against such attacks. &nbsp;The main research product of this project was MetaCAPTCHA (www.metacaptcha.com): a system that metamorphically delivers a variety of challenges to adversaries before allowing them access to a service. &nbsp;To our knowledge, this is the first, metamorphic system for delivering CAPTCHAs and proof-of-work challenges. &nbsp;We are now applying our techniques to a new domain: security education. &nbsp;Specifically, we are building metamorphic capture-the-flag exercises that can be used to offer computer security courses in a more effective manner.&nbsp;</p> <p>Broader impact: We developed an deployed a version of our service. &nbsp;A demo of how it works is here: &nbsp;<br /><br />https://www.youtube.com/watch?v=9pY2E4w9C1c</p> <p>The code behind the service is freely available and is described in a recent publication. &nbsp;The research grant has allowed us to continue our successful undergraduate and high-school internship program. &nbsp;Over the course of the grant, we have mentored 6 high-school students and 3 undergraduate students in techniques for identifying and thwarting malware. &nbsp;By exposing these students early on in their careers, we have hopefully shifted their awareness towards&nbsp;this critical area of need. &nbsp;</p><br> <p>            Last Modified: 12/14/2014<br>      Modified by: Wu-Chang&nbsp;Feng</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The goal of the project "Increasing the Cost of Malware" was to take the same techniques malware authors have been using against us for decades and to apply them towards securing systems instead.   Specifically, the key observation is that malware has been using polymorphism and metamorphism to increase the cost of defending against attacks.  Such techniques break signature detection schemes and require security analysts to repeatedly perform painstaking reverse engineering analysis.  The aim of the project was to use polymorphism and metamorphism to protect legitimate software.  Intellectual merit:  Our work applied metamorphism and polymorphism directly to the problem of automated web attacks.  CAPTCHAs and proof-of-work have been commonly used to protect against such attacks.  The main research product of this project was MetaCAPTCHA (www.metacaptcha.com): a system that metamorphically delivers a variety of challenges to adversaries before allowing them access to a service.  To our knowledge, this is the first, metamorphic system for delivering CAPTCHAs and proof-of-work challenges.  We are now applying our techniques to a new domain: security education.  Specifically, we are building metamorphic capture-the-flag exercises that can be used to offer computer security courses in a more effective manner.   Broader impact: We developed an deployed a version of our service.  A demo of how it works is here:    https://www.youtube.com/watch?v=9pY2E4w9C1c  The code behind the service is freely available and is described in a recent publication.  The research grant has allowed us to continue our successful undergraduate and high-school internship program.  Over the course of the grant, we have mentored 6 high-school students and 3 undergraduate students in techniques for identifying and thwarting malware.  By exposing these students early on in their careers, we have hopefully shifted their awareness towards this critical area of need.         Last Modified: 12/14/2014       Submitted by: Wu-Chang Feng]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

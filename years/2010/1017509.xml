<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NetSE:  Small: Beyond Tit-for-Tat: New Techniques for Collaboration in Network Security Games</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>299732.00</AwardTotalIntnAmount>
<AwardAmount>299732</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Beyond Tit-for-Tat: New Techniques for Collaboration in Network Security Games&lt;br/&gt;Motivation and Problem: How can we ensure collaboration on the Internet, where populations are highly fluctuating, selfish, and unpredictable? This project will explore a new algorithmic technique for enabling collaboration in network security games. The new technique, Secure Multiparty Mediation (SMM), improves on past approaches such as tit-for-tat in the following ways: (1) it works even in single round games; (2) it works even when the actions of the players of the game are never revealed; (3) it works even in the presence of churn, i.e. players joining and leaving the game.&lt;br/&gt;In the SMM approach, advice is generated by using a mediator: an algorithm that generates private advice for each player. After receiving advice, each player decides on an action. The players retain free-will and so will follow the advice only if it is their best interest to do so. Preliminary work shows that this approach significantly improves social welfare in a well-studied network security game, the virus inoculation game. The SMM approach does not require the exchange of money or other resources. Moreover, the mediator can be implemented in a completely distributed fashion using algorithmic techniques from distributed computing.&lt;br/&gt;&lt;br/&gt;Intellectual Merit: This project will push the frontier of knowledge about collaboration in game theory. The concept of a mediator has been known in the economics community for many years. However, the project will result in mediators that are more sophisticated algorithmically than those proposed in the economics literature: they will be specifically designed to work for large-scale networks, and will use tools from distributed computing, cryptography and randomized algorithms. Moreover, the project will use analytical tools from the algorithmic game theory community to quantify the success of the mediators designed. &lt;br/&gt;&lt;br/&gt;Broader Impact: Success in this project will lead to development of a new mathematical tool for addressing security problems. The power of collaborative techniques will likely increase as the world's information infrastructure becomes increasingly connected. Thus, such a tool could significantly improve the security of the world's computer networks.&lt;br/&gt;&lt;br/&gt;Research results from this proposal will be incorporated into lectures and a project in a security class that has just been created in the researcher's department. Game theory is beguiling to students and attracts attention in popular culture (cf. the movie ?A Beautiful Mind"). Thus, success in incorporating game theory into a security class will likely attract and retain more talented students into security research. Game theory is also an important conduit between academic disciplines. Significant mathematical results in this area are likely to be of interest to other disciplines such as economics and biology.&lt;br/&gt;New Mexico is an EPSCoR state and the University of New Mexico is one of only two universities in the nation that is both a Minority Serving Institution and a Carnegie Very High Research Activity university. The researcher will make every effort to include women and minority students in this project.</AbstractNarration>
<MinAmdLetterDate>07/15/2010</MinAmdLetterDate>
<MaxAmdLetterDate>07/15/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017509</AwardID>
<Investigator>
<FirstName>Jared</FirstName>
<LastName>Saia</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jared C Saia</PI_FULL_NAME>
<EmailAddress>saia@cs.unm.edu</EmailAddress>
<PI_PHON>5052772256</PI_PHON>
<NSF_ID>000260597</NSF_ID>
<StartDate>07/15/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of New Mexico</Name>
<CityName>Albuquerque</CityName>
<ZipCode>871310001</ZipCode>
<PhoneNumber>5052774186</PhoneNumber>
<StreetAddress>1700 Lomas Blvd. NE, Suite 2200</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New Mexico</StateName>
<StateCode>NM</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NM01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>868853094</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NEW MEXICO, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>784121725</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of New Mexico]]></Name>
<CityName>Albuquerque</CityName>
<StateCode>NM</StateCode>
<ZipCode>871310001</ZipCode>
<StreetAddress><![CDATA[1700 Lomas Blvd. NE, Suite 2200]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Mexico</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NM01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7794</Code>
<Text>NETWORK SCIENCE &amp; ENGINEERING</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~299732</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This grant has had several significant outcomes.&nbsp;</p> <p><br />First, we designed algorithms to implement a mediator in a scalable manner. In order to do this, we designed an efficient algorithm for the multiparty computation problem (MPC). &nbsp;In MPC, n parties each have a private input. &nbsp;They want to jointly compute a function f of n variables over their inputs, without revealing any information about the private inputs (beyond what can be learned from the output of f). &nbsp;An algorithm for MPC enables decentralized simulation of a mediator, since the function f can be the advice offered by the mediator, based on private information obtained from all the players.</p> <p>Our main result was an algorithm that solves the MPC problem while requiring each player to send and receive a number of bits that is about square root of n, and requires latency that is polylogarithmic in n. &nbsp;This contrasts with previous results for this problem where the number of messages sent is linear in n. &nbsp;We obtained this result by making significant use of a new tool: quorums, which are small groups of mostly good processors that work together as a single functional unit. &nbsp;Our paper describing this result won a best paper award at the International Conference on Distributed Computing and Networking (ICDCN), 2014. &nbsp; Our result in this area used mathematical and algorithmic tools that we previously developed in solving the Byzantine agreement problem. &nbsp;&nbsp;</p> <p><br />A second major result was an algorithm for Byzantine agreement in the classic model. &nbsp;In the Byzantine agreement problem, n agents, each with a private input, must agree on a single common output that is equal to some agent&rsquo;s input. &nbsp;The problem is complicated by the fact that that a hidden fraction of the players are controlled by an adversary that is actively trying to thwart this goal. &nbsp;Randomization is provably necessary and sufficient to solve this problem, but past randomized algorithms required expected exponential time, in the classic model. &nbsp;In the classic model, the adversary is adaptive: it can take over processors at any point during the protocol, up to the point of taking over t processors. Communication is asynchronous: the scheduling of the delivery of messages is set by the adversary, so that the delays are unpredictable to the algorithm. Finally, the adversary has full information: it knows the states of all processors at any time, and is assumed to be computationally unbounded. &nbsp;</p> <p><br />Our main result in this area is the first algorithm that solves this problem in polynomial communication and computation time. &nbsp;Previous results required either exponential communication or computation time. &nbsp;Our result thus resolves a problem, first posed by Ben-Or, which has been open since 1983. Our paper on this result was published in the prestigious conference Symposium on Discrete Algorithms (SODA), 2014. &nbsp;The journal version of the paper was published in perhaps the top journal in computer science, the Journal of the ACM.</p> <p>Our third major result was the design of scalable algorithms that enable secret sharing in a game theoretic setting, even when each agent prefers to learn the secret individually without others learning it. &nbsp;Scalable here means that each part sends a number of bits that is about square root of n. &nbsp;Secret sharing is a key primitive for many cryptographic protocols. &nbsp;This result led to two conference papers and a journal paper, also in strong venues.</p> <p><br />Finally, this grant has supported the training and research efforts of several PhD students. &nbsp;One of these students, George Saad, graduated last year and is now working at the Silicon-valley start-up, Jasper technologies. &nbsp;A second student, Mahnush Mohavedi, who is female, is on track to graduate this spring.&nbsp;</p> ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This grant has had several significant outcomes.    First, we designed algorithms to implement a mediator in a scalable manner. In order to do this, we designed an efficient algorithm for the multiparty computation problem (MPC).  In MPC, n parties each have a private input.  They want to jointly compute a function f of n variables over their inputs, without revealing any information about the private inputs (beyond what can be learned from the output of f).  An algorithm for MPC enables decentralized simulation of a mediator, since the function f can be the advice offered by the mediator, based on private information obtained from all the players.  Our main result was an algorithm that solves the MPC problem while requiring each player to send and receive a number of bits that is about square root of n, and requires latency that is polylogarithmic in n.  This contrasts with previous results for this problem where the number of messages sent is linear in n.  We obtained this result by making significant use of a new tool: quorums, which are small groups of mostly good processors that work together as a single functional unit.  Our paper describing this result won a best paper award at the International Conference on Distributed Computing and Networking (ICDCN), 2014.   Our result in this area used mathematical and algorithmic tools that we previously developed in solving the Byzantine agreement problem.      A second major result was an algorithm for Byzantine agreement in the classic model.  In the Byzantine agreement problem, n agents, each with a private input, must agree on a single common output that is equal to some agentÆs input.  The problem is complicated by the fact that that a hidden fraction of the players are controlled by an adversary that is actively trying to thwart this goal.  Randomization is provably necessary and sufficient to solve this problem, but past randomized algorithms required expected exponential time, in the classic model.  In the classic model, the adversary is adaptive: it can take over processors at any point during the protocol, up to the point of taking over t processors. Communication is asynchronous: the scheduling of the delivery of messages is set by the adversary, so that the delays are unpredictable to the algorithm. Finally, the adversary has full information: it knows the states of all processors at any time, and is assumed to be computationally unbounded.     Our main result in this area is the first algorithm that solves this problem in polynomial communication and computation time.  Previous results required either exponential communication or computation time.  Our result thus resolves a problem, first posed by Ben-Or, which has been open since 1983. Our paper on this result was published in the prestigious conference Symposium on Discrete Algorithms (SODA), 2014.  The journal version of the paper was published in perhaps the top journal in computer science, the Journal of the ACM.  Our third major result was the design of scalable algorithms that enable secret sharing in a game theoretic setting, even when each agent prefers to learn the secret individually without others learning it.  Scalable here means that each part sends a number of bits that is about square root of n.  Secret sharing is a key primitive for many cryptographic protocols.  This result led to two conference papers and a journal paper, also in strong venues.   Finally, this grant has supported the training and research efforts of several PhD students.  One of these students, George Saad, graduated last year and is now working at the Silicon-valley start-up, Jasper technologies.  A second student, Mahnush Mohavedi, who is female, is on track to graduate this spring.           Last Modified: 08/13/2015       Submitted by: Jared C Saia]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Exploring Statistical Models to Optimize Hardware and Software under Processor Reliability Constraints</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>374424.00</AwardTotalIntnAmount>
<AwardAmount>374424</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>With technology scaling coupled with increasing power densities, modern processors suffer from potential soft errors and hard errors. The reliability analysis of such multi-threaded processors, e.g. Simultaneous Multithreading (SMT) and Chip-Multiprocessors (CMP), where inter-thread resource contention exists, is a relatively unexplored area. Furthermore, the modeling complexity is exacerbated by two additional factors: (1) increasing number of cores in a chip; and (2) heterogeneity brought by manufacturing process variation. Software wise, traditional compiler designs are aimed at providing high performance and recently low power when generating object codes. With increasing hardware vulnerabilities, however, high performance computing programs suffer from unexpected errors and exceptions, which might be mitigated by using fault-tolerance techniques such as error detections and check pointing, but still eventually hurt their performance. Apart from a reliable hardware platform, software designers can further improve system reliability by generating error resilient codes. Moreover, analysis of software's architectural vulnerability is still in an ad hoc stage. Therefore, this project proposes a predictive framework to handle the above challenges by employing modern statistical and machine learning methods. The outcomes of this project include a predictive framework which guides for reliable software and hardware optimization and its applications to high performance computing.&lt;br/&gt;&lt;br/&gt;The broader impact plans include outreach activities and undergraduate and graduate training. The interdisciplinary nature of the proposed work allows students to learn cutting-edge knowledge from different areas to broaden their scope of training as well as to enhance their productivity. Students from the under-represented groups will be encouraged and given priorities for joining the project.</AbstractNarration>
<MinAmdLetterDate>08/10/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/10/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017961</AwardID>
<Investigator>
<FirstName>Lu</FirstName>
<LastName>Peng</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Lu Peng</PI_FULL_NAME>
<EmailAddress>lpeng@lsu.edu</EmailAddress>
<PI_PHON>2255785535</PI_PHON>
<NSF_ID>000484678</NSF_ID>
<StartDate>08/10/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Bin</FirstName>
<LastName>Li</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Bin Li</PI_FULL_NAME>
<EmailAddress>bli@lsu.edu</EmailAddress>
<PI_PHON>2255781343</PI_PHON>
<NSF_ID>000361146</NSF_ID>
<StartDate>08/10/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Louisiana State University</Name>
<CityName>Baton Rouge</CityName>
<ZipCode>708032701</ZipCode>
<PhoneNumber>2255782760</PhoneNumber>
<StreetAddress>202 Himes Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Louisiana</StateName>
<StateCode>LA</StateCode>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>LA06</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>075050765</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>LOUISIANA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>940050792</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Louisiana State University]]></Name>
<CityName>Baton Rouge</CityName>
<StateCode>LA</StateCode>
<ZipCode>708032701</ZipCode>
<StreetAddress><![CDATA[202 Himes Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Louisiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>06</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>LA06</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~374424</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The outcomes of this project include&nbsp;<span>a predictive framework which guides for reliable software and hardware optimization and its applications on high performance computing. Specifically, it has the following results:</span></p> <p><span>(1) We d<span>esigned a two-level prediction model to predict the architectural vulnerability factor on Simultaneous Multithreading (SMT)&nbsp;and C<span>hip Multiprocessor (</span>CMP) processors. The&nbsp;model can accurately predict the architectural vulnerability factor (AVF) on SMT and CMP processors. It can work online and offline to schedule threads which achieves reliable combinations.&nbsp;</span></span></p> <p><span><span>(2) We designed a universal rule based model which guides to select processor configurations resilient to soft errors.&nbsp;<span>By using this model, we can identify a small subset of configurations from a very huge design space. The selected&nbsp;processor configurations are reliable to soft errors for single core and&nbsp;multi-core processors.&nbsp;</span></span></span></p> <p><span><span><span>(3) We designed a software tool to view the application vulnerability to soft errors, and illustrated how this tool can be used in the context of a representative scientific application.&nbsp;<span>Using the software tool for resilisence checking, we demonstrated that&nbsp;Algorithm-specific error checkers are effective at detecting&nbsp;erroneous application results.&nbsp;Protection of the key routines identified by the tool can significantly improve soft error resilience.</span></span></span></span></p> <p><span><span><span><span>We have published more than&nbsp;</span></span></span></span>20 international journal/conferences papers supported in part by this grant. Meanwhile, several PhD students had been involved in this project. Several outreach&nbsp;activities have been performed with the support of this project.&nbsp;</p><br> <p>            Last Modified: 07/15/2015<br>      Modified by: Lu&nbsp;Peng</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The outcomes of this project include a predictive framework which guides for reliable software and hardware optimization and its applications on high performance computing. Specifically, it has the following results:  (1) We designed a two-level prediction model to predict the architectural vulnerability factor on Simultaneous Multithreading (SMT) and Chip Multiprocessor (CMP) processors. The model can accurately predict the architectural vulnerability factor (AVF) on SMT and CMP processors. It can work online and offline to schedule threads which achieves reliable combinations.   (2) We designed a universal rule based model which guides to select processor configurations resilient to soft errors. By using this model, we can identify a small subset of configurations from a very huge design space. The selected processor configurations are reliable to soft errors for single core and multi-core processors.   (3) We designed a software tool to view the application vulnerability to soft errors, and illustrated how this tool can be used in the context of a representative scientific application. Using the software tool for resilisence checking, we demonstrated that Algorithm-specific error checkers are effective at detecting erroneous application results. Protection of the key routines identified by the tool can significantly improve soft error resilience.  We have published more than 20 international journal/conferences papers supported in part by this grant. Meanwhile, several PhD students had been involved in this project. Several outreach activities have been performed with the support of this project.        Last Modified: 07/15/2015       Submitted by: Lu Peng]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

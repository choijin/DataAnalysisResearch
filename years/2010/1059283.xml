<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Foundations for Predictive Resource Management in Next-Generation Multicore Processor Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>100000.00</AwardTotalIntnAmount>
<AwardAmount>100000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Hong Jiang</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Future multicore processor systems will have a growing amount of system-wide shared resources. However, shared resources will present significant undesirable asymmetry. For example, the capabilities of processor cores, cache access latency, and memory access cost will differ depending on the time and the location of their usage. If such asymmetry is not properly managed, the full potential of the multicore computing paradigm will not be achieved. This exploratory research will investigate a novel predictive resource management framework called MAESTRO. The proposed framework automatically learns asymmetry in the system and useful application behavior; the learned knowledge is accumulated and refined; and resource management decisions, such as cache capacity allocation, are made in a predictive manner by exploiting the accumulated knowledge. It is expected that MAESTRO's predictive strategies with detailed system and application knowledge will be a more effective solution to new multicore resource management problems than conventional reactive strategies with limited knowledge. The PI will validate this expectation with solid system prototyping and by studying two target resource management problems.&lt;br/&gt; &lt;br/&gt;The project has the potential to impact the way future computer systems are designed and managed. It is inter-disciplinary by nature and requires understating of applications, computer architecture, OS and machine learning. Students working on this project will receive rigorous inter-disciplinary training.</AbstractNarration>
<MinAmdLetterDate>09/15/2010</MinAmdLetterDate>
<MaxAmdLetterDate>09/15/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1059283</AwardID>
<Investigator>
<FirstName>Sangyeun</FirstName>
<LastName>Cho</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sangyeun Cho</PI_FULL_NAME>
<EmailAddress>cho@cs.pitt.edu</EmailAddress>
<PI_PHON>4123837018</PI_PHON>
<NSF_ID>000386645</NSF_ID>
<StartDate>09/15/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pittsburgh</Name>
<CityName>Pittsburgh</CityName>
<ZipCode>152133203</ZipCode>
<PhoneNumber>4126247400</PhoneNumber>
<StreetAddress>300 Murdoch Building</StreetAddress>
<StreetAddress2><![CDATA[3420 Forbes Avenue]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>004514360</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF PITTSBURGH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004514360</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Pittsburgh]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133203</ZipCode>
<StreetAddress><![CDATA[300 Murdoch Building]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~100000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The common theme of the research tasks in this project has&nbsp;been to intelligently monitor and characterize system workloads and to&nbsp;predictively manage a computer system's resources such as CPUs, caches, and memory.</p> <p>&nbsp;</p> <p>In the early stage of our research, we developed a novel multithreaded&nbsp;program characterization framework called "BarrierWatch"&nbsp;(published in&nbsp;Computing Frontiers 2011). The main idea of BarrierWatch is that, in&nbsp;each program interval defined by two barrier synchronization points,&nbsp;the program shows a repeatable behavior. Because such intervals occur&nbsp;multiple times, this characteristic gives us the ability to predict&nbsp;the behavior of an interval that we've seen previously. We proved the&nbsp;concept using a realistic example of power-performance management of&nbsp;network-on-chip resources.</p> <p>In our "Maestro" work (published in the NASA/ESA Conference on&nbsp;Adaptive Hardware and Systems (AHS) 2011), we outline our overall&nbsp;system architecture with regard to intelligent predictive resource&nbsp;management. This work finds that the intended and unintended&nbsp;asymmetries in system resource characteristics and usage will only&nbsp;increase in the future.&nbsp;It also finds that efficiently learning an application characteristics&nbsp;as well as learning the properties of the platform resources is key to&nbsp;the success of predictive resource management.</p> <p>&nbsp;</p> <p>In the "DEFCAM"&nbsp;work (published in ACM TACO), we monitor the cache's "faulty-ness" and&nbsp;predictively apply/tune the cache resource salvaging methods to&nbsp;achieve the highest performance given the situation. This work is&nbsp;comprehensive and provides a framework to evaluate existing and new&nbsp;performance and yield enhancing strategies relevant to on-chip memory&nbsp;designs.</p> <p>&nbsp;</p> <p>"RDIS"&nbsp;(Recursively Defined Invertible Set) is a novel technique to mask&nbsp;off the effects of faults in large resistive memories. What separates&nbsp;this work (published in DSN 2012) from prior art is that it builds on a strong theoretical&nbsp;analysis of important fault characteristics of resistive memory,&nbsp;namely, stuck-at fault model and readability of faulty cells. RDIS&nbsp;allows for the correct retrieval of data by recursively determining&nbsp;and efficiently keeping track of the positions of the bits that are&nbsp;stuck at a value different from the ones that are written, and then,&nbsp;at read time, by inverting the values read from those positions. RDIS&nbsp;boasts a very low probability of failure that increases&nbsp;slowly with the relative increase in the number of faults. Moreover,&nbsp;RDIS tolerates many more faults than the best existing schemes by up to&nbsp;95% on average at the same overhead level.</p> <p>&nbsp;</p> <p>We have also extended our BarrierWatch work&nbsp;and developed a new technique to predict future cache coherence activities&nbsp;for synchronization epochs (this work was published at MICRO 2012).&nbsp;We were motivated by the fact that predicting target&nbsp;processors that must be contacted on a cache miss can improve&nbsp;the miss handling latency in shared memory systems. We&nbsp;developed a new run-time coherence target prediction scheme that&nbsp;exploits the inherent correlation between synchronization points in a&nbsp;program and coherence communication. Our&nbsp;predictor reduces the miss latency of a directory protocol&nbsp;by 13%. Compared with existing prediction techniques, our predictor achieves comparable performance&nbsp;using substantially smaller power and storage overheads.</p> <p>&nbsp;</p> <p>Besides research achievements, this project contributed to the human resource development through funding Ph.D. students and to the general education by providing new course materials at the University of Pittsburgh.</p> <p>&nbsp;</p><br> <p>         ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The common theme of the research tasks in this project has been to intelligently monitor and characterize system workloads and to predictively manage a computer system's resources such as CPUs, caches, and memory.     In the early stage of our research, we developed a novel multithreaded program characterization framework called "BarrierWatch" (published in Computing Frontiers 2011). The main idea of BarrierWatch is that, in each program interval defined by two barrier synchronization points, the program shows a repeatable behavior. Because such intervals occur multiple times, this characteristic gives us the ability to predict the behavior of an interval that we've seen previously. We proved the concept using a realistic example of power-performance management of network-on-chip resources.  In our "Maestro" work (published in the NASA/ESA Conference on Adaptive Hardware and Systems (AHS) 2011), we outline our overall system architecture with regard to intelligent predictive resource management. This work finds that the intended and unintended asymmetries in system resource characteristics and usage will only increase in the future. It also finds that efficiently learning an application characteristics as well as learning the properties of the platform resources is key to the success of predictive resource management.     In the "DEFCAM" work (published in ACM TACO), we monitor the cache's "faulty-ness" and predictively apply/tune the cache resource salvaging methods to achieve the highest performance given the situation. This work is comprehensive and provides a framework to evaluate existing and new performance and yield enhancing strategies relevant to on-chip memory designs.     "RDIS" (Recursively Defined Invertible Set) is a novel technique to mask off the effects of faults in large resistive memories. What separates this work (published in DSN 2012) from prior art is that it builds on a strong theoretical analysis of important fault characteristics of resistive memory, namely, stuck-at fault model and readability of faulty cells. RDIS allows for the correct retrieval of data by recursively determining and efficiently keeping track of the positions of the bits that are stuck at a value different from the ones that are written, and then, at read time, by inverting the values read from those positions. RDIS boasts a very low probability of failure that increases slowly with the relative increase in the number of faults. Moreover, RDIS tolerates many more faults than the best existing schemes by up to 95% on average at the same overhead level.     We have also extended our BarrierWatch work and developed a new technique to predict future cache coherence activities for synchronization epochs (this work was published at MICRO 2012). We were motivated by the fact that predicting target processors that must be contacted on a cache miss can improve the miss handling latency in shared memory systems. We developed a new run-time coherence target prediction scheme that exploits the inherent correlation between synchronization points in a program and coherence communication. Our predictor reduces the miss latency of a directory protocol by 13%. Compared with existing prediction techniques, our predictor achieves comparable performance using substantially smaller power and storage overheads.     Besides research achievements, this project contributed to the human resource development through funding Ph.D. students and to the general education by providing new course materials at the University of Pittsburgh.          Last Modified: 01/01/2013       Submitted by: Sangyeun Cho]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

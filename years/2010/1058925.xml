<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: CI-ADDO-NEW: StarExec: Cross-Community Infrastructure for Logic Solving</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>150295.00</AwardTotalIntnAmount>
<AwardAmount>150295</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Logic solvers are software programs that can solve complex logical&lt;br/&gt;formulas fully automatically.  Problems in many areas of Computer&lt;br/&gt;Science, such as artificial intelligence, program analysis, security,&lt;br/&gt;hardware verification, and cyber-physical systems can be faithfully&lt;br/&gt;translated into logical formulas.  Those formulas can then be solved&lt;br/&gt;fully automatically by logic solvers. Over the past two decades, at&lt;br/&gt;least ten different logic-solving communities have emerged, based on&lt;br/&gt;different logical languages and solving techniques.  These communities&lt;br/&gt;have independently been building computing infrastructure to aid&lt;br/&gt;development and evaluation of their solvers: libraries of benchmark&lt;br/&gt;formulas, cluster-backed web services, annual competitions, and more.&lt;br/&gt;Such infrastructure also provides an important access point for&lt;br/&gt;users, who can find all the solvers at one site, or even run solvers&lt;br/&gt;on the infrastructure cluster to test their relative capabilities.&lt;br/&gt;The goal of this research is to build a single piece of shared&lt;br/&gt;computing infrastructure called StarExec, which will be used by many&lt;br/&gt;different logic solving communities.  StarExec will provide improved&lt;br/&gt;services for established logic-solving communities, and lower the&lt;br/&gt;entry barrier for new and emerging communities.&lt;br/&gt;&lt;br/&gt;The StarExec infrastructure will consist of a custom web service&lt;br/&gt;interfacing to a medium-sized compute cluster.  This open-source&lt;br/&gt;service will allow multiple logic-solving communities to host&lt;br/&gt;benchmark libraries, run jobs comparing different solvers, and host&lt;br/&gt;competitions.  StarExec will leverage economies of scale to provide&lt;br/&gt;more sophisticated services than is feasible for most individual&lt;br/&gt;logic-solving communities.  A very important goal of StarExec is not&lt;br/&gt;just to collocate different logic-solving communities, but to unite&lt;br/&gt;them.  To this end, the StarExec team will develop formal&lt;br/&gt;specifications of both the syntax and proof-theoretic semantics of&lt;br/&gt;different communities' logical languages.  This will be done using a&lt;br/&gt;meta-language called LFSC ("Logical Framework with Side Conditions"),&lt;br/&gt;developed in previous NSF-funded research.  Translation of formulas&lt;br/&gt;between compatible fragments of different logics will be implemented,&lt;br/&gt;which will will enable a greater degree of integration between solver&lt;br/&gt;communities than was previously possible.  For example, it will be&lt;br/&gt;possible for solvers in one community to be run on benchmarks from&lt;br/&gt;another.  This integration will also aid users of logic solvers, who&lt;br/&gt;will have a greater variety of options, all in a common framework, for&lt;br/&gt;solving their problems.  The broader impact of the StarExec project&lt;br/&gt;will be to accelerate the development, adoption, and convergence of&lt;br/&gt;different logic-solving technologies.  This will enable faster&lt;br/&gt;progress in nationally important application areas such as artificial&lt;br/&gt;intelligence, verification, security, and cyber-physical systems,&lt;br/&gt;which increasingly depend on high-performance logic solvers.</AbstractNarration>
<MinAmdLetterDate>08/15/2011</MinAmdLetterDate>
<MaxAmdLetterDate>08/15/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1058925</AwardID>
<Investigator>
<FirstName>Geoffrey</FirstName>
<LastName>Sutcliffe</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Geoffrey C Sutcliffe</PI_FULL_NAME>
<EmailAddress>geoff@cs.miami.edu</EmailAddress>
<PI_PHON>3052842158</PI_PHON>
<NSF_ID>000482619</NSF_ID>
<StartDate>08/15/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Miami</Name>
<CityName>CORAL GABLES</CityName>
<ZipCode>331462926</ZipCode>
<PhoneNumber>3052843924</PhoneNumber>
<StreetAddress>1320 S. Dixie Highway Suite 650</StreetAddress>
<StreetAddress2><![CDATA[Suite 100-A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<StateCode>FL</StateCode>
<CONGRESSDISTRICT>27</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>FL27</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>625174149</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MIAMI</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004146619</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Miami]]></Name>
<CityName>CORAL GABLES</CityName>
<StateCode>FL</StateCode>
<ZipCode>331462926</ZipCode>
<StreetAddress><![CDATA[1320 S. Dixie Highway Suite 650]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>27</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>FL27</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7359</Code>
<Text>COMPUTING RES INFRASTRUCTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~150295</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Automated Reasoning (AR)&nbsp;is concerned with the development and use of systems that automate sound reasoning: the derivation of conclusions that follow inevitably from facts. Users of AR specify their domain problems in a logic, and submit the specification to an AR solver. The output from the solver provides practical answers to the user's problem. Some examples of domain problems include getting assurance software system has/does not have a bug, that an industrial process fulfils its requirements, that a voting protocol is fair, that a biological process is stable. The theoretical and practical strengths of AR have enabled and motivated users, in many different application domains, to cast their problems into AR problems. Despite increased usage of AR, the complexities installing and executing appropriate AR solvers on large numbers of problem instances often presents a barrier to using AR. At the same time, AR solver developers need to ensure that their tools are sound, and test techniques that might make their solvers more powerful. The infrastructure funded by this grant provides hardware and software that serve both users and developers of AR solvers, to allow easy submission of many AR problems to many AR solvers, with sufiicient hardware resources to get results quickly. This hardware and software infrastructure is called StarExec.</p> <p>StarExec has been become a valuable resource for AR users and solver developers. At the end of the funded development period StarExec had attracted users and developers from 12 distinct logic communities, over 450 users, and in the final year had a&nbsp;weekly average of 36 unique logins, 84 solvers uploaded, 29471 problems uploaded, and 1.78 million runs of a solver on a problem (yes, 1.78 millions runs per week!). These numbers illustrate how StarExec is having an impact on the advancement of knowledge, development, and use of AR. The advancement is within the AR community, as developers improve their AR solvers, and beyond the AR community as users from diverse fields apply AR to their problems. The broader impact on society comes from the results obtained by AR users, as the results obtained lead to conclusions that impact the domains that have been analysed through solutions to AR problems (see the examples above). For many AR developers and users, StarExec has had a transformative impact, providing a software and hardware infrastructure well beyond what they would have access to otherwise. The StarExec infrastructure was been designed and developed in collaboration with AR developers and users, and is based on the experience of the investigators with their own earlier infrastructures (the SMT and TPTP projects). The investigators were thus well qualified to produce an infrastructure that meets the needs of the AR community, and the outcome is a robust and effective hardware and software infrastructure that is having a clear impact.</p> <p>This StarExec project has produced a highly usable hardware and software infrastructure that is available for free to developers and users of AR solvers.&nbsp;StarExec offers a custom web interface and web services running on a cluster of dual processor compute nodes, with several terabytes of networked disk space. The service allows logic community organizers to store, manage and make available benchmark libraries, competition organizers to run competitions, and individual users to run logic solvers on benchmark problems. These capabilities are accessible through a web browser interface at the StarExec web site, which provides facilities to upload and organize benchmarks and solvers, browse and query the stored benchmark libraries, run user-selected solvers on user-selected benchmarks, and analyze execution results and statistics. In the last few years StarExec has been used for many public evaluations of AR solvers, including&nbsp;CoCo - the Confluence Competition, SMT-COMP - the Satisfiability Modulo Theories Competition, SAT Race - the Propositional Satisfiability Competition, Termination - the Termination Competition, SyGuS - the Syntax-Guided Synthesis Competition, CASC - the CADE ATP System Competition, <span>QBFEVAL - the QBF Solver Evaluation,&nbsp;</span>and SLCOMP - the Separation Logic Competition. By contributing to advance the state of the art in logic solving, this project has had an indirect impact in a host of disciplines in computer science that rely on logic solvers. These include program verification, static analysis, test generation, compiler optimization, and cybersecurity, among others.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 09/06/2016<br>      Modified by: Geoffrey&nbsp;C&nbsp;Sutcliffe</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Automated Reasoning (AR) is concerned with the development and use of systems that automate sound reasoning: the derivation of conclusions that follow inevitably from facts. Users of AR specify their domain problems in a logic, and submit the specification to an AR solver. The output from the solver provides practical answers to the user's problem. Some examples of domain problems include getting assurance software system has/does not have a bug, that an industrial process fulfils its requirements, that a voting protocol is fair, that a biological process is stable. The theoretical and practical strengths of AR have enabled and motivated users, in many different application domains, to cast their problems into AR problems. Despite increased usage of AR, the complexities installing and executing appropriate AR solvers on large numbers of problem instances often presents a barrier to using AR. At the same time, AR solver developers need to ensure that their tools are sound, and test techniques that might make their solvers more powerful. The infrastructure funded by this grant provides hardware and software that serve both users and developers of AR solvers, to allow easy submission of many AR problems to many AR solvers, with sufiicient hardware resources to get results quickly. This hardware and software infrastructure is called StarExec.  StarExec has been become a valuable resource for AR users and solver developers. At the end of the funded development period StarExec had attracted users and developers from 12 distinct logic communities, over 450 users, and in the final year had a weekly average of 36 unique logins, 84 solvers uploaded, 29471 problems uploaded, and 1.78 million runs of a solver on a problem (yes, 1.78 millions runs per week!). These numbers illustrate how StarExec is having an impact on the advancement of knowledge, development, and use of AR. The advancement is within the AR community, as developers improve their AR solvers, and beyond the AR community as users from diverse fields apply AR to their problems. The broader impact on society comes from the results obtained by AR users, as the results obtained lead to conclusions that impact the domains that have been analysed through solutions to AR problems (see the examples above). For many AR developers and users, StarExec has had a transformative impact, providing a software and hardware infrastructure well beyond what they would have access to otherwise. The StarExec infrastructure was been designed and developed in collaboration with AR developers and users, and is based on the experience of the investigators with their own earlier infrastructures (the SMT and TPTP projects). The investigators were thus well qualified to produce an infrastructure that meets the needs of the AR community, and the outcome is a robust and effective hardware and software infrastructure that is having a clear impact.  This StarExec project has produced a highly usable hardware and software infrastructure that is available for free to developers and users of AR solvers. StarExec offers a custom web interface and web services running on a cluster of dual processor compute nodes, with several terabytes of networked disk space. The service allows logic community organizers to store, manage and make available benchmark libraries, competition organizers to run competitions, and individual users to run logic solvers on benchmark problems. These capabilities are accessible through a web browser interface at the StarExec web site, which provides facilities to upload and organize benchmarks and solvers, browse and query the stored benchmark libraries, run user-selected solvers on user-selected benchmarks, and analyze execution results and statistics. In the last few years StarExec has been used for many public evaluations of AR solvers, including CoCo - the Confluence Competition, SMT-COMP - the Satisfiability Modulo Theories Competition, SAT Race - the Propositional Satisfiability Competition, Termination - the Termination Competition, SyGuS - the Syntax-Guided Synthesis Competition, CASC - the CADE ATP System Competition, QBFEVAL - the QBF Solver Evaluation, and SLCOMP - the Separation Logic Competition. By contributing to advance the state of the art in logic solving, this project has had an indirect impact in a host of disciplines in computer science that rely on logic solvers. These include program verification, static analysis, test generation, compiler optimization, and cybersecurity, among others.           Last Modified: 09/06/2016       Submitted by: Geoffrey C Sutcliffe]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF:  Small:  Studies in Randomness Extraction</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>223928.00</AwardTotalIntnAmount>
<AwardAmount>223928</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Dmitri Maslov</SignBlockName>
<PO_EMAI>dmaslov@nsf.gov</PO_EMAI>
<PO_PHON>7032928910</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Randomness extraction is an algorithmical process that transforms objects with low-quality randomness into objects with high-quality randomness. The objects (usually called sources) can be finite probability distributions, finite binary strings, and infinite binary sequences, and the randomness quality is measured, respectively, by min-entropy, Kolmogorov complexity, and constructive Hausdorff dimension. There exists a vast amount of work on randomness extractions in all three settings. Our project will extend the field by investigating randomness extraction in situations that go beyond some of the basic assumptions for which the main current techniques and tools have been developed.&lt;br/&gt;    &lt;br/&gt;In some applications, the assumption that the involved probability distributions are independent is problematic. Therefore, an algorithm that attempts to remedy defective sources should be able to handle even sources with bounded independence.  The project will study the issue of randomness extraction from two or more sources with bounded independence, in contrast with the current literature that has only considered the case of fully independent sources.  Extending some partial results, the objective is to establish upper bounds on the quality of randomness that can be obtained from such sources and to design efficient extractors that perform in the vicinity of the upper bounds. Another research line of the project is dedicated to exposure-resilient extractors, which are efficient procedures that manage to extract bits that look random even to an adversary that has adaptive access to the input sources.  The objective is to design such extractors with parameters suitable for applications in cryptography.&lt;br/&gt;&lt;br/&gt;Randomness extraction is a very active field and has been an incubator of ideas with a significant impact even outside the area. The proposed research opens new directions of study that are natural and challenging. It adds new dimensions in the study of randomness extraction and has the potential of enlarging the range of applications of extractors. Randomness extraction has applications in computational complexity, randomized algorithms, constructive combinatorics, cryptography, error-correcting codes, and other areas. The project attempts to make many of these applications more practical and more robust. The project will establish new connections between computational complexity, Kolmogorov complexity, and algorithmical information theory. The project will allow undergraduate and graduate students to participate in research activities that have a strong theoretical flavor and the promise of real-world applications.</AbstractNarration>
<MinAmdLetterDate>07/24/2010</MinAmdLetterDate>
<MaxAmdLetterDate>05/07/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1016158</AwardID>
<Investigator>
<FirstName>Marius</FirstName>
<LastName>Zimand</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Marius Zimand</PI_FULL_NAME>
<EmailAddress>mzimand@towson.edu</EmailAddress>
<PI_PHON>4107044967</PI_PHON>
<NSF_ID>000165861</NSF_ID>
<StartDate>07/24/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Towson University</Name>
<CityName>Towson</CityName>
<ZipCode>212520001</ZipCode>
<PhoneNumber>4107042236</PhoneNumber>
<StreetAddress>8000 York Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MD02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>143372741</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TOWSON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003256088</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Towson University]]></Name>
<CityName>Towson</CityName>
<StateCode>MD</StateCode>
<ZipCode>212520001</ZipCode>
<StreetAddress><![CDATA[8000 York Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MD02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramElement>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~54135</FUND_OBLG>
<FUND_OBLG>2011~80790</FUND_OBLG>
<FUND_OBLG>2012~89003</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This grant has studied questions on the relation between computation and randomness. Randomness is a powerful computational resource. For some problems, randomized algorithms are significantly faster than the best known deterministic algorithms. Furthermore, in some areas (e,g, cryptography, distributed computing, game theory, machine learning) the use of randomness is compulsory.</p> <p>While it seems that there are sources of genuine randomness in Nature, they produce sequences of bits with various biases and correlations that are not suitable for direct employment in some applications. Therefore, an important problem is that of randomness extraction, which means producing sources of (close to) perfect randomness from sources with defective randomness. The quality of a source of randomness is measured either using probability distributions and different types of entropies, or by using the concepts of algorithmic information theory, also known as Kolmogorov complexity. In our research, we have primarily used the latter approach. Here we view the source as a string x, and randomness in x is given by its Kolmogorov complexity, C(x), &nbsp;defined as the length of the shortest description of x.</p> <p>We highlight some of the main results.</p> <p>&nbsp;In randomness extraction, one important distinction stems from the number of input defective sources that are available: one input source versus two pr more input sources.</p> <p>&nbsp;It is well known that effective randomness extraction from a single source of randomness is impossible. Thus such an extractor needs some additional information about the source x. The question is how much additional information is needed. One result that we have obtained &nbsp;is that if the amount of nonuniform information is constant, then one cannot extract a string whose complexity rate is 1, where the complexity rate of a string x is the ratio between C(x) and the length of x. On the positive side, we show that, basically with any non-constant amount of information it is possible to extract a string with complexity rate 1.</p> <p>&nbsp;The next possibility is to extract randomness from two defective sources and in this case one important parameter is the degree of dependency of the two sources. We have shown that there exists a computable Kolmogorov extractor such that, for any two n-bit strings with complexity s(n) and dependency a(n), it outputs a string of length s(n) with complexity s(n)- a(n) conditioned by any one of the input strings. The above parameters are the optimal parameters a Kolmogorov extractor can achieve.&nbsp;</p> <p>Interesting results have been obtained regarding the effective determination of the shortest description of a finite string (or even a description that is close within an additive constant to a shortest one). This is a canonical example of an uncomputable function. Many other problems regarding short descriptions are uncomputable.</p> <p>We have studied the extent to which one can effectively find an approximate solution, where ``approximate" is in the sense of<em>&nbsp;</em><em>list approximation</em>. &nbsp;In list approximation, instead of achieving the ideal objective of constructing an object that has the desired property (in our case, &nbsp;a shortest, or close to shortest, description of a given finite string), we &nbsp;try to construct &nbsp;a short list of objects with the guarantee that one of &nbsp;them contains such an object.</p> <p>We have shown the surprising result that on input a finite string x it is possible to effectively construct a short list (where "short" means polynomial in n, the length of x) that contains a program for x that is within a constant from a shortest program. If a program for x has length C(x) + c, we say that it is a c-short program for x. The size of the list is n<sup>2</sup>, and we have also shown that any list that contains a c-short program for x must hav...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This grant has studied questions on the relation between computation and randomness. Randomness is a powerful computational resource. For some problems, randomized algorithms are significantly faster than the best known deterministic algorithms. Furthermore, in some areas (e,g, cryptography, distributed computing, game theory, machine learning) the use of randomness is compulsory.  While it seems that there are sources of genuine randomness in Nature, they produce sequences of bits with various biases and correlations that are not suitable for direct employment in some applications. Therefore, an important problem is that of randomness extraction, which means producing sources of (close to) perfect randomness from sources with defective randomness. The quality of a source of randomness is measured either using probability distributions and different types of entropies, or by using the concepts of algorithmic information theory, also known as Kolmogorov complexity. In our research, we have primarily used the latter approach. Here we view the source as a string x, and randomness in x is given by its Kolmogorov complexity, C(x),  defined as the length of the shortest description of x.  We highlight some of the main results.   In randomness extraction, one important distinction stems from the number of input defective sources that are available: one input source versus two pr more input sources.   It is well known that effective randomness extraction from a single source of randomness is impossible. Thus such an extractor needs some additional information about the source x. The question is how much additional information is needed. One result that we have obtained  is that if the amount of nonuniform information is constant, then one cannot extract a string whose complexity rate is 1, where the complexity rate of a string x is the ratio between C(x) and the length of x. On the positive side, we show that, basically with any non-constant amount of information it is possible to extract a string with complexity rate 1.   The next possibility is to extract randomness from two defective sources and in this case one important parameter is the degree of dependency of the two sources. We have shown that there exists a computable Kolmogorov extractor such that, for any two n-bit strings with complexity s(n) and dependency a(n), it outputs a string of length s(n) with complexity s(n)- a(n) conditioned by any one of the input strings. The above parameters are the optimal parameters a Kolmogorov extractor can achieve.   Interesting results have been obtained regarding the effective determination of the shortest description of a finite string (or even a description that is close within an additive constant to a shortest one). This is a canonical example of an uncomputable function. Many other problems regarding short descriptions are uncomputable.  We have studied the extent to which one can effectively find an approximate solution, where ``approximate" is in the sense of list approximation.  In list approximation, instead of achieving the ideal objective of constructing an object that has the desired property (in our case,  a shortest, or close to shortest, description of a given finite string), we  try to construct  a short list of objects with the guarantee that one of  them contains such an object.  We have shown the surprising result that on input a finite string x it is possible to effectively construct a short list (where "short" means polynomial in n, the length of x) that contains a program for x that is within a constant from a shortest program. If a program for x has length C(x) + c, we say that it is a c-short program for x. The size of the list is n2, and we have also shown that any list that contains a c-short program for x must have size proportional to n2/(c+1)2.  Actually, such a construction can be done very fast (in polynomial time), with a list of size approximately equal to n6.  If we allow randomized constructions one c...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC: Small: Cryptographic Algorithms for Security in Cloud Computing Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>491755.00</AwardTotalIntnAmount>
<AwardAmount>491755</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ralph Wachter</SignBlockName>
<PO_EMAI>rwachter@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Is it possible to delegate the processing of your data to a party you do not completely trust?  What if you do not want to give full access to your data to such party?  Or what if the computation you delegate is so sensitive that you must make sure the result is correct, but must do so using only very limited computational resources (which is the reason you delegated the computation in the first place)?  These questions are at the core of the usual tension between convenience and availability on one hand and security and privacy on the other.  These questions are acquiring a particularly urgent importance as we move towards widespread acceptance of cloud computing, a paradigm where businesses buy computing time from a service, rather than purchase and maintain their own computing resources.  These issues also arise from the proliferation of mobile devices, such as smart phones and netbooks: computationally weak devices which might outsource computationally intensive operation, e.g., a cryptographic operation or a photo manipulation, they are not able to perform on their own.&lt;br/&gt;&lt;br/&gt;To put everything on line, "in the cloud," without some security and privacy provisions, is to risk an Orwellian future.  That is why, for example, privacy laws might require to encrypt medical records before storing them off-site.  But once those records are encrypted, how can we allow an outside provider to process them for say billing, or epidemiologic research?  Similar trust issue may come up even when handling data which is not private: if we outsource complex market analysis to a financial firm, how do we verify that the final recommendations reflect the actual market data, and not the financial interests of the firm itself?  Because safeguarding the security of outsourced computation can be critical (think of military applications) we need to protect ourselves also from non-malicious behavior such as a bug in the code run by the delegated party.&lt;br/&gt;&lt;br/&gt;When the Internet evolved from a relatively small network of academic and military nodes into an incredibly large public network, secure protocols like IPSec and SSL (developed through a fruitful research collaboration between academic and industrial centers) enabled us to fully develop its economical and financial potential through e-commerce and e-business.  Today we stand at a similar crossroad: the success of the cloud computing paradigm is predicated on our ability to secure it.  Security and privacy are not just desirable properties when it comes to outsourcing computation, but they are essential enablers for the paradigm itself.  Once again a concerted research effort is needed that can capitalize on the collaboration between academia and industry to design and deploy secure solutions for cloud computing applications.&lt;br/&gt;&lt;br/&gt;We propose therefore a research program to explore cryptographic techniques, algorithms and protocols needed in the design of secure outsourced computation mechanisms.  When it comes to the security and privacy concerns associated with outsourced computation, we can summarize them in the following very important two questions: (a) Is it possible to protect the privacy of the computation input:} in other words, can an outside party compute for us, without learning our private data?  (b) Can you trust the result of the computation: in other words, how does one verify that the outside party performed the computation correctly without investing too many computational resources (without, for example, redoing the computation from scratch)?  The goal of this project is to analyze these and other security questions related to cloud computing, and propose new cryptographic schemes and protocols that can contribute to their solution.  We believe that this research project will require new approaches and new ways of thinking about the problems themselves, and about the mathematical tools at our disposal.  It will contribute fundamental advances to our knowledge and understanding of encryption, authentication and the mathematics underlying them.</AbstractNarration>
<MinAmdLetterDate>09/09/2010</MinAmdLetterDate>
<MaxAmdLetterDate>10/07/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017660</AwardID>
<Investigator>
<FirstName>Rosario</FirstName>
<LastName>Gennaro</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rosario Gennaro</PI_FULL_NAME>
<EmailAddress>rosario@us.ibm.com</EmailAddress>
<PI_PHON>7137974625</PI_PHON>
<NSF_ID>000550694</NSF_ID>
<StartDate>10/07/2015</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Rosario</FirstName>
<LastName>Gennaro</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rosario Gennaro</PI_FULL_NAME>
<EmailAddress>rosario@us.ibm.com</EmailAddress>
<PI_PHON>7137974625</PI_PHON>
<NSF_ID>000550694</NSF_ID>
<StartDate>09/09/2010</StartDate>
<EndDate>10/24/2012</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Tal</FirstName>
<LastName>Rabin</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tal Rabin</PI_FULL_NAME>
<EmailAddress>talr@seas.upenn.edu</EmailAddress>
<PI_PHON>9178732943</PI_PHON>
<NSF_ID>000625323</NSF_ID>
<StartDate>10/24/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>IBM Thomas J Watson Research Center</Name>
<CityName>Yorktown Heights</CityName>
<ZipCode>105980218</ZipCode>
<PhoneNumber>7137974625</PhoneNumber>
<StreetAddress>1101 Kitchawan Road</StreetAddress>
<StreetAddress2><![CDATA[P.O. Box 218]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY17</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>084006741</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>INTERNATIONAL BUSINESS MACHINES CORPORATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001368083</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[IBM Thomas J Watson Research Center]]></Name>
<CityName>Yorktown Heights</CityName>
<StateCode>NY</StateCode>
<ZipCode>105980218</ZipCode>
<StreetAddress><![CDATA[1101 Kitchawan Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY17</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~491755</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This grant was focused on homomorphic encryption and outsourced computations but in fact had extremely unexpected results breaking new grounds by achieving Obfuscation which has created a revolution in our field of Cryptography.</p> <p>The breakthrough in obfuscation was preceded by a breakthrough result of the introduction of Multilinear Maps (MMaps) -- a primitive which has been sought out since the early 2000's. &nbsp;With the MMaps in hand it was possible to achieve the Obfuscation result.</p> <p>The third big result of the project is the introduciton of a solution to outsourced computations.</p> <p>These results have won best paper awards and an ACM dissertation award. Due to the lack of space we only present the top three results which were all outstanding. &nbsp;The rest appear in the detailed report.</p> <p>Technical results.<br />Multilinear Maps. Cryptography provides specialized tools which enable fine-grained access to information. Multilinear maps is a sophisticated tool which aid realization of cryptographic goals otherwise considered impossible according to folklore. For example, one may ask, is it possible for an encrypter to non-interactively specify arbitrary decryption policies? Multilinear maps have helped positively resolve this and other equally baffling problems. Another fundamental goal in cryptography is the program obfuscation. Can we encrypt a computer program such that it continues to execute normally while remaining indecipherable? The known solutions to this problem of program obfuscation rely on the use of multilinear maps. Additionally, multilinear maps have found many other applications. (the paper on multilinear maps has been cited 407 times). &nbsp;This work won the ACM dissertation award.</p> <p><br />Program Obfuscation: Consider a company that has just developed a new breakthrough algorithm for analysis of DNA data. On the one hand, the company wants to be able to write software based on its algorithm, which it can sell and on the hand, it is concerned that the people who buy the software can steal their trade secret hidden in the implemented algorithm. This setting requires a solution that allows hiding the code of a program while enabling the evaluation of the program on any input; this is the goal of cryptographic obfuscation.</p> <p>While there exist many adhoc approaches for software obfuscation which are also quite widely used, the guarantees that they provide are not well understood and analyzed. The goal of cryptographic obfuscation is provide formal definitions of security that quantify precisely the provided security properties and to construct solutions that satisfy these properties.</p> <p>We introduced the first construction for indistinguishability obfuscation, which has been an open question since 2001. We also show how to use indistinguishability obfuscation to construct another powerful cryptographic construction: functional encryption, which allows to generate decryption keys which reveal only very strictly defined information about the encrypted messages. We described a candidate construction for indistinguishability obfuscation for NC1 circuits. The security of this construction is based on a new algebraic hardness assumption. The candidate and assumption use a simplified variant of multilinear maps, which we call Multilinear Jigsaw Puzzles.&nbsp;We showed how to use indistinguishability obfuscation for NC1 together with Fully Homomorphic Encryption (with decryption in NC1) to achieve indistinguishability obfuscation for all circuits.&nbsp;Finally, we showed how to use indistinguishability obfuscation for circuits, public-key encryption, and non-interactive zero knowledge to achieve functional encryption for all circuits.</p> <p>In the three years since its publication it has accumulated over 500 citations.</p> <p>The original focus of the program was on outsourced computations via homomorphic encryption. &nbsp;</p> <p>Computation Outsourcing: Given the large amounts of data that is collected nowadays by both individuals and companies, the limited resources that an individual can have and the high cost for operating a large data center together with the increased number of cloud services that offer unlimited storage and computational power, outsourcing data storage and computation has become a cost efficient solution for many scenarios. However, such solutions bring also major concerns related to the privacy and the integrity of the data and the computations that are outsourced.Our goal has been to develop cryptographic mechanisms that allow a party to maintain control over its data even if it is no longer in its direct possession. There are several different guarantees that we may aim to achieve. The first goal is to protect the privacy of the data while being able to access it and to execute different queries. A different orthogonal goal is to be able to delegate certain computations to the party storing the outsourced data and then to be able to efficiently verify the correctness of the returned result. We can also aim for solutions that achieve both the privacy and the verifiability properties.</p> <p>&nbsp;</p> <p>The main accomplishment is the introduction of a Quadratic Span  Programs, a new way to formalize NP computations, which allows for very  efficient and short proofs of correctness. Which was followed by an implementation that won a best paper award at Oakland Security.</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 01/11/2017<br>      Modified by: Tal&nbsp;Rabin</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This grant was focused on homomorphic encryption and outsourced computations but in fact had extremely unexpected results breaking new grounds by achieving Obfuscation which has created a revolution in our field of Cryptography.  The breakthrough in obfuscation was preceded by a breakthrough result of the introduction of Multilinear Maps (MMaps) -- a primitive which has been sought out since the early 2000's.  With the MMaps in hand it was possible to achieve the Obfuscation result.  The third big result of the project is the introduciton of a solution to outsourced computations.  These results have won best paper awards and an ACM dissertation award. Due to the lack of space we only present the top three results which were all outstanding.  The rest appear in the detailed report.  Technical results. Multilinear Maps. Cryptography provides specialized tools which enable fine-grained access to information. Multilinear maps is a sophisticated tool which aid realization of cryptographic goals otherwise considered impossible according to folklore. For example, one may ask, is it possible for an encrypter to non-interactively specify arbitrary decryption policies? Multilinear maps have helped positively resolve this and other equally baffling problems. Another fundamental goal in cryptography is the program obfuscation. Can we encrypt a computer program such that it continues to execute normally while remaining indecipherable? The known solutions to this problem of program obfuscation rely on the use of multilinear maps. Additionally, multilinear maps have found many other applications. (the paper on multilinear maps has been cited 407 times).  This work won the ACM dissertation award.   Program Obfuscation: Consider a company that has just developed a new breakthrough algorithm for analysis of DNA data. On the one hand, the company wants to be able to write software based on its algorithm, which it can sell and on the hand, it is concerned that the people who buy the software can steal their trade secret hidden in the implemented algorithm. This setting requires a solution that allows hiding the code of a program while enabling the evaluation of the program on any input; this is the goal of cryptographic obfuscation.  While there exist many adhoc approaches for software obfuscation which are also quite widely used, the guarantees that they provide are not well understood and analyzed. The goal of cryptographic obfuscation is provide formal definitions of security that quantify precisely the provided security properties and to construct solutions that satisfy these properties.  We introduced the first construction for indistinguishability obfuscation, which has been an open question since 2001. We also show how to use indistinguishability obfuscation to construct another powerful cryptographic construction: functional encryption, which allows to generate decryption keys which reveal only very strictly defined information about the encrypted messages. We described a candidate construction for indistinguishability obfuscation for NC1 circuits. The security of this construction is based on a new algebraic hardness assumption. The candidate and assumption use a simplified variant of multilinear maps, which we call Multilinear Jigsaw Puzzles. We showed how to use indistinguishability obfuscation for NC1 together with Fully Homomorphic Encryption (with decryption in NC1) to achieve indistinguishability obfuscation for all circuits. Finally, we showed how to use indistinguishability obfuscation for circuits, public-key encryption, and non-interactive zero knowledge to achieve functional encryption for all circuits.  In the three years since its publication it has accumulated over 500 citations.  The original focus of the program was on outsourced computations via homomorphic encryption.    Computation Outsourcing: Given the large amounts of data that is collected nowadays by both individuals and companies, the limited resources that an individual can have and the high cost for operating a large data center together with the increased number of cloud services that offer unlimited storage and computational power, outsourcing data storage and computation has become a cost efficient solution for many scenarios. However, such solutions bring also major concerns related to the privacy and the integrity of the data and the computations that are outsourced.Our goal has been to develop cryptographic mechanisms that allow a party to maintain control over its data even if it is no longer in its direct possession. There are several different guarantees that we may aim to achieve. The first goal is to protect the privacy of the data while being able to access it and to execute different queries. A different orthogonal goal is to be able to delegate certain computations to the party storing the outsourced data and then to be able to efficiently verify the correctness of the returned result. We can also aim for solutions that achieve both the privacy and the verifiability properties.     The main accomplishment is the introduction of a Quadratic Span  Programs, a new way to formalize NP computations, which allows for very  efficient and short proofs of correctness. Which was followed by an implementation that won a best paper award at Oakland Security.             Last Modified: 01/11/2017       Submitted by: Tal Rabin]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

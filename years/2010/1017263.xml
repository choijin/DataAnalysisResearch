<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF:  Small:  Collaborative Research:  Better Comprehension of Software Engineering Data</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>256546.00</AwardTotalIntnAmount>
<AwardAmount>262796</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The amount of data generated during the development of today?s software systems is staggering.  It includes the source code, developer e-mails, bug information, testing results, analysis data, process information, requirements, etc.  The size and complexity of this information make it impossible for developers to reason about it.&lt;br/&gt;&lt;br/&gt; Data mining techniques are a common solution to extract what is relevant to developers and managers.  The success and quality of these software projects depends on the software engineers? ability to customize generic data mining algorithms to specific software engineering data.  This project will produce tools and techniques that will allow software developers and managers to easily customize and apply data mining techniques to a variety of software engineering problems.  Such solution will become more practical and will help many existing approaches to migrate from the research lab into industry.&lt;br/&gt;Under represented categories of students will participate in this research.  The project will enhance the existing software engineering curriculum and facilitate the inclusion of data mining solution in the repertoire of future software engineering practitioners and researchers.&lt;br/&gt;&lt;br/&gt;Specifically, the project will improve the state of the art solution to three important software engineering tasks: concept location in software, software defect prediction, and development effort estimation.  The project will produce an algorithm customization methodology and a framework that will be instantiated for a variety of combinations of data mining algorithm x software engineering task x software system data.  The customization problem is framed and addressed as an optimization problem.  The resulting customization agent will assist the software engineering user in efficiently selecting the best configuration, which includes a set of algorithms and their parameter values, customized for a particular task and software system.  All tools and methodologies will be empirically evaluated in academic and industrial settings.</AbstractNarration>
<MinAmdLetterDate>07/01/2010</MinAmdLetterDate>
<MaxAmdLetterDate>09/19/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017263</AwardID>
<Investigator>
<FirstName>Andrian</FirstName>
<LastName>Marcus</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Andrian Marcus</PI_FULL_NAME>
<EmailAddress>amarcus@utdallas.edu</EmailAddress>
<PI_PHON/>
<NSF_ID>000488981</NSF_ID>
<StartDate>07/01/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Wayne State University</Name>
<CityName>Detroit</CityName>
<ZipCode>482023622</ZipCode>
<PhoneNumber>3135772424</PhoneNumber>
<StreetAddress>5057 Woodward</StreetAddress>
<StreetAddress2><![CDATA[6th Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001962224</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WAYNE STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001962224</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Wayne State University]]></Name>
<CityName>Detroit</CityName>
<StateCode>MI</StateCode>
<ZipCode>482023622</ZipCode>
<StreetAddress><![CDATA[5057 Woodward]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~82803</FUND_OBLG>
<FUND_OBLG>2011~179993</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Better Comprehension of Software Engineering Data</strong></p> <p><span id="docs-internal-guid-2d24dc33-67c4-f211-e9be-6366bc34d2d8"> </span></p> <p dir="ltr"><strong>Intellectual Merit. &nbsp;</strong><span>&nbsp;</span></p> <p dir="ltr"><span>Many software engineering problems require data mining solutions. Customizing these data mining algorithms is a difficult challenge. Experience has shown that this is a costly process as well as a confusing one. &nbsp;&nbsp;Without a well defined methodology that allows for effective customization to specific software engineering applications, the research in the field is limited to proof-of-concept efforts. This problem is one of the reasons that often stop many data mining &nbsp;solutions migrating from the research labs to industry and government applications.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>This project offers a unique solution to the problem of tailoring general purpose algorithms to local conditions. We have shown that it is better to develop models that use software data in specific contexts, rather than developing models that work for any software data. In consequence, the project resulted in improved techniques that directly support and improve: defect prediction in software, development effort estimation, software refactoring, and concept location in software. </span></p> <p>&nbsp;</p> <p dir="ltr"><span>In addition, the project showed that combining local information from a range of sources (such as, text and software metrics) results in better solutions for software engineering problems, such as, concept location in software, refactoring, or defect prediction.</span></p> <p>&nbsp;</p> <p dir="ltr"><strong>Broader Impacts. </strong></p> <p dir="ltr"><span>For the research community, this project has spearheaded a novel research area in software engineering, where researcher focus now on finding theories and prediction models that are based on local data (that is, specific to a software system or just one part of it). These theories and models will be used to address software engineering problems not covered in this project.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>The project resulted in new and improved solutions and tool support for software engineering problems, such as, effort estimation, concept location in software, refactoring, and defect prediction. &nbsp;These are available for other researchers and practitioners. In addition, the project resulted in substantial data used in empirical evaluations, which is shared with the research community, as well.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>As for other broader impacts, this project has allowed the project investigators to extend advanced research training to students from traditionally under-represented areas. &nbsp;&nbsp;This project trained four Ph.D. students who completed their doctoral degrees (two female students and one from an acutely economically depressed region of central Pennsylvania). Further, three more graduate students are working towards their degrees (one female student and one latino). </span></p> <p>&nbsp;</p> <p dir="ltr"><span>As to other training possibilities, based on the experience of this project, the principle investigators have extensively revised their training materials. By using those new materials in our teaching, 100+ graduate students (masters and Ph.D.) now have a better understanding of the leading edge of research in software engineering. </span></p> <div><span><br /></span></div> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/31/2014<br>      Modified by: Andrian&nbsp;Marcus</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Better Comprehension of Software Engineering Data    Intellectual Merit.    Many software engineering problems require data mining solutions. Customizing these data mining algorithms is a difficult challenge. Experience has shown that this is a costly process as well as a confusing one.   Without a well defined methodology that allows for effective customization to specific software engineering applications, the research in the field is limited to proof-of-concept efforts. This problem is one of the reasons that often stop many data mining  solutions migrating from the research labs to industry and government applications.    This project offers a unique solution to the problem of tailoring general purpose algorithms to local conditions. We have shown that it is better to develop models that use software data in specific contexts, rather than developing models that work for any software data. In consequence, the project resulted in improved techniques that directly support and improve: defect prediction in software, development effort estimation, software refactoring, and concept location in software.     In addition, the project showed that combining local information from a range of sources (such as, text and software metrics) results in better solutions for software engineering problems, such as, concept location in software, refactoring, or defect prediction.    Broader Impacts.  For the research community, this project has spearheaded a novel research area in software engineering, where researcher focus now on finding theories and prediction models that are based on local data (that is, specific to a software system or just one part of it). These theories and models will be used to address software engineering problems not covered in this project.    The project resulted in new and improved solutions and tool support for software engineering problems, such as, effort estimation, concept location in software, refactoring, and defect prediction.  These are available for other researchers and practitioners. In addition, the project resulted in substantial data used in empirical evaluations, which is shared with the research community, as well.    As for other broader impacts, this project has allowed the project investigators to extend advanced research training to students from traditionally under-represented areas.   This project trained four Ph.D. students who completed their doctoral degrees (two female students and one from an acutely economically depressed region of central Pennsylvania). Further, three more graduate students are working towards their degrees (one female student and one latino).     As to other training possibilities, based on the experience of this project, the principle investigators have extensively revised their training materials. By using those new materials in our teaching, 100+ graduate students (masters and Ph.D.) now have a better understanding of the leading edge of research in software engineering.                Last Modified: 10/31/2014       Submitted by: Andrian Marcus]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

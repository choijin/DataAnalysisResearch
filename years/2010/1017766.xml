<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Large-Scale Web Crawling and Spam Avoidance in Search-Engine Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>400105.00</AwardTotalIntnAmount>
<AwardAmount>415105</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Search engines and various data-mining applications commonly rely on web crawlers to navigate the web, discover valuable content, and keep it fresh. However, the enormous volume of available information and sophisticated spam techniques commonly used to deceive search engines present significant challenges in web crawling, especially in non-commercial applications such as research. The first part of this project designs efficient real-time graph-manipulation algorithms and builds a high-performance distributed web-crawler architecture that seamlessly couples the various components of Internet-scale networking, information retrieval, and graph theory. The second part creates probabilistic techniques for quick estimation of domain reputation and explores various ranking techniques to achieve better robustness against spam. The third part designs advanced budgeting mechanisms to control the crawl rate of different parts of the web at multiple levels of granularity. The project is expected to engage students at Texas A&amp;M in research-intensive education in cross-disciplinary fields (such as data-intensive computing, networking, graph theory, distributed systems, parallel architectures, and modeling), broaden integration of web research into classroom teaching, attract undergraduate students to REU, extend participation of minority groups in engineering, stimulate collaboration among students and sharing of ideas, and permit web-related research at other institutions through publicly shared outcomes of our work.</AbstractNarration>
<MinAmdLetterDate>07/21/2010</MinAmdLetterDate>
<MaxAmdLetterDate>07/26/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1017766</AwardID>
<Investigator>
<FirstName>Dmitri</FirstName>
<LastName>Loguinov</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dmitri Loguinov</PI_FULL_NAME>
<EmailAddress>dmitri@cs.tamu.edu</EmailAddress>
<PI_PHON>9798450512</PI_PHON>
<NSF_ID>000410005</NSF_ID>
<StartDate>07/21/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Texas A&amp;M Engineering Experiment Station</Name>
<CityName>College Station</CityName>
<ZipCode>778454645</ZipCode>
<PhoneNumber>9798626777</PhoneNumber>
<StreetAddress>400 Harvey Mitchell Pkwy S</StreetAddress>
<StreetAddress2><![CDATA[Suite 300]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX17</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>847205572</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TEXAS A&amp;M ENGINEERING EXPERIMENT STATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042915991</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Texas A&amp;M Engineering Experiment Station]]></Name>
<CityName>College Station</CityName>
<StateCode>TX</StateCode>
<ZipCode>778454645</ZipCode>
<StreetAddress><![CDATA[400 Harvey Mitchell Pkwy S]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX17</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~400105</FUND_OBLG>
<FUND_OBLG>2011~15000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Users often find online information and services through search engines, which in turn rely on <em>web crawlers</em> to discover valuable pages and maintain a current picture of the web. Competition for high placement in search results has created a financial incentive for many unethical Internet practices intended to deceive (i.e., spam) search engines and manipulate their ranking algorithms. To address these issues, we performed the first comprehensive study of domain-ranking algorithms and proposed a novel ranking technique whose performance significantly surpassed that of existing methods. Although this method was superior in every comparison, it required an enormous amount of processing, which made it difficult to incorporate into a high performance web crawler. To overcome this problem, we created a highly accurate ranking method that approximated the exact algorithm using four orders of magnitude less overhead. We then formalized the problem of topological ranking using finite/infinite resources and showed that traditional techniques, which work over a single infinite graph, often failed to produce good ranking lists. We solved this problem by proposing a framework that relied on cross-linking of multiple graphs, at least one of which was finite. We applied these ideas to the Internet host graph and found the resulting structure to be indeed resistant to spammer inflation.</p> <p>Web crawlers are often tasked with real-time detection of mirrored (or otherwise duplicate) content and classification of auto-generated templates (e.g., parked domains, blogs/forums). Many of these problems involve <em>similarity matching</em>, which is a process of finding pairs of documents that are similar in some sense to each other. Since exact algorithms are infeasible for collections larger than a few thousand pages, we developed an approach that relied on a family of <em>approximate</em> algorithms, improving other such techniques in both memory usage and runtime.</p> <p>When this project started, prior crawls in the literature were often poorly documented and difficult to interpret. As the field stood, there existed no standard methodology for examining web crawls and comparing their performance against one another. To improve the knowledge in the field, we presented new IRLbot implementation details, proposed a novel methodology for documenting large-scale crawls, and used it to deliver a massive amount of previously undocumented information about the IRLbot experiment. We also derived a model for extrapolating the size of various structures as a function of crawl size, confirming the colloquial notion that the space of URLs and hostnames is infinite, and estimated the number of remaining domains in larger IRLbot crawls. We also proposed several methods for assessing Internet-wide crawl coverage, examined the budget function of IRLbot, and suggested avenues for improvement.</p> <p>Many Big Data applications (e.g., search engines, web crawlers) process streams of random key-value records that follow highly skewed frequency distributions. To characterizing their performance, we created an accurate analytical framework for modeling random data streams. We demonstrated that these models were applicable to&nbsp;not just synthetically generated streams, but also real workloads stemming from caching and external-memory processing of real-world graphs. Besides helping determine the amount of disk activity, these results enable accurate modeling of the runtime and selection of best parameters that optimize large-scale computation.</p> <p>With the ever-growing volume and speed of Internet traffic, network applications place higher demand on packet I/O rates. Although 1-Gbps and even 10-Gbps Ethernet are widely adopted, achieving wire rate with small packets is still hindered by bottlenecks inside the TCP/IP stack. Improvements have been made for Linux, but there is limited work in ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Users often find online information and services through search engines, which in turn rely on web crawlers to discover valuable pages and maintain a current picture of the web. Competition for high placement in search results has created a financial incentive for many unethical Internet practices intended to deceive (i.e., spam) search engines and manipulate their ranking algorithms. To address these issues, we performed the first comprehensive study of domain-ranking algorithms and proposed a novel ranking technique whose performance significantly surpassed that of existing methods. Although this method was superior in every comparison, it required an enormous amount of processing, which made it difficult to incorporate into a high performance web crawler. To overcome this problem, we created a highly accurate ranking method that approximated the exact algorithm using four orders of magnitude less overhead. We then formalized the problem of topological ranking using finite/infinite resources and showed that traditional techniques, which work over a single infinite graph, often failed to produce good ranking lists. We solved this problem by proposing a framework that relied on cross-linking of multiple graphs, at least one of which was finite. We applied these ideas to the Internet host graph and found the resulting structure to be indeed resistant to spammer inflation.  Web crawlers are often tasked with real-time detection of mirrored (or otherwise duplicate) content and classification of auto-generated templates (e.g., parked domains, blogs/forums). Many of these problems involve similarity matching, which is a process of finding pairs of documents that are similar in some sense to each other. Since exact algorithms are infeasible for collections larger than a few thousand pages, we developed an approach that relied on a family of approximate algorithms, improving other such techniques in both memory usage and runtime.  When this project started, prior crawls in the literature were often poorly documented and difficult to interpret. As the field stood, there existed no standard methodology for examining web crawls and comparing their performance against one another. To improve the knowledge in the field, we presented new IRLbot implementation details, proposed a novel methodology for documenting large-scale crawls, and used it to deliver a massive amount of previously undocumented information about the IRLbot experiment. We also derived a model for extrapolating the size of various structures as a function of crawl size, confirming the colloquial notion that the space of URLs and hostnames is infinite, and estimated the number of remaining domains in larger IRLbot crawls. We also proposed several methods for assessing Internet-wide crawl coverage, examined the budget function of IRLbot, and suggested avenues for improvement.  Many Big Data applications (e.g., search engines, web crawlers) process streams of random key-value records that follow highly skewed frequency distributions. To characterizing their performance, we created an accurate analytical framework for modeling random data streams. We demonstrated that these models were applicable to not just synthetically generated streams, but also real workloads stemming from caching and external-memory processing of real-world graphs. Besides helping determine the amount of disk activity, these results enable accurate modeling of the runtime and selection of best parameters that optimize large-scale computation.  With the ever-growing volume and speed of Internet traffic, network applications place higher demand on packet I/O rates. Although 1-Gbps and even 10-Gbps Ethernet are widely adopted, achieving wire rate with small packets is still hindered by bottlenecks inside the TCP/IP stack. Improvements have been made for Linux, but there is limited work in Windows. To bridge this gap, we proposed a set of new algorithms and provided a corresponding implementation that impr...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

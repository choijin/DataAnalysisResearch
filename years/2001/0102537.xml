<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Robust Limited Memory Hybrid Sparse Solvers</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2001</AwardEffectiveDate>
<AwardExpirationDate>09/30/2006</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>315473</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Robust Limited Memory Hybrid Sparse Solvers&lt;br/&gt;&lt;br/&gt;Sparse linear solvers can be broadly classified as being either 'direct' or 'iterative.' Direct solvers are based&lt;br/&gt;on a factorization of the associated sparse matrix and are extremely robust. However, their memory requirements grow as a non-linear function of the matrix dimension because original zeroes fill-in during factorization.&lt;br/&gt;The Krylov subspace (KSP) family of iterative methods are memory scalable, but their convergence&lt;br/&gt;can be slow or fail altogether. This project concerns developing scalable hybrids than can be parameterized&lt;br/&gt;to model the range from pure iterative to pure direct methods. We propose to develop parallel algorithms&lt;br/&gt;and software engineering methods aimed at providing robust, limited memory hybrid solvers that satisfy the&lt;br/&gt;computational demands of a variety of applications.&lt;br/&gt;On the algorithmic front, our focus is on hybrids obtained by preconditioning KSP solvers using suitable&lt;br/&gt;incomplete matrix factors. Such preconditioners are robust and widely applicable, but until recently they&lt;br/&gt;were considered unsuitable for parallel computing. The main reason is that the sparse triangular solves for&lt;br/&gt;applying the preconditioner become a bottleneck due to the relatively high latency of communication. We&lt;br/&gt;have recently developed a latency tolerant 'selective-inversion' scheme that overcomes this problem to yield&lt;br/&gt;an efficient and scalable implementation. In this project, we propose developing parallel sparse factorization&lt;br/&gt;techniques that are efficient for the entire spectrum of fill-in. We will develop a new 'supernodal diagonal&lt;br/&gt;row block' formulation for scalable incomplete factorization. We will also consider innovative ways of&lt;br/&gt;combining symbolic (level of fill) and numeric (threshold) strategies to specify fill-in to be either retained&lt;br/&gt;or discarded. Additionally, our algorithmic framework enables us to provide a single, unified, extensible&lt;br/&gt;implementation of hybrids for symmetric positive definite, symmetric indefinite, and nonsymmetric systems.&lt;br/&gt;On the software front, we define a new 'usage model' based 'reverse engineering' process to develop a high-performance domain specific solver as a smart composite of several methods. Our premise is that the right composite solver is domain specific; substantial performance gains can be realized by selecting the right combination of underlying methods to match linear system attributes. We will obtain a uniform interface to a variety of parallel sparse solver software by developing an object-oriented sparse template library that utilizes parameterized polymorphism. Composites will be instantiated by using this template library and a scripting language that supports parallel computing using MPI.&lt;br/&gt;Our design goals and performance targets will be keyed to three large-scale computational science applications. The first concerns computational methods for advanced optimization; this application requires robust indefinite solvers. The second is a structural mechanics application for modeling cracks and fractures. The third application involves large sparse eigenvalue problems that arise in quantum molecular dynamics.&lt;br/&gt;Our project represents a concerted effort to resolve critical research issues in the area of parallel sparse&lt;br/&gt;matrix computations. Our goal is to develop the next generation of sparse solvers by combining research in&lt;br/&gt;parallel algorithms and software engineering.</AbstractNarration>
<MinAmdLetterDate>08/13/2001</MinAmdLetterDate>
<MaxAmdLetterDate>09/01/2006</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0102537</AwardID>
<Investigator>
<FirstName>Padma</FirstName>
<LastName>Raghavan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Padma Raghavan</PI_FULL_NAME>
<EmailAddress>padma.raghavan@vanderbilt.edu</EmailAddress>
<PI_PHON>6153226155</PI_PHON>
<NSF_ID>000097691</NSF_ID>
<StartDate>08/13/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Pennsylvania State Univ University Park</Name>
<CityName>University Park</CityName>
<CountyName>CENTRE</CountyName>
<ZipCode>168021503</ZipCode>
<PhoneNumber>8148651372</PhoneNumber>
<StreetAddress>201 Old Main</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003403953</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PENNSYLVANIA STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003403953</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Pennsylvania State Univ University Park]]></Name>
<CityName>University Park</CityName>
<CountyName>CENTRE</CountyName>
<StateCode>PA</StateCode>
<ZipCode>168021503</ZipCode>
<StreetAddress><![CDATA[201 Old Main]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>1686</Code>
<Text>ITR SMALL GRANTS</Text>
</ProgramElement>
<ProgramElement>
<Code>4080</Code>
<Text>ADVANCED COMP RESEARCH PROGRAM</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0101</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0102</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0103</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2001~96381</FUND_OBLG>
<FUND_OBLG>2002~99415</FUND_OBLG>
<FUND_OBLG>2003~119677</FUND_OBLG>
</Award>
</rootTag>

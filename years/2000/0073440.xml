<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Exploiting Value Locality in Shared Memory Multiprocessors</AwardTitle>
<AwardEffectiveDate>09/01/2000</AwardEffectiveDate>
<AwardExpirationDate>08/31/2004</AwardExpirationDate>
<AwardTotalIntnAmount>250000.00</AwardTotalIntnAmount>
<AwardAmount>250000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010300</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Pratibha Varma-Nelson</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Value locality, a recently discovered program attribute that describes the likelihood of the recurrence of previously seen program values, has been studied enthusiastically in the published literature. This project investigates a new domain for the exploitation of value locality, namely shared-memory multiprocessor (SMP) systems running commercial workloads. Initial results from a recent study of store value locality indicate that significant potential exists for reducing multiprocessor data and address bus traffic by identifying and squashing silent and stochastically silent stores. This project describes and evaluates exact mechanisms for store squashing techniques, investigates alternative approaches for exploiting value locality, and finally, develops focused mechanisms for attacking the specific problem of read/write data sharing and synchronization in SMP systems. The project demonstrates that overcoming the performance bottlenecks caused by data sharing requires speculative techniques based on value locality, since other more conventional approaches to speculative execution are guaranteed to fail.  This research realizes the potential of speculative techniques that exploit value locality to improve performance and/or reduce implementation cost and complexity in future generation shared-memory multiprocessor systems that are designed to run commercial workloads.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/05/2000</MinAmdLetterDate>
<MaxAmdLetterDate>04/11/2002</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0073440</AwardID>
<Investigator>
<FirstName>Mikko</FirstName>
<LastName>Lipasti</LastName>
<EmailAddress>mikko@engr.wisc.edu</EmailAddress>
<StartDate>09/05/2000</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
</Institution>
<ProgramElement>
<Code>4715</Code>
<Text>COMPUTER SYSTEMS ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

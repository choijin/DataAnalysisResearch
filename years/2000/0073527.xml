<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Multithreading:  A Viable Approach for High Performance Single Chip Architecture</AwardTitle>
<AwardEffectiveDate>08/15/2000</AwardEffectiveDate>
<AwardExpirationDate>02/28/2002</AwardExpirationDate>
<AwardTotalIntnAmount>421673.00</AwardTotalIntnAmount>
<AwardAmount>421673</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010300</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Pratibha Varma-Nelson</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Most modern single processor architectures focus on exploiting instruction-level parallelism. However, despite continued performance improvements, there is increasing doubt that aggressive ILP architecture techniques would continue bringing the desired improvements and that there will come about a diminishing return in the performance of single-chip architectures.&lt;br/&gt;&lt;br/&gt;Multithreaded execution models promise to exploit thread-level parallelism (TLP) beyond a pure ILP approach. Multithreading can be applied directly at the level of uniprocessor instruction-set architectures. For example, Simultaneous MultiThreading (SMT) is a promising approach, which is attracting the attention of a number of academic and industrial research groups. This technique allows the various pipelines of a "superscalar" processor to be efficiently utilized by scheduling from several "coarse-grain" threads of one (or several) program(s). Although exploiting both ILP and TLP is attractive, the following questions are investigated in the project:&lt;br/&gt;&lt;br/&gt;- Can an architecture model, which integrates fine-grain multithreading support with a coarse-grain multithreaded architecture model such as SMT, be developed?&lt;br/&gt;&lt;br/&gt;- What are the design trade-off when mapping these architecture features to single-chip implementations?&lt;br/&gt;&lt;br/&gt;- What compiling methodology for the proposed architecture model would exploit thread-level parallelism at both coarse and fine-grain levels?&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/10/2000</MinAmdLetterDate>
<MaxAmdLetterDate>03/15/2002</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0073527</AwardID>
<Investigator>
<FirstName>Jean-Luc</FirstName>
<LastName>Gaudiot</LastName>
<EmailAddress>gaudiot@uci.edu</EmailAddress>
<StartDate>08/10/2000</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Southern California</Name>
<CityName>Los Angeles</CityName>
<ZipCode>900890001</ZipCode>
<PhoneNumber>2137407762</PhoneNumber>
<StreetAddress>University Park</StreetAddress>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
</Institution>
<ProgramElement>
<Code>4715</Code>
<Text>COMPUTER SYSTEMS ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Experimental Partnership-Experimental Research in Speculative Multithreading</AwardTitle>
<AwardEffectiveDate>09/15/2000</AwardEffectiveDate>
<AwardExpirationDate>08/31/2006</AwardExpirationDate>
<AwardTotalIntnAmount>1859948.00</AwardTotalIntnAmount>
<AwardAmount>1859948</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Stephen Mahaney</SignBlockName>
</ProgramOfficer>
<AbstractNarration>EIA-0071924&lt;br/&gt;Gurindar S. Sohi&lt;br/&gt;University of Wisconsin-Madison&lt;br/&gt;&lt;br/&gt;Experimental Partnership-Experimental Research in Speculative Multithreading&lt;br/&gt;&lt;br/&gt;Speculative threads do not depend on conservative guarantees of safe data communications among threads.  Rather, threads are dispatched speculatively, and data can be communicated speculatively. i.e. by assuming that it is correct.  Incorrect speculations are detected later, and whenever they occur, recovery is under taken to assure correctness.   This less conservative approach to defining and dispatching threads find parallelism in ways that conservative methods cannot.&lt;br/&gt;&lt;br/&gt;In this research, the principal investigators will build a comprehensive, integrated experimental infrastructure and use it to carry out an investigation of issues related to the design of speculative multithreaded processors. Along with their graduate students the principal investigators will conduct experimental research in speculative multithreaded processors.  Modern parallel processing systems decompose a program into multiple threads that execute in parallel to provide high performance.  The convention method is to specify parallel threads where all communication of data is carefully synchronized to guarantee correctness a priori.  This approach often means that a conservative approach must be used to provide the necessary guarantees, there by constraining parallelism.  &lt;br/&gt;&lt;br/&gt;Using this infrastructure, the investigators will conduct experimental research in three primary areas.&lt;br/&gt;&lt;br/&gt;(1) Speculative Thread Identification and Usage.   This will include conventional "control-driven" threads where the focus will be on new opportunities provided by object-oriented programs and commercial workloads.  It will also include "data-driven" threads, a new form of speculative thread, which promises to open new opportunities for extracting parallelism from conventional programs.&lt;br/&gt;&lt;br/&gt;(2) Software/Hardware Interaction.  Dynamic program characteristics of threads are likely to be critical&lt;br/&gt;for managing their identification, scheduling, and data communication.  Dynamic linking will be done as well, in many large network-based applications and will very much limit the static compiler's view.    The investigators will research new methods by which hardware and software can interact to compile and execute speculative multithreaded programs.  This will include architecture features to permit efficient communication and the use of dynamic profiling and re-compilation techniques.&lt;br/&gt;&lt;br/&gt;(3) Hybrid "Mixed Thread" Processing.   In future processors and systems, it is likely that several thread types will co-exist.  This includes the speculative threads that are the central focus of the proposed research.  It also includes the traditional non-speculative threads, which may be either explicitly programmed or implicitly extracted b software compilation tools and/or hardware.  Consequently, processors and systems that integrate the complementary thread types into a cohesive "mixed thread" processing model will be developed and studied.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/25/2000</MinAmdLetterDate>
<MaxAmdLetterDate>05/12/2003</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0071924</AwardID>
<Investigator>
<FirstName>James</FirstName>
<LastName>Smith</LastName>
<EmailAddress>jes@ece.wisc.edu</EmailAddress>
<StartDate>09/25/2000</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Gurindar</FirstName>
<LastName>Sohi</LastName>
<EmailAddress>sohi@cs.wisc.edu</EmailAddress>
<StartDate>09/25/2000</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
</Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>4725</Code>
<Text>EXPERIMENTAL SYSTEMS/CADRE</Text>
</ProgramElement>
<ProgramReference>
<Code>1659</Code>
<Text>HIGH END COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>1661</Code>
<Text>ITR COMPETITION FOR OVER $500K</Text>
</ProgramReference>
<ProgramReference>
<Code>4725</Code>
<Text>EXPERIMENTAL SYSTEMS/CADRE</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

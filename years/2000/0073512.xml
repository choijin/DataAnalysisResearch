<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Compiler Optimizations for Limited Memory Embedded Systems</AwardTitle>
<AwardEffectiveDate>09/01/2000</AwardEffectiveDate>
<AwardExpirationDate>02/28/2001</AwardExpirationDate>
<AwardTotalIntnAmount>260093.00</AwardTotalIntnAmount>
<AwardAmount>93499</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05010400</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Mukesh Singhal</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Embedded systems are widely used in a variety of applications which involve ubiquitous computing. Due to small form factors (such as in hand-held devices) and other application needs, embedded systems are characterized  by limited resources such as the computing power and memory. In addition the application needs demand real time performance requirements and low power consumption. High-level languages such as C, C++ or Embedded Java are replacing assembly language in programming embedded systems due to the complexity of modern application domains that need to be mapped. This can however incur a code size and performance penalty due to the semantic gap between the high level languages and the underlying embedded instruction set architecture. This is where the role of compiler optimizations becomes critical.These optimizations are a must (and not optional) since available resources on embedded systems are quite limited and unless applications are optimized they may not even fit the available resources (such as the memory). &lt;br/&gt;&lt;br/&gt;The focus of this proposal is to devise compiler optimizations for embedded systems to maximally use the limited resources such as the available amount of on-chip and off-chip memory. We first propose compiler optimizations  for data and code segments of embedded software for size and speed given the constraints on limited on-chip memory and addressing modes. Since local resources are very limited on these processors and since the embedded devices typically form a part of bigger systems in the form of sensors, actuators etc., they are often networked.   In such a networked environment, data and code are down-loaded on an embedded device just-in-time from a server and then executed. A very important issue is then how to dynamically optimize codes that are down-loaded  on to an embedded device just-in-time.  Since local resources are very scarce, such dynamic optimizations prove immensely useful. This is the second set of topics we address in the proposal. &lt;br/&gt;&lt;br/&gt;We anticipate that these optimizations could not only improve performance of existing applications mapped on these systems but could also allow mapping new application domains on them by satisfying their resource constraints.</AbstractNarration>
<MinAmdLetterDate>09/08/2000</MinAmdLetterDate>
<MaxAmdLetterDate>09/08/2000</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0073512</AwardID>
<Investigator>
<FirstName>Santosh</FirstName>
<LastName>Pande</LastName>
<EmailAddress>santosh@cc.gatech.edu</EmailAddress>
<StartDate>09/08/2000</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Cincinnati Main Campus</Name>
<CityName>Cincinnati</CityName>
<ZipCode>452210222</ZipCode>
<PhoneNumber>5135564358</PhoneNumber>
<StreetAddress>University Hall, Suite 530</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
</Institution>
<ProgramElement>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramElement>
<ProgramReference>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

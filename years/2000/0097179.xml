<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Automated Theorem Proving in Type Theory</AwardTitle>
<AwardEffectiveDate>07/01/2001</AwardEffectiveDate>
<AwardExpirationDate>06/30/2005</AwardExpirationDate>
<AwardTotalIntnAmount>267010.00</AwardTotalIntnAmount>
<AwardAmount>267010</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010200</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Robert B Grafton</SignBlockName>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;The basic purpose of this research is to automate and facilitate the use of rigorous logic. Rigorous reasoning plays (or should play) an important role in a wide variety of intellectual endeavors, and automated reasoning tools have many important potential applications. Procedures for proving theorems will be crucial components of automated reasoning tools, since these procedures can be used as inference mechanisms. The focus of this research is on proving theorems of a formulation of higher-order logic known as type theory (more specifically, the typed lambda-calculus). This formal language includes first-order logic, but in a practical sense it has greater expressive power, and it is particularly well suited to the formalization of mathematics and other disciplines and to specifying and verifying hardware and software.&lt;br/&gt;&lt;br/&gt;Part of this research involves continued development of an existing computerized theorem proving system called TPS, which can be used to construct and check formal proofs (in natural deduction style) interactively, semi-automatically, and automatically. In automatic mode, TPS first searches for an expansion proof, which expresses in a non-redundant way the fundamental logical structure of proofs of the theorem in a variety of styles, and then transforms this into a proof in natural deduction style. The interactive commands for applying rules of inference are available in a related program called ETPS (Educational Theorem Proving System), which is used interactively by students in logic courses to construct natural deduction proofs. The possibility of using TPS in a mixture of automatic and interactive modes makes it an attractive tool for working on complex logical problems in a variety of disciplines. More information about TPS can be found at http://gtps.math.cmu.edu/tps.html. &lt;br/&gt;&lt;br/&gt;The research involves methods of searching for expansion proofs, including methods of finding appropriate substitutions for set variables, methods of searching for matings of subformulas, and the interactions between these; representations, manipulations, presentations, and translations of proofs; enhancement of TPS as a useful logical tool; and related problems and questions.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>05/04/2001</MinAmdLetterDate>
<MaxAmdLetterDate>05/04/2001</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0097179</AwardID>
<Investigator>
<FirstName>Peter</FirstName>
<LastName>Andrews</LastName>
<EmailAddress>Andrews@cmu.edu</EmailAddress>
<StartDate>05/04/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<ProgramElement>
<Code>2865</Code>
<Text>NUMERIC, SYMBOLIC &amp; GEO COMPUT</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

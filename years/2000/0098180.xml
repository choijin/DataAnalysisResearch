<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Approximation of NP-Hard Problems: Algorithms and Complexity</AwardTitle>
<AwardEffectiveDate>08/01/2001</AwardEffectiveDate>
<AwardExpirationDate>07/31/2004</AwardExpirationDate>
<AwardTotalIntnAmount>256952.00</AwardTotalIntnAmount>
<AwardAmount>256952</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010100</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>David Du</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Approximation of NP-hard problems: Algorithms and Complexity&lt;br/&gt;Sanjeev Arora&lt;br/&gt;Princeton University&lt;br/&gt;&lt;br/&gt;The broad goal of  the project is a study of the approximation properties of&lt;br/&gt;NP-hard problems. NP-hard problems are those that do not have any efficient&lt;br/&gt;algorithms if the classes P and NP are different, as is widely-believed. They arise in a variety&lt;br/&gt;of application areas in science and technology, including scheduling, VLSI&lt;br/&gt;design, artificial intelligence, design of optimum networks, etc. &lt;br/&gt;Since we do not expect to solve these problems optimally, there is a need to &lt;br/&gt;design efficient approximation algorithms for them: algorithms that compute a &lt;br/&gt;solution whose cost is within a small factor of the optimum. The PI has been&lt;br/&gt;involved in designing approximation algorithms during the past decade. He has&lt;br/&gt;also been part of an ongoing research program that shows that for many of these problems,&lt;br/&gt;computing approximate solutions is no easier than computing optimum&lt;br/&gt;solutions. (In other words, approximation is also NP-hard.) These&lt;br/&gt;inapproximability results shed important light on the problems as well.&lt;br/&gt;&lt;br/&gt;The project takes a two-pronged approach, combining a search for good&lt;br/&gt;approximation algorithms with a search ---using the theory of probabilistically &lt;br/&gt;checkable proofs (PCPs)--- for inapproximability results. The project focusses&lt;br/&gt;on a collection of important algorithmic problems, including: learning mixtures&lt;br/&gt;of distributions (a problem important in AI and data  mining/analysis),&lt;br/&gt;learning bayes nets and markov random fields  (useful in speech recognition,&lt;br/&gt;machine vision, medical diagnoses systems etc.), lattice problems (useful in&lt;br/&gt;cryptography and cryptanalysis), and graph coloring (a central problem in complexity theory).&lt;br/&gt;Progress, especially algorithmic progress, on any of these problems has&lt;br/&gt;important consequences.</AbstractNarration>
<MinAmdLetterDate>08/17/2001</MinAmdLetterDate>
<MaxAmdLetterDate>08/17/2001</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0098180</AwardID>
<Investigator>
<FirstName>Sanjeev</FirstName>
<LastName>Arora</LastName>
<EmailAddress>arora@cs.princeton.edu</EmailAddress>
<StartDate>08/17/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

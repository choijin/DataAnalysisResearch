<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Formal Methods for Extensible Object-Oriented Software</AwardTitle>
<AwardEffectiveDate>06/01/2001</AwardEffectiveDate>
<AwardExpirationDate>05/31/2004</AwardExpirationDate>
<AwardTotalIntnAmount>200000.00</AwardTotalIntnAmount>
<AwardAmount>200000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010500</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This project advances the theory and practice of extensible object-oriented (OO) software by investigating how to support careful design, specification, and reasoning. Enhancing theoretical understanding for specifying and verifying extensible OO software forms the first subproblem.  The project investigates several avenues: the soundness of proof techniques for behavioral subtyping among abstract data types with mutable objects, whose operations may have nondeterministic specifications; the extent to which the use of multimethods affects one's ability to prove behavioral subtyping; and the soundness of a specification and verification technique that allows the implementation of a subclass from a superclass's specification, without seeing the superclass's code.&lt;br/&gt;&lt;br/&gt;The second subproblem comprises enhancing Java and a specification language for Java to better support extensible OO frameworks and libraries. The project implements and refines MultiJava, an extension to Java that supports both open classes and multimethods.  The former allow one to extend existing classes with new methods, while the latter allow one to easily extend both a set of data types and the methods that work on them.  The project also extends and refines JML, which is a behavioral interface specification language tailored to Java.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>03/29/2001</MinAmdLetterDate>
<MaxAmdLetterDate>03/29/2001</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0097907</AwardID>
<Investigator>
<FirstName>Don</FirstName>
<LastName>Pigozzi</LastName>
<EmailAddress>dpigozzi@iastate.edu</EmailAddress>
<StartDate>03/29/2001</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Gary</FirstName>
<LastName>Leavens</LastName>
<EmailAddress>leavens@cs.ucf.edu</EmailAddress>
<StartDate>03/29/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Iowa State University</Name>
<CityName>AMES</CityName>
<ZipCode>500112207</ZipCode>
<PhoneNumber>5152945225</PhoneNumber>
<StreetAddress>1138 Pearson</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<StateCode>IA</StateCode>
</Institution>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Learning to Understand -- Integrating Reasoning and Learning</AwardTitle>
<AwardEffectiveDate>03/15/2001</AwardEffectiveDate>
<AwardExpirationDate>09/30/2007</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>440597</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Douglas H. Fisher</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Because general-purpose deduction in first-order languages is undecidable, it has been difficult to incorporate into practical relational concept learning.  In this project the PI will explore the use of powerful polynomial-time deductive reasoning procedures to benefit relational learning systems. The research introduces a new learning setting called "learning from immediate consequences"  which is parameterized by a polynomial-time deductive reasoning procedure that can be viewed as defining the "immediate consequences" of any set of formulas relative to a query.  The learning goal in this setting is to take as input a set of examples that are not currently immediate consequences of the background knowledge, and induce a definition of the target concept such that the positive examples become immediate consequences but the negative examples do not. A rough analogy can be drawn between immediate consequences and those consequences that are obvious to humans.  When given a query, a human is able to determine immediately whether or not the answer to it is obvious, in the same sense that a low-order polynomial-time inference procedure can quickly answer the same question.  Given this analogy, the proposed learning setting can be viewed as learning a target concept that makes the positive examples obviously covered while the negative examples remain apparently uncovered.   Formal representation languages other than classical predicate calculus will be considered, which are designed to facilitate discovery of useful immediate consequences quickly;   the resulting learning system can express and learn target concepts in a language that is strictly more expressive than the standard Horn clause language.&lt;br/&gt;&lt;br/&gt;This approach stands in contrast to that used by perhaps the most well-known efficient relational learning system, FOIL, which avoids the undecidability of general-purpose deduction entirely by requiring that all background knowledge be extensionally specified, and making no attempt to go beyond that specification deductively.   In spite of the contrast between the PI's approach and that of FOIL, it is feasible to integrate many of the ideas from FOIL and other relational learning systems into this new learning setting, with the intention of retaining the advantages of those systems.   The potential impact of this work includes improved induction and data-mining algorithms for use in many industrial contexts.  These algorithms will be particularly advantageous in situations where the data to be analyzed are highly structured, and thus are not ideal for current state-of-the-art attribute-value learning techniques. This work will provide means to recognize rich structure in data without using expensive theorem-proving techniques and/or assuming an extensionally represented background knowledge base.  Natural language text databases on the world-wide web form a central source for learning problems that will benefit from such efficient use of structured representations.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>03/21/2001</MinAmdLetterDate>
<MaxAmdLetterDate>02/13/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0093100</AwardID>
<Investigator>
<FirstName>Robert</FirstName>
<LastName>Givan</LastName>
<EmailAddress>givan@purdue.edu</EmailAddress>
<StartDate>03/21/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue Research Foundation</Name>
<CityName>West Lafayette</CityName>
<ZipCode>47907</ZipCode>
<PhoneNumber>3174946200</PhoneNumber>
<StreetAddress/>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
</Institution>
<FoaInformation>
<Code>0104000</Code>
<Name>Information Systems</Name>
</FoaInformation>
<ProgramElement>
<Code>6845</Code>
<Text>HUMAN COMPUTER INTER PROGRAM</Text>
</ProgramElement>
<ProgramElement>
<Code>6856</Code>
<Text>ARTIFICIAL INTELL &amp; COGNIT SCI</Text>
</ProgramElement>
<ProgramElement>
<Code>7484</Code>
<Text>IIS Special Projects</Text>
</ProgramElement>
<ProgramReference>
<Code>0000</Code>
<Text>UNASSIGNED</Text>
</ProgramReference>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<ProgramReference>
<Code>OTHR</Code>
<Text>OTHER RESEARCH OR EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
</Award>
</rootTag>

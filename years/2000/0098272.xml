<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Self-Timed FPGA Systems</AwardTitle>
<AwardEffectiveDate>09/01/2001</AwardEffectiveDate>
<AwardExpirationDate>06/30/2004</AwardExpirationDate>
<AwardAmount>229857</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05010600</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This research proposes a new generation of Field Programmable Gate Arrays (FPGAs) based upon a self-timed design methodology known as Phased Logic. One of the principle attractions of FPGAs is that they&lt;br/&gt;give users a streamlined methodology for implementing large gate-count digital designs that are specified in a Hardware Description Language (HDL) such as Verilog.  FPGAs shield designers from the time-consuming&lt;br/&gt;physical design details that Application Specific Integrated Circuit (ASICs) designers must face and offer a flexible implementation substrate with a quicker time to market.  However, design complexity is increasing significantly for both FPGA designers and users due to timing issues related to global clock distribution over larger arrays operating at higher frequencies.  Spending more design effort on reaching timing closure can increase time to market and threatens to undermine one of the key benefits of FPGAs for its users.&lt;br/&gt;&lt;br/&gt;Phased Logic (PL) is a self-timed, delay-insensitive methodology that allows automatic mapping of clocked netlists to netlists of PL gates.  Preliminary work has indicated that PL gates based upon a four input&lt;br/&gt;LookUp-Table (LUT4) can implement designs that are competitive with clocked approaches in both power and performance.  This research investigates new FPGA architectures using both LUT4-based gates and&lt;br/&gt;traditional product-term-based gates.  PL offers a general capability for data dependent computing; synthesis techniques that take advantage of this for general logic are investigated.  Extensions for supporting these new architectures and PL gate designs are made to the current mapping tool that transforms clocked designs to PL designs.  Tradeoffs that sacrifice some delay insensitivity for extra performance are studied.</AbstractNarration>
<MinAmdLetterDate>08/27/2001</MinAmdLetterDate>
<MaxAmdLetterDate>04/19/2002</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0098272</AwardID>
<Investigator>
<FirstName>Robert</FirstName>
<LastName>Reese</LastName>
<EmailAddress>reese@ece.msstate.edu</EmailAddress>
<StartDate>08/27/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Cherrice</FirstName>
<LastName>Traver</LastName>
<EmailAddress>traverc@union.edu</EmailAddress>
<StartDate>08/27/2001</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Mitchell</FirstName>
<LastName>Thornton</LastName>
<EmailAddress>mitch@engr.smu.edu</EmailAddress>
<StartDate>08/27/2001</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Mississippi State University</Name>
<CityName>MISSISSIPPI STATE</CityName>
<ZipCode>397629662</ZipCode>
<PhoneNumber>6623257404</PhoneNumber>
<StreetAddress>PO Box 6156</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Mississippi</StateName>
<StateCode>MS</StateCode>
</Institution>
<ProgramElement>
<Code>2865</Code>
<Text>NUMERIC, SYMBOLIC &amp; GEO COMPUT</Text>
</ProgramElement>
<ProgramElement>
<Code>4710</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYS</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>0000</Code>
<Text>UNASSIGNED</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<ProgramReference>
<Code>OTHR</Code>
<Text>OTHER RESEARCH OR EDUCATION</Text>
</ProgramReference>
</Award>
</rootTag>

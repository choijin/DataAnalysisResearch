<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Automatic Retargeting of Network Server Applications</AwardTitle>
<AwardEffectiveDate>03/15/2001</AwardEffectiveDate>
<AwardExpirationDate>02/28/2006</AwardExpirationDate>
<AwardTotalIntnAmount>250000.00</AwardTotalIntnAmount>
<AwardAmount>250000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Brett D. Fleisch</SignBlockName>
</ProgramOfficer>
<AbstractNarration>High-performance network server software is already central to many users' day-to-day interaction with computers, and its importance will increase as more services become networkcentric.  Despite widespread commercial and academic interest in network servers, the process of developing and maintaining this software remains in its infancy.  The underlying difficulty is the blurring of the service (what gets done) with particular implementations (how it gets done).&lt;br/&gt;&lt;br/&gt;This research focuses on automating the development and maintenance of the software's infrastructure, allowing programmers to focus their attention on the server's core functions.  The approach uses semi-automatic parallelization of network applications via source-to-source transformation.  This approach is well suited to the network server software domain, since common design patterns and behavior exploitable in a domain-specific manner are often used.&lt;br/&gt;&lt;br/&gt;Fundamentally, this research advocates completely separating the server's behavioral model from its underlying software architecture.  Allowing programmers to specify the behavioral description of the software in a high-level manner frees developers from worrying about hardware details and operating system interfaces.  This decoupling provides benefits for server developers, and will spur new research in parallelization techniques, operating system interfaces, and software architectures.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>03/16/2001</MinAmdLetterDate>
<MaxAmdLetterDate>01/17/2005</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0093351</AwardID>
<Investigator>
<FirstName>Vivek</FirstName>
<LastName>Pai</LastName>
<EmailAddress>vivek@cs.princeton.edu</EmailAddress>
<StartDate>03/16/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<ProgramElement>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

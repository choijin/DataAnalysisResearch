<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:  Improving Scalability of Finite State Verifiers</AwardTitle>
<AwardEffectiveDate>07/01/2001</AwardEffectiveDate>
<AwardExpirationDate>06/30/2008</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>307959</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>CCR-0093174&lt;br/&gt;CAREER:  Improving Scalability of Finite State Verifiers&lt;br/&gt;&lt;br/&gt;Software quality assurance is a critically important and expensive task.  Finite State verification (FSV) is a family of automated approaches for proving that a given software system does not have errors of a specified kind of exposing such errors if they exist.  Unfortunately, computing resources needed by FSV techniques are often prohibitive for systems of realistic size, impeding acceptance of FSV in software practice.&lt;br/&gt;&lt;br/&gt;This research is aimed at improving scalability of FSV techniques.  It seeks to generalize the existing optimizations beyond the scope of the FSV techniques for which these optimizations were originally proposed.  In addition, new optimization techniques are being developed.  The research evaluates, both analytically and experimentally, the impact of each optimization on the scalability of the FSV techniques to which it can be applied.&lt;br/&gt;&lt;br/&gt;Successful completion of this work will produce scalable and effective SFV techniques.  In turn, use of these techniques in software practice can result in improvements in software quality and reduction in software development costs.  In addition, case studies with large software systems performed in the course of this work provide valuable experience in applying FSV techniques to real systems in form of guidelines and heuristics.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>03/13/2001</MinAmdLetterDate>
<MaxAmdLetterDate>07/27/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0093174</AwardID>
<Investigator>
<FirstName>Gleb</FirstName>
<LastName>Naumovich</LastName>
<EmailAddress>gleb@poly.edu</EmailAddress>
<StartDate>03/13/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Polytechnic University of New York</Name>
<CityName>Brooklyn</CityName>
<ZipCode>112013826</ZipCode>
<PhoneNumber>7182603360</PhoneNumber>
<StreetAddress>15 Metrotech Center</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

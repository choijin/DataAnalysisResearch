<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Structure-Sensitive Geometric Algorithms and Data Structures</AwardTitle>
<AwardEffectiveDate>09/01/2001</AwardEffectiveDate>
<AwardExpirationDate>06/30/2006</AwardExpirationDate>
<AwardTotalIntnAmount>255003.00</AwardTotalIntnAmount>
<AwardAmount>255003</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010200</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Robert B Grafton</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Proposal #0098151&lt;br/&gt;Mount, David&lt;br/&gt;U of Maryland, College Park&lt;br/&gt;&lt;br/&gt;The vitality of computational geometry depends heavily on its relevance to real-world problems and applications.  This field has made significant contributions to these areas, but continued success requires an understanding of the constraints and structure present in the problems that arise in typical applications.  Traditional worst-case asymptotic analysis is often too blunt a tool for establishing the efficiency of geometric algorithms, since geometric data sets often contain simplifying structure, which worst-case efficient algorithms may ignore.  Another reason is that worst-case analyses may lead designers to concentrate on difficult data configurations that arise only rarely in practice.  As a result, many designers of geometric software do not look to computational geometry as a relevant source of algorithms, and instead rely on heuristics of unproven performance.&lt;br/&gt;&lt;br/&gt;The goal of this research is counter this perception by developing ad implementing algorithms and data structures for geometric problems that are both efficient in practice and whose efficiency is formally provable.  Our approach in achieving practical efficiency is through a sensitivity to presence of simplifying structure.  For most algorithms this structure may be present in the input.  For data structures this structure is present in the distribution of the queries.  Our goal is to design and analyze algorithms and data structures that are most efficient when this simplifying structure is present.  In the absence of this structure, these algorithms would ideally degrade to the best worst-case algorithms.  This approach will be applied to geometric problems in information retrieval (multidimensional nearest neighbor searching and point location) pattern recognition, robust statistics, and in clustering. &lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/12/2001</MinAmdLetterDate>
<MaxAmdLetterDate>07/18/2003</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0098151</AwardID>
<Investigator>
<FirstName>David</FirstName>
<LastName>Mount</LastName>
<EmailAddress>mount@cs.umd.edu</EmailAddress>
<StartDate>09/12/2001</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
</Institution>
<ProgramElement>
<Code>2865</Code>
<Text>NUMERIC, SYMBOLIC &amp; GEO COMPUT</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0101</Code>
</Appropriation>
<Appropriation>
<Code>0102</Code>
</Appropriation>
<Appropriation>
<Code>0103</Code>
</Appropriation>
</Award>
</rootTag>

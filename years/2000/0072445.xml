<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Statistical Numerics</AwardTitle>
<AwardEffectiveDate>09/01/2000</AwardEffectiveDate>
<AwardExpirationDate>08/31/2003</AwardExpirationDate>
<AwardTotalIntnAmount>209952.00</AwardTotalIntnAmount>
<AwardAmount>209952</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>03040200</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>John Stufken</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Owen&lt;br/&gt;0072445&lt;br/&gt;Abstract&lt;br/&gt;&lt;br/&gt;The focus of this project is the application of statistical ideas to high dimensional numerical problems, such as approximation and noisy or nonsmooth optimization.  This work follows on earlier successes in integration.  Standard Monte Carlo sampling integrates with a slowly decreasing error.  Deterministic quasi-Monte Carlo sampling can achieve a much more accurate answer, but without a practical error estimate.  Re-injecting some randomness allows one to estimate the error, and gave rise to a surprising further large improvement in the quality of the answer.  The first problem is to use integration methods on approximation problems.  One expands the function in a basis (polynomials, Fourier functions, or wavelets), and finds that the coefficients are high dimensional integrals.  Estimates of these coefficients, with statistical uncertainty attached, can be used to give approximations with error estimates.  It is also possible to address qualitative issues such as: effective dimension of the function, smoothness of the function, number of important inputs, and so on.  The second problem is to optimize the expected value of a function over some variables in the face of randomness in some others.  An example is how to design an experiment for a nonlinear model.  The third problem is to predict binary functions learned from data.  An example is whether to hold or exercise an American type option.&lt;br/&gt;&lt;br/&gt;Computer codes that depend on a great many inputs are becoming ubiquitous.  They are used in the design of semiconductors, airplanes and automobiles, in climate models, and in financial risk management.  On any given task, it can be a great challenge to extract the relevant knowledge buried within this software.  It is also necessary to attach uncertainty estimates to the findings.  For even a few dozen input factors, it becomes necessary to employ statistical methods, of the type being researched in this project.  This project also considers functions that depend on one million or more input factors.  Advances in computer power will bring more attention to such functions, and new methods, such as those investigated in this project, will be required.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/31/2000</MinAmdLetterDate>
<MaxAmdLetterDate>07/23/2002</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0072445</AwardID>
<Investigator>
<FirstName>Art</FirstName>
<LastName>Owen</LastName>
<EmailAddress>owen@stat.stanford.edu</EmailAddress>
<StartDate>08/31/2000</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Stanford University</Name>
<CityName>Stanford</CityName>
<ZipCode>943052004</ZipCode>
<PhoneNumber>6507232300</PhoneNumber>
<StreetAddress>450 Jane Stanford Way</StreetAddress>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
</Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>1269</Code>
<Text>STATISTICS</Text>
</ProgramElement>
<ProgramReference>
<Code>0000</Code>
<Text>UNASSIGNED</Text>
</ProgramReference>
<ProgramReference>
<Code>OTHR</Code>
<Text>OTHER RESEARCH OR EDUCATION</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ITR:  Intelligent Storage Systems for Object-Oriented Programs</AwardTitle>
<AwardEffectiveDate>09/01/2000</AwardEffectiveDate>
<AwardExpirationDate>08/31/2005</AwardExpirationDate>
<AwardTotalIntnAmount>449748.00</AwardTotalIntnAmount>
<AwardAmount>493748</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Brett D. Fleisch</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Object-oriented programming is the mechanism of choice for implementing high-end applications.  However, the architectures supporting these applications continue to be biased toward array- rather than object-based&lt;br/&gt;paradigms,  where proximity of storage layout does not necessarily imply contemporaneous access.&lt;br/&gt;Object-oriented programs do exhibit repeated patterns of storage access.  Thus, a dynamic approach that can &lt;br/&gt;facilitate intelligent pre-fetching of data into Caches or TLB's can better support object-oriented programs.&lt;br/&gt;&lt;br/&gt;This research investigates the use of intelligent storage systems, such as Intelligent RAM (IRAM) and Processor in Memory (PIM) devices, to improve the performance of object-oriented programs in the following three ways.  Storage management functions, such as allocation and garbage collection, are migrated to intelligent memory devices using algorithms that are not only efficient in execution time, but also simple in logic design.  Storage prefetch functions, such as memory forwarding and jump-pointers, are migrated away from the CPU and its cache and into the intelligent storage system.  Storage access idioms are captured, compressed, and sent to the intelligent storage system for execution.&lt;br/&gt;&lt;br/&gt;The result of this research is the liberation of the CPU and its data cache from the overhead associated with the dynamic, garbage-collected storage of modern object-oriented languages.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/11/2000</MinAmdLetterDate>
<MaxAmdLetterDate>07/22/2003</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0081214</AwardID>
<Investigator>
<FirstName>Mark</FirstName>
<LastName>Franklin</LastName>
<EmailAddress>jbf@cse.wustl.edu</EmailAddress>
<StartDate>09/11/2000</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ron</FirstName>
<LastName>Cytron</LastName>
<EmailAddress>cytron@cs.wustl.edu</EmailAddress>
<StartDate>09/11/2000</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Washington University</Name>
<CityName>Saint Louis</CityName>
<ZipCode>631304862</ZipCode>
<PhoneNumber>3147474134</PhoneNumber>
<StreetAddress>CAMPUS BOX 1054</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Missouri</StateName>
<StateCode>MO</StateCode>
</Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>1686</Code>
<Text>ITR SMALL GRANTS</Text>
</ProgramElement>
<ProgramReference>
<Code>1658</Code>
<Text>SOFTWARE</Text>
</ProgramReference>
<ProgramReference>
<Code>1660</Code>
<Text>ITR COMPETITION FOR UNDER $500K</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>III: Small: Towards Scalable and Comprehensive Uncertain Data Management</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>474912.00</AwardTotalIntnAmount>
<AwardAmount>474912</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Frank Olken</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Due to the importance of uncertain data for a large number of applications,&lt;br/&gt;there has been significant recent interest in database support for uncertain&lt;br/&gt;data. Existing work in this area includes new models for uncertain data,&lt;br/&gt;prototype implementations, and efficient query processing algorithms for&lt;br/&gt;specific types of queries. Despite the recent efforts, several important aspects&lt;br/&gt;of uncertain data management remain unexplored. This project addresses two&lt;br/&gt;of these areas: Query Optimization and Support for Non-Relational Operators.&lt;br/&gt;&lt;br/&gt;The first goal is about efficient execution of uncertain data queries. As with&lt;br/&gt;traditional data, efficient execution is necessary for ensuring the viability of&lt;br/&gt;uncertain data management systems. However, due to the complications of&lt;br/&gt;ensuring correct results, and the need for CPU-intensive operations over&lt;br/&gt;probability distributions, the goal is critical and challenging. In this project,&lt;br/&gt;automatic query optimizations are developed, through query rewriting rules&lt;br/&gt;that involve probability threshold operators, corresponding access methods,&lt;br/&gt;and cost estimation functions.&lt;br/&gt;&lt;br/&gt;The difficulty of handling uncertainty when dealing with non-relational&lt;br/&gt;operators has been expressed in many domains. The project aims to&lt;br/&gt;advance the capability of tracking the exact impact of uncertain inputs as&lt;br/&gt;data is processed by arbitrary programs, leveraging advanced techniques&lt;br/&gt;from the area of program analysis. A key problem with traditional Monte&lt;br/&gt;Carlo based solutions lies in correctly identifying independence in the output&lt;br/&gt;of Monte Carlo simulations. Data lineage tracing, which identifies the set of&lt;br/&gt;inputs used to compute an output value, is used to address the challenge.&lt;br/&gt;Furthermore, a program dependence tracing based approach is devised to&lt;br/&gt;trace the propagation of uncertainty during execution of arbitrary binary&lt;br/&gt;code. The technique does not rely on Monte Carlo simulations, and does&lt;br/&gt;not require access to source code or domain knowledge.&lt;br/&gt;&lt;br/&gt;For further information see the project web page:&lt;br/&gt;http://www.cs.purdue.edu/homes/sunil/uncertainty&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/12/2009</MinAmdLetterDate>
<MaxAmdLetterDate>08/02/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0916874</AwardID>
<Investigator>
<FirstName>Sunil</FirstName>
<LastName>Prabhakar</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sunil K Prabhakar</PI_FULL_NAME>
<EmailAddress>sunil@purdue.edu</EmailAddress>
<PI_PHON>7654945736</PI_PHON>
<NSF_ID>000490800</NSF_ID>
<StartDate>09/12/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Xiangyu</FirstName>
<LastName>Zhang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xiangyu Zhang</PI_FULL_NAME>
<EmailAddress>xyzhang@cs.purdue.edu</EmailAddress>
<PI_PHON>7654944600</PI_PHON>
<NSF_ID>000494973</NSF_ID>
<StartDate>09/12/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName>West Lafayette</CityName>
<StateCode>IN</StateCode>
<ZipCode>479072114</ZipCode>
<StreetAddress><![CDATA[Young Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~164590</FUND_OBLG>
<FUND_OBLG>2010~152157</FUND_OBLG>
<FUND_OBLG>2011~158165</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Uncertainty in data processing is ubiquitous, arising from multiple sources<br />including application semantics, measurement errors, calibration errors, limited<br />sampling, missing data, modeling errors, and limited representation precision in<br />floating point programs. Properly handling such uncertainty is an important<br />requirement, especially in the era of &ldquo;Big Data&rdquo;, in which a lot of (critical)<br />decisions are made based on (uncertain) data processing. In this project, the PIs aim to develop computational solutions focusing on providing uncertain data management capabilities within and outside database engines.</p> <p>For uncertain data processing outside databases, the PIs have developed the following solutions: (1) a tracing technique for data processing programs to exactly trace the propagation of input uncertainty. (2) runtime program analysis techniques to substantially reduce the cost of performing Monte Carlo analysis on uncertain domains. (3) an on-the-fly monitoring technique that can predict instability caused by uncertainty in floating point representation.</p> <p>For uncertain data processing inside databases, the PIs have developed new query optimization techniques for general Select-Project-Join queries over uncertain data. Earlier work on query optimization over uncertain data has been limited to specific query types (e.g., range, nearest-neighbor, skyline, etc.) or limited uncertain data  models.&nbsp;</p> <div class="page" title="Page 3"> <div class="layoutArea"> <div class="column"> <p><span> <br />The PIs have introduced a new probability threshold relational operator,<br /> and identified a number of query equivalences involving the new operator and the standard select, project, join operators. The new operator have been implemented as part of the Orion system. The rewritten queries are shown to improve the performance of the queries by as much as 90%.&nbsp;</span></p> </div> </div> </div> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 01/08/2014<br>      Modified by: Sunil&nbsp;K&nbsp;Prabhakar</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Uncertainty in data processing is ubiquitous, arising from multiple sources including application semantics, measurement errors, calibration errors, limited sampling, missing data, modeling errors, and limited representation precision in floating point programs. Properly handling such uncertainty is an important requirement, especially in the era of "Big Data", in which a lot of (critical) decisions are made based on (uncertain) data processing. In this project, the PIs aim to develop computational solutions focusing on providing uncertain data management capabilities within and outside database engines.  For uncertain data processing outside databases, the PIs have developed the following solutions: (1) a tracing technique for data processing programs to exactly trace the propagation of input uncertainty. (2) runtime program analysis techniques to substantially reduce the cost of performing Monte Carlo analysis on uncertain domains. (3) an on-the-fly monitoring technique that can predict instability caused by uncertainty in floating point representation.  For uncertain data processing inside databases, the PIs have developed new query optimization techniques for general Select-Project-Join queries over uncertain data. Earlier work on query optimization over uncertain data has been limited to specific query types (e.g., range, nearest-neighbor, skyline, etc.) or limited uncertain data  models.        The PIs have introduced a new probability threshold relational operator,  and identified a number of query equivalences involving the new operator and the standard select, project, join operators. The new operator have been implemented as part of the Orion system. The rewritten queries are shown to improve the performance of the queries by as much as 90%.                    Last Modified: 01/08/2014       Submitted by: Sunil K Prabhakar]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

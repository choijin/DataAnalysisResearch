<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Large: Collaborative Research: PASS: Perpetually Available Software Systems</AwardTitle>
<AwardEffectiveDate>08/01/2009</AwardEffectiveDate>
<AwardExpirationDate>07/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>642000.00</AwardTotalIntnAmount>
<AwardAmount>642000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Despite heroic efforts in testing, static analysis, specification, and verification, all real-world software -- desktop applications, servers, and transportation systems---deploys with defects and missing functionality, costing the US economy billions and threatening our well-being.  This project proposes a transformative paradigm shift to "perpetually available software systems" (PASS) that will make software more available and robust by directly addressing errors in deployed software.  PASS innovations will (1) improve user experience by keeping real-world software running longer; (2) ensure good performance; (3) assist developers in fixing errors while allowing patches to be safely deployed on running software, to avoid downtime. The project will mine error reports in open source software repositories to derive error classes and test suites. It will evaluate system effectiveness by comparing with bug reports and patches in repositories.  Innovations will include (1) detection and remediation elements that target common errors, (2) semantic foundations for remediation and on-line updating, and (3) integration of elements to exploit synergy among the components.  The project will explore and analyze novel safe, probabilistically-safe, and extended-semantics remediations/updates. The project will develop both C/C++ and Java runtimes, because they are the most widely used languages and pose unique challenges. Methods will include combining dynamic, static, and remediation/update analysis and results.  The project will train graduate, undergraduate, and post doctoral students, and participate in outreach to under-represented groups. The tools will be made publicly available, adding to the national research infrastructure.</AbstractNarration>
<MinAmdLetterDate>08/08/2009</MinAmdLetterDate>
<MaxAmdLetterDate>08/08/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0910530</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Hicks</LastName>
<EmailAddress>mwh@cs.umd.edu</EmailAddress>
<StartDate>08/08/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9217</Code>
<Text>NATNL RESERCH &amp; EDUCAT NETWORK</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
</Appropriation>
</Award>
</rootTag>

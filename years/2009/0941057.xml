<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>A Graphical Full System Simulator for Undergraduate Computer Architecture Education</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>118651.00</AwardTotalIntnAmount>
<AwardAmount>118651</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Paul Tymann</SignBlockName>
<PO_EMAI>ptymann@nsf.gov</PO_EMAI>
<PO_PHON>7032922832</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computer Science (31)&lt;br/&gt;&lt;br/&gt;Computer architectures have evolved greatly in recent years but these innovations are not widely taught in introductory computer organization courses.  Existing simulators are used by researchers but do not meet the needs of students.  The simulator developed for this project models a full x86 machine and includes modern architectural components including multicore, superscalar, two-level cache and speculation.  Students select components such as the pipeline or memory to visualize how data are processed.  Multiple levels of abstractions allow student to ignore components that they are not ready to study.  One can also reconfigure the architecture components using a graphical user interface.&lt;br/&gt;&lt;br/&gt;Expected outcomes include the simulator as a standalone application, a web applet and a collection of laboratory exercises.  Materials are designed to be used within existing computer organization and architecture courses.  The applet can be accessed by any modern browser and thus allows adoption by a wide audience.  Pilot testing is being performed at American University, a small liberal arts school, and the University of Maryland, a large public university.  &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>02/25/2010</MinAmdLetterDate>
<MaxAmdLetterDate>02/25/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0941057</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Black</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael D Black</PI_FULL_NAME>
<EmailAddress>mblack@american.edu</EmailAddress>
<PI_PHON>2028853440</PI_PHON>
<NSF_ID>000530737</NSF_ID>
<StartDate>02/25/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>American University</Name>
<CityName>Washington</CityName>
<ZipCode>200168001</ZipCode>
<PhoneNumber>2028853440</PhoneNumber>
<StreetAddress>4400 Massachusetts Avenue, NW</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>District of Columbia</StateName>
<StateCode>DC</StateCode>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>DC00</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>077795060</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>AMERICAN UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>077795060</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[American University]]></Name>
<CityName>Washington</CityName>
<StateCode>DC</StateCode>
<ZipCode>200168001</ZipCode>
<StreetAddress><![CDATA[4400 Massachusetts Avenue, NW]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>District of Columbia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>DC00</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0116000</Code>
<Name>Human Subjects</Name>
</FoaInformation>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7494</Code>
<Text>CCLI-Type 1 (Exploratory)</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0410</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~118651</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><!-- P { margin-bottom: 0.08in; direction: ltr; color: rgb(0, 0, 0); widows: 2; orphans: 2; }A:link { color: rgb(0, 0, 255); } --> <p>This project developed original computer simulation software, tutorials, and hands-on laboratory projects for teaching and learning about computer hardware. The courseware and projects have proven a useful tool for teaching undergraduate students in computer science and computer engineering. The resulting work was presented at major computer science education conferences SIGCSE and ITICSE.</p> <p style="margin-bottom: 0.14in;">The main courseware component is EmuMaker86, a full-system computer simulator with an interactive, graphical interface. The computer emulator includes a fully simulated x86 microprocessor or central processing unit (CPU); video display; keyboard; hard disk; floppy disk; and memory. The emulator is a graphical interface and runs Windows and Minix. Students can design their own CPUs with their own custom microarchitectures, and design their own<span lang="en-US"> datapath</span> and control units.</p> <p style="margin-bottom: 0.14in;">The simulator was designed for students in undergraduate computer engineering and computer science courses.  Multiple levels of abstractions allow student to ignore components that they are not ready to study. Students and faculty can also reconfigure the architecture components using a graphical user interface.</p> <p style="margin-bottom: 0.14in;">The visual component improved students&rsquo; understanding of the hardware functions. Students can visualize signals transferring through digital logic in a CPU. Operating systems RAM and disk memory are shown in different colored blocks. Each memory byte is editable. Students can design their own CPU and customize a datapath and control, or use pre-existing architectures. Operating Systems students can build their own OS and run assembly language commands, seeing how they run on a computer.</p> <p style="margin-bottom: 0.14in;">The simulation software is available online as a Web app at <a href="http://www.emumaker86.org">http://www.emumaker86.org</a> . Students and others can run the software on a Web page using a Java applet. The application and images are also available to download and run offline.</p> <p style="margin-bottom: 0.14in;">Students use the simulator to write x86 assembly programs, device drivers, hardware controllers; and design both simple and pipelined processors. A tutorial teaches students to use the simulator to build a pipelined RISC processor.</p> <p style="margin-bottom: 0.14in;">A portion of the software, the circuit design tool, was also ported to Android. A separate Android application, &ldquo;LogicMaker&rdquo; is also available for free download in the Google Play store. LogicMaker is an educational digital circuit design tool for Android smartphones and tablets.</p> <p style="margin-bottom: 0.14in;">To make it easier for faculty to adopt usage, the project includes laboratory projects for teaching Computer Science and Computer Engineering courses. Courses that benefit are primarily computer architecture, computer organization, and operating systems.</p><br> <p>            Last Modified: 05/04/2015<br>      Modified by: Michael&nbsp;D&nbsp;Black</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  This project developed original computer simulation software, tutorials, and hands-on laboratory projects for teaching and learning about computer hardware. The courseware and projects have proven a useful tool for teaching undergraduate students in computer science and computer engineering. The resulting work was presented at major computer science education conferences SIGCSE and ITICSE. The main courseware component is EmuMaker86, a full-system computer simulator with an interactive, graphical interface. The computer emulator includes a fully simulated x86 microprocessor or central processing unit (CPU); video display; keyboard; hard disk; floppy disk; and memory. The emulator is a graphical interface and runs Windows and Minix. Students can design their own CPUs with their own custom microarchitectures, and design their own datapath and control units. The simulator was designed for students in undergraduate computer engineering and computer science courses.  Multiple levels of abstractions allow student to ignore components that they are not ready to study. Students and faculty can also reconfigure the architecture components using a graphical user interface. The visual component improved studentsÃ† understanding of the hardware functions. Students can visualize signals transferring through digital logic in a CPU. Operating systems RAM and disk memory are shown in different colored blocks. Each memory byte is editable. Students can design their own CPU and customize a datapath and control, or use pre-existing architectures. Operating Systems students can build their own OS and run assembly language commands, seeing how they run on a computer. The simulation software is available online as a Web app at http://www.emumaker86.org . Students and others can run the software on a Web page using a Java applet. The application and images are also available to download and run offline. Students use the simulator to write x86 assembly programs, device drivers, hardware controllers; and design both simple and pipelined processors. A tutorial teaches students to use the simulator to build a pipelined RISC processor. A portion of the software, the circuit design tool, was also ported to Android. A separate Android application, "LogicMaker" is also available for free download in the Google Play store. LogicMaker is an educational digital circuit design tool for Android smartphones and tablets. To make it easier for faculty to adopt usage, the project includes laboratory projects for teaching Computer Science and Computer Engineering courses. Courses that benefit are primarily computer architecture, computer organization, and operating systems.       Last Modified: 05/04/2015       Submitted by: Michael D Black]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

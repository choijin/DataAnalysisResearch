<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Autonomous Data Partitioning Using Data Mining for High End Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>125000.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Query response time and system throughput are the most important metrics when it comes to database and file access performance. Because of data proliferation, efficient access methods and data storage techniques have become increasingly critical to maintain an acceptable query response time and system throughput. One of the common ways to reduce disk I/Os and therefore improve query response time is database clustering, which is a process that partitions the database/file vertically (attribute clustering) and/or horizontally (record clustering). To take advantage of parallelism to improve system throughput, clusters can be placed on different nodes in a cluster machine.   &lt;br/&gt;&lt;br/&gt;This project develops a novel algorithm, AutoClust, for database/file clustering that dynamically and automatically generates attribute and record clusters based on closed item sets mined from the attributes and records sets found in the queries running against the database/files. The algorithm is capable of re-clustering the database/file in order to continue achieving good system performance despite changes in the data and/or query sets.  The project then develops innovative ways to implement AutoClust using the cluster computing paradigm to reduce query response time and system throughput even further through parallelism and data redundancy.  The algorithms are prototyped on a Dell Linux Cluster computer with 486 compute nodes available at the University of Oklahoma.  For broader impacts, performance studies are conducted using not only the decision support system database benchmark (TPC-H) but also real data recorded in database and file formats collected from science and healthcare applications in collaboration with domain experts, including scientists at the Center for Analysis and Prediction of Storms (CAPS) at the University of Oklahoma. The project also makes important impacts on education as it provides training for graduate and undergraduate students working on this project in the areas of national critical needs: database and file management systems, and high-end computing and applications.  The developed algorithm and prototype, real datasets and performance evaluation results are made available to the public at the Website: http://www.cs.ou.edu/~database/AutoClust.html.</AbstractNarration>
<MinAmdLetterDate>09/02/2009</MinAmdLetterDate>
<MaxAmdLetterDate>07/31/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0954310</AwardID>
<Investigator>
<FirstName>Sudarshan</FirstName>
<LastName>Dhall</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sudarshan K Dhall</PI_FULL_NAME>
<EmailAddress>dhall@ou.edu</EmailAddress>
<PI_PHON/>
<NSF_ID>000298860</NSF_ID>
<StartDate>09/15/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Le</FirstName>
<LastName>Gruenwald</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Le Gruenwald</PI_FULL_NAME>
<EmailAddress>ggruenwald@ou.edu</EmailAddress>
<PI_PHON>4053253498</PI_PHON>
<NSF_ID>000368006</NSF_ID>
<StartDate>09/02/2009</StartDate>
<EndDate>09/15/2009</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Oklahoma Norman Campus</Name>
<CityName>NORMAN</CityName>
<ZipCode>730199705</ZipCode>
<PhoneNumber>4053254757</PhoneNumber>
<StreetAddress>201 Stephenson Parkway</StreetAddress>
<StreetAddress2><![CDATA[Five Partners Place, Suite 3100]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Oklahoma</StateName>
<StateCode>OK</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OK04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>848348348</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF OKLAHOMA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>046862181</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Oklahoma Norman Campus]]></Name>
<CityName>NORMAN</CityName>
<StateCode>OK</StateCode>
<ZipCode>730199705</ZipCode>
<StreetAddress><![CDATA[201 Stephenson Parkway]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Oklahoma</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OK04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramElement>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>7952</Code>
<Text>HECURA</Text>
</ProgramElement>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>7583</Code>
<Text>ITR-HECURA</Text>
</ProgramReference>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~125000</FUND_OBLG>
<FUND_OBLG>2012~25000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Query response time and system throughput are the number one metrics when it comes to database and file access performance. Because of data proliferation, efficient access methods and data storage techniques have become increasingly critical to maintain an acceptable query response time and system throughput. Retrieving data from disk is several orders of magnitude slower than retrieving it from memory. One of the common ways to reduce disk I/Os and therefore improve query response time is database attribute clustering, which is a process that partitions the database/file vertically (attribute clustering). To take advantage of parallelism to improve system throughput, clusters can be placed on different nodes in a cluster machine. A clustering result is optimized for a given set of queries. However in dynamic systems the queries change with time, the clustering in place becomes obsolete, and the database/file needs to be re-clustered dynamically.</p> <p>This project developed an efficient algorithm for database/file clustering that dynamically and automatically generates attribute clusters based on closed item sets mined from the attributes found in the queries running against the database/files. The project then developed ways to implement the algorithms using the cluster computing paradigm to reduce query response time and system throughput even further through parallelism and data redundancy. The developed algorithms were implemented on a cluster computer with 486 compute nodes. &nbsp;They were also extended to work with multi-tenant cloud databases and tested on a public cloud.&nbsp; The performance studies showed great improvements in query response time using the popular benchmark decision support database, TPC-H.</p> <p>The project provided research training to ten students who were either working on the project directly or working on the class projects associated with the Advanced Database Management course (CS 5513) at the University of Oklahoma.&nbsp; Among the students trained, one of them completed a Master&rsquo;s degree in computer science in fall 2013 and is expected to complete a Ph.D. degree in computer science in spring 2017.&nbsp; Research collaborations were carried out with the scientists at the Oklahoma Center for Analysis and Prediction of Storms (CAPS) to understand the applicability of the developed algorithms to their data and queries.</p><br> <p>            Last Modified: 12/01/2016<br>      Modified by: Sudarshan&nbsp;K&nbsp;Dhall</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2016/0954310/0954310_10211162_1480575590582_FinalReportOutcomeImage120161201Submit2--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/0954310/0954310_10211162_1480575590582_FinalReportOutcomeImage120161201Submit2--rgov-800width.jpg" title="Autonomous Database Partitioning Using Data Mining for High Performance Computing"><img src="/por/images/Reports/POR/2016/0954310/0954310_10211162_1480575590582_FinalReportOutcomeImage120161201Submit2--rgov-66x44.jpg" alt="Autonomous Database Partitioning Using Data Mining for High Performance Computing"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Autonomous Database Partitioning Using Data Mining for High Performance Computing</div> <div class="imageCredit">University of Oklahoma (OUDB Group)</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Sudarshan&nbsp;K&nbsp;Dhall</div> <div class="imageTitle">Autonomous Database Partitioning Using Data Mining for High Performance Computing</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/0954310/0954310_10211162_1480576932510_FinalReportOutcomeImage220161201Submit--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/0954310/0954310_10211162_1480576932510_FinalReportOutcomeImage220161201Submit--rgov-800width.jpg" title="Database Repartitioning in the Self-Managing Online Partitioner for Databases on Cluster Computers (SMOPD-C)"><img src="/por/images/Reports/POR/2016/0954310/0954310_10211162_1480576932510_FinalReportOutcomeImage220161201Submit--rgov-66x44.jpg" alt="Database Repartitioning in the Self-Managing Online Partitioner for Databases on Cluster Computers (SMOPD-C)"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Database Repartitioning in SMOPD-C</div> <div class="imageCredit">University of Oklahoma (OUDB Group)</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Sudarshan&nbsp;K&nbsp;Dhall</div> <div class="imageTitle">Database Repartitioning in the Self-Managing Online Partitioner for Databases on Cluster Computers (SMOPD-C)</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Query response time and system throughput are the number one metrics when it comes to database and file access performance. Because of data proliferation, efficient access methods and data storage techniques have become increasingly critical to maintain an acceptable query response time and system throughput. Retrieving data from disk is several orders of magnitude slower than retrieving it from memory. One of the common ways to reduce disk I/Os and therefore improve query response time is database attribute clustering, which is a process that partitions the database/file vertically (attribute clustering). To take advantage of parallelism to improve system throughput, clusters can be placed on different nodes in a cluster machine. A clustering result is optimized for a given set of queries. However in dynamic systems the queries change with time, the clustering in place becomes obsolete, and the database/file needs to be re-clustered dynamically.  This project developed an efficient algorithm for database/file clustering that dynamically and automatically generates attribute clusters based on closed item sets mined from the attributes found in the queries running against the database/files. The project then developed ways to implement the algorithms using the cluster computing paradigm to reduce query response time and system throughput even further through parallelism and data redundancy. The developed algorithms were implemented on a cluster computer with 486 compute nodes.  They were also extended to work with multi-tenant cloud databases and tested on a public cloud.  The performance studies showed great improvements in query response time using the popular benchmark decision support database, TPC-H.  The project provided research training to ten students who were either working on the project directly or working on the class projects associated with the Advanced Database Management course (CS 5513) at the University of Oklahoma.  Among the students trained, one of them completed a Master?s degree in computer science in fall 2013 and is expected to complete a Ph.D. degree in computer science in spring 2017.  Research collaborations were carried out with the scientists at the Oklahoma Center for Analysis and Prediction of Storms (CAPS) to understand the applicability of the developed algorithms to their data and queries.       Last Modified: 12/01/2016       Submitted by: Sudarshan K Dhall]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC:  Small: Lossy Trapdoor Functions - Applications, Realizations and Beyond</AwardTitle>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardAmount>499252</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
</ProgramOfficer>
<AbstractNarration>A central goal in foundational cryptography is to find a primitive that realizes all interesting cryptographic applications, and yet has its security based on a simple assumption --- ideally a weak general assumption. Recently, a significant step in this direction was made with the introduction of Lossy Trapdoor Functions. A family of Lossy Trapdoor Functions (TDF) lets a user generate a publicly computable function, f, and corresponding trapdoor, t, such the user can recover x given f(x). Alternatively, the user can generate a function g such that g looses information about the input x; moreover, no computationally bounded adversary can distinguish whether it is given the description of an injective or lossy function.&lt;br/&gt;&lt;br/&gt;Lossy Trapdoor Functions give rise to a host of cryptographic applications including: injective trapdoor functions, chosen-ciphertext secure encryption, collision-resistant hash functions, and oblivious transfer (OT). Furthermore, one can realize Lossy TDFs from several standard number theoretic assumptions: Decisional Diffie-Hellman, the Shortest Vector (SVP) problem in lattices, and the Composite Residuosity problem. Taken all together this solved two longstanding open problems: realizing non-factoring based trapdoor functions; and building chosen ciphertext secure encryption systems from lattice-based assumptions.&lt;br/&gt;&lt;br/&gt;This work will endeavor to make significant progress towards realizing the ultimate goal of building all of cryptography from simple general assumptions. The following directions will be pursued. First, the work will aim to create new constructions from both weaker number theoretic assumptions and from general assumptions. Second, the project will build trapdoors into Identity-Based Cryptosystems.  Constructing identity-based trapdoors will enable applications such as ``deterministic encryption'' in the Identity-Based context. Third, it will build new Non-Interactive Proof Systems. The project will study the relationship to Universal Hash Proof Systems and create new Non-Interactive Zero Knowledge Proof Systems.&lt;br/&gt;&lt;br/&gt;This project will contribute to our foundational understanding of cryptography. Results will be disseminated through conferences, journals, and invited talks. In addition, funding will be used to support graduate students and build a cryptography program at UT Austin.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/11/2009</MinAmdLetterDate>
<MaxAmdLetterDate>09/11/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0915361</AwardID>
<Investigator>
<FirstName>Brent</FirstName>
<LastName>Waters</LastName>
<EmailAddress>bwaters@cs.utexas.edu</EmailAddress>
<StartDate>09/11/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
</Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

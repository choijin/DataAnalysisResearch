<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Medium: Collaborative Research: GridPac: A Resource Management System for Energy and Performance Optimization on Computational Grids</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>340000.00</AwardTotalIntnAmount>
<AwardAmount>340000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Massive energy consumption is an escalating threat to the environment.  Large-scale computational grids consume a substantial amount of energy, and &lt;br/&gt;their energy requirements for powering and cooling are becoming comparable to the costs of acquisition.  There is a lack of generally applicable methods for reducing energy consumption while ensuring good quality of service.  This project will develop GridPac (Grid with Power-Aware Computing), a middleware environment that will allow grid managers and service providers to schedule multiple workflows across a distributed grid for system-wide optimization. GridPac will be based on a novel framework to support a variety of  task-level workflows.  The main features of this work are to develop:&lt;br/&gt;&lt;br/&gt;(a) Novel static and dynamic algorithms for scheduling single and multiple workflows, which can be flexibly utilized by service providers in scalable grid environments.&lt;br/&gt;&lt;br/&gt;(b) Control algorithms to account for dynamic adjustment of schedules using energy monitoring of the grid resources.&lt;br/&gt;&lt;br/&gt;(c) Extensive benchmarking using a suite of commonly used grid workflows.&lt;br/&gt;&lt;br/&gt;(d) A prototype middleware to assist IT organizations to better support their users while reducing energy costs.&lt;br/&gt;&lt;br/&gt;The proposed work will lead to original scholarly contributions while harnessing the usage of computational grids. The project carries tremendous potential for economic, environmental, and societal impact. We will initiate new graduate and undergraduate level courses on related topics, and develop relevant tutorials, which will help to create awareness and educate a large audience on a critically important research topic.</AbstractNarration>
<MinAmdLetterDate>08/07/2009</MinAmdLetterDate>
<MaxAmdLetterDate>07/30/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0905188</AwardID>
<Investigator>
<FirstName>Jack</FirstName>
<LastName>Dongarra</LastName>
<PI_MID_INIT>J</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jack J Dongarra</PI_FULL_NAME>
<EmailAddress>dongarra@icl.utk.edu</EmailAddress>
<PI_PHON>8659748295</PI_PHON>
<NSF_ID>000299281</NSF_ID>
<StartDate>08/07/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Tennessee Knoxville</Name>
<CityName>Knoxville</CityName>
<ZipCode>379163801</ZipCode>
<PhoneNumber>8659743466</PhoneNumber>
<StreetAddress>1331 CIR PARK DR</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<StateCode>TN</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TN02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003387891</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TENNESSEE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003387891</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Tennessee Knoxville]]></Name>
<CityName>Knoxville</CityName>
<StateCode>TN</StateCode>
<ZipCode>379163801</ZipCode>
<StreetAddress><![CDATA[1331 CIR PARK DR]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TN02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~170000</FUND_OBLG>
<FUND_OBLG>2011~85000</FUND_OBLG>
<FUND_OBLG>2012~85000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The GridPac project is a collaborative effort between the University of Tennessee, the University of Texas at Arlington, the University of Florida, and Virginia Tech, which addresses the optimization of performance and energy consumption of applications on large-scale grids and distributed memory architectures. This effort required developing scheduling mechanisms that support workflows rather than individual tasks, support a wide variety of tradeoffs in energy and performance, and support resources that are heterogeneous and dynamic.</p> <p>For our part, the University of Tennessee (UTK) created new implementations of scalable, high performance, workflow driven, tiled linear algebra algorithms and incorporated them into the PLASMA (<em>Parallel Linear Algebra for Scalable Multicore Architectures) </em>linear algebra library. Since linear algebra libraries are an essential component of many scientific computing applications, improvements to these libraries can affect a large number of fields. The PLASMA linear algebra library is freely available and downloadable online.</p> <p>Several alternative runtime mechanisms for scheduling and executing workflows were designed during this project. The QUARK (<em>QUeuing and Runtime for Kernels</em>) runtime environment was developed to execute workflow applications on multicore machines using ideas from superscalar scheduling in order to enable task parallelism. This runtime environment is supposed to make it simpler for algorithm designers to write programs that will run efficiently on shared memory multicore machines. The QUARK runtime library is a general-purpose mechanism for the parallel execution of data-dependent tasks using superscalar techniques. It is freely available and can be downloaded online.</p> <p>Several experimental runtimes for executing task-based workflows in distributed memory environments have been implemented and described in research reports. These have been shown to be scalable and to provide high performance when executed on large-scale platforms. The experiences from these experimental distributed memory runtimes will influence future implementations.</p> <p>The linear algebra applications were executed on architectures that included GPUs, shared-memory multicore machines, and distributed-memory environments. The energy footprint of these tiled linear algorithms was compared to standard approaches on multicore architectures using PowerPack instrumentation, and it was shown that the power consumption of the tiled algorithms is lower than that of the older algorithmic approaches.</p> <p>The objectives for UTK within the GridPac project were to develop optimized dynamic algorithms and to do a performance evaluation of scheduling. With the work on PLASMA, we have developed dynamic linear algebra algorithms that generate large workflows for multicore and distributed execution. Using QUARK and other distributed runtimes, we have examined scheduling on multicore and distributed architectures. Additionally, we have investigated the energy footprints of these tile algorithms on multicore machines. We have released PLASMA and QUARK as freely available libraries.</p><br> <p>            Last Modified: 10/22/2013<br>      Modified by: Jack&nbsp;J&nbsp;Dongarra</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The GridPac project is a collaborative effort between the University of Tennessee, the University of Texas at Arlington, the University of Florida, and Virginia Tech, which addresses the optimization of performance and energy consumption of applications on large-scale grids and distributed memory architectures. This effort required developing scheduling mechanisms that support workflows rather than individual tasks, support a wide variety of tradeoffs in energy and performance, and support resources that are heterogeneous and dynamic.  For our part, the University of Tennessee (UTK) created new implementations of scalable, high performance, workflow driven, tiled linear algebra algorithms and incorporated them into the PLASMA (Parallel Linear Algebra for Scalable Multicore Architectures) linear algebra library. Since linear algebra libraries are an essential component of many scientific computing applications, improvements to these libraries can affect a large number of fields. The PLASMA linear algebra library is freely available and downloadable online.  Several alternative runtime mechanisms for scheduling and executing workflows were designed during this project. The QUARK (QUeuing and Runtime for Kernels) runtime environment was developed to execute workflow applications on multicore machines using ideas from superscalar scheduling in order to enable task parallelism. This runtime environment is supposed to make it simpler for algorithm designers to write programs that will run efficiently on shared memory multicore machines. The QUARK runtime library is a general-purpose mechanism for the parallel execution of data-dependent tasks using superscalar techniques. It is freely available and can be downloaded online.  Several experimental runtimes for executing task-based workflows in distributed memory environments have been implemented and described in research reports. These have been shown to be scalable and to provide high performance when executed on large-scale platforms. The experiences from these experimental distributed memory runtimes will influence future implementations.  The linear algebra applications were executed on architectures that included GPUs, shared-memory multicore machines, and distributed-memory environments. The energy footprint of these tiled linear algorithms was compared to standard approaches on multicore architectures using PowerPack instrumentation, and it was shown that the power consumption of the tiled algorithms is lower than that of the older algorithmic approaches.  The objectives for UTK within the GridPac project were to develop optimized dynamic algorithms and to do a performance evaluation of scheduling. With the work on PLASMA, we have developed dynamic linear algebra algorithms that generate large workflows for multicore and distributed execution. Using QUARK and other distributed runtimes, we have examined scheduling on multicore and distributed architectures. Additionally, we have investigated the energy footprints of these tile algorithms on multicore machines. We have released PLASMA and QUARK as freely available libraries.       Last Modified: 10/22/2013       Submitted by: Jack J Dongarra]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

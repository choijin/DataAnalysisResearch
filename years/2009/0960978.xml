<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>DMTCP:  Checkpoint-Restart on the Desktop</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/15/2010</AwardEffectiveDate>
<AwardExpirationDate>04/30/2014</AwardExpirationDate>
<AwardTotalIntnAmount>368796.00</AwardTotalIntnAmount>
<AwardAmount>376870</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Kevin Thompson</SignBlockName>
<PO_EMAI>kthompso@nsf.gov</PO_EMAI>
<PO_PHON>7032924220</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Title:   DMTCP: Checkpoint-Restart on the Desktop&lt;br/&gt;PI:    Gene Cooperman&lt;br/&gt;NSF Proposal Number:  0960978&lt;br/&gt;&lt;br/&gt;ABSTRACT:  &lt;br/&gt;&lt;br/&gt;This work builds upon the existing open source, user-space DMTCP package&lt;br/&gt;for transparent, distributed checkpointing.  Three goals will be accomplished:&lt;br/&gt;(i) checkpoint-restart of long-running computations on the desktop;&lt;br/&gt;(ii) save-restore of interactive software packages; and (iii) a universal&lt;br/&gt;reversible debugger.  The first two goals will allow software development&lt;br/&gt;teams to add to their package a reliable "save workspace" feature --- with&lt;br/&gt;no requirement for a kernel module or other privileged operations.&lt;br/&gt;The third goal is to enhance any debugger with reversibility (e.g. a&lt;br/&gt;back-step command), and with a reverse expression watchpoint command to&lt;br/&gt;move backwards from a software error to the original software fault.&lt;br/&gt;&lt;br/&gt;INTELLECTUAL MERIT:&lt;br/&gt;While checkpointing has existed for over 20 years, earlier packages&lt;br/&gt;were difficult to maintain.  The unprivileged, user-space design of&lt;br/&gt;DMTCP has a five-year track record.  It is ideal for integration into&lt;br/&gt;other software, where any end-user requirement for installation of a&lt;br/&gt;kernel module or other administrative privilege is incompatible with&lt;br/&gt;widespread distribution.  Finally, DMTCP is the first package able to&lt;br/&gt;directly checkpoint a gdb session (the gdb process and its target process)&lt;br/&gt;-- a key feature for the envisioned new type of reversible debugger.&lt;br/&gt;&lt;br/&gt;BROADER IMPACT:&lt;br/&gt;Checkpointing and process migration have long been of interest for science&lt;br/&gt;and engineering, but too often suffered from software fragility or special&lt;br/&gt;requirements.  The DMTCP approach removes these obstacles.  Further,&lt;br/&gt;the wider use of ``time-traveling (reversible) debuggers'' will greatly&lt;br/&gt;accelerate software development due to the greater ease of finding bugs.&lt;br/&gt;A NIST report estimates the cost of software bugs to the economy at&lt;br/&gt;$59.5 billion per year.  Finally, the excitement factor of checkpoint-restart&lt;br/&gt;on the desktop helps attract and motivate students toward the learning&lt;br/&gt;of sometimes arcane systems issues in this critical technology.</AbstractNarration>
<MinAmdLetterDate>05/10/2010</MinAmdLetterDate>
<MaxAmdLetterDate>01/21/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0960978</AwardID>
<Investigator>
<FirstName>Gene</FirstName>
<LastName>Cooperman</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Gene Cooperman</PI_FULL_NAME>
<EmailAddress>gene@ccs.neu.edu</EmailAddress>
<PI_PHON>6173738686</PI_PHON>
<NSF_ID>000191040</NSF_ID>
<StartDate>05/10/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northeastern University</Name>
<CityName>BOSTON</CityName>
<ZipCode>021155005</ZipCode>
<PhoneNumber>6173733004</PhoneNumber>
<StreetAddress>360 HUNTINGTON AVE</StreetAddress>
<StreetAddress2><![CDATA[177-500]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001423631</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTHEASTERN UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001423631</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Northeastern University]]></Name>
<CityName>BOSTON</CityName>
<StateCode>MA</StateCode>
<ZipCode>021155005</ZipCode>
<StreetAddress><![CDATA[360 HUNTINGTON AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7231</Code>
<Text>CYBERINFRASTRUCTURE</Text>
</ProgramElement>
<ProgramElement>
<Code>7684</Code>
<Text>CESER-Cyberinfrastructure for</Text>
</ProgramElement>
<ProgramReference>
<Code>7684</Code>
<Text>STRATEGIC TECHNOLOGIES FOR CI</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~368796</FUND_OBLG>
<FUND_OBLG>2011~8074</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Checkpoint-restart allows one to save a running computer program or computation to disk, and later to restart it from where it stopped.&nbsp; This is important for long-running programs or long interactive sessions.&nbsp; A checkpoint-restart package, DMTCP (Distributed MultiThreaded CheckPointing), has been designed around the idea of plugins for process virtualization.&nbsp; Plugins allow it to adapt to an execution environment that is different on restart, as compared to prior to checkpoint.&nbsp; This new platform was the key to creating a modest-sized, easily maintainable support for the several results described below.</p> <p>The checkpoint-restart package is distributed as free and open-source software at http://dmtcp.sourceforge.net .&nbsp; It is also available as a package for the most common Linux distributions.&nbsp; The DMTCP forum provides free technical support.</p> <p>This platform enabled three especially significant results (firsts for checkpointing) for which two are published and one represents ongoing work.</p> <ol> <li>Checkpoint-restart has been extended to directly support checkpointing over the InfiniBand network.&nbsp; This eliminates the need for an MPI-specific checkpoint-restart service to "tear down the network", delegate to a single-host checkpointing package, and then "re-build the network".</li> <li>Checkpoint-restart has been extended to checkpointing of a network of virtual machines (QEMU over KVM, while checkpointing the Tun/Tap bridge network).&nbsp; This has important applications for Cloud Computing.&nbsp;</li> <li>Checkpoint-restart has been extended to provide support for checkpointing the state of programmable GPUs (using modern shaders).&nbsp; The mechanism demonstrated is: record-prune-replay.</li> </ol> <p>In particular, the support for InfiniBand, in conjunction with a principled implementation of checkpoint-restart for the ssh protocol allow DMTCP to transparently checkpoint various dialects of MPI.&nbsp; This technology provides the potential in the future to transparently checkpoint and restart entire batch queues for high performance computing (HPC).&nbsp; Such a capability will make more efficient use of expensive computer resources in HPC.</p> <p>In addition, a reversible debugger, FReD, has been demonstrated as a proof-of-principle.&nbsp; This supports a novel debugging technique, "reverse expression watchpoint" (also called "reverse transition watchpoint") has been demonstrated.&nbsp; A single mechanism for supporting GDB, the Python debugger and the Matlab debugger has been demonstrated, and can be easily extended to additional debuggers.</p><br> <p>            Last Modified: 07/01/2014<br>      Modified by: Gene&nbsp;Cooperman</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2014/0960978/0960978_10015805_1404222693549_pid-virt--rgov-214x142.jpg" original="/por/images/Reports/POR/2014/0960978/0960978_10015805_1404222693549_pid-virt--rgov-800width.jpg" title="PID virtualization: an example of process virtualization"><img src="/por/images/Reports/POR/2014/0960978/0960978_10015805_1404222693549_pid-virt--rgov-66x44.jpg" alt="PID virtualization: an example of process virtualization"></a> <div class="imageCaptionContainer"> <div class="imageCaption">The user application sees only the virtual process id (pid), and the plugin updates the translation table with the current real pids on restart.  Adjusting pids on restart is important for any checkpoint-restart system.  Plugins also support num...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Checkpoint-restart allows one to save a running computer program or computation to disk, and later to restart it from where it stopped.  This is important for long-running programs or long interactive sessions.  A checkpoint-restart package, DMTCP (Distributed MultiThreaded CheckPointing), has been designed around the idea of plugins for process virtualization.  Plugins allow it to adapt to an execution environment that is different on restart, as compared to prior to checkpoint.  This new platform was the key to creating a modest-sized, easily maintainable support for the several results described below.  The checkpoint-restart package is distributed as free and open-source software at http://dmtcp.sourceforge.net .  It is also available as a package for the most common Linux distributions.  The DMTCP forum provides free technical support.  This platform enabled three especially significant results (firsts for checkpointing) for which two are published and one represents ongoing work.  Checkpoint-restart has been extended to directly support checkpointing over the InfiniBand network.  This eliminates the need for an MPI-specific checkpoint-restart service to "tear down the network", delegate to a single-host checkpointing package, and then "re-build the network". Checkpoint-restart has been extended to checkpointing of a network of virtual machines (QEMU over KVM, while checkpointing the Tun/Tap bridge network).  This has important applications for Cloud Computing.  Checkpoint-restart has been extended to provide support for checkpointing the state of programmable GPUs (using modern shaders).  The mechanism demonstrated is: record-prune-replay.   In particular, the support for InfiniBand, in conjunction with a principled implementation of checkpoint-restart for the ssh protocol allow DMTCP to transparently checkpoint various dialects of MPI.  This technology provides the potential in the future to transparently checkpoint and restart entire batch queues for high performance computing (HPC).  Such a capability will make more efficient use of expensive computer resources in HPC.  In addition, a reversible debugger, FReD, has been demonstrated as a proof-of-principle.  This supports a novel debugging technique, "reverse expression watchpoint" (also called "reverse transition watchpoint") has been demonstrated.  A single mechanism for supporting GDB, the Python debugger and the Matlab debugger has been demonstrated, and can be easily extended to additional debuggers.       Last Modified: 07/01/2014       Submitted by: Gene Cooperman]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

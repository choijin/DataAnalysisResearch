<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: An Extensible Gradual Type System via Compile-Time Meta-Programming</AwardTitle>
<AwardEffectiveDate>07/15/2009</AwardEffectiveDate>
<AwardExpirationDate>06/30/2013</AwardExpirationDate>
<AwardAmount>418565</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Many modern programming languages fit in a category called "scripting languages." These languages are especially flexible, and they allow a programmer to quickly assemble pieces of a program to solve a problem. Unfortunately, a scripting language's flexibility can also hinder the programmer's ability to develop and maintain a script when it grows into a larger program. As scripting languages have become more popular, especially with new programmers, long-term development and maintenance problems affect a growing body of programs at many layer of our computing infrastructure. This project is about smoothing the path from scripts to a more rigorous style of programming by introducing type systems into scripting languages. A type system can offer up-front guarantees about how a program will execute, and it can help isolate the effects of program modifications. Rather than imposing a particular type system, however, this project's goal is to explore a particular way of defining and customizing a type system while introducing it gradually into an existing program. The specific technical approach in this project builds on Lisp-style macros as provided by the PLT Scheme programming language.</AbstractNarration>
<MinAmdLetterDate>07/17/2009</MinAmdLetterDate>
<MaxAmdLetterDate>07/17/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0914759</AwardID>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Flatt</LastName>
<EmailAddress>mflatt@cs.utah.edu</EmailAddress>
<StartDate>07/17/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9217</Code>
<Text>NATNL RESERCH &amp; EDUCAT NETWORK</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CPATH-1: Collaborative Research: a Verification-Driven Learning Model that Enriches CS and Related Undergraduate Programs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>194998.00</AwardTotalIntnAmount>
<AwardAmount>253798</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computer science foundation-building courses at the freshman and sophomore levels pose the greatest stumbling blocks to undergraduate students' learning.  CS student enrollment has declined over 60% nationwide, even though the demand for skilled professionals was increasing.  There is an urgent need for a more effective CS learning model. &lt;br/&gt;&lt;br/&gt;The main purpose of this research is to enrich the context of the CS learning process which is important from motivational and educational perspectives.  This project investigates a verification-driven learning model that facilitates students' involvement in real-world computing tasks starting from their early computing courses and continuing throughout their entire studies in computing.  This model can significantly reduce the prerequisites for students to study real-world problems in their early years.  The students are tasked to validate the functionality of software, execute programs, test parts of systems (pre-decomposed subsystems and components), and locate possible errors.  Such seemingly complex high-level tasks can be done by novice students because software verification does not require design and implementation, and can be turned into a learn-by-example process with adequate preparation.  This kind of preparation is wrapped in a Verification-Driven Learning Case, which defines the configuration to support a verification-driven learning activity, and consists of elements such as the justification of the system's existence, the requirement specification, description of the functionality, a set of test cases, and the decomposition of the system.  &lt;br/&gt;&lt;br/&gt;The foundation of the verification-driven learning model lies in software testing theories and techniques.  Frequent and progressive exercises on verification will prepare the students for formal specifications.  To realize the learning model, this project will produce Learning Cases based on faculty research including computer security, bioinformatics, geographic information systems, database and data mining techniques, remote sensing, and fuzzy set techniques.  The Learning Cases will expose the students to working software systems that serve a real-world purpose in scientific research, engineering development, or social networks.&lt;br/&gt;&lt;br/&gt;This project will particularly advocate computer science education in under-represented minority and woman students.  This learning approach will also help adult students who have rich experience in various areas but need to reposition themselves in the work force.  The final goal of this project is to revitalize the CS programs and produce more competent graduates capable of computational thinking.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/26/2009</MinAmdLetterDate>
<MaxAmdLetterDate>03/28/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0939108</AwardID>
<Investigator>
<FirstName>Mahdi</FirstName>
<LastName>Abdelguerfi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mahdi Abdelguerfi</PI_FULL_NAME>
<EmailAddress>mahdi@cs.uno.edu</EmailAddress>
<PI_PHON>5042807107</PI_PHON>
<NSF_ID>000330762</NSF_ID>
<StartDate>08/26/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Golden</FirstName>
<LastName>Richard</LastName>
<PI_MID_INIT>G</PI_MID_INIT>
<PI_SUFX_NAME>III</PI_SUFX_NAME>
<PI_FULL_NAME>Golden G Richard</PI_FULL_NAME>
<EmailAddress>golden@cct.lsu.edu</EmailAddress>
<PI_PHON>5049575814</PI_PHON>
<NSF_ID>000360022</NSF_ID>
<StartDate>08/26/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Shengru</FirstName>
<LastName>Tu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shengru Tu</PI_FULL_NAME>
<EmailAddress>shengru@cs.uno.edu</EmailAddress>
<PI_PHON>5042807108</PI_PHON>
<NSF_ID>000472764</NSF_ID>
<StartDate>08/26/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Dongxiao</FirstName>
<LastName>Zhu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dongxiao Zhu</PI_FULL_NAME>
<EmailAddress>dzhu@wayne.edu</EmailAddress>
<PI_PHON>3135773104</PI_PHON>
<NSF_ID>000529895</NSF_ID>
<StartDate>08/26/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of New Orleans</Name>
<CityName>New Orleans</CityName>
<ZipCode>701480001</ZipCode>
<PhoneNumber>5042806836</PhoneNumber>
<StreetAddress>2000 Lakeshore Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Louisiana</StateName>
<StateCode>LA</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>LA02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>616680757</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NEW ORLEANS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>787047901</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of New Orleans]]></Name>
<CityName>New Orleans</CityName>
<StateCode>LA</StateCode>
<ZipCode>701480001</ZipCode>
<StreetAddress><![CDATA[2000 Lakeshore Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Louisiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>LA02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7640</Code>
<Text>CPATH</Text>
</ProgramElement>
<ProgramReference>
<Code>7218</Code>
<Text>RET SUPP-Res Exp for Tchr Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>7640</Code>
<Text>CPATH</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~194998</FUND_OBLG>
<FUND_OBLG>2010~42800</FUND_OBLG>
<FUND_OBLG>2011~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project has investigated the <em>verification-driven learning model</em>, an innovative learning model that reduces the &ldquo;prerequisites&rdquo; for students to study the real-world problems in their early years. &nbsp;This is a supplementary teaching technique that can enrich science courses.&nbsp; The verification-driven learning model is a condensed and enhanced practice of Problem-Based Learning (PBL) practice.&nbsp; Verification-driven learning promotes active, hands-on activities, and realizes targeted, intensive, short-time learning by tightly setting up the activity scenarios.</p> <p>To make the idea of verification-driven learning into reality, we have designed and implemented eighty one (81) learning cases based on the verification-driven learning model.&nbsp; A verification-driven learning case is an augmentation of the concept of test cases in software testing, in which the basic idea of judging the subject system in a try-and-error manner comes from software test cases.&nbsp; Significant learning-aid elements have been added to each learning case such as easy-to-understand narrative of the system requirements, precise description of functionality, user guide tailored for students&rsquo; tasks, system structural diagrams or animations (shown in Figure 1), and graphical user interfaces for students to investigate the interactions between the components in the subject system.&nbsp; Among the eighty one learning cases, fifty eight learning cases are for computer science students; eleven learning cases are for non-computer science students who take the computer literacy course; and twelve learning cases are for high school chemistry students (shown in Figure 2).&nbsp; In developing such diversified learning cases, we have established the methodology of constructing verification-driven learning cases.&nbsp; We have designed and implemented a set of unified assistant features in a configuration patterns called &ldquo;Learner&rsquo;s Corner&rdquo; that provides the students with an intuitive and consistent just-in-time assistant features.&nbsp; We have also laid out a two-tire architectural structure to promote reuse of development efforts: the verification-driven learning platforms and the verification-driven learning cases.&nbsp; A verification-driven learning platform specifies the configuration to support all the learning cases based on this platform which consists of the following elements:</p> <ul> <li>a working system, </li> <li>a simplified requirements narrative for the system, </li> <li>the description of the functionality of the system,&nbsp; </li> <li>a user&rsquo;s guide for the system, </li> <li>the system structure diagram presenting a decomposition of the system,&nbsp;&nbsp; </li> <li>the specifications of interfaces between the subsystems and/or components,</li> </ul> <p>To leverage the significant efforts of establishing each verification-driven learning platform we have produced multiple verification-driven learning cases to challenge the students based on each verification-driven learning platform.&nbsp; Each verification-driven learning case contains the following elements:</p> <ul> <li>the running system produced by plugging one or more bugs into the working system given by the base VDL platform, </li> <li>test cases (pairs of input data and expected output), </li> <li>a set of multiple-choice questions that challenge and guide students&rsquo; analysis. &nbsp;</li> </ul> <p>Classroom experiments have shown small percent of improvement in students&rsquo; test performance because the tests were designed to measure the traditional classroom teaching.&nbsp; Compared to the control group, the students using the verification-driven learning cases studied and practiced many more contents.&nbsp; Completing each learning case indicated the students had went through the learning process.&nbsp; It would be unfair to test the students in the ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project has investigated the verification-driven learning model, an innovative learning model that reduces the "prerequisites" for students to study the real-world problems in their early years.  This is a supplementary teaching technique that can enrich science courses.  The verification-driven learning model is a condensed and enhanced practice of Problem-Based Learning (PBL) practice.  Verification-driven learning promotes active, hands-on activities, and realizes targeted, intensive, short-time learning by tightly setting up the activity scenarios.  To make the idea of verification-driven learning into reality, we have designed and implemented eighty one (81) learning cases based on the verification-driven learning model.  A verification-driven learning case is an augmentation of the concept of test cases in software testing, in which the basic idea of judging the subject system in a try-and-error manner comes from software test cases.  Significant learning-aid elements have been added to each learning case such as easy-to-understand narrative of the system requirements, precise description of functionality, user guide tailored for studentsÆ tasks, system structural diagrams or animations (shown in Figure 1), and graphical user interfaces for students to investigate the interactions between the components in the subject system.  Among the eighty one learning cases, fifty eight learning cases are for computer science students; eleven learning cases are for non-computer science students who take the computer literacy course; and twelve learning cases are for high school chemistry students (shown in Figure 2).  In developing such diversified learning cases, we have established the methodology of constructing verification-driven learning cases.  We have designed and implemented a set of unified assistant features in a configuration patterns called "LearnerÆs Corner" that provides the students with an intuitive and consistent just-in-time assistant features.  We have also laid out a two-tire architectural structure to promote reuse of development efforts: the verification-driven learning platforms and the verification-driven learning cases.  A verification-driven learning platform specifies the configuration to support all the learning cases based on this platform which consists of the following elements:  a working system,  a simplified requirements narrative for the system,  the description of the functionality of the system,   a userÆs guide for the system,  the system structure diagram presenting a decomposition of the system,    the specifications of interfaces between the subsystems and/or components,   To leverage the significant efforts of establishing each verification-driven learning platform we have produced multiple verification-driven learning cases to challenge the students based on each verification-driven learning platform.  Each verification-driven learning case contains the following elements:  the running system produced by plugging one or more bugs into the working system given by the base VDL platform,  test cases (pairs of input data and expected output),  a set of multiple-choice questions that challenge and guide studentsÆ analysis.     Classroom experiments have shown small percent of improvement in studentsÆ test performance because the tests were designed to measure the traditional classroom teaching.  Compared to the control group, the students using the verification-driven learning cases studied and practiced many more contents.  Completing each learning case indicated the students had went through the learning process.  It would be unfair to test the students in the control group on the additional materials that they had not been taught.  The comparison of test results have assured that the students using the verification-driven learning cases did not receive any negative impact on their classroom learning.  How to quantitatively measure studentsÆ learning on practical aspects about their tex...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Enabling and Exploiting Evidence-Based Bug Triage</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/15/2010</AwardEffectiveDate>
<AwardExpirationDate>02/28/2017</AwardExpirationDate>
<AwardTotalIntnAmount>494775.00</AwardTotalIntnAmount>
<AwardAmount>510775</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Evolving software is no simple task: somehow, amongst innumerable bug reports, feature requests, and project plans, software teams must decide which of issues deserve the team's limited time and resources. To make these decisions, most teams engage in bug triage, comparing subjective estimates of the frequency and severity of issues.&lt;br/&gt;&lt;br/&gt;This research seeks to replace these subjective estimates with large-scale data on software use. To achieve this, the research explores a tools that detect software issues through peoples' normal use of help tools. The use of these tools will capture a wide range of software issues in a consistent, structured form, enabling several forms of aggregation and analysis. Unlike voluntary feedback, these tools will be part of users' normal work, increasing the representativeness of frequency and severity estimates, while also capturing new kinds of issues such as non-fatal errors and a wide range of usability problems. Evaluation includes deployment to real software development teams and controlled experiments of the efficacy of the resulting tools. The broader impacts of the work are ultimately to enable software teams to evolve software in a way that best meets the needs of its users.</AbstractNarration>
<MinAmdLetterDate>03/08/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/12/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0952733</AwardID>
<Investigator>
<FirstName>Amy</FirstName>
<LastName>Ko</LastName>
<PI_MID_INIT>J</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Amy J Ko</PI_FULL_NAME>
<EmailAddress>ajko@uw.edu</EmailAddress>
<PI_PHON>2065434043</PI_PHON>
<NSF_ID>000510102</NSF_ID>
<StartDate>03/08/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Washington</Name>
<CityName>Seattle</CityName>
<ZipCode>981950001</ZipCode>
<PhoneNumber>2065434043</PhoneNumber>
<StreetAddress>4333 Brooklyn Ave NE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<StateCode>WA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>605799469</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WASHINGTON</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042803536</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Washington]]></Name>
<CityName>Seattle</CityName>
<StateCode>WA</StateCode>
<ZipCode>981950001</ZipCode>
<StreetAddress><![CDATA[4333 Brooklyn Ave NE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1045</Code>
<Text>CAREER: FACULTY EARLY CAR DEV</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~95606</FUND_OBLG>
<FUND_OBLG>2011~93423</FUND_OBLG>
<FUND_OBLG>2012~115719</FUND_OBLG>
<FUND_OBLG>2013~206027</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>When software companies release software, there are only a few ways for them to learn about problems that users experience. They can wait for users to report problems, which leads to large amounts of unstructured text that is difficult to aggregate and analyze. They can also automatically monitor for easily detectable problems such as crashes, errors, and performance issues. The broad set of usability and usefulness issues that arise, however, are difficult to monitor and aggregate, making it difficult for teams to improve software for users.</p> <p>Across the seven years of the project, we made numerous discoveries about this problem. We learned how developers, designers, and product managers evolve software, finding that many ignore feedback that comes through technical support channels, that feedback from users often comes from highly technical users, and that developers do engage with user feedback, they often view it as irrelevant minority opinion. We also found that when developers discuss these issues, they tend to ignore evidence, relying instead on anecdote, speculation, and hyperbole. We also discovered that the most expert software engineers are more rational and evidence-based in their decision making and assessment of feedback, relying on objective data sources to inform their product decisions. However, we also found that expert engineers require substantial interpersonal skills to persuade less experienced developers who rely on less objective decision-making practices.</p> <p>We invented many approaches to address these problems. One was a way for users to request help while using software without having to express their problem. It dynamically creates a repository of frequently asked questions, predicts which questions a user will have based on their context, and provides structured data to software teams about which questions users have and where. This data can then be used to make more evidence-based decisions about how to improve software. In addition to this, we invented new algorithms for mining software feedback from technical support forums and for automatically detecting usability problems in software without even having to release software.</p> <p>We disseminated this work in diverse ways. We co-founded a software startup called AnswerDash that sells the help technology, raising venture capital, and to date have created dozens of jobs, while increasing the sales of numerous companies, indirectly creating more jobs. At the time of this grant's expiration, over 10 million people have used the product to seek help. We also shared our discoveries through multiple articles in popular press, through a webinar reaching over 30,000 software engineers, and through a podcast reaching over 10,000 software engineers. The PI also developed a new software engineering course and wrote a free online book to support the course, which summarizes the forty year history of research on human aspects of software engineering (http://faculty.washington.edu/ajko/books/cooperative-software-development/). The grant also supported the professional development of the PI, directly supported the research of four doctoral students (two of whom are now faculty), and trained over a dozen undergraduates about research, several of whom pursued graduate degrees.</p><br> <p>            Last Modified: 04/20/2017<br>      Modified by: Andrew&nbsp;J&nbsp;Ko</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2017/0952733/0952733_10013918_1492734988872_LemonAid--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/0952733/0952733_10013918_1492734988872_LemonAid--rgov-800width.jpg" title="The LemonAid help retrieval system"><img src="/por/images/Reports/POR/2017/0952733/0952733_10013918_1492734988872_LemonAid--rgov-66x44.jpg" alt="The LemonAid help retrieval system"></a> <div class="imageCaptionContainer"> <div class="imageCaption">The LemonAid help retrieval system helps users find frequently asked questions without having to describe their problem.</div> <div class="imageCredit">Andrew J. Ko</div> <div class="imagePermisssions">Creative Commons</div> <div class="imageSubmitted">Andrew&nbsp;J&nbsp;Ko</div> <div class="imageTitle">The LemonAid help retrieval system</div> </div> </li> <li> <a href="/por/images/Reports/POR/2017/0952733/0952733_10013918_1492735115780_AnswerDash--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/0952733/0952733_10013918_1492735115780_AnswerDash--rgov-800width.jpg" title="The AnswerDash self-service contextual help solution."><img src="/por/images/Reports/POR/2017/0952733/0952733_10013918_1492735115780_AnswerDash--rgov-66x44.jpg" alt="The AnswerDash self-service contextual help solution."></a> <div class="imageCaptionContainer"> <div class="imageCaption">The AnswerDash self-service contextual help solution on a customer site, based on research from the grant.</div> <div class="imageCredit">Andrew J. Ko</div> <div class="imagePermisssions">Creative Commons</div> <div class="imageSubmitted">Andrew&nbsp;J&nbsp;Ko</div> <div class="imageTitle">The AnswerDash self-service contextual help solution.</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ When software companies release software, there are only a few ways for them to learn about problems that users experience. They can wait for users to report problems, which leads to large amounts of unstructured text that is difficult to aggregate and analyze. They can also automatically monitor for easily detectable problems such as crashes, errors, and performance issues. The broad set of usability and usefulness issues that arise, however, are difficult to monitor and aggregate, making it difficult for teams to improve software for users.  Across the seven years of the project, we made numerous discoveries about this problem. We learned how developers, designers, and product managers evolve software, finding that many ignore feedback that comes through technical support channels, that feedback from users often comes from highly technical users, and that developers do engage with user feedback, they often view it as irrelevant minority opinion. We also found that when developers discuss these issues, they tend to ignore evidence, relying instead on anecdote, speculation, and hyperbole. We also discovered that the most expert software engineers are more rational and evidence-based in their decision making and assessment of feedback, relying on objective data sources to inform their product decisions. However, we also found that expert engineers require substantial interpersonal skills to persuade less experienced developers who rely on less objective decision-making practices.  We invented many approaches to address these problems. One was a way for users to request help while using software without having to express their problem. It dynamically creates a repository of frequently asked questions, predicts which questions a user will have based on their context, and provides structured data to software teams about which questions users have and where. This data can then be used to make more evidence-based decisions about how to improve software. In addition to this, we invented new algorithms for mining software feedback from technical support forums and for automatically detecting usability problems in software without even having to release software.  We disseminated this work in diverse ways. We co-founded a software startup called AnswerDash that sells the help technology, raising venture capital, and to date have created dozens of jobs, while increasing the sales of numerous companies, indirectly creating more jobs. At the time of this grant's expiration, over 10 million people have used the product to seek help. We also shared our discoveries through multiple articles in popular press, through a webinar reaching over 30,000 software engineers, and through a podcast reaching over 10,000 software engineers. The PI also developed a new software engineering course and wrote a free online book to support the course, which summarizes the forty year history of research on human aspects of software engineering (http://faculty.washington.edu/ajko/books/cooperative-software-development/). The grant also supported the professional development of the PI, directly supported the research of four doctoral students (two of whom are now faculty), and trained over a dozen undergraduates about research, several of whom pursued graduate degrees.       Last Modified: 04/20/2017       Submitted by: Andrew J Ko]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

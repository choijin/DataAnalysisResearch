<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CPATH-1: An interdisciplinary, problem-based, collaborative course on computational thinking</AwardTitle>
<AwardEffectiveDate>01/01/2010</AwardEffectiveDate>
<AwardExpirationDate>12/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>156277.00</AwardTotalIntnAmount>
<AwardAmount>156277</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Harriet Taylor</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This project is developing and offering a course in computational thinking for non-computer science undergraduate students at Baylor University. In this course, computational thinking is viewed algorithmically, thus it helps students to develop the skills needed to effectively solve problems with algorithms. It includes such topics as problem abstraction and decomposition, fundamental programming concepts, and the practical and theoretical limits of computation.&lt;br/&gt;&lt;br/&gt;There are several distinctive aspects to this course. First, it is intended for all students rather than only those in science-related disciplines. Second, it is collaborative. Students work in small groups that change weekly. Third, it is problem-based. Students learn computational thinking by solving real problems. Finally, problems given in the course come from disciplines outside of computer science. Faculty members from across the university are helping to develop the set of problems to be used in the class. Because the course focuses on how computational thinking may be used in other disciplines, it will better train non-computer science majors than the existing introductory course for computer science majors.&lt;br/&gt;&lt;br/&gt;The first year of the project is focused upon curriculum development, including defining a canonical list of problem types, gathering problems for the course, and selecting appropriate software for student implementation. The course will be offered twice in the second year of the project, once each semester. Given the enrollment in traditional introduction to computer science courses, demand for the course is high.&lt;br/&gt;&lt;br/&gt;Intellectual Merit&lt;br/&gt;This introductory course for non-majors gives a broad introduction to computational thinking for non-computer scientists. The principal investigators each have years of experience using problem-based, collaborative learning to teach computational thinking to computer science majors at all levels. A problem-based curriculum, using problems from external disciplines, serves to motivate the computational topics. The course also educates students about the breadth of computation?s application, and introduces them to other fields.&lt;br/&gt;&lt;br/&gt;This course has the potential to be transformative by becoming a model for the introduction to algorithmic computational thinking. It brings together students and problems from multiple disciplines, and unites them under a common theme. The efficacy of the course in training students in computational thinking will be rigorously evaluated and compared with a traditional introductory computer science course.&lt;br/&gt;&lt;br/&gt;Broader Impacts&lt;br/&gt;If technology is to continue to have a positive impact on society, it is essential for the people who interact with technology to understand how to effectively use and create with it. To this end, the proposed course broadens participation in computing by serving students outside the discipline.&lt;br/&gt;It also broadens the participation of faculty members by including external faculty in course development. The course enhances education infrastructure by providing a curriculum, software tools, and a body of problems to be made publicly available. The PIs have broad support for this course, both from inside the computer science department and across the faculty in many other departments at Baylor.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>12/31/2009</MinAmdLetterDate>
<MaxAmdLetterDate>12/31/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0939167</AwardID>
<Investigator>
<FirstName>DAVID</FirstName>
<LastName>STURGILL</LastName>
<EmailAddress>sturgill@cs.baylor.edu</EmailAddress>
<StartDate>12/31/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>William</FirstName>
<LastName>Booth</LastName>
<EmailAddress>Bill_Booth@baylor.edu</EmailAddress>
<StartDate>12/31/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Greg</FirstName>
<LastName>Hamerly</LastName>
<EmailAddress>Greg_Hamerly@baylor.edu</EmailAddress>
<StartDate>12/31/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Baylor University</Name>
<CityName>Waco</CityName>
<ZipCode>767987360</ZipCode>
<PhoneNumber>2547103817</PhoneNumber>
<StreetAddress>One Bear Place #97360</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7640</Code>
<Text>CPATH</Text>
</ProgramElement>
<ProgramReference>
<Code>7640</Code>
<Text>CPATH</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: II-EN: Infrastructure Support for Software Testing Research</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2010</AwardEffectiveDate>
<AwardExpirationDate>05/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>272000.00</AwardTotalIntnAmount>
<AwardAmount>272000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Software testing techniques are fundamental to the development of dependable software. Computer scientists studying testing techniques must be able to evaluate and compare them empirically, and this requires access to a wide range of infrastructure support including programs, program versions, test suites, and fault data. &lt;br/&gt;This project provides that support, focusing on test generation and on software domains that are increasingly important: concurrent and distributed systems, software product lines, and web services. The PIs are collecting and constructing systems, specifications, version attributes, test attributes and fault attributes relevant to these domains, and organizing them in formats that allow computer scientists to utilize them efficiently in controlled experiments. &lt;br/&gt;Th PIs are embedding these artifacts in the existing Software-artifact Infrastructure Repository (SIR), a repository established under prior NSF support to facilitate experimentation with deterministic C and Java systems. They are also enhancing SIR's support for community contributions, by providing moderated write access to the repository; this will be expanded in the latter years of the project, following the spirit of open-source models for system management. The infrastructure being assembled enables several &lt;br/&gt;specific research and educational projects related to software testing, by the project researchers themselves and by the software engineering research community as a whole.</AbstractNarration>
<MinAmdLetterDate>05/20/2010</MinAmdLetterDate>
<MaxAmdLetterDate>05/08/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0958231</AwardID>
<Investigator>
<FirstName>Sarfraz</FirstName>
<LastName>Khurshid</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sarfraz Khurshid</PI_FULL_NAME>
<EmailAddress>khurshid@ece.utexas.edu</EmailAddress>
<PI_PHON>5124718244</PI_PHON>
<NSF_ID>000095313</NSF_ID>
<StartDate>05/20/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName>Austin</CityName>
<StateCode>TX</StateCode>
<ZipCode>787595316</ZipCode>
<StreetAddress><![CDATA[3925 W Braker Lane, Ste 3.340]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7359</Code>
<Text>CCRI-CISE Cmnty Rsrch Infrstrc</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~91179</FUND_OBLG>
<FUND_OBLG>2011~88956</FUND_OBLG>
<FUND_OBLG>2012~91865</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>As software grows increasingly ubiquitous in our society, the costs of software failures increase. &nbsp;Software engineers rely on program analysis and testing techniques to reduce the incidence of such failures. &nbsp;Researchers are actively pursuing new approaches to analysis and testing, and approaches that automate processes, but these approaches must be assessed empirically. &nbsp;A key challenge in performing empirical studies is the difficulty of acquiring suitable experimental objects. &nbsp;Experiments with testing and analysis techniques can require software (often in multiple versions), test suites, and fault data. &nbsp;Obtaining such artifacts is not simple: free software seldom possesses the required attributes, while commercial systems are hard to get and when available, seldom provide support for rigorous controlled experimentation. &nbsp;The Software-artifact Infrastructure Repository (SIR) has been established, and under this grant, extended, to help provide support for experimentation with testing and analysis techniques.</p> <p>&nbsp;</p> <p>The SIR was originally established and populated with a number of deterministic, sequential C and Java systems. &nbsp;In this work, we extended the SIR to support research across a much wider domain, including new classes of software and testing methodologies. Artifacts have been added to support experimentation with software product lines, C++ and Java concurrency problems, C# software, and artifacts annotated with assertions. &nbsp;These artifacts have been validated by the PIs and students involved in the grant through numerous empirical studies, including studies of test generation techniques, techniques for augmenting (improving) test suites, and testing techniques for software product lines and highly configurable systems. &nbsp;Facilities for allowing user contributions to the SIR have also been created.</p> <p>&nbsp;</p> <p>The largest contribution of this work, however, has been its impact on the software engineering research community. &nbsp;As of the date on which this grant terminated, 2103 persons had registered for access to the SIR. &nbsp;These persons are associated with 629 different institutions (primarily academic, but also including some research laboratories). Even more significantly, 336 journal articles, conference publications, and doctoral dissertations have cited SIR as a source of support for their research. &nbsp;SIR has thus facilitated or enabled research on software engineering topics, that could not previously been as easily conducted, with potential impacts for anyone in society who depends on the reliability and security of software.</p> <p>&nbsp;</p><br> <p>            Last Modified: 09/05/2014<br>      Modified by: Sarfraz&nbsp;Khurshid</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ As software grows increasingly ubiquitous in our society, the costs of software failures increase.  Software engineers rely on program analysis and testing techniques to reduce the incidence of such failures.  Researchers are actively pursuing new approaches to analysis and testing, and approaches that automate processes, but these approaches must be assessed empirically.  A key challenge in performing empirical studies is the difficulty of acquiring suitable experimental objects.  Experiments with testing and analysis techniques can require software (often in multiple versions), test suites, and fault data.  Obtaining such artifacts is not simple: free software seldom possesses the required attributes, while commercial systems are hard to get and when available, seldom provide support for rigorous controlled experimentation.  The Software-artifact Infrastructure Repository (SIR) has been established, and under this grant, extended, to help provide support for experimentation with testing and analysis techniques.     The SIR was originally established and populated with a number of deterministic, sequential C and Java systems.  In this work, we extended the SIR to support research across a much wider domain, including new classes of software and testing methodologies. Artifacts have been added to support experimentation with software product lines, C++ and Java concurrency problems, C# software, and artifacts annotated with assertions.  These artifacts have been validated by the PIs and students involved in the grant through numerous empirical studies, including studies of test generation techniques, techniques for augmenting (improving) test suites, and testing techniques for software product lines and highly configurable systems.  Facilities for allowing user contributions to the SIR have also been created.     The largest contribution of this work, however, has been its impact on the software engineering research community.  As of the date on which this grant terminated, 2103 persons had registered for access to the SIR.  These persons are associated with 629 different institutions (primarily academic, but also including some research laboratories). Even more significantly, 336 journal articles, conference publications, and doctoral dissertations have cited SIR as a source of support for their research.  SIR has thus facilitated or enabled research on software engineering topics, that could not previously been as easily conducted, with potential impacts for anyone in society who depends on the reliability and security of software.          Last Modified: 09/05/2014       Submitted by: Sarfraz Khurshid]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: New Directions for Sketching and Stream Computation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/01/2010</AwardEffectiveDate>
<AwardExpirationDate>03/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>515634.00</AwardTotalIntnAmount>
<AwardAmount>539634</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Various technological trends, such as faster networks, cheaper data storage, and ubiquitous data logging, have given us access to massive amounts of data.  This gives rise to two fundamental questions that need to be addressed if we are to exploit this data: (a) How to process such data?  Traditional models of computation and notions of efficiency need to be reconsidered when monitoring Gbps network traffic, mining petabytes of search engine data, or processing data that is distributed across multiple low-power sensors. (b) What to compute about such data?  Often the data that is quickest to accumulate is data that is noisy, plagued by internal inconsistencies, or redundant. How can useful information be extracted from such data? &lt;br/&gt;&lt;br/&gt;Over the last decade, the study of sketching (a form of compression based on linear projection) and stream computation (space-bounded computation where the input is processed sequentially) has sought to address aspects of the above questions.  The research goal of this project is to initiate and pursue a variety of new directions for these computational models.  These include (a) Developing a more systematic understanding of computation in the existing models by seeking broad characterizations of problem tractability and developing "super synopses" that solve entire families of related problems.  (b) Extending and tailoring existing models in order to address a wider range of applications such as processing stochastically generated data.  (c) Establishing a general and intellectually intriguing abstraction of the challenges of computing with massive data sets that subsumes sketching and stream computation.&lt;br/&gt;&lt;br/&gt;In conjunction with these research goals, the project includes various educational and broader impact initiatives that are designed to ensure a wide dissemination of research results and to train graduate and undergraduate students.</AbstractNarration>
<MinAmdLetterDate>03/25/2010</MinAmdLetterDate>
<MaxAmdLetterDate>03/31/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0953754</AwardID>
<Investigator>
<FirstName>Andrew</FirstName>
<LastName>McGregor</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Andrew McGregor</PI_FULL_NAME>
<EmailAddress>mcgregor@cs.umass.edu</EmailAddress>
<PI_PHON>4135456867</PI_PHON>
<NSF_ID>000536261</NSF_ID>
<StartDate>03/25/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Massachusetts Amherst</Name>
<CityName>Hadley</CityName>
<ZipCode>010359450</ZipCode>
<PhoneNumber>4135450698</PhoneNumber>
<StreetAddress>Research Administration Building</StreetAddress>
<StreetAddress2><![CDATA[100 Venture Way, Suite 201]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>153926712</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MASSACHUSETTS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>079520631</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Massachusetts Amherst]]></Name>
<CityName>Hadley</CityName>
<StateCode>MA</StateCode>
<ZipCode>010359450</ZipCode>
<StreetAddress><![CDATA[Research Administration Building]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramElement>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~123002</FUND_OBLG>
<FUND_OBLG>2011~108259</FUND_OBLG>
<FUND_OBLG>2012~110428</FUND_OBLG>
<FUND_OBLG>2013~197945</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The data stream model is a computational model that captures some of the challenges that arise when trying to process massive amounts of data. In this model, the input to the problem under consideration is presented as a long sequence or "stream" and the algorithm for solving this problem is only permitted a small number of passes (ideally one)&nbsp;over the stream while using memory that is significantly less than that required to store the entire stream and with only a limited amount of time to process each element. For example, this abstracts the situation faced when trying to monitor internet traffic at a router: the input corresponds to a stream of IP packets, it is infeasible to store all the packets, and we typically want to detect patterns, trends, or abnormalities as soon as they arise in the data. However, the model is also relevant in a wide range of other scenarios and algorithmic techniques developed in the context of the model are applicable even more generally.</p> <p><br />In terms of intellectual merit, the project focused on the design and mathematical analysis of new efficient algorithms in the data stream model; establishing new bounds on the complexity of various problems in this model; and extending and tailoring specific algorithmic techniques for additional applications. Highlights of the new results established through this project are as follows: Moving beyond worst-case analysis of data stream algorithms and considering randomly generated streams, e.g., estimating statistics of extremely high-rate streams where the algorithm is only permitted to read a random subsample of the stream, understanding basic trade-offs between sample complexity and space complexity, and dealing with noisy and ambiguous data. Improved algorithms and lower bounds for classical problems such as language recognition and fingerprinting files. Broader applications of related algorithmic techniques in databases, machine learning, and programming languages, e.g., helping enable stream-like processing in MapReduce, analyzing validation mechanisms for programming on crowd sourcing platforms, new categorization and clustering algorithms, and designing and analyzing new privacy mechanisms. We also proved the first results on graph connectivity problems where the stream consists of both graph edge insertions and deletions and this result has been highly influential and has led to a large body of subsequent work. These, and the other results established during the project, were published in over twenty papers in major computer science conferences and journals.&nbsp;</p> <p><br />Other broader impacts: the project has also supported the PI giving tutorials at major conferences in theoretical computer science, machine learning, and databases and organizing multiple international and domestic workshops related to the topics of research. A new graduate course on data stream algorithms was designed and lectured at the University of Massachusetts Amherst. The project supported the training of multiple graduate and undergraduate students.</p><br> <p>            Last Modified: 06/30/2017<br>      Modified by: Andrew&nbsp;Mcgregor</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The data stream model is a computational model that captures some of the challenges that arise when trying to process massive amounts of data. In this model, the input to the problem under consideration is presented as a long sequence or "stream" and the algorithm for solving this problem is only permitted a small number of passes (ideally one) over the stream while using memory that is significantly less than that required to store the entire stream and with only a limited amount of time to process each element. For example, this abstracts the situation faced when trying to monitor internet traffic at a router: the input corresponds to a stream of IP packets, it is infeasible to store all the packets, and we typically want to detect patterns, trends, or abnormalities as soon as they arise in the data. However, the model is also relevant in a wide range of other scenarios and algorithmic techniques developed in the context of the model are applicable even more generally.   In terms of intellectual merit, the project focused on the design and mathematical analysis of new efficient algorithms in the data stream model; establishing new bounds on the complexity of various problems in this model; and extending and tailoring specific algorithmic techniques for additional applications. Highlights of the new results established through this project are as follows: Moving beyond worst-case analysis of data stream algorithms and considering randomly generated streams, e.g., estimating statistics of extremely high-rate streams where the algorithm is only permitted to read a random subsample of the stream, understanding basic trade-offs between sample complexity and space complexity, and dealing with noisy and ambiguous data. Improved algorithms and lower bounds for classical problems such as language recognition and fingerprinting files. Broader applications of related algorithmic techniques in databases, machine learning, and programming languages, e.g., helping enable stream-like processing in MapReduce, analyzing validation mechanisms for programming on crowd sourcing platforms, new categorization and clustering algorithms, and designing and analyzing new privacy mechanisms. We also proved the first results on graph connectivity problems where the stream consists of both graph edge insertions and deletions and this result has been highly influential and has led to a large body of subsequent work. These, and the other results established during the project, were published in over twenty papers in major computer science conferences and journals.    Other broader impacts: the project has also supported the PI giving tutorials at major conferences in theoretical computer science, machine learning, and databases and organizing multiple international and domestic workshops related to the topics of research. A new graduate course on data stream algorithms was designed and lectured at the University of Massachusetts Amherst. The project supported the training of multiple graduate and undergraduate students.       Last Modified: 06/30/2017       Submitted by: Andrew Mcgregor]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

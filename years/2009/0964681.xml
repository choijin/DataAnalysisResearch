<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>RI: Medium: Learned Dynamic Prioritization</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>899976.00</AwardTotalIntnAmount>
<AwardAmount>899976</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tatiana Korelsky</SignBlockName>
<PO_EMAI>tkorelsk@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project uses machine learning to accelerate the execution of a class of computer programs relevant to AI.  Given a program and a class of inputs, the new methods automatically seek execution strategies that are fast while still achieving a high level of accuracy.&lt;br/&gt;&lt;br/&gt;The project focuses on the main inference algorithms that underlie statistical AI: dynamic programming, belief propagation, Markov chain Monte Carlo, and backtracking search.  Each of these inference algorithms faces an enormous search space, iteratively extending or refining its picture of this space.  Each algorithm must continually choose which computational step to take next.&lt;br/&gt;&lt;br/&gt;The opportunity is to learn a strategy for making these choices. Some choices are on the "critical path" and help the system find an accurate output, while others lead mainly to wasted work.  The learned strategy for evaluating choices in context may itself be computationally intensive, so the method learns to speed that up as well, within the same framework.&lt;br/&gt;&lt;br/&gt;The project will disseminate software and will have broader impact on several fields.  The targeted algorithms are central to natural language processing, speech processing, machine vision, computational biology, health informatics and music processing.  Their ability to form a coherent global analysis of a set of observations is a hallmark of intelligence, and will enable artificial systems that aid human understanding and performance.  Speeding them up is critical as researchers develop increasingly sophisticated statistical models.&lt;br/&gt;Furthermore, the learning methodologies developed will be useful in other settings that attempt to learn computational or behavioral strategies.</AbstractNarration>
<MinAmdLetterDate>08/16/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/13/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0964681</AwardID>
<Investigator>
<FirstName>Jason</FirstName>
<LastName>Eisner</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jason M Eisner</PI_FULL_NAME>
<EmailAddress>jason@cs.jhu.edu</EmailAddress>
<PI_PHON>4105168438</PI_PHON>
<NSF_ID>000185365</NSF_ID>
<StartDate>08/16/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Hal</FirstName>
<LastName>Daume</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME>III</PI_SUFX_NAME>
<PI_FULL_NAME>Hal Daume</PI_FULL_NAME>
<EmailAddress>hal@umiacs.umd.edu</EmailAddress>
<PI_PHON>8015567863</PI_PHON>
<NSF_ID>000445461</NSF_ID>
<StartDate>08/16/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Johns Hopkins University</Name>
<CityName>Baltimore</CityName>
<ZipCode>212182686</ZipCode>
<PhoneNumber>4439971898</PhoneNumber>
<StreetAddress>1101 E 33rd St</StreetAddress>
<StreetAddress2><![CDATA[Suite B001]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MD07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001910777</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>JOHNS HOPKINS UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001910777</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Johns Hopkins University]]></Name>
<CityName>Baltimore</CityName>
<StateCode>MD</StateCode>
<ZipCode>212182686</ZipCode>
<StreetAddress><![CDATA[1101 E 33rd St]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MD07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7495</Code>
<Text>Robust Intelligence</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~295236</FUND_OBLG>
<FUND_OBLG>2011~298251</FUND_OBLG>
<FUND_OBLG>2012~306489</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span style="font-size: 15px; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline;">Building more intelligent computer systems means asking our computers to do deeper reasoning over more data. Unfortunately, the more we ask of our systems, the slower they are. The good news is that we can turn AI's learning techniques back on the very problem of speeding up the system. Our project devised ways for computers to discover shortcuts.</span></p> <p><span style="font-size: 15px; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline;">Humans are not perfect reasoners, but humans make good decisions most of the time. A skilled human such as a chessmaster has acquired a mental playbook that covers what to do in a large number of common circumstances. In reasoning about the world, a human can make reasonable guesses from relevant and easily available evidence, without considering every datum or reasoning through every possible consequence.</span></p> <p><span style="font-size: 15px; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline;">In the same way, our systems are able to learn cheap tricks that bypass or approximate portions of the reasoning process, or rely on superficial cues, so long as the results remain sufficiently accurate. </span></p> <p><span style="font-size: 15px; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline;">To build such a system, we first define a space of possible "policies" that a system can follow to do approximate reasoning or decision-making.&nbsp; We then explicitly train the system to optimize a user-specified combination of speed and accuracy, rather than accuracy alone as is traditional.&nbsp; In other words, we search the space of possible policies for an actual policy that achieves a good tradeoff.&nbsp; In general, this is a difficult and computationally intensive search problem.<br /></span></p><br> <p>            Last Modified: 11/25/2014<br>      Modified by: Jason&nbsp;M&nbsp;Eisner</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Building more intelligent computer systems means asking our computers to do deeper reasoning over more data. Unfortunately, the more we ask of our systems, the slower they are. The good news is that we can turn AI's learning techniques back on the very problem of speeding up the system. Our project devised ways for computers to discover shortcuts.  Humans are not perfect reasoners, but humans make good decisions most of the time. A skilled human such as a chessmaster has acquired a mental playbook that covers what to do in a large number of common circumstances. In reasoning about the world, a human can make reasonable guesses from relevant and easily available evidence, without considering every datum or reasoning through every possible consequence.  In the same way, our systems are able to learn cheap tricks that bypass or approximate portions of the reasoning process, or rely on superficial cues, so long as the results remain sufficiently accurate.   To build such a system, we first define a space of possible "policies" that a system can follow to do approximate reasoning or decision-making.  We then explicitly train the system to optimize a user-specified combination of speed and accuracy, rather than accuracy alone as is traditional.  In other words, we search the space of possible policies for an actual policy that achieves a good tradeoff.  In general, this is a difficult and computationally intensive search problem.        Last Modified: 11/25/2014       Submitted by: Jason M Eisner]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

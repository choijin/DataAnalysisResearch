<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Medium: Collaborative Research: Providing Predictable Timing for Task Migration in Embedded Multi-Core Environments (TiME-ME)</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>335000.00</AwardTotalIntnAmount>
<AwardAmount>335000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Assuring deadlines of embedded tasks for contemporary multicore architectures is becoming increasingly difficult. Real-time scheduling relies on task migration to exploit multicores, yet migration actually reduces timing predictability due to cache warm-up overheads and increased interconnect traffic.&lt;br/&gt;&lt;br/&gt;This work promotes a fundamentally new approach to increase the timing predictability of multicore architectures aimed at task migration in embedded environments making three major contributions:&lt;br/&gt;&lt;br/&gt;1. The development of novel strategies to guide migration based on cost/benefit tradeoffs exploiting both static and dynamic analyses.&lt;br/&gt;&lt;br/&gt;2. The devising of mechanisms to increase timing predictability under task migration providing explicit support for proactive and reactive real-time data movement across cores and their caches.&lt;br/&gt;&lt;br/&gt;3. The promotion of rate- and bandwidth-adaptive mechanisms as well as monitoring capabilities to increase predictability under task migration.&lt;br/&gt;&lt;br/&gt;The work aims at initiating a novel research direction investigating the benefits of interactions between hardware and software for embedded multicores with respect to timing predictability. This project fundamentally contributes to the research and educational infrastructure for the design and development of safety- and mission-critical embedded systems.</AbstractNarration>
<MinAmdLetterDate>08/06/2009</MinAmdLetterDate>
<MaxAmdLetterDate>08/13/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0905365</AwardID>
<Investigator>
<FirstName>Raj</FirstName>
<LastName>Acharya</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Raj Acharya</PI_FULL_NAME>
<EmailAddress>acharya@cse.psu.edu</EmailAddress>
<PI_PHON>8148659505</PI_PHON>
<NSF_ID>000387224</NSF_ID>
<StartDate>09/26/2012</StartDate>
<EndDate>08/13/2013</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Yuan</FirstName>
<LastName>Xie</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Yuan Xie</PI_FULL_NAME>
<EmailAddress>yuanxie@ece.ucsb.edu</EmailAddress>
<PI_PHON>8058935563</PI_PHON>
<NSF_ID>000203143</NSF_ID>
<StartDate>08/13/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Pennsylvania State Univ University Park</Name>
<CityName>University Park</CityName>
<ZipCode>168021503</ZipCode>
<PhoneNumber>8148651372</PhoneNumber>
<StreetAddress>201 Old Main</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003403953</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PENNSYLVANIA STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003403953</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Pennsylvania State Univ University Park]]></Name>
<CityName>University Park</CityName>
<StateCode>PA</StateCode>
<ZipCode>168021503</ZipCode>
<StreetAddress><![CDATA[201 Old Main]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1640</Code>
<Text>INFORMATION TECHNOLOGY RESEARC</Text>
</ProgramReference>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~167500</FUND_OBLG>
<FUND_OBLG>2011~83750</FUND_OBLG>
<FUND_OBLG>2012~83750</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Many embedded systems use multi-core/many-core processors. The communication among these processors are through on-chip interconnects and the delay/power/energy of the on-chip interconnect design has significant impact on the system. The project aims at reducing the power/energy and improving the performance of the on-chip interconnect. During this report period, we proposed two techniques.</p> <p>(1) NOC-sprinting, which can help reduce the thermal impact and energy consumption of the network-on-chip. To maintain a constant power envelope, the fraction of a silicon chip that can be operated at full frequency is<br />dropping exponentially with each generation of process technology.<br />Consequently, a large portion of silicon chips will become dark or dim<br />silicon, i.e., either idle or significantly under-clocked. However, most<br />previous work focuses on energy-efficient core/cache design while the<br />impact of on-chip interconnect is neglected. In fact, Network-on-chip<br />(NoC) plays a vital role in message passing and memory access that<br />directly influences the overall performance of many-core processors.<br />Moreover, network components dissipate 10% - 36% of total chip<br />power. Therefore, how to design the interconnection network<br />is critical to tackle the challenges of multicore scaling in the dark<br />silicon age. Recently, a concept of&nbsp; computational sprinting was proposed, in<br />which a chip improves its responsiveness to short-burst of computations<br />through temporarily exceeding its sustainable thermal design power<br />(TDP) budget. All the cores will be operated at the highest<br />&nbsp;frequency/voltage to provide instant throughput during sprinting, and<br />after that the chip must return to the single-core nominal operation<br />to cool down. While such mechanism sheds light upon how &ldquo;dark&rdquo;<br />cores can be utilized for transient performance enhancement, it exposes<br />two major design issues: First, the role of interconnect is neglected.<br />NoCs consume a significant portion of chip power when all cores are<br />in sprinting mode. When switching back to the nominal mode, only<br />a single core is active. However, the network routers and links cannot<br />be completely powered down, otherwise a gated-off node would block<br />packet-forwarding and the access of the local but shared resources<br />(e.g., cache and directory). As a result, the ratio of network power<br />over chip power rises substantially and may even lead to higher NoC<br />power than that of the single active core. Second, the mode-switching<br />lacks flexibility and only provides two options: nominal single-core<br />operation and maximum all-core sprinting. Depending on the workload<br />characteristics, an intermediate number of active cores may provide the<br />optimal performance speedup with less power dissipation.<br />To address these two issues, we propose fine-grained sprinting,<br />in which the chip can selectively sprint to any intermediate stages<br />instead of directly activating all the cores in response to short-burst<br />computations. The optimum number of cores to be selected depends<br />on the application characteristics. Scalable applications may opt to a<br />large number of cores that can support highly parallel computation,<br />whereas other applications may mostly consist of sequential programs<br />and would rather execute on a small number of cores. Apparently,<br />fine-grained sprinting can flexibly adapt to a variety of workloads. In<br />addition, landing on intermediate sprinting stages can save chip power<br />and slow down the heating process by power-gating the remaining<br />inactive on-chip resources, which is capable of sustaining longer sprint<br />duration for better system performance.</p> <p>&nbsp;</p> <p>(2) NOC-Delta, which can compress the information to be transferred on the net...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Many embedded systems use multi-core/many-core processors. The communication among these processors are through on-chip interconnects and the delay/power/energy of the on-chip interconnect design has significant impact on the system. The project aims at reducing the power/energy and improving the performance of the on-chip interconnect. During this report period, we proposed two techniques.  (1) NOC-sprinting, which can help reduce the thermal impact and energy consumption of the network-on-chip. To maintain a constant power envelope, the fraction of a silicon chip that can be operated at full frequency is dropping exponentially with each generation of process technology. Consequently, a large portion of silicon chips will become dark or dim silicon, i.e., either idle or significantly under-clocked. However, most previous work focuses on energy-efficient core/cache design while the impact of on-chip interconnect is neglected. In fact, Network-on-chip (NoC) plays a vital role in message passing and memory access that directly influences the overall performance of many-core processors. Moreover, network components dissipate 10% - 36% of total chip power. Therefore, how to design the interconnection network is critical to tackle the challenges of multicore scaling in the dark silicon age. Recently, a concept of  computational sprinting was proposed, in which a chip improves its responsiveness to short-burst of computations through temporarily exceeding its sustainable thermal design power (TDP) budget. All the cores will be operated at the highest  frequency/voltage to provide instant throughput during sprinting, and after that the chip must return to the single-core nominal operation to cool down. While such mechanism sheds light upon how "dark" cores can be utilized for transient performance enhancement, it exposes two major design issues: First, the role of interconnect is neglected. NoCs consume a significant portion of chip power when all cores are in sprinting mode. When switching back to the nominal mode, only a single core is active. However, the network routers and links cannot be completely powered down, otherwise a gated-off node would block packet-forwarding and the access of the local but shared resources (e.g., cache and directory). As a result, the ratio of network power over chip power rises substantially and may even lead to higher NoC power than that of the single active core. Second, the mode-switching lacks flexibility and only provides two options: nominal single-core operation and maximum all-core sprinting. Depending on the workload characteristics, an intermediate number of active cores may provide the optimal performance speedup with less power dissipation. To address these two issues, we propose fine-grained sprinting, in which the chip can selectively sprint to any intermediate stages instead of directly activating all the cores in response to short-burst computations. The optimum number of cores to be selected depends on the application characteristics. Scalable applications may opt to a large number of cores that can support highly parallel computation, whereas other applications may mostly consist of sequential programs and would rather execute on a small number of cores. Apparently, fine-grained sprinting can flexibly adapt to a variety of workloads. In addition, landing on intermediate sprinting stages can save chip power and slow down the heating process by power-gating the remaining inactive on-chip resources, which is capable of sustaining longer sprint duration for better system performance.     (2) NOC-Delta, which can compress the information to be transferred on the network, so that energy can be saved and performance can be improved. The idea is to conduct data encoding prior to packet injection and decoding before ejection in the network interface. The key idea  is to store a data packet in the Network-on-Chip as a common base value plus an array of relative differences. It can improve th...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

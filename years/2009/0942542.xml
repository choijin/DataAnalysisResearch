<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Automated Support for Developing Logical Reasoning Skills in Discrete Mathematics Courses</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2010</AwardEffectiveDate>
<AwardExpirationDate>08/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>199775.00</AwardTotalIntnAmount>
<AwardAmount>199775</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Don Millard</SignBlockName>
<PO_EMAI>dmillard@nsf.gov</PO_EMAI>
<PO_PHON>7032924620</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computer Science (31)&lt;br/&gt;&lt;br/&gt;For nearly every major topic in an elementary science course, student assignments include many practice problems.  Repeated practice helps students hone their skills.  The project explores if software can simulate authentic interaction giving students a more effective experience than traditional rote drill-and-practice.  Investigators are developing courseware, called Syrus, to help computer science students develop their skills with predicate logic and proof argument.  Syrus allows student interactions that are more flexible than can be achieved with practice problems from a textbook.  Students are not given a selection of answers to choose from and are not simply told if their answers are right or wrong.  Instead, open-ended responses to practice problems are checked by sophisticated mathematical software in real-time.  The system generates an almost endless supply of problems meeting instructor-specified criteria.  Syrus is a web application available to anyone, anywhere, using a standard web browser.</AbstractNarration>
<MinAmdLetterDate>02/25/2010</MinAmdLetterDate>
<MaxAmdLetterDate>02/25/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0942542</AwardID>
<Investigator>
<FirstName>Bruce</FirstName>
<LastName>Weide</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Bruce W Weide</PI_FULL_NAME>
<EmailAddress>weide.1@osu.edu</EmailAddress>
<PI_PHON>6142921517</PI_PHON>
<NSF_ID>000279349</NSF_ID>
<StartDate>02/25/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Harvey</FirstName>
<LastName>Friedman</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Harvey M Friedman</PI_FULL_NAME>
<EmailAddress>friedman@math.ohio-state.edu</EmailAddress>
<PI_PHON>6142929079</PI_PHON>
<NSF_ID>000312906</NSF_ID>
<StartDate>02/25/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Dennis</FirstName>
<LastName>Pearl</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dennis K Pearl</PI_FULL_NAME>
<EmailAddress>dkp13@psu.edu</EmailAddress>
<PI_PHON>8148637395</PI_PHON>
<NSF_ID>000438327</NSF_ID>
<StartDate>02/25/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Ohio State University Research Foundation -DO NOT USE</Name>
<CityName>Columbus</CityName>
<ZipCode>432101016</ZipCode>
<PhoneNumber>6146888734</PhoneNumber>
<StreetAddress>1960 KENNY RD</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>071650709</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OHIO STATE UNIVERSITY RESEARCH FOUNDATION, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Ohio State University]]></Name>
<CityName>Columbus</CityName>
<StateCode>OH</StateCode>
<ZipCode>432101016</ZipCode>
<StreetAddress><![CDATA[Office of Sponsored Programs]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0116000</Code>
<Name>Human Subjects</Name>
</FoaInformation>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7494</Code>
<Text>CCLI-Type 1 (Exploratory)</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0410</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~199775</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="column"> <p>"Practice makes perfect." Is is true? The primary goal of this project was to evaluate the impacts on learning outcomes that could be obtained for certain topics in discrete mathematics and logic, by creating an on-&shy;line tool based on several observations related to STEM education in general:</p> <ol> <li>Introductory courses require students to practice skills and test their understanding on homework problems.</li> <li>Typical human grading of such assignments severely limits the number of such problems that can be attempted by students with useful and timely feedback.</li> <li>State-&shy;of-&shy;the-&shy;art tools used by researchers in the field can sometimes solve such problems automatically.</li> <li>Large numbers of problems with similar (pedagogically useful) structure can be generated automatically.</li> </ol> <p>The idea of this pilot project was to build a tool, Syrus, to generate a large number of random problems related to logic and reasoning in a discrete math course for computer science majors; to solve these problems automatically using automated theorem-&shy;proving tools available to logic researchers, so the answers would be known to the system; to provide these problems as homework problems to students in an introductory course; and to evaluate the extent to which learning outcomes achieved were related to various measures of student engagement with, and success in solving, these practice problems.</p> <p>The Syrus project showed some promise in improved outcomes in a discrete mathematics course, when adjusted for expectations based on grades in previous math courses. &nbsp;This result was consistent among different subpopulations. &nbsp;However, no effect of the use of Syrus was seen in a question embedded in the final exam that was specifically designed to gauge the knowledge that Syrus most directly covered. &nbsp;Further study in an experimental setting where heavy use of Syrus is required would seem to be needed to better understand its value.</p> <p>It has become especially clear in the last few months that the key ideas behind Syrus will have increasing impact as higher education struggles with the potential of "massive open on-&shy;line courses" (MOOCs). &nbsp;MOOC students in STEM courses in particular will need to practice solving problems, some of which are of a sort that can be solved automatically with sophisticated research tools used by researchers in the same discipline. &nbsp;Students should receive, because of their "massive" numbers, automated feedback; and, because it is possible with automation, instantaneous feedback.</p> <p>The key ideas behind the Syrus project are already appearing in MOOCs. &nbsp;For example, Jim Fowler and Bart Snapp of the Ohio State University Mathematics Department are developing their own practice-&shy;problem platform, called MOOCulus, to support the Coursera "Calculus I" course that they are currently teaching to over 30,000 students worldwide. &nbsp;MOOCulus supports interactive calculus problem-&shy;solving for students: it generates random practice problems, solves them using various sophisticated tools available to researchers, provides real-&shy;time hints and feedback to students based on hidden knowledge of how these tools solve the problems at hand, checks student answers against those produced by the tools, and collects copious amounts of data about student usage and performance that eventually will be used to evaluate how much practice-&shy;with-&shy;instant-&shy;feedback impacts learning outcomes.</p> <p>In fact, the primary difference between MOOCulus and Syrus is a subject-&shy;matter difference. &nbsp;The application of Syrus ideas to calculus courses was one of the possible futures mentioned in our proposal. &nbsp;Our vision was that Syrus ultimately would help math professors address classical epsilon-&shy;delta proofs in a calculus course. Unfortunately, s...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  "Practice makes perfect." Is is true? The primary goal of this project was to evaluate the impacts on learning outcomes that could be obtained for certain topics in discrete mathematics and logic, by creating an on-&shy;line tool based on several observations related to STEM education in general:  Introductory courses require students to practice skills and test their understanding on homework problems. Typical human grading of such assignments severely limits the number of such problems that can be attempted by students with useful and timely feedback. State-&shy;of-&shy;the-&shy;art tools used by researchers in the field can sometimes solve such problems automatically. Large numbers of problems with similar (pedagogically useful) structure can be generated automatically.   The idea of this pilot project was to build a tool, Syrus, to generate a large number of random problems related to logic and reasoning in a discrete math course for computer science majors; to solve these problems automatically using automated theorem-&shy;proving tools available to logic researchers, so the answers would be known to the system; to provide these problems as homework problems to students in an introductory course; and to evaluate the extent to which learning outcomes achieved were related to various measures of student engagement with, and success in solving, these practice problems.  The Syrus project showed some promise in improved outcomes in a discrete mathematics course, when adjusted for expectations based on grades in previous math courses.  This result was consistent among different subpopulations.  However, no effect of the use of Syrus was seen in a question embedded in the final exam that was specifically designed to gauge the knowledge that Syrus most directly covered.  Further study in an experimental setting where heavy use of Syrus is required would seem to be needed to better understand its value.  It has become especially clear in the last few months that the key ideas behind Syrus will have increasing impact as higher education struggles with the potential of "massive open on-&shy;line courses" (MOOCs).  MOOC students in STEM courses in particular will need to practice solving problems, some of which are of a sort that can be solved automatically with sophisticated research tools used by researchers in the same discipline.  Students should receive, because of their "massive" numbers, automated feedback; and, because it is possible with automation, instantaneous feedback.  The key ideas behind the Syrus project are already appearing in MOOCs.  For example, Jim Fowler and Bart Snapp of the Ohio State University Mathematics Department are developing their own practice-&shy;problem platform, called MOOCulus, to support the Coursera "Calculus I" course that they are currently teaching to over 30,000 students worldwide.  MOOCulus supports interactive calculus problem-&shy;solving for students: it generates random practice problems, solves them using various sophisticated tools available to researchers, provides real-&shy;time hints and feedback to students based on hidden knowledge of how these tools solve the problems at hand, checks student answers against those produced by the tools, and collects copious amounts of data about student usage and performance that eventually will be used to evaluate how much practice-&shy;with-&shy;instant-&shy;feedback impacts learning outcomes.  In fact, the primary difference between MOOCulus and Syrus is a subject-&shy;matter difference.  The application of Syrus ideas to calculus courses was one of the possible futures mentioned in our proposal.  Our vision was that Syrus ultimately would help math professors address classical epsilon-&shy;delta proofs in a calculus course. Unfortunately, support for this kind of interaction remains beyond the reach of current research tools in logic.  By contrast, technical results regarding which problems can be solved automatically by tools for introdu...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

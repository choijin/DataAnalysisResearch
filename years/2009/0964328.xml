<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Medium: Collaborative Research: Scaling the Implicitly Parallel Programming Model with Lifelong Thread Extraction and Dynamic Adaptation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/01/2010</AwardEffectiveDate>
<AwardExpirationDate>04/30/2014</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The microprocessor industry has moved toward multicore designs to leverage increasing transistor counts in the face of physical and micro-architectural limitations.  Unfortunately, providing multiple cores does not translate into performance for most applications. Rather than pushing all the burden onto programmers, this project advocates the use of the implicitly parallel programming model to eliminate the laborious and error-prone process of explicit parallel programming.  Implicit parallel programming leverages sequential languages to facilitate shorter development and debug cycles, and relies on automatic tools, both static compilers and run-time systems, to identify parallelism and customize it to the target platform.  Implicit parallelism can be systematically extracted using: (1) decoupled softwarepipelining, a technique to extract the pipeline parallelism found in many sequential applications; (2) low-frequency and high-confidence speculation to overcome limitations of memory dependence analysis; (3) whole-program scope for parallelization to eliminate analysis boundaries; (4) simple extensions to the sequential programming model that give the programmer the power to refine the meaning of a program; (5) dynamic adaptation to ensure efficiency is maintained across changing environments. This project is developing the set of technologies to realize an implicitly parallel programming system with scalable, lifelong thread extraction and dynamic adaptation.  At the broader level, the implicitly parallel programming approach will free programmers to consider the problems they are trying to solve, rather than forcing them to overcome the processor industry's failure to continue to scale performance.  This approach will keep computers accessible, helping computing to have the same increasingly positive impact on other fields.</AbstractNarration>
<MinAmdLetterDate>03/08/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/05/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0964328</AwardID>
<Investigator>
<FirstName>David</FirstName>
<LastName>August</LastName>
<PI_MID_INIT>I</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>David I August</PI_FULL_NAME>
<EmailAddress>august@cs.princeton.edu</EmailAddress>
<PI_PHON>6092582085</PI_PHON>
<NSF_ID>000192343</NSF_ID>
<StartDate>03/08/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<StreetAddress2><![CDATA[P.O. Box 36]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NJ12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>002484665</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF PRINCETON UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002484665</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Princeton University]]></Name>
<CityName>Princeton</CityName>
<StateCode>NJ</StateCode>
<ZipCode>085442020</ZipCode>
<StreetAddress><![CDATA[Off. of Research &amp; Proj. Adm]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NJ12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~131249</FUND_OBLG>
<FUND_OBLG>2011~134075</FUND_OBLG>
<FUND_OBLG>2012~134676</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="page" title="Page 2"> <div class="section"> <div class="layoutArea"> <div class="column"> <div class="page" title="Page 1"> <div class="section"> <div class="layoutArea"> <div class="column"> <div class="page" title="Page 9"> <div class="section"> <div class="layoutArea"> <div class="column"> <p><span>People and organizations of all types benefit from the use of desktop, laptop, tablet, and handheld (e.g. smartphone) computers. &nbsp;Society has grown accustomed to consistent improvements</span>&nbsp;from each upgrade. &nbsp;Today, computers of all types have changed to contain multicore processors. Unfortunately, multicore processors require much more support in the form of programmer effort, tools, and techniques than their uniprocessor predecessors. &nbsp; This project provides tools and techniques designed to get more out of multicore processors by improving the performance and efficiency of existing and new applications. &nbsp;It has also provided ideas and directions for next generation multicore processors and parallel hardware accelerators. &nbsp;In particular, this project has produced tools and techniques designed to specialize input-driven codes, shown how to dynamically adapt systems to reduce the overheads incident on automatic parallelization, developed new algorithms for to improve the scalability of key algorithms in automatic thread extraction, and demonstrated dynamic adaptation systems for selecting the appropriate degrees of parallelism on multicore system.&nbsp;</p> </div> </div> </div> </div> </div> </div> </div> </div> </div> </div> </div> </div> <div class="page" title="Page 10"> <div class="section"> <div class="layoutArea"> <div class="column"> <p><span>This research has contributed to the education and development of several graduate students. &nbsp;Already, many of these students have earned a Ph.D. degree. This project also developed courses to educate graduate and undergraduate students about multicore processors, thread extraction, dynamic compilation, and parallelism in general. &nbsp;Numerous students touched by this project are&nbsp;making signigicant contributions at universities and technology companies in the United States. &nbsp;</span></p> </div> </div> </div> </div> <p>&nbsp;</p><br> <p>            Last Modified: 07/13/2014<br>      Modified by: David&nbsp;I&nbsp;August</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[             People and organizations of all types benefit from the use of desktop, laptop, tablet, and handheld (e.g. smartphone) computers.  Society has grown accustomed to consistent improvements from each upgrade.  Today, computers of all types have changed to contain multicore processors. Unfortunately, multicore processors require much more support in the form of programmer effort, tools, and techniques than their uniprocessor predecessors.   This project provides tools and techniques designed to get more out of multicore processors by improving the performance and efficiency of existing and new applications.  It has also provided ideas and directions for next generation multicore processors and parallel hardware accelerators.  In particular, this project has produced tools and techniques designed to specialize input-driven codes, shown how to dynamically adapt systems to reduce the overheads incident on automatic parallelization, developed new algorithms for to improve the scalability of key algorithms in automatic thread extraction, and demonstrated dynamic adaptation systems for selecting the appropriate degrees of parallelism on multicore system.                   This research has contributed to the education and development of several graduate students.  Already, many of these students have earned a Ph.D. degree. This project also developed courses to educate graduate and undergraduate students about multicore processors, thread extraction, dynamic compilation, and parallelism in general.  Numerous students touched by this project are making signigicant contributions at universities and technology companies in the United States.                Last Modified: 07/13/2014       Submitted by: David I August]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

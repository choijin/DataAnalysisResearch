<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Medium: Heterogeneous Virtual Machine: Future Execution Environments for Heterogeneous Many-core Architectures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>1090132.00</AwardTotalIntnAmount>
<AwardAmount>1305579</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A current industry trend aimed at addressing platform performance/power requirements is to create heterogeneous manycore systems, comprised of general purpose and specialized cores designed to accelerate certain application or system functions. A second trend, designed to make it easier to map a wide variety of functions and components to manycore platforms, is platform-level support for system virtualization. This research innovates, implements, and evaluates new virtualization technologies for heterogeneous manycore architectures composed of commodity general-purpose and accelerator cores. The goal is to realize an efficient execution environment for composing and executing a range of computationally and data-intensive applications.&lt;br/&gt;&lt;br/&gt;The system abstractions innovated include (i) the HVM (heterogeneous virtual machine) platform abstraction for dynamic composition of resources (e.g., cores, accelerators, memory, I/O) (ii) new methods for managing heterogeneous manycore resources, including power, and (iii) specialized execution environments for optimizing accelerator interactions. These components are implicitly integrated through an execution model wherein the same abstractions and mechanisms are used to dynamically manage diverse accelerator platforms, thereby realizing our vision of freely shared and customized platform resources provided to applications.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/20/2009</MinAmdLetterDate>
<MaxAmdLetterDate>07/30/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0905459</AwardID>
<Investigator>
<FirstName>Karsten</FirstName>
<LastName>Schwan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Karsten Schwan</PI_FULL_NAME>
<EmailAddress>schwan@cc.gatech.edu</EmailAddress>
<PI_PHON>4048942589</PI_PHON>
<NSF_ID>000216799</NSF_ID>
<StartDate>08/20/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Sudhakar</FirstName>
<LastName>Yalamanchili</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sudhakar Yalamanchili</PI_FULL_NAME>
<EmailAddress>sudha@ece.gatech.edu</EmailAddress>
<PI_PHON>4048942940</PI_PHON>
<NSF_ID>000161439</NSF_ID>
<StartDate>08/20/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ada</FirstName>
<LastName>Gavrilovska</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ada Gavrilovska</PI_FULL_NAME>
<EmailAddress>ada@cc.gatech.edu</EmailAddress>
<PI_PHON>4048940387</PI_PHON>
<NSF_ID>000494213</NSF_ID>
<StartDate>08/20/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jeffrey</FirstName>
<LastName>Vetter</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jeffrey S Vetter</PI_FULL_NAME>
<EmailAddress>vetter@tennessee.edu</EmailAddress>
<PI_PHON>8659743461</PI_PHON>
<NSF_ID>000246878</NSF_ID>
<StartDate>08/20/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia Tech Research Corporation</Name>
<CityName>Atlanta</CityName>
<ZipCode>303320420</ZipCode>
<PhoneNumber>4048944819</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>GA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>097394084</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGIA TECH RESEARCH CORPORATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>097394084</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Georgia Institute of Technology]]></Name>
<CityName>Atlanta</CityName>
<StateCode>GA</StateCode>
<ZipCode>303320002</ZipCode>
<StreetAddress><![CDATA[225 NORTH AVE NW]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>GA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>6892</Code>
<Text>CI REUSE</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>6892</Code>
<Text>CI REUSE</Text>
</ProgramReference>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~1090132</FUND_OBLG>
<FUND_OBLG>2010~16000</FUND_OBLG>
<FUND_OBLG>2011~199447</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project addressed challenges stemming from fundamental trends re-shaping the high performance and enterprise computing landscape. First, with multicore architectures, performance scaling is being achieved both with the increased replication of general purpose processing cores and by small footprint, low power, customized accelerators like graphics processors (GPUs). This has led to the emergence of heterogeneous many-core platforms -- systems comprised of general purpose intermingled with customized cores, jointly using diverse memory and cache hierarchies, the latter both on chip as well as in rack scale and multi-rack scale systems. Second, with virtualization technologies, new opportunities are created for exploiting the many cores present in current and future platforms, via their shared use by consolidated workloads. The combination of heterogeneous many-core architectures and ubiquitous resource virtualization has had a disruptive impact on the systems software required for future many-core systems.&nbsp;</p> <p>In response to these trends, this research contributed new virtualization technologies for heterogeneous many-core architectures. The goal was to realize an efficient execution environment for computationally and/or data-intensive applications. Toward this end, the project defined and evaluated a novel execution model for applications running on heterogeneous machines. The model defines the computational objects and associated metadata that are produced by the compilation environment and based on these descriptions, determines how these objects are executed by the underlying hardware. The model&rsquo;s execution environment is based on the virtualization of accelerator and general-purpose hardware resources, to create heterogeneous virtual machines (HVMs). HVMs serve as the principal abstraction for the dynamic and customized composition of core, accelerator, memory and I/O resources, and they are mapped and scheduled onto physical resources by the execution environment. The execution environment, therefore, presents virtual platforms -- HVMs &ndash; to applications, where HVMs can be created and composed dynamically, their mappings to resources controlled and managed by platform virtualization technologies, thereby realizing our vision of freely shared and customized platform resources provided to applications.</p> <p>Specific outcomes of this project included:</p> <p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; delivering the HVM infrastructure in the form of a runtime and extensions to the open source virtual machine monitor (Xen) targeted to commodity processors (x86) and accelerators (e.g., NVIDIA GPUs) and receptive to modern compilation toolchains;</p> <p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; development of resource monitoring and management methods that efficiently deal with various degrees of resource asymmetry and heterogeneity, and achieve high levels of application performance joint with high levels of resource utilization and/or desired application/VM-level SLAs;</p> <p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a flexible runtime system, programming model, and accompanying tools permitting instrumentation, profiling, and/or translation of application execution contexts from one type of platform resources (e.g., GPU), to another (e.g., CPU), so as to deal with potential mismatches between the types of resources required by the HVM application vs. the available underlying hardware;</p> <p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; software infrastructure to permit disaggregated heterogeneous resources to be consolidated into a unified platform, capable of execution of codes with requirements for compute, accelerators, or memory which exceed the limitations posed by single machines or single coherence domains;</p> <p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mechanisms to deal with memory heterogeneity beyond NUMAness, i.e., beyond memory differentiated as...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project addressed challenges stemming from fundamental trends re-shaping the high performance and enterprise computing landscape. First, with multicore architectures, performance scaling is being achieved both with the increased replication of general purpose processing cores and by small footprint, low power, customized accelerators like graphics processors (GPUs). This has led to the emergence of heterogeneous many-core platforms -- systems comprised of general purpose intermingled with customized cores, jointly using diverse memory and cache hierarchies, the latter both on chip as well as in rack scale and multi-rack scale systems. Second, with virtualization technologies, new opportunities are created for exploiting the many cores present in current and future platforms, via their shared use by consolidated workloads. The combination of heterogeneous many-core architectures and ubiquitous resource virtualization has had a disruptive impact on the systems software required for future many-core systems.   In response to these trends, this research contributed new virtualization technologies for heterogeneous many-core architectures. The goal was to realize an efficient execution environment for computationally and/or data-intensive applications. Toward this end, the project defined and evaluated a novel execution model for applications running on heterogeneous machines. The model defines the computational objects and associated metadata that are produced by the compilation environment and based on these descriptions, determines how these objects are executed by the underlying hardware. The modelÆs execution environment is based on the virtualization of accelerator and general-purpose hardware resources, to create heterogeneous virtual machines (HVMs). HVMs serve as the principal abstraction for the dynamic and customized composition of core, accelerator, memory and I/O resources, and they are mapped and scheduled onto physical resources by the execution environment. The execution environment, therefore, presents virtual platforms -- HVMs &ndash; to applications, where HVMs can be created and composed dynamically, their mappings to resources controlled and managed by platform virtualization technologies, thereby realizing our vision of freely shared and customized platform resources provided to applications.  Specific outcomes of this project included:  -       delivering the HVM infrastructure in the form of a runtime and extensions to the open source virtual machine monitor (Xen) targeted to commodity processors (x86) and accelerators (e.g., NVIDIA GPUs) and receptive to modern compilation toolchains;  -       development of resource monitoring and management methods that efficiently deal with various degrees of resource asymmetry and heterogeneity, and achieve high levels of application performance joint with high levels of resource utilization and/or desired application/VM-level SLAs;  -       a flexible runtime system, programming model, and accompanying tools permitting instrumentation, profiling, and/or translation of application execution contexts from one type of platform resources (e.g., GPU), to another (e.g., CPU), so as to deal with potential mismatches between the types of resources required by the HVM application vs. the available underlying hardware;  -       software infrastructure to permit disaggregated heterogeneous resources to be consolidated into a unified platform, capable of execution of codes with requirements for compute, accelerators, or memory which exceed the limitations posed by single machines or single coherence domains;  -       mechanisms to deal with memory heterogeneity beyond NUMAness, i.e., beyond memory differentiated as ``slower/closer'' vs. ``faster/farther'', to also consider the presence of persistent memory -- storage class memory (SCM) like NVRAM -- as envisioned for future exascale systems; and  -       characterization of application behavior to drive the efficient use of ...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

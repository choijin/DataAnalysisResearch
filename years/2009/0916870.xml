<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>RI: Small: Cooperative Coevolutionary Design and Multiagent Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>455000.00</AwardTotalIntnAmount>
<AwardAmount>501000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Todd Leen</SignBlockName>
<PO_EMAI>tleen@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Cooperative coevolution is a potent approach to doing large-scale stochastic optimization. The unsolved game-theoretic challenges inherent in this computational method are complex and of significant interest to the evolutionary computation community. This project is advancing the state of the art in coevolution and is applying it to significantly larger problems than commonly found in the literature. These challenges, and their solution, have potentially transformative impact on other co-adaptive environments such as multiagent reinforcement learning, estimation of distribution algorithms, agent modeling, and swarm robotics. Coevolution has strong applicability to fields that use multiagent system models, including multirobotics, biology, economics, land use, and political science. Better models in these fields can positively affect society, policy, homeland security, and the environment.</AbstractNarration>
<MinAmdLetterDate>09/06/2009</MinAmdLetterDate>
<MaxAmdLetterDate>05/07/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0916870</AwardID>
<Investigator>
<FirstName>Sean</FirstName>
<LastName>Luke</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sean Luke</PI_FULL_NAME>
<EmailAddress>sean@cs.gmu.edu</EmailAddress>
<PI_PHON>7039934169</PI_PHON>
<NSF_ID>000239818</NSF_ID>
<StartDate>09/06/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>George Mason University</Name>
<CityName>FAIRFAX</CityName>
<ZipCode>220304422</ZipCode>
<PhoneNumber>7039932295</PhoneNumber>
<StreetAddress>4400 UNIVERSITY DR</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
<CONGRESSDISTRICT>11</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>VA11</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>077817450</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGE MASON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>077817450</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[George Mason University]]></Name>
<CityName>FAIRFAX</CityName>
<StateCode>VA</StateCode>
<ZipCode>220304422</ZipCode>
<StreetAddress><![CDATA[4400 UNIVERSITY DR]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>11</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>VA11</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7495</Code>
<Text>Robust Intelligence</Text>
</ProgramElement>
<ProgramReference>
<Code>7495</Code>
<Text>ROBUST INTELLIGENCE</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~455000</FUND_OBLG>
<FUND_OBLG>2010~16000</FUND_OBLG>
<FUND_OBLG>2011~8000</FUND_OBLG>
<FUND_OBLG>2012~16000</FUND_OBLG>
<FUND_OBLG>2013~6000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In a multiagent system, multiple computational entities (so-called "agents" -- such as robots or artificial intelligence programs) interact in complex ways, often stepping on each other's toes as they trie to achieve their goals. &nbsp;For example, if you have many mobile robots in a warehouse ferrying goods here and there, they must coordinate to avoid crashing into one another or taking each others' goods. &nbsp;The more agents involved, and the more interactions they have, the more difficult the problem. &nbsp;Our work involved multiple agents learning to coordinate with one another, or being collectively trained by a human, to perform a collective task.</p> <p>There are various ways you can go about this. &nbsp;One part of the research work examined a multiagent version of evolutionary optimization techniques, commonly known as "cooperative coevolutionary algorithms" or CCEAs. &nbsp;CCEAs promise to be far more efficient than regular evolutionary optimization, but the poor interaction among the multiple agents can cause the them to fail badly. &nbsp;We developed new approaches to minimize this likelihood.</p> <p>Our work led to the development of various methods for controlling potentially large groups of agents or robots as they negotiate with one another. &nbsp;In particular, we developed a method called M-HiTAB, which allows us to train warms of robots or agents to collaborate on tasks. &nbsp;This training is done by a human actually demonstrating the desired task for the robots to observe. &nbsp;For example, we can train a team of humanoid robots how to play soccer; or train firefighting robots how to work together in a diaster such as a leaking nuclear power plant. &nbsp;This mehod, which we believe is the best among its peers in this area, has since garnered a follow-on NSF grant.</p> <p>We have also examined how to create economies of favors among multiple agents to ease negotiation; developed new multiagent algorithms for controlling traffic lights, and to use embedded markers for robot navigation; and have criticized and developed new benchmarks in the field. &nbsp;</p> <p>The work has very significantly extended and improved two free and open-source software packages which we developed and which are widely used. &nbsp;The ECJ evolutionary computation library is the most commonly used such package in the world, and the MASON multiagent simulation toolkit is a well-regarded high-performance go-to package for large "swarm"-style simulation. &nbsp;Both of these packages are used in multiple other NSF-funded grants in areas ranging from computational biology to the social sciences to robotics and computer science. &nbsp;Each of the packages is over 80,000 lines of code, and has an over 300 page manual.</p> <p>The work has broad impact well beyond computer science. &nbsp;Multiagent simulations are used widely in biology, the social sciences, arts and animation, the military, disaster relief, security, and public policy. &nbsp;For example, we personally collaborate with social scientists from other universities and from the Smithsonian Institution to develop and optimize models of economies, farmer and herder conflicts in Africa, fish schools and coral reefs, and methods for improving vehicular traffic flow.</p> <p>The work has resulted in a free, downloadable 250-page book called Essentials of Metaheuristics, aimed to teach stochastic and multiagent optimization methods to laymen, basic programmers, and undergraduate students.&nbsp;</p><br> <p>            Last Modified: 10/23/2013<br>      Modified by: Sean&nbsp;Luke</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In a multiagent system, multiple computational entities (so-called "agents" -- such as robots or artificial intelligence programs) interact in complex ways, often stepping on each other's toes as they trie to achieve their goals.  For example, if you have many mobile robots in a warehouse ferrying goods here and there, they must coordinate to avoid crashing into one another or taking each others' goods.  The more agents involved, and the more interactions they have, the more difficult the problem.  Our work involved multiple agents learning to coordinate with one another, or being collectively trained by a human, to perform a collective task.  There are various ways you can go about this.  One part of the research work examined a multiagent version of evolutionary optimization techniques, commonly known as "cooperative coevolutionary algorithms" or CCEAs.  CCEAs promise to be far more efficient than regular evolutionary optimization, but the poor interaction among the multiple agents can cause the them to fail badly.  We developed new approaches to minimize this likelihood.  Our work led to the development of various methods for controlling potentially large groups of agents or robots as they negotiate with one another.  In particular, we developed a method called M-HiTAB, which allows us to train warms of robots or agents to collaborate on tasks.  This training is done by a human actually demonstrating the desired task for the robots to observe.  For example, we can train a team of humanoid robots how to play soccer; or train firefighting robots how to work together in a diaster such as a leaking nuclear power plant.  This mehod, which we believe is the best among its peers in this area, has since garnered a follow-on NSF grant.  We have also examined how to create economies of favors among multiple agents to ease negotiation; developed new multiagent algorithms for controlling traffic lights, and to use embedded markers for robot navigation; and have criticized and developed new benchmarks in the field.    The work has very significantly extended and improved two free and open-source software packages which we developed and which are widely used.  The ECJ evolutionary computation library is the most commonly used such package in the world, and the MASON multiagent simulation toolkit is a well-regarded high-performance go-to package for large "swarm"-style simulation.  Both of these packages are used in multiple other NSF-funded grants in areas ranging from computational biology to the social sciences to robotics and computer science.  Each of the packages is over 80,000 lines of code, and has an over 300 page manual.  The work has broad impact well beyond computer science.  Multiagent simulations are used widely in biology, the social sciences, arts and animation, the military, disaster relief, security, and public policy.  For example, we personally collaborate with social scientists from other universities and from the Smithsonian Institution to develop and optimize models of economies, farmer and herder conflicts in Africa, fish schools and coral reefs, and methods for improving vehicular traffic flow.  The work has resulted in a free, downloadable 250-page book called Essentials of Metaheuristics, aimed to teach stochastic and multiagent optimization methods to laymen, basic programmers, and undergraduate students.        Last Modified: 10/23/2013       Submitted by: Sean Luke]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

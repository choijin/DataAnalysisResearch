<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: GoldMine:Automatic Assertion Generation in System Design Using Data Mining and Static Analysis</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/15/2010</AwardEffectiveDate>
<AwardExpirationDate>02/28/2015</AwardExpirationDate>
<AwardTotalIntnAmount>430000.00</AwardTotalIntnAmount>
<AwardAmount>430000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>CAREER: GoldMine:Automatic Assertion Generation in System Design Using Data Mining and Static Analysis&lt;br/&gt;Shobha Vasudevan&lt;br/&gt;University of Illinois at Urbana Champaign&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Assertions are summarized statements of design intent that have emerged as the most popular checking artifacts in hardware and software development cycles. In hardware, assertions are used in formal verification, dynamic verification, runtime monitoring, emulation, post-Silicon debug and in-field diagnosis. The generation of assertions today is an intensely manual task. During each system development cycle, many man-months and resources are spent in assertion generation. This work proposes an automatic assertion generation technique and tool, GoldMine, for systems using data mining and static analysis in combination. Data mining infers knowledge by statistical analysis of dynamic behavior of a system. Static analysis reasons with the source code or model of the system without executing it, and analyzes possible behavior. These two technologies can be used synergisti-&lt;br/&gt;cally. Static analysis techniques can be used to infer domain information and guide the data mining. GoldMine will provide simulation data of the target design along with static analysis to a suite of data mining algorithms that will infer ?likely invariants?. The likely invariants will be passed through a formal verifier for filtering the true assertions. Feedback from formal verification will be given to the mining algorithms, as will the designer/user evaluation of the generated assertions. This iterative process will produce high quality assertions automatically. Preliminary results have been obtained on Rigel, a 1000+ processor RTL. &lt;br/&gt;&lt;br/&gt;The marriage between statistical and static analyses proposed here for generating knowledge about a system is a ?meta technique? that can be used in a multitude of forms. A systematic methodology to extract and provide domain knowledge in any structured system, along with statistics based learning techniques can create a very powerful combination. The alliance of static domain analysis and statistical data mining that has been introduced can be used for software systems, embedded systems and other domains where knowledge needs to be inferred.&lt;br/&gt;&lt;br/&gt;This proposal seeks to automate a manual, all-pervasive system process. This aims at saving economic and human resources, thereby increasing the productivity of the community. GoldMine will also be widely disseminated (along with the source code) for research and education purposes, contributing to practical learning of students. The merit in the system design world is that we are proposing to study and systematize the human cognition aspect of design.</AbstractNarration>
<MinAmdLetterDate>03/16/2010</MinAmdLetterDate>
<MaxAmdLetterDate>07/01/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0953767</AwardID>
<Investigator>
<FirstName>Shobha</FirstName>
<LastName>Vasudevan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shobha Vasudevan</PI_FULL_NAME>
<EmailAddress>shobhav@illinois.edu</EmailAddress>
<PI_PHON>2173332187</PI_PHON>
<NSF_ID>000527204</NSF_ID>
<StartDate>03/16/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>Champaign</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207406</ZipCode>
<StreetAddress><![CDATA[1901 South First Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramElement>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~84275</FUND_OBLG>
<FUND_OBLG>2011~83445</FUND_OBLG>
<FUND_OBLG>2012~85650</FUND_OBLG>
<FUND_OBLG>2013~87930</FUND_OBLG>
<FUND_OBLG>2014~88700</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Computers are ubiquitous in our world. Cars, phones, biomedical, health monitoring, thermostats, refrigerators- physical objects that inhabited our world are getting &ldquo;smarter&rdquo; by the day. This smartness usually comes from computer chips populating the devices, on which computation, control and information processing can be achieved. Whether in PCs, servers, mobile devices and cyberphysical systems, computer chips need to be designed for low power, high speed, correct functionality and minimal area to meet the needs of the application. Chip design has consequently become seminal to the functioning and progress of today&rsquo;s society. Chip design involves several phases including architecture, pre-Silicon verification, validation, testing and post-Si validation.</p> <p>The outcome of the research is GoldMine, a software tool for chip design verification. GoldMine automates a significant part of the verification phase of the chip design cycle- automatic assertion generation. Engineers spend numerous man-months in the verification phase of design (about 70% of resources and time are spent on verification and only 30% on the actual design itself). In particular, design and verification engineers who are not trained in mathematical logic spend a lot of time on generating assertions manually. Assertions are artifacts that can check if the needs of the application (specification) are truly being met by the design. Given the size of today&rsquo;s designs (several millions to several billions of gates), analyzing the entire design is humanly impossible. Doing it in parts results in lack of quality assurance in the design.</p> <p>GoldMine automates this manual process very effectively. It uses advanced machine learning and data analytics methods to identify relevant and useful assertions. It has been engineered to generate succinct, important and human comprehensible assertions, so the design engineer can apply them. It has an elaborate ranking scheme that ranks assertions according to their goodness. GoldMine is also engineered to generate complicated and corner case assertions by analyzing the entire design. The value addition by GoldMine is in expediting the design verification process, generating rare and corner case information about the large design for designers, and ensuring higher quality assurance of the design. &nbsp;GoldMine has also been applied to mobile systems for diagnostics of performance failures. Several bugs were detected and diagnosed in an industrial mobile system using GoldMine, with a 1000X speedup over their current practices.</p> <p>Intellectual merit: GoldMine&rsquo;s solutions have been widely published in the design automation research conferences and journals. The GoldMine project has led to the &ldquo;GoldMine principle&rdquo;, a way to combine model based and data driven approaches for better data analytics. Products from this project have been published in data mining, software engineering and security communities. This principle is currently being applied to solve various societal issues in cybersecurity, biomedical and healthcare, as well as aviation and automobile industries. It is expected that the combination of model based and data driven approaches will provide more promising solutions in these domains, as opposed to the traditional statistical approaches to data analytics.</p> <p>Broader impact: GoldMine has had significant impact and adoption in contemporary industry. GoldMine has been patented by the University of Illinois at Urbana-Champaign (UIUC) and licensed by several electronic design automation companies. It has been prototyped as a product for one of the leading electronic design automation companies. Many other commercial software products in the same solution space have also been released since the inception of GoldMine. GoldMine has been licensed by and is currently used by numerous semiconductor, mobile dev...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Computers are ubiquitous in our world. Cars, phones, biomedical, health monitoring, thermostats, refrigerators- physical objects that inhabited our world are getting "smarter" by the day. This smartness usually comes from computer chips populating the devices, on which computation, control and information processing can be achieved. Whether in PCs, servers, mobile devices and cyberphysical systems, computer chips need to be designed for low power, high speed, correct functionality and minimal area to meet the needs of the application. Chip design has consequently become seminal to the functioning and progress of todayÆs society. Chip design involves several phases including architecture, pre-Silicon verification, validation, testing and post-Si validation.  The outcome of the research is GoldMine, a software tool for chip design verification. GoldMine automates a significant part of the verification phase of the chip design cycle- automatic assertion generation. Engineers spend numerous man-months in the verification phase of design (about 70% of resources and time are spent on verification and only 30% on the actual design itself). In particular, design and verification engineers who are not trained in mathematical logic spend a lot of time on generating assertions manually. Assertions are artifacts that can check if the needs of the application (specification) are truly being met by the design. Given the size of todayÆs designs (several millions to several billions of gates), analyzing the entire design is humanly impossible. Doing it in parts results in lack of quality assurance in the design.  GoldMine automates this manual process very effectively. It uses advanced machine learning and data analytics methods to identify relevant and useful assertions. It has been engineered to generate succinct, important and human comprehensible assertions, so the design engineer can apply them. It has an elaborate ranking scheme that ranks assertions according to their goodness. GoldMine is also engineered to generate complicated and corner case assertions by analyzing the entire design. The value addition by GoldMine is in expediting the design verification process, generating rare and corner case information about the large design for designers, and ensuring higher quality assurance of the design.  GoldMine has also been applied to mobile systems for diagnostics of performance failures. Several bugs were detected and diagnosed in an industrial mobile system using GoldMine, with a 1000X speedup over their current practices.  Intellectual merit: GoldMineÆs solutions have been widely published in the design automation research conferences and journals. The GoldMine project has led to the "GoldMine principle", a way to combine model based and data driven approaches for better data analytics. Products from this project have been published in data mining, software engineering and security communities. This principle is currently being applied to solve various societal issues in cybersecurity, biomedical and healthcare, as well as aviation and automobile industries. It is expected that the combination of model based and data driven approaches will provide more promising solutions in these domains, as opposed to the traditional statistical approaches to data analytics.  Broader impact: GoldMine has had significant impact and adoption in contemporary industry. GoldMine has been patented by the University of Illinois at Urbana-Champaign (UIUC) and licensed by several electronic design automation companies. It has been prototyped as a product for one of the leading electronic design automation companies. Many other commercial software products in the same solution space have also been released since the inception of GoldMine. GoldMine has been licensed by and is currently used by numerous semiconductor, mobile devices and automobile companies.  GoldMine software is available for download at http://goldmine.csl.illinois.edu for research and acad...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

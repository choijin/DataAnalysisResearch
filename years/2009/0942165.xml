<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CCLI/Type1: VUE: A Versatile Unix Emulator of Embedded Systems for Software Oriented Students</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2010</AwardEffectiveDate>
<AwardExpirationDate>02/28/2014</AwardExpirationDate>
<AwardTotalIntnAmount>102934.00</AwardTotalIntnAmount>
<AwardAmount>102934</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Paul Tymann</SignBlockName>
<PO_EMAI>ptymann@nsf.gov</PO_EMAI>
<PO_PHON>7032922832</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computer Science (31)&lt;br/&gt;&lt;br/&gt;We are surrounded by embedded systems that use software to control devices in cars, appliances and cell phones.  There is a worldwide shortage of engineers with core skills for designing embedded systems.  Computer science students rarely have an opportunity to design meaningful software for embedded systems.  Investigators are developing a Versatile Unix Emulator (VUE) to address this need.  It is used to emulate four software architectures: round robin, round robin with interrupts, function queue scheduler and real-time operating system software.&lt;br/&gt;&lt;br/&gt;VUE creates an application with three groups of processes: 1) virtual input devices, 2) virtual output devices, and 3) control processes.  An instructor creates a laboratory exercise by specifying input, output devices and a scenario of events.  Students develop software to control the process of the embedded systems and must consider design trade-offs such as energy consumption and responsiveness.  VUE generates a rich and repeatable set of events that stress test student designs.  The automated random events create repeatable experiments to evaluate software quality.  &lt;br/&gt;&lt;br/&gt;Expected outcomes include the emulator and a collection of laboratory exercises. VUE is being piloted at Auburn University and Tuskegee University.  Workshops are provided to train faculty how to adopt the materials. &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>02/25/2010</MinAmdLetterDate>
<MaxAmdLetterDate>02/25/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0942165</AwardID>
<Investigator>
<FirstName>Saad</FirstName>
<LastName>Biaz</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Saad Biaz</PI_FULL_NAME>
<EmailAddress>biazsaa@auburn.edu</EmailAddress>
<PI_PHON>3348446307</PI_PHON>
<NSF_ID>000491835</NSF_ID>
<StartDate>02/25/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Auburn University</Name>
<CityName>Auburn</CityName>
<ZipCode>368320001</ZipCode>
<PhoneNumber>3348444438</PhoneNumber>
<StreetAddress>VPRED, Research &amp; Innovation Ctr</StreetAddress>
<StreetAddress2><![CDATA[540 Devall Drive, Suite 200]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Alabama</StateName>
<StateCode>AL</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>AL03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>066470972</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>AUBURN UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>066470972</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Auburn University]]></Name>
<CityName>Auburn</CityName>
<StateCode>AL</StateCode>
<ZipCode>368320001</ZipCode>
<StreetAddress><![CDATA[VPRED, Research &amp; Innovation]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Alabama</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>AL03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0116000</Code>
<Name>Human Subjects</Name>
</FoaInformation>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7494</Code>
<Text>CCLI-Type 1 (Exploratory)</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0410</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~102934</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The objective of this project was to create hands on laboratory exercises for software engineering students that <strong>educate</strong> them to design software for time and energy critical embedded systems. This grant allowed us to design the versatile Unix Emulator (<strong>VUE</strong>) with &nbsp;four hands on laboratory exercises increasingly complex addressing more challening systems. These laboratory exercises were tested and refined with four cohortes of students (125 students in total). For each laboratory exercise, students were surveyed for feedback to improve the exercises for future cohortes.&nbsp;</p> <p>The VUE tool produced by this grant allowed:</p> <p>1) to challenge students with systems having different time/energy requirements</p> <p>2) students to test their code for correctness and performance (how well they meet time and energy requirements)</p> <p>3) the instructor to create laboratory exercises with different levels of requirements</p> <p>4) the instructor to evaluate and grade the software designed and implemented by the students.</p> <p>This tool is unique in the sense that it focuses on educating students rather than training them to work with some kit development, assembly language, &nbsp;or platform. This tool allows to focus of all issues that arise when designing embedded systems.</p> <p>Year after year, the VUE system was improved based on students' feedback. In the next cycle, the PI plans to augment this education with projects using platforms selected by the students.</p> <p>&nbsp;</p> <p>VUE educated many students who are today in the workforce. Many students who took this course with these hands-on laboratory exercises got hired by some of the best US compagnies (Apple, Cisco, Intel, Amazon) to work with design &nbsp;teams on embedded systems development.&nbsp;</p><br> <p>            Last Modified: 06/09/2014<br>      Modified by: Saad&nbsp;Biaz</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The objective of this project was to create hands on laboratory exercises for software engineering students that educate them to design software for time and energy critical embedded systems. This grant allowed us to design the versatile Unix Emulator (VUE) with  four hands on laboratory exercises increasingly complex addressing more challening systems. These laboratory exercises were tested and refined with four cohortes of students (125 students in total). For each laboratory exercise, students were surveyed for feedback to improve the exercises for future cohortes.   The VUE tool produced by this grant allowed:  1) to challenge students with systems having different time/energy requirements  2) students to test their code for correctness and performance (how well they meet time and energy requirements)  3) the instructor to create laboratory exercises with different levels of requirements  4) the instructor to evaluate and grade the software designed and implemented by the students.  This tool is unique in the sense that it focuses on educating students rather than training them to work with some kit development, assembly language,  or platform. This tool allows to focus of all issues that arise when designing embedded systems.  Year after year, the VUE system was improved based on students' feedback. In the next cycle, the PI plans to augment this education with projects using platforms selected by the students.     VUE educated many students who are today in the workforce. Many students who took this course with these hands-on laboratory exercises got hired by some of the best US compagnies (Apple, Cisco, Intel, Amazon) to work with design  teams on embedded systems development.        Last Modified: 06/09/2014       Submitted by: Saad Biaz]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

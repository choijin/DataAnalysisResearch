<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Clause Generation: A New Perspective on Parallel Symbolic Model Checking</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/01/2010</AwardEffectiveDate>
<AwardExpirationDate>02/29/2012</AwardExpirationDate>
<AwardTotalIntnAmount>495000.00</AwardTotalIntnAmount>
<AwardAmount>123904</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Symbolic finite-state model checking is a technique for analyzing properties of computational systems. This project rethinks symbolic model checking to achieve scalable performance on multi-core and networked computers. Current attempts to parallelize model checking use standard algorithms and techniques, but this project takes a new approach in which parallel threads share Boolean clauses, which are lemmas of the final proof.  It is hypothesized that such clauses represent the appropriate quantum of shared information for parallelization: neither so simple as to cause excessive communication, nor so complex as to cause threads to duplicate work.  If the hypothesis is correct, implementations will achieve near-linear scaling with the number of computer cores.  The work also investigates the tradeoffs between verifying correctness of properties versus checking properties for counterexamples, exploring performance implications of the tradeoffs.&lt;br/&gt;&lt;br/&gt;Symbolic model checking has applications in a wide range of areas, from verifying sequential circuits and security protocols to analyzing biological processes.  Advances in model checking allow one to analyze systems of increasingly higher complexity.  The project will integrate research and education by developing curriculum that increases the workforce's proficiency in logic, as well as develop educational material on computational thinking for secondary school students.</AbstractNarration>
<MinAmdLetterDate>12/31/2009</MinAmdLetterDate>
<MaxAmdLetterDate>10/03/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0952617</AwardID>
<Investigator>
<FirstName>Aaron</FirstName>
<LastName>Bradley</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Aaron R Bradley</PI_FULL_NAME>
<EmailAddress>aaron.r.bradley@colorado.edu</EmailAddress>
<PI_PHON>3034928767</PI_PHON>
<NSF_ID>000499791</NSF_ID>
<StartDate>12/31/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Colorado at Boulder</Name>
<CityName>Boulder</CityName>
<ZipCode>803031058</ZipCode>
<PhoneNumber>3034926221</PhoneNumber>
<StreetAddress>3100 Marine Street, Room 481</StreetAddress>
<StreetAddress2><![CDATA[572 UCB]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Colorado</StateName>
<StateCode>CO</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CO02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>007431505</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF COLORADO, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>007431505</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Colorado at Boulder]]></Name>
<CityName>Boulder</CityName>
<StateCode>CO</StateCode>
<ZipCode>803031058</ZipCode>
<StreetAddress><![CDATA[3100 Marine Street, Room 481]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Colorado</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CO02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~94258</FUND_OBLG>
<FUND_OBLG>2011~29646</FUND_OBLG>
<FUND_OBLG>2012~0</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project resulted most significantly in the invention of the IC3 algorithm for model checking properties of computer designs. &nbsp;Scalable model checking contributes to the overall robustness of&nbsp;computer hardware designs, yielding safe hardware on which to build&nbsp;cyber-physical systems such as medical equipment, automobiles, and&nbsp;communication networks. &nbsp;Chip designers also gain efficiency through&nbsp;decreased testing costs.</p> <p><span>In the computer hardware industry, hardware model checking complements&nbsp;</span><span>testing by offering the assurance of proof. &nbsp;However, model checking&nbsp;</span><span>is a notoriously hard problem. &nbsp;The method pioneered in the IC3 model&nbsp;</span><span>checker exploits two complementary sources of scalability to enable&nbsp;</span><span>the use of formal methods on larger designs: property-focused&nbsp;</span><span>abstraction and parallel execution. &nbsp;IC3 generates many local&nbsp;</span><span>intermediate lemmas on its way to a proof, and in so doing focuses its&nbsp;</span><span>attention on aspects of the design relevant to proving the property. &nbsp;</span><span>Additionally, IC3 distributes the task of discovering the intermediate&nbsp;</span><span>lemmas among communicating processors, exhibiting performance that&nbsp;</span><span>scales linearly with the number of processors.</span></p> <p>The algorithm has had a significant impact. &nbsp;<span>IC3 demonstrates a breakthrough in hardware model checking. &nbsp;In the&nbsp;</span><span>2010 Hardware Model Checking Competition (HWMCC'10), IC3 placed third,&nbsp;</span><span>"marginally outperformed by two mature integrated verification&nbsp;</span><span>systems.... &nbsp;[It] appears to be the most important contribution to&nbsp;</span><span>bit-level formal verification in almost a decade," according to a&nbsp;</span><span>leading research group at UC Berkeley. &nbsp;</span>After IC3's performance at HWMCC'10, R&amp;D teams at IBM, Cadence, and&nbsp;Microsoft Research, among others, as well as academic teams around the&nbsp;world have implemented the algorithm. &nbsp;They report that the method&nbsp;succeeds on properties and designs that existing techniques are unable&nbsp;to solve.</p> <p>Follow-up work by the inventor and collaborators, which extends the approach to other types of temporal properties, won the best paper award at FMCAD 2011. &nbsp;And IC3 itself just won the HVC Award for 2012, which "recognizes the most promising academic and industrial contribution to the fields of testing and software and hardware verification from the last five years."</p><br> <p>            Last Modified: 10/24/2012<br>      Modified by: Aaron&nbsp;R&nbsp;Bradley</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project resulted most significantly in the invention of the IC3 algorithm for model checking properties of computer designs.  Scalable model checking contributes to the overall robustness of computer hardware designs, yielding safe hardware on which to build cyber-physical systems such as medical equipment, automobiles, and communication networks.  Chip designers also gain efficiency through decreased testing costs.  In the computer hardware industry, hardware model checking complements testing by offering the assurance of proof.  However, model checking is a notoriously hard problem.  The method pioneered in the IC3 model checker exploits two complementary sources of scalability to enable the use of formal methods on larger designs: property-focused abstraction and parallel execution.  IC3 generates many local intermediate lemmas on its way to a proof, and in so doing focuses its attention on aspects of the design relevant to proving the property.  Additionally, IC3 distributes the task of discovering the intermediate lemmas among communicating processors, exhibiting performance that scales linearly with the number of processors.  The algorithm has had a significant impact.  IC3 demonstrates a breakthrough in hardware model checking.  In the 2010 Hardware Model Checking Competition (HWMCC'10), IC3 placed third, "marginally outperformed by two mature integrated verification systems....  [It] appears to be the most important contribution to bit-level formal verification in almost a decade," according to a leading research group at UC Berkeley.  After IC3's performance at HWMCC'10, R&amp;D teams at IBM, Cadence, and Microsoft Research, among others, as well as academic teams around the world have implemented the algorithm.  They report that the method succeeds on properties and designs that existing techniques are unable to solve.  Follow-up work by the inventor and collaborators, which extends the approach to other types of temporal properties, won the best paper award at FMCAD 2011.  And IC3 itself just won the HVC Award for 2012, which "recognizes the most promising academic and industrial contribution to the fields of testing and software and hardware verification from the last five years."       Last Modified: 10/24/2012       Submitted by: Aaron R Bradley]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>HCC: Medium: Collaborative Research: Data-Parallel Hash Tables: Theory, Practice and Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>532084.00</AwardTotalIntnAmount>
<AwardAmount>532084</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ephraim Glinert</SignBlockName>
<PO_EMAI>eglinert@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Parallel data structures and algorithms are becoming an increasingly important research area, due to the rapid advances in GPUs and other massively parallel commodity multi-core hardware along with the software needed to program these devices.  In this collaborative effort involving the University of California at Davis and Harvard University, the PIs will focus on the design and implementation of parallel hash tables, one of the most fundamental of data structures, on the new platforms.  Real-time parallel hashing would enable a variety of graphics applications on dynamically changing data, including spatial hashing, surface and image matching, and hashed octrees which in turn enable a host of other applications including Boolean surface operations, point-cloud nearest neighbors, ray-tracing acceleration and photon mapping.  In prior work, the PIs built a baseline implementation that shows effective parallel hashing can be done on the GPU; they can construct the table as quickly as the fastest available radix sort, and can execute parallel random access on the elements much more quickly than binary search.  In the current research, the PIs plan to improve upon their baseline implementation significantly, while also focusing on related structures such as multi-maps and Bloom filters.  New designs and construction algorithms will be developed, implemented, and analyzed with respect to performance, and then applied to a variety of computer graphics applications. The PIs expect this work to lead to interesting theoretical results; modern hash table constructions have never been considered in the parallel context, so finding the right model for analysis is one goal of the research.&lt;br/&gt;&lt;br/&gt;Broader Impacts:  This project will contribute to the computing infrastructure, not only for computer graphics but also for general-purpose computation.  The PIs will distribute their implementations freely, in part by extending and building upon their existing (and popular) library of general-purpose data structures (the CUDA Data Parallel Primitives).  The PIs note that making the most of the  emerging parallel GPU resources requires training the next generation of programmers to think in parallel; therefore, they plan to exploit this project as an opportunity to revive a long-untaught undergraduate parallel programming course, in addition to studying parallel algorithms with their graduate students.</AbstractNarration>
<MinAmdLetterDate>06/24/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/24/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0964357</AwardID>
<Investigator>
<FirstName>Annamaria</FirstName>
<LastName>Amenta</LastName>
<PI_MID_INIT>B</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Annamaria B Amenta</PI_FULL_NAME>
<EmailAddress>amenta@cs.ucdavis.edu</EmailAddress>
<PI_PHON>5307545377</PI_PHON>
<NSF_ID>000206702</NSF_ID>
<StartDate>06/24/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>John</FirstName>
<LastName>Owens</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>John D Owens</PI_FULL_NAME>
<EmailAddress>jowens@ece.ucdavis.edu</EmailAddress>
<PI_PHON>5307544289</PI_PHON>
<NSF_ID>000377403</NSF_ID>
<StartDate>06/24/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Davis</Name>
<CityName>Davis</CityName>
<ZipCode>956186134</ZipCode>
<PhoneNumber>5307547700</PhoneNumber>
<StreetAddress>OR/Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[1850 Research Park Dr., Ste 300]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>047120084</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, DAVIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Davis]]></Name>
<CityName>Davis</CityName>
<StateCode>CA</StateCode>
<ZipCode>956186134</ZipCode>
<StreetAddress><![CDATA[OR/Sponsored Programs]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7453</Code>
<Text>GRAPHICS &amp; VISUALIZATION</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~532084</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Graphics Processing Units (GPUs) provide very powerful parallel programming hardware to laptops, workstations and clusters.&nbsp; But they are very difficult to program.&nbsp; So developing and distributing software libraries that solve basic sub-problems is particularly important in the GPU world.</p> <p>In this project, we mainly worked on two fundamental sub-problems: constructing hash tables and finding nearest-neighbors in a point cloud.&nbsp; Hash tables are a fundamental data structure for looking up data.&nbsp; We published the first library function that builds GPU hash tables.&nbsp; In the process, we discovered interesting things about the limits and capabilities of random access to memory on the GPU.</p> <p>Nearest-neighbors is an essential tool in 3D geometry processing and a machine learning algorithm for high dimensional data. Our three-dimensional nearest neighbor code on the GPU isolves the problem using a formerly purely theoretical algorithm based on sorting.&nbsp; Our high-dimension code is brute-force,&nbsp; since in high dimensions it is very difficult to beat brute force in practice. We use the latest GPU tricks to speed this up by a factor of two or more over other brute force implementations.</p> <p><br />We also wrote some applied GPU code for visualizing three-dimensional point clouds that come from LiDAR data taken from forests by airborne scanners.&nbsp; This is important data for ecologists and the current visualization techniques do not work well on this kind of data.</p> <p>We also taught developed and taught a course in parallel algorithms, interpreting much of the theoretical work from the 1980s in the light of current GPU, cluster and cloud parallelism.&nbsp; We supported three PhD students.</p><br> <p>            Last Modified: 12/23/2015<br>      Modified by: Annamaria&nbsp;B&nbsp;Amenta</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2015/0964357/0964357_10017624_1450922162101_forestTeaser--rgov-214x142.jpg" original="/por/images/Reports/POR/2015/0964357/0964357_10017624_1450922162101_forestTeaser--rgov-800width.jpg" title="Forest LiDAR point cloud visualization"><img src="/por/images/Reports/POR/2015/0964357/0964357_10017624_1450922162101_forestTeaser--rgov-66x44.jpg" alt="Forest LiDAR point cloud visualization"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Below, the original point cloud with color from a co-registered photograph.  The three-dimensional structure is hard to see; it is hard to even tell trees from grass. Above, we added silhouettes at depth discontinuities and shadows, bringing out the three-dimensional structure of the LiDAR data.</div> <div class="imageCredit">Lance Simons, UC Davis</div> <div class="imagePermisssions">Copyright owner is an institution with an existing agreement allowing use by NSF</div> <div class="imageSubmitted">Annamaria&nbsp;B&nbsp;Amenta</div> <div class="imageTitle">Forest LiDAR point cloud visualization</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Graphics Processing Units (GPUs) provide very powerful parallel programming hardware to laptops, workstations and clusters.  But they are very difficult to program.  So developing and distributing software libraries that solve basic sub-problems is particularly important in the GPU world.  In this project, we mainly worked on two fundamental sub-problems: constructing hash tables and finding nearest-neighbors in a point cloud.  Hash tables are a fundamental data structure for looking up data.  We published the first library function that builds GPU hash tables.  In the process, we discovered interesting things about the limits and capabilities of random access to memory on the GPU.  Nearest-neighbors is an essential tool in 3D geometry processing and a machine learning algorithm for high dimensional data. Our three-dimensional nearest neighbor code on the GPU isolves the problem using a formerly purely theoretical algorithm based on sorting.  Our high-dimension code is brute-force,  since in high dimensions it is very difficult to beat brute force in practice. We use the latest GPU tricks to speed this up by a factor of two or more over other brute force implementations.   We also wrote some applied GPU code for visualizing three-dimensional point clouds that come from LiDAR data taken from forests by airborne scanners.  This is important data for ecologists and the current visualization techniques do not work well on this kind of data.  We also taught developed and taught a course in parallel algorithms, interpreting much of the theoretical work from the 1980s in the light of current GPU, cluster and cloud parallelism.  We supported three PhD students.       Last Modified: 12/23/2015       Submitted by: Annamaria B Amenta]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

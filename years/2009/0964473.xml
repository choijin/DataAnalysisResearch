<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>HCC: Medium: Collaborative Research: Data-Parallel Hash Tables: Theory, Practice and Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2010</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>171095.00</AwardTotalIntnAmount>
<AwardAmount>171095</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ephraim Glinert</SignBlockName>
<PO_EMAI>eglinert@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Parallel data structures and algorithms are becoming an increasingly important research area, due to the rapid advances in GPUs and other massively parallel commodity multi-core hardware along with the software needed to program these devices.  In this collaborative effort involving the University of California at Davis and Harvard University, the PIs will focus on the design and implementation of parallel hash tables, one of the most fundamental of data structures, on the new platforms.  Real-time parallel hashing would enable a variety of graphics applications on dynamically changing data, including spatial hashing, surface and image matching, and hashed octrees which in turn enable a host of other applications including Boolean surface operations, point-cloud nearest neighbors, ray-tracing acceleration and photon mapping.  In prior work, the PIs built a baseline implementation that shows effective parallel hashing can be done on the GPU; they can construct the table as quickly as the fastest available radix sort, and can execute parallel random access on the elements much more quickly than binary search.  In the current research, the PIs plan to improve upon their baseline implementation significantly, while also focusing on related structures such as multi-maps and Bloom filters.  New designs and construction algorithms will be developed, implemented, and analyzed with respect to performance, and then applied to a variety of computer graphics applications. The PIs expect this work to lead to interesting theoretical results; modern hash table constructions have never been considered in the parallel context, so finding the right model for analysis is one goal of the research.&lt;br/&gt;&lt;br/&gt;Broader Impacts:  This project will contribute to the computing infrastructure, not only for computer graphics but also for general-purpose computation.  The PIs will distribute their implementations freely, in part by extending and building upon their existing (and popular) library of general-purpose data structures (the CUDA Data Parallel Primitives).  The PIs note that making the most of the  emerging parallel GPU resources requires training the next generation of programmers to think in parallel; therefore, they plan to exploit this project as an opportunity to revive a long-untaught undergraduate parallel programming course, in addition to studying parallel algorithms with their graduate students.</AbstractNarration>
<MinAmdLetterDate>06/24/2010</MinAmdLetterDate>
<MaxAmdLetterDate>05/21/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0964473</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Mitzenmacher</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME>Dr.</PI_SUFX_NAME>
<PI_FULL_NAME>Michael Mitzenmacher</PI_FULL_NAME>
<EmailAddress>michaelm@eecs.harvard.edu</EmailAddress>
<PI_PHON>6174967172</PI_PHON>
<NSF_ID>000439480</NSF_ID>
<StartDate>06/24/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Harvard University</Name>
<CityName>Cambridge</CityName>
<ZipCode>021385369</ZipCode>
<PhoneNumber>6174955501</PhoneNumber>
<StreetAddress>1033 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[5th Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>082359691</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PRESIDENT AND FELLOWS OF HARVARD COLLEGE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001963263</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Harvard University]]></Name>
<CityName>Cambridge</CityName>
<StateCode>MA</StateCode>
<ZipCode>021385369</ZipCode>
<StreetAddress><![CDATA[1033 MASSACHUSETTS AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7453</Code>
<Text>GRAPHICS &amp; VISUALIZATION</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~23339</FUND_OBLG>
<FUND_OBLG>2011~69586</FUND_OBLG>
<FUND_OBLG>2012~78170</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The project has successfully developed several novel hashing-based algorithms and data structures, several of which are already having an impact on practice.&nbsp; The project's initial work focused on building cuckoo hash tables on  GPUs (Graphical Processing Units), allowing rapid parallel construction.&nbsp; This work appeared in the Jade edition of GPU Computing Gems, and has spurred additional work in efficient basic data structures for GPUs.&nbsp; Later work moved toward the development of Invertible Bloom Lookup Tables (IBLTs), which corresponds to a sparse encoding of a set of items with many useful properties.&nbsp; In particular, it allows for very efficient data synchronization for distributed databases, when the differences between the data sets to be synchronized is small compared to the size of the data.&nbsp; IBLTs are already in demand, as there is a great deal of work in progress by others looking at how IBLTs might aid in reconciling Bitcoin blockchain transactions.&nbsp; IBLTs may become part of the standard Bitcoin development.&nbsp; Further work in this project has led to the initiation of new collaborations between the PI with a systems group at CMU, where one project has already led to improved Bloom filter constructions that are being considered at some technology companies.&nbsp;</p> <p>It should be emphasized that while this project has achieved the goal of designing useful hash-based algorithms and data structures for practice, it has also been successful in terms of the development of new theoretical analyses.&nbsp; Indeed, part of the success of the IBLT development has been the PI's work that allows one to analyze its performance.&nbsp; More recently, the PI and his graduate students have developed a theoretical analysis of parallel peeling algorithms related to several hash-based data structures, including IBLTs, that provides a strong mathematical foundation for future developments.&nbsp; This work was given the Best Paper prize at the Symposisum on Parallel Algorithms and Architectures.&nbsp;</p> <p>The project has had several broader impacts beyond the research described above.&nbsp; The grant was used to partially fund graduate student Justin Thaler, who received his PhD.&nbsp; Justin's work on verifiable computation has been recognized for its speed and effectiveness, and remains the most practical instantiation of verifiable computing methods known currently.&nbsp; The funding was also used to partially fund another graduate student.&nbsp; Work from this grant was presented in several lectures at a Summer School on Hashing held in Copenhagen in 2014.&nbsp; The grant has supported general writing meant to connect theory and practice in this space, including a chapter on practical randomized algorithms and data structures in the Computing Handbook, and the in-progress revision of the PIs book on randomized algorithms and probabilistic analysis.&nbsp; The project also helped support multiple undergraduate research projects.</p><br> <p>            Last Modified: 09/16/2015<br>      Modified by: Michael&nbsp;Mitzenmacher</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The project has successfully developed several novel hashing-based algorithms and data structures, several of which are already having an impact on practice.  The project's initial work focused on building cuckoo hash tables on  GPUs (Graphical Processing Units), allowing rapid parallel construction.  This work appeared in the Jade edition of GPU Computing Gems, and has spurred additional work in efficient basic data structures for GPUs.  Later work moved toward the development of Invertible Bloom Lookup Tables (IBLTs), which corresponds to a sparse encoding of a set of items with many useful properties.  In particular, it allows for very efficient data synchronization for distributed databases, when the differences between the data sets to be synchronized is small compared to the size of the data.  IBLTs are already in demand, as there is a great deal of work in progress by others looking at how IBLTs might aid in reconciling Bitcoin blockchain transactions.  IBLTs may become part of the standard Bitcoin development.  Further work in this project has led to the initiation of new collaborations between the PI with a systems group at CMU, where one project has already led to improved Bloom filter constructions that are being considered at some technology companies.   It should be emphasized that while this project has achieved the goal of designing useful hash-based algorithms and data structures for practice, it has also been successful in terms of the development of new theoretical analyses.  Indeed, part of the success of the IBLT development has been the PI's work that allows one to analyze its performance.  More recently, the PI and his graduate students have developed a theoretical analysis of parallel peeling algorithms related to several hash-based data structures, including IBLTs, that provides a strong mathematical foundation for future developments.  This work was given the Best Paper prize at the Symposisum on Parallel Algorithms and Architectures.   The project has had several broader impacts beyond the research described above.  The grant was used to partially fund graduate student Justin Thaler, who received his PhD.  Justin's work on verifiable computation has been recognized for its speed and effectiveness, and remains the most practical instantiation of verifiable computing methods known currently.  The funding was also used to partially fund another graduate student.  Work from this grant was presented in several lectures at a Summer School on Hashing held in Copenhagen in 2014.  The grant has supported general writing meant to connect theory and practice in this space, including a chapter on practical randomized algorithms and data structures in the Computing Handbook, and the in-progress revision of the PIs book on randomized algorithms and probabilistic analysis.  The project also helped support multiple undergraduate research projects.       Last Modified: 09/16/2015       Submitted by: Michael Mitzenmacher]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

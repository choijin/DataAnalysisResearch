<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CNS-NeTS:Medium: A Recursive Internet Architecture</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/01/2010</AwardEffectiveDate>
<AwardExpirationDate>04/30/2015</AwardExpirationDate>
<AwardTotalIntnAmount>559389.00</AwardTotalIntnAmount>
<AwardAmount>559389</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Joseph Lyles</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The current Internet architecture is built around layers of different functions, where the Network Layer provides a technology-independent abstraction on top of a large set of autonomous, heterogeneous networks. The Internet Protocol (IP) is one mechanism for achieving such an abstraction. By making the choice for a rudimentary "best-effort" service, the Internet has not been able to effectively respond to new requirements (security, manageability, wireless, mobility, and so forth.) The rigid structure of the current IP model has led to numerous ad hoc solutions that are either inefficient or incomplete.&lt;br/&gt;&lt;br/&gt;This project is aimed at developing a clean-slate Recursive Internet Architecture(RINA) that is based on the fundamental principle that networking is inter-process communication (IPC). In this model, application processes(APes) communicate via a distributed IPC facility. The IPC processes that make up this facility provide a protocol that implements an IPC mechanism, and a protocol for managing distributed IPC (routing, security and other management tasks). RINA views each IPC facility as a "private" network, thus it offers intrinsic security features. And it is recursive in that the IPC processes can themselves be APes requesting services from lower IPC facilities. This project will design and develop the repeating structures of RINA, along with various policies seen useful in support of security, multihoming, mobility, and manageability. The developed IPC mechanisms build upon recursive naming and addressing of IPC processes, separation of mechanism and policy, and isolating data transfer, control and management. The developed prototype will be tested on small and larger-scale testbeds.</AbstractNarration>
<MinAmdLetterDate>03/31/2010</MinAmdLetterDate>
<MaxAmdLetterDate>08/15/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0963974</AwardID>
<Investigator>
<FirstName>Abraham</FirstName>
<LastName>Matta</LastName>
<PI_MID_INIT>I</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Abraham I Matta</PI_FULL_NAME>
<EmailAddress>matta@bu.edu</EmailAddress>
<PI_PHON>6173581062</PI_PHON>
<NSF_ID>000231980</NSF_ID>
<StartDate>03/31/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Trustees of Boston University</Name>
<CityName>BOSTON</CityName>
<ZipCode>022151300</ZipCode>
<PhoneNumber>6173534365</PhoneNumber>
<StreetAddress>881 COMMONWEALTH AVE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>049435266</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF BOSTON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>049435266</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Trustees of Boston University]]></Name>
<CityName>BOSTON</CityName>
<StateCode>MA</StateCode>
<ZipCode>022151300</ZipCode>
<StreetAddress><![CDATA[881 COMMONWEALTH AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7363</Code>
<Text>RES IN NETWORKING TECH &amp; SYS</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~132117</FUND_OBLG>
<FUND_OBLG>2011~279826</FUND_OBLG>
<FUND_OBLG>2012~147446</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong><span style="text-decoration: underline;">Intellectual Merit:</span></strong> The Internet has expanded well beyond its original design, and over the years, ad hoc patches have rendered it much more difficult to manage and to make secure. This project developed a Recursive InterNetwork Architecture (RINA), a new architecture that builds on the fundamental principle that <em>networking is Inter-Process Communication (IPC) and only IPC</em>. As a consequence, RINA views the network as a collection of networks of communicating processes, rather than a network of &ldquo;boxes.&rdquo; A &ldquo;layer&rdquo;, or building block, in RINA is called a Distributed IPC Facility (DIF). A DIF constitutes a (virtual) network of communicating processes, which can recursively provide communication service to a higher layer (see figure). RINA separates mechanisms and policies, so all processes use the same mechanisms (i.e., &ldquo;how&rdquo; to communicate), but they may use different policies (i.e., &ldquo;what&rdquo; to do) in different layers over different scopes. RINA has a complete naming/addressing architecture where processes, not interfaces (connections), are named, so processes can freely move or migrate. And addresses are not static but relative to the layer in which the process resides, so a global address space is not needed. Each process employs only two policy-configurable protocols: a data transfer control protocol and an object-based management protocol. Given it is built on such fundamental foundations, RINA subsumes existing Future Internet Architecture (FIA) proposals and inherently supports security and manageability.</p> <p>&nbsp;</p> <p><strong><span style="text-decoration: underline;">Broader Impacts:</span></strong> This project developed ProtoRINA, a user-space prototype of RINA. ProtoRINA provides a framework with common mechanisms, so researchers do not have to implement these from scratch; rather they can focus on programming different policies (supported by user applications or network management applications). These (software-defined) policies include: routing traffic through virtualized network functions (e.g., a firewall running remotely in a data center), streaming video over low-jitter communication paths, controlling the level of traffic aggregation and service over different parts of the Internet, and explicitly authenticating users and controlling access to services. ProtoRINA offers several features: (i) it is not restricted to the Internet Protocol (IP), so it enables experimentation with new control and management applications; (ii) it can be used as a teaching tool by educators in networking and distributed systems classes; and (iii) it can be used to run real experiments, both on local-area networks and on wide-area network testbeds such as the Global Environment for Network Innovations (GENI). ProtoRINA (version 1.0) has been released since October 2013 and used to demonstrate the RINA architecture and its advantages, and also to experiment with different policies. A tutorial on running ProtoRINA on GENI was delivered at the GENI Engineering Conference (GEC19), and is available online (<a href="https://www.youtube.com/watch?v=qUDvduy-JEs">https://www.youtube.com/watch?v=qUDvduy-JEs</a>). The ProtoRINA code, along with its user / programmer&rsquo;s manual and other documentation, are available from a wiki page (<a href="http://csr.bu.edu/rina/protorina">http://csr.bu.edu/rina/protorina</a>). The theory behind RINA can guide the design and management of not only computer networks, but also distributed systems and applications, including data centers and cloud computing systems.</p><br> <p>            Last Modified: 07/07/2015<br>      Modified by: Abraham&nbsp;I&nbsp;Matta</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image      ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intellectual Merit: The Internet has expanded well beyond its original design, and over the years, ad hoc patches have rendered it much more difficult to manage and to make secure. This project developed a Recursive InterNetwork Architecture (RINA), a new architecture that builds on the fundamental principle that networking is Inter-Process Communication (IPC) and only IPC. As a consequence, RINA views the network as a collection of networks of communicating processes, rather than a network of "boxes." A "layer", or building block, in RINA is called a Distributed IPC Facility (DIF). A DIF constitutes a (virtual) network of communicating processes, which can recursively provide communication service to a higher layer (see figure). RINA separates mechanisms and policies, so all processes use the same mechanisms (i.e., "how" to communicate), but they may use different policies (i.e., "what" to do) in different layers over different scopes. RINA has a complete naming/addressing architecture where processes, not interfaces (connections), are named, so processes can freely move or migrate. And addresses are not static but relative to the layer in which the process resides, so a global address space is not needed. Each process employs only two policy-configurable protocols: a data transfer control protocol and an object-based management protocol. Given it is built on such fundamental foundations, RINA subsumes existing Future Internet Architecture (FIA) proposals and inherently supports security and manageability.     Broader Impacts: This project developed ProtoRINA, a user-space prototype of RINA. ProtoRINA provides a framework with common mechanisms, so researchers do not have to implement these from scratch; rather they can focus on programming different policies (supported by user applications or network management applications). These (software-defined) policies include: routing traffic through virtualized network functions (e.g., a firewall running remotely in a data center), streaming video over low-jitter communication paths, controlling the level of traffic aggregation and service over different parts of the Internet, and explicitly authenticating users and controlling access to services. ProtoRINA offers several features: (i) it is not restricted to the Internet Protocol (IP), so it enables experimentation with new control and management applications; (ii) it can be used as a teaching tool by educators in networking and distributed systems classes; and (iii) it can be used to run real experiments, both on local-area networks and on wide-area network testbeds such as the Global Environment for Network Innovations (GENI). ProtoRINA (version 1.0) has been released since October 2013 and used to demonstrate the RINA architecture and its advantages, and also to experiment with different policies. A tutorial on running ProtoRINA on GENI was delivered at the GENI Engineering Conference (GEC19), and is available online (https://www.youtube.com/watch?v=qUDvduy-JEs). The ProtoRINA code, along with its user / programmerÆs manual and other documentation, are available from a wiki page (http://csr.bu.edu/rina/protorina). The theory behind RINA can guide the design and management of not only computer networks, but also distributed systems and applications, including data centers and cloud computing systems.       Last Modified: 07/07/2015       Submitted by: Abraham I Matta]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>DC:  Medium:  Tackling and Understanding Intermediate Data in Cloud Applications as a First-Class Citizen</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2010</AwardEffectiveDate>
<AwardExpirationDate>06/30/2015</AwardExpirationDate>
<AwardTotalIntnAmount>600000.00</AwardTotalIntnAmount>
<AwardAmount>600000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Cloud computing infrastructures involve thousands of servers, petabytes of storage, and hundreds of users running various applications that involve gigabytes to terabytes of data. This project focuses on intermediate data that is generated during the execution of parallelized dataflow programs in clouds. Such cloud intermediate data brings forth several unique characteristics: they are massive-scale, distributed, subjected to computational barriers, and prolong job run-times when subjected to server failures. Further, the size of intermediate data in a cloud application is often comparable to or larger than input or output data size, and it can thus range in terabytes. Thus, in spite of extensive existing work on traditional storage problems, there is a critical need for new algorithms and systems that target cloud intermediate data.&lt;br/&gt; This project is the first to treat cloud intermediate data as a first-class citizen. The project will involve new algorithm design and analysis, original systems building and implementation, deployment in real world testbeds, and performance of measurement studies. Concretely, this project will build a new system that explicitly manages intermediate data in cloud dataflow programs in order to improve their fault-tolerance, and design and realize barrier relaxation strategies to improve performance of cloud programs. We will implement using open software, deploy, and experimentally evaluate our systems atop the NSF infrastructure called the Cloud Computing Testbed (CCT) that is hosted at the University of Illinois. Finally, we will perform measurement studies of workload characteristics of cloud intermediate data. &lt;br/&gt; A fuller understanding of intermediate data in clouds can spawn research in managing cloud infrastructures, improve run-time performance of cloud applications, and lead to new cloud programming paradigms. Our contributions will directly improve the performance and fault-tolerance of applications that are run on the community infrastructure CCT, and positively impact design and deployment of existing and emerging industry clouds. Our results will be published and released in open software and datasets.</AbstractNarration>
<MinAmdLetterDate>06/28/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/28/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0964471</AwardID>
<Investigator>
<FirstName>Roy</FirstName>
<LastName>Campbell</LastName>
<PI_MID_INIT>H</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Roy H Campbell</PI_FULL_NAME>
<EmailAddress>rhc@illinois.edu</EmailAddress>
<PI_PHON>2173330215</PI_PHON>
<NSF_ID>000309848</NSF_ID>
<StartDate>06/28/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Indranil</FirstName>
<LastName>Gupta</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Indranil Gupta</PI_FULL_NAME>
<EmailAddress>indy@illinois.edu</EmailAddress>
<PI_PHON>2172655517</PI_PHON>
<NSF_ID>000148881</NSF_ID>
<StartDate>06/28/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>Champaign</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207406</ZipCode>
<StreetAddress><![CDATA[1901 South First Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramElement>
<Code>7793</Code>
<Text>DATA-INTENSIVE COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7793</Code>
<Text>DATA-INTENSIVE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~600000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Big data needs to be processed and stored efficiently. Today, large clusters of servers (in datacenters) run distributed software systems such as Hadoop, NoSQL databases, etc. in order to achieve this. Computation systems like Hadoop take as input large amounts of data, and after processing, produce large amounts of output data. While most research focuses on input and output data, very little work has existed (until this project) on the intermediate data. This is the data that is generated during the processing, in between input data and output data. It is an important focus because better and efficient management of this intermediate data is critical to faster computation (generating output quickly), better usage of resources (using fewer servers to do the same work), and better management of these systems (making system administrators' job of managing these clusters, easier).</p> <p>This NSF project project has designed, implemented, deployed, and experimentally evaluated, multiple systems that deal with intermediate data in distributed software systems used in the cloud. Our work has involved design of new algorithms, their implementation into existing and popular open-source systems in industry (e.g., Hadoop, NoSQL systems, etc.), and their experimental evaluation on real clusters. Below, we describe technical details of our salient contributions below, inlined with their impact.</p> <p>We have built systems that manage intermediate data in Hadoop and graph processing systems more efficiently, speeding up these systems significantly (thus increasing how many jobs can be run by the same set of servers in a given time) -- these include our ISS system (which tolerates server failures) and our barrier-breaking version of Hadoop (which reduces run time for jobs). We have built systems that allow users to specifiy deadlines and priorities for Hadoop jobs and schedule jobs intelligently to meet these deadlines (Natjam) -- this is critical for industry use cases such as advertisement processing in companies, and reduces the capital expenses of running such infrastructures (via consolidation of clusters). We have measured and characterized the traits of intermediate and file system data in HDFS (the file system underneath Hadoop), thus making it easier for companies and sysadmins to understand how this data behaves and build systems better attuned to these real traits.</p> <p>We have built new software (LFGraph) for distributed processing of graphs (e.g., Facebook-style social graphs or Internet graphs), in a way that is orders of magnitude faster than existing graph processing systems. We have built a system (Zorro) that make graph processing systems efficient while also fault-tolerant by opportunistically scrounging data after a failure and achieving very high accuracy.</p> <p>Second, in the area of NoSQL storage systems we have built new algorithms that compact intermediate data more efficiently, thus improving read performance in these systems. We have also built metadata management systems for NoSQL databases, which make it easier for system administrators to manage these systems -- besides making their job easier, this also reduces operational expenses of these infrastructures.&nbsp;</p> <p>Our software systems are available for open download on our website (http://dprg.cs.uiuc.edu/downloads). As most of our work deals directly with, and has made changes directly to (open-source) software that are used widely in industry today, the potential long-term impact of this project's results is very high.</p> <p>Finally, on the education front, during Spring 2015, PI Indranil Gupta has taught 2 MOOCs (free online courses) on Coursera about "Cloud Computing Concepts". The courses were wildly popular, with an aggregate enrolment of 124K students. co-PI Roy Campbell is offering a Coursera MOOC on "Cloud Computing Applications" in Fall 2015. This is in addition to the regula...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Big data needs to be processed and stored efficiently. Today, large clusters of servers (in datacenters) run distributed software systems such as Hadoop, NoSQL databases, etc. in order to achieve this. Computation systems like Hadoop take as input large amounts of data, and after processing, produce large amounts of output data. While most research focuses on input and output data, very little work has existed (until this project) on the intermediate data. This is the data that is generated during the processing, in between input data and output data. It is an important focus because better and efficient management of this intermediate data is critical to faster computation (generating output quickly), better usage of resources (using fewer servers to do the same work), and better management of these systems (making system administrators' job of managing these clusters, easier).  This NSF project project has designed, implemented, deployed, and experimentally evaluated, multiple systems that deal with intermediate data in distributed software systems used in the cloud. Our work has involved design of new algorithms, their implementation into existing and popular open-source systems in industry (e.g., Hadoop, NoSQL systems, etc.), and their experimental evaluation on real clusters. Below, we describe technical details of our salient contributions below, inlined with their impact.  We have built systems that manage intermediate data in Hadoop and graph processing systems more efficiently, speeding up these systems significantly (thus increasing how many jobs can be run by the same set of servers in a given time) -- these include our ISS system (which tolerates server failures) and our barrier-breaking version of Hadoop (which reduces run time for jobs). We have built systems that allow users to specifiy deadlines and priorities for Hadoop jobs and schedule jobs intelligently to meet these deadlines (Natjam) -- this is critical for industry use cases such as advertisement processing in companies, and reduces the capital expenses of running such infrastructures (via consolidation of clusters). We have measured and characterized the traits of intermediate and file system data in HDFS (the file system underneath Hadoop), thus making it easier for companies and sysadmins to understand how this data behaves and build systems better attuned to these real traits.  We have built new software (LFGraph) for distributed processing of graphs (e.g., Facebook-style social graphs or Internet graphs), in a way that is orders of magnitude faster than existing graph processing systems. We have built a system (Zorro) that make graph processing systems efficient while also fault-tolerant by opportunistically scrounging data after a failure and achieving very high accuracy.  Second, in the area of NoSQL storage systems we have built new algorithms that compact intermediate data more efficiently, thus improving read performance in these systems. We have also built metadata management systems for NoSQL databases, which make it easier for system administrators to manage these systems -- besides making their job easier, this also reduces operational expenses of these infrastructures.   Our software systems are available for open download on our website (http://dprg.cs.uiuc.edu/downloads). As most of our work deals directly with, and has made changes directly to (open-source) software that are used widely in industry today, the potential long-term impact of this project's results is very high.  Finally, on the education front, during Spring 2015, PI Indranil Gupta has taught 2 MOOCs (free online courses) on Coursera about "Cloud Computing Concepts". The courses were wildly popular, with an aggregate enrolment of 124K students. co-PI Roy Campbell is offering a Coursera MOOC on "Cloud Computing Applications" in Fall 2015. This is in addition to the regular on-campus courses that the PI and co-PI teach about distributed systems, advanced distributed systems...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Streamlining High-End Computing with Software Persistent Memory</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/01/2010</AwardEffectiveDate>
<AwardExpirationDate>12/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>711999.00</AwardTotalIntnAmount>
<AwardAmount>759999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Current high-end computing (HEC) applications explicitly manage persistent data, including both application state and application output. This practice not only increases development time and cost, but also requires an application developer to be intimately aware of the underlying platform-dependent storage mechanisms to achieve good application I/O performance. Such vertical development also makes the application software less portable.&lt;br/&gt;&lt;br/&gt;The Software Persistent Memory (SoftPM) project builds a lightweight infrastructure for streamlining data management in next generation HEC applications. SoftPM eliminates the duality of data management in HEC applications by allowing applications to allocate persistent memory in much the same way volatile memory is allocated and easily restore, browse, and interact with past versions of persistent memory state. This simplifies the implementation of three broad capabilities required in HEC applications --  recoverability (e.g., checkpoint-restart), record-replay (e.g., data-visualization), and execution branching (e.g., simulation model-space exploration).&lt;br/&gt;&lt;br/&gt;The SoftPM project is organized in three modules. The first module builds an evolvable SoftPM API and addresses memory management issues. The second module addresses high-performance I/O and the atomicity of persistence points for local storage and parallel file systems. The final module builds several HEC application case-studies to illustrate the different capabilities supported by SoftPM in HEC environments.</AbstractNarration>
<MinAmdLetterDate>01/08/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/13/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0937964</AwardID>
<Investigator>
<FirstName>Raju</FirstName>
<LastName>Rangaswami</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Raju Rangaswami</PI_FULL_NAME>
<EmailAddress>raju@cs.fiu.edu</EmailAddress>
<PI_PHON>3053486230</PI_PHON>
<NSF_ID>000488807</NSF_ID>
<StartDate>01/08/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jason</FirstName>
<LastName>Liu</LastName>
<PI_MID_INIT>X</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jason X Liu</PI_FULL_NAME>
<EmailAddress>liux@cis.fiu.edu</EmailAddress>
<PI_PHON>3053481625</PI_PHON>
<NSF_ID>000246632</NSF_ID>
<StartDate>01/08/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ming</FirstName>
<LastName>Zhao</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ming Zhao</PI_FULL_NAME>
<EmailAddress>mingzhao@asu.edu</EmailAddress>
<PI_PHON>4809652783</PI_PHON>
<NSF_ID>000511914</NSF_ID>
<StartDate>01/08/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Florida International University</Name>
<CityName>Miami</CityName>
<ZipCode>331990001</ZipCode>
<PhoneNumber>3053482494</PhoneNumber>
<StreetAddress>11200 SW 8TH ST</StreetAddress>
<StreetAddress2><![CDATA[MARC 430]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<StateCode>FL</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>FL26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>071298814</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>FLORIDA INTERNATIONAL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>159621697</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Florida International University]]></Name>
<CityName>Miami</CityName>
<StateCode>FL</StateCode>
<ZipCode>331990001</ZipCode>
<StreetAddress><![CDATA[11200 SW 8TH ST]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>FL26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7476</Code>
<Text>XD-Extreme Digital</Text>
</ProgramElement>
<ProgramElement>
<Code>7952</Code>
<Text>HECURA</Text>
</ProgramElement>
<ProgramReference>
<Code>7952</Code>
<Text>HECURA</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~735999</FUND_OBLG>
<FUND_OBLG>2011~24000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Intellectual Merit:<br />This project developed a new software-based persistent memory (SoftPM) interface and library for block-based storage and in doing so, created new techniques that allow location-independent memory allocation of data structures. Such memory data can be modified without operating system involvement directly by the application and large sets of such modifications can made persistent atomically. The developed interface simplifies programming significantly whereby the only required operations are creating a named container, associating a single "root" data structure to it, and specifying persistence points. The SoftPM library seamless discovers all data reachable from the root via pointers and makes all such reachable data persistent. It also allows restoring the container data with one, simple library operation. Finally, the library supports advanced capabilities for container versioning and branching of container versions.&nbsp;<br />Complementarily, this project designed and implemented parallel file system (PFS) delegation to optimize metadata management for deploying SoftPM on parallel storage systems. Evaluation done on PVFS2 shows encouraging results where PFS delegation based checkpointing substantially outperforms traditional many-to-many checkpointing approach. We further incorporated emerging solid-state devices (SSDs)in high-end computing systems.<br /><br />Broader Impact:<br />Our work provided research opportunities for several students from minority groups at the undergraduate and PhD levels. Undergraduate Hispanic minority student, Leonardo Marmol, was an REU participant as part of this project. He decided to pursue a PhD degree to continue his work on the project at the graduate level.&nbsp;<br />The findings related to the interface components of the Software Persistent Memory project &nbsp;add to the knowledge base for persistent memory interfaces and impacts new interface standards for persistent memory such as the one considered by the T10 standards body.&nbsp;</p><br> <p>            Last Modified: 03/22/2014<br>      Modified by: Raju&nbsp;Rangaswami</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intellectual Merit: This project developed a new software-based persistent memory (SoftPM) interface and library for block-based storage and in doing so, created new techniques that allow location-independent memory allocation of data structures. Such memory data can be modified without operating system involvement directly by the application and large sets of such modifications can made persistent atomically. The developed interface simplifies programming significantly whereby the only required operations are creating a named container, associating a single "root" data structure to it, and specifying persistence points. The SoftPM library seamless discovers all data reachable from the root via pointers and makes all such reachable data persistent. It also allows restoring the container data with one, simple library operation. Finally, the library supports advanced capabilities for container versioning and branching of container versions.  Complementarily, this project designed and implemented parallel file system (PFS) delegation to optimize metadata management for deploying SoftPM on parallel storage systems. Evaluation done on PVFS2 shows encouraging results where PFS delegation based checkpointing substantially outperforms traditional many-to-many checkpointing approach. We further incorporated emerging solid-state devices (SSDs)in high-end computing systems.  Broader Impact: Our work provided research opportunities for several students from minority groups at the undergraduate and PhD levels. Undergraduate Hispanic minority student, Leonardo Marmol, was an REU participant as part of this project. He decided to pursue a PhD degree to continue his work on the project at the graduate level.  The findings related to the interface components of the Software Persistent Memory project  add to the knowledge base for persistent memory interfaces and impacts new interface standards for persistent memory such as the one considered by the T10 standards body.        Last Modified: 03/22/2014       Submitted by: Raju Rangaswami]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

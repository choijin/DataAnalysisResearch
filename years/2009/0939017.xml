<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CPATH-2: Collaborative Research: Broadening Studio-Based Learning in Computing Education</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/01/2010</AwardEffectiveDate>
<AwardExpirationDate>12/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>203016.00</AwardTotalIntnAmount>
<AwardAmount>251506</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Harriet Taylor</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This CPATH award funds an extension of a prior community building award to expand the studio learning model on a national scale. A team of four computing faculty and three evaluators will address this challenge in a carefully orchestrated 30-month national project in which faculty development workshops will train ten to fifteen computing educators to teach up to twenty courses taken by a variety of computing and IT majors at ten to fifteen community colleges and universities across the country, with each course taught once in a studio-based format and once in a traditional format. A rich set of data, including pre- and post-tests, pre- and post-surveys, student interviews, and instructor reports, will be collected and analyzed in order to evaluate the impact of SBL. &lt;br/&gt;&lt;br/&gt;The instructional methods most commonly employed today in computing education are not a good match for computing careers of the future. Instruction tends to focus more on programming and less on computational thinking, design, and problem solving. Labs and homework assignments are generally geared toward individual and isolated work rather than communication, collaboration, presentation and critiquing. This not only runs the risk of turning students off to computing as a discipline, but also fails to prepare students for tomorrow?s computing careers that require skills in communication, collaboration and critical analysis, as well as computational thinking, design and problem solving. The Studio-Based Learning (SBL) model has the potential to train students in these skills, make learning computing both engaging and effective, and thus trigger a fundamental shift in computing education. &lt;br/&gt;&lt;br/&gt; Intellectual merits: The broad implementation and systematic evaluation of the SBL model has the potential to significantly expand the knowledge base on effective and engaging methods of computing education. Since the investigators' work on SBL dates back to the late 1990s, by the end of the proposed project, the collaborative group will have accumulated over a decade of data, theoretical analyses and practical information on the implementation and impact of SBL. Furthermore, five years' worth of systematic implementation and evaluation results will have accrued from a variety of computing courses, from a variety of institutions across the country, and for a broad spectrum of undergraduate students, making this one of the longest and most systematic evaluation of a pedagogical approach in computing education. Results from the project will therefore enrich both the theory and practice of computing education. &lt;br/&gt;&lt;br/&gt;Broader impacts: The national implementation should enable a large and diverse group of undergraduates in a variety of computing majors from across the country, in different types of institutions, and in different levels and types of computing courses, to benefit from SBL. In turn, this has the potential to form the beginnings of a convincing case for an even broader adoption of the approach. The ultimate benefit will be not only that students find the computing curriculum less intimidating and more engaging, but also that they are prepared for careers that increasingly require skills of computational thinking, design and problem solving, collaboration and communication. The project includes implementation in several EPSCOR states and minority-serving institutions. The activities of this project, evaluation results, and practical resources will be widely disseminated not only through the traditional means of papers, presentations and meetings, but also through a feature-rich community portal and other non-traditional means. Finally, this project's results could also benefit other science and engineering curricula because design and problem solving play important roles in all of science and engineering.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/23/2009</MinAmdLetterDate>
<MaxAmdLetterDate>04/17/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0939017</AwardID>
<Investigator>
<FirstName>Christopher</FirstName>
<LastName>Hundhausen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Christopher Hundhausen</PI_FULL_NAME>
<EmailAddress>hundhaus@wsu.edu</EmailAddress>
<PI_PHON>5093354590</PI_PHON>
<NSF_ID>000341740</NSF_ID>
<StartDate>09/23/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Washington State University</Name>
<CityName>PULLMAN</CityName>
<ZipCode>991641060</ZipCode>
<PhoneNumber>5093359661</PhoneNumber>
<StreetAddress>280 Lighty</StreetAddress>
<StreetAddress2><![CDATA[PO BOX 641060]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<StateCode>WA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041485301</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WASHINGTON STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041485301</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Washington State University]]></Name>
<CityName>PULLMAN</CityName>
<StateCode>WA</StateCode>
<ZipCode>991641060</ZipCode>
<StreetAddress><![CDATA[280 Lighty]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<FoaInformation>
<Code>0116000</Code>
<Name>Human Subjects</Name>
</FoaInformation>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7640</Code>
<Text>CPATH</Text>
</ProgramElement>
<ProgramReference>
<Code>7640</Code>
<Text>CPATH</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~203016</FUND_OBLG>
<FUND_OBLG>2010~16000</FUND_OBLG>
<FUND_OBLG>2011~16490</FUND_OBLG>
<FUND_OBLG>2012~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In the studio-based instructional model commonly used in architecture and fine arts education, learners construct problem solutions while collaborating informally in a "studio." Then, in so-called "design crits," learners collaboratively critique each other's work under the guidance of experts. &nbsp;Building on prior research that has demonstrated the potential of the "design crit" component of this approach in computing education, this project has aimed, to advance, on a national scale, the use of "design crits" in computing education through a combination of educational reform and evaluation at 14 undergraduate institutions, and vigorous development and support of a community of computing educators interested in exploring the approach.&nbsp;</p> <p>This project constitutes, to our knowledge, the largest-scale effort to date to systematically implement and rigorously evaluate an educational intervention in computing education. It has yielded the following key outcomes:</p> <ul> <li>We have conducted a collection of quasi-experimental studies at 14 different undergraduate institutions involving over 2000 students from a variety of majors. Results of these studies, which compared the learning and attitudinal outcomes of "traditional" and "studio" implementations of a variety of undergraduate computing courses, indicate widely mixed results. The approach positively impacted student attitudes and learning outcomes in some cases, although no clear patterns were detected across multiple institutions.</li> <li>Detailed qualitative analyses of "design crits" in both introductory "CS 1" courses &nbsp;and upper-division human-computer interaction courses suggest that "design crits" provide excellent conditions for learners to think critically and communicate about problem-solving strategies, best programming and design practices, and key programming and design concepts.</li> <li>We have developed, and made publicly available, a set of curricular materials, evaluation rubrics, and best practices for implementing design crits in a variety of different undergraduate computing courses.</li> <li>We have developed OSBLE (Online Studio-Based Learning Environment), an open source and freely hosted learning management system specifically tailored to support &nbsp;online "design crits" &nbsp;involving a variety of solution types, including computer code and PDF files. The environment has been used in 57 courses at 12 different institutions. Aside from greatly streamlining the process of implementing studio-based learning, OSBLE has made it possible, in some cases, to implement studio-based learning asynchronously in courses in which it would not otherwise have been possible.&nbsp;</li> </ul><br> <p>            Last Modified: 06/18/2014<br>      Modified by: Christopher&nbsp;Hundhausen</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In the studio-based instructional model commonly used in architecture and fine arts education, learners construct problem solutions while collaborating informally in a "studio." Then, in so-called "design crits," learners collaboratively critique each other's work under the guidance of experts.  Building on prior research that has demonstrated the potential of the "design crit" component of this approach in computing education, this project has aimed, to advance, on a national scale, the use of "design crits" in computing education through a combination of educational reform and evaluation at 14 undergraduate institutions, and vigorous development and support of a community of computing educators interested in exploring the approach.   This project constitutes, to our knowledge, the largest-scale effort to date to systematically implement and rigorously evaluate an educational intervention in computing education. It has yielded the following key outcomes:  We have conducted a collection of quasi-experimental studies at 14 different undergraduate institutions involving over 2000 students from a variety of majors. Results of these studies, which compared the learning and attitudinal outcomes of "traditional" and "studio" implementations of a variety of undergraduate computing courses, indicate widely mixed results. The approach positively impacted student attitudes and learning outcomes in some cases, although no clear patterns were detected across multiple institutions. Detailed qualitative analyses of "design crits" in both introductory "CS 1" courses  and upper-division human-computer interaction courses suggest that "design crits" provide excellent conditions for learners to think critically and communicate about problem-solving strategies, best programming and design practices, and key programming and design concepts. We have developed, and made publicly available, a set of curricular materials, evaluation rubrics, and best practices for implementing design crits in a variety of different undergraduate computing courses. We have developed OSBLE (Online Studio-Based Learning Environment), an open source and freely hosted learning management system specifically tailored to support  online "design crits"  involving a variety of solution types, including computer code and PDF files. The environment has been used in 57 courses at 12 different institutions. Aside from greatly streamlining the process of implementing studio-based learning, OSBLE has made it possible, in some cases, to implement studio-based learning asynchronously in courses in which it would not otherwise have been possible.         Last Modified: 06/18/2014       Submitted by: Christopher Hundhausen]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

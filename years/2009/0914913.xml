<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small:  Collaborative Research:  Tool Support for Producing High Assurance and Reliable Software for Wireless Sensor Actor Networks</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>247597.00</AwardTotalIntnAmount>
<AwardAmount>247597</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Wireless sensor networks (WSNs) have been mainly used for data collection purposes, and have not been employed in the context of any consistency- or safety-critical applications. As such software development for WSNs has been done mostly on a best-effort basis. However, as WSNs get more integrated with actuation capabilities, the resulting wireless sensor actor networks (WSANs) require more assurance and survivability guarantees. The goal of this project is to design and implement the tool-support necessary for achieving assurance and reliability of WSANs software.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;The project will produce a transformation tool that allows programs for WSANs to be written in high-level models traditionally used to describe abstract distributed programs and automatically transforms these abstract programs, while preserving their correctness and reliability properties, into programs deployed in WSANs. The project will also develop a synthesis tool that manipulates the given abstract distributed programs for the automated addition of desired level of fault-tolerance. Finally, the project will design a framework that guards against the corruption of the auxiliary state introduced at the concrete system to ensure that the deployed program is verifiably reliable.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;This project will simplify the development of high assurance WSANs software, and has the potential to pave the way to high assurance cyber-physical systems development. The project will integrate research and education through coursework development, building and dissemination of systems software, and outreach to the wider community.</AbstractNarration>
<MinAmdLetterDate>08/21/2009</MinAmdLetterDate>
<MaxAmdLetterDate>07/22/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0914913</AwardID>
<Investigator>
<FirstName>Sandeep</FirstName>
<LastName>Kulkarni</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sandeep S Kulkarni</PI_FULL_NAME>
<EmailAddress>sandeep@cse.msu.edu</EmailAddress>
<PI_PHON>5173552387</PI_PHON>
<NSF_ID>000275940</NSF_ID>
<StartDate>08/21/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Michigan State University</Name>
<CityName>East Lansing</CityName>
<ZipCode>488242600</ZipCode>
<PhoneNumber>5173555040</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[426 Administration Bldg, Rm2]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>08</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI08</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>193247145</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MICHIGAN STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>053343976</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Michigan State University]]></Name>
<CityName>East Lansing</CityName>
<StateCode>MI</StateCode>
<ZipCode>488242600</ZipCode>
<StreetAddress><![CDATA[Office of Sponsored Programs]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>08</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI08</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~84183</FUND_OBLG>
<FUND_OBLG>2010~81707</FUND_OBLG>
<FUND_OBLG>2011~81707</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>CSR: Small: Collaborative Research: Tool Support for Producing High Assurance and Reliable Software for Wireless Sensor Actor Networks</strong></p> <p><strong>&nbsp;</strong></p> <p><strong>Award 0914913 -&nbsp;Outcomes Report</strong></p> <p><strong>PIs: Murat Demirbas (SUNY Buffalo) and Sandeep Kulkarni (Michigan State University)</strong></p> <p><strong>&nbsp;</strong></p> <p>Our project proposed to build tool support for producing high-assurance and reliable software for</p> <p>wireless sensor/actor networks (WSANs). The main challenge in addressing this problem is that the</p> <p>high-level models considered in developing and verifying distributed systems do not account for</p> <p>the challenges and opportunities in wireless networks.</p> <p>&nbsp;</p> <p>The goals of our project were as follows:</p> <p>&nbsp;</p> <ol> <li>Design      of algorithms that allow traditional distributed computing programs to be      deployed in sensor networks while preserving correctness and      fault-tolerance properties.</li> <li>Development      of algorithms and tools for automated synthesis to support manipulation of      abstract programs into programs that tolerate desired faults</li> <li>A      fault-tolerance preserving framework that guards against the corruption of      the auxiliary state introduced at the concrete system to ensure that the      deployed program is verifiably reliable.</li> </ol> <p>&nbsp;</p> <p>To achieve these goals, we conducted research in the area of sensor networks, formal methods, and distributed systems. The main accomplishments of this work are as follows:</p> <p>&nbsp;</p> <ol> <li>Developing      useful transformations to wireless networked systems We investigated      models for the concrete WSNs that takes into account the energy-efficiency      requirements and message loss characteristics of the concrete system. We      identified that existing transformations from high-level abstract      distributed systems models to WSNs quickly become inefficient in the      presence of prevalent message losses in WSNs, and this prohibits their      wider&nbsp; adoption. </li> </ol> <p>&nbsp;</p> <p>To address this problem, we proposed a variation of the high-level&nbsp; shared memory model, the 'SF' shared memory model, where the&nbsp; actions of each node are&nbsp; partitioned into 'slow' actions and 'fast' actions. The traditional shared memory model consists only of fast actions and a lost message can disable the nodes from execution.</p> <p>&nbsp;</p> <p>Slow actions, on the other hand, enable the nodes to use slightly stale state from other nodes, so a message loss does not prevent the node from execution. We quantified over the advantages of using slow actions under environments with varying message loss probabilities, and find that a slow action has asymptotically better chance of getting executed than a fast action when the message loss probability increases. We also presented guidelines for helping the protocol designer identify which actions can be marked as slow so as to enable the transformed program to be more loosely-coupled, and tolerate communication problems (latency, loss) better.</p> <p>&nbsp;</p> <ol> <li>We      have developed algorithms for utilizing parallelism and symmetry during      automated revision of WSN programs. In particular, in this work, we      focused on parallelizing the task involved in addition of fault-tolerance      with the use of multiple threads. We found that parallelism that relies on      independent behavior of nodes (such as those in WSNs) provides a      significant benefit in reducing the time for revision. We have also found      that symmetry that utilizes the observation that code of different sensors      is 'almost identical' can also significantly reduce the time for revision.</li> </ol> <p>&nbsp;</p> <p>We have also extended our work on applying the problem of revision with SCR to...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ CSR: Small: Collaborative Research: Tool Support for Producing High Assurance and Reliable Software for Wireless Sensor Actor Networks     Award 0914913 - Outcomes Report  PIs: Murat Demirbas (SUNY Buffalo) and Sandeep Kulkarni (Michigan State University)     Our project proposed to build tool support for producing high-assurance and reliable software for  wireless sensor/actor networks (WSANs). The main challenge in addressing this problem is that the  high-level models considered in developing and verifying distributed systems do not account for  the challenges and opportunities in wireless networks.     The goals of our project were as follows:     Design      of algorithms that allow traditional distributed computing programs to be      deployed in sensor networks while preserving correctness and      fault-tolerance properties. Development      of algorithms and tools for automated synthesis to support manipulation of      abstract programs into programs that tolerate desired faults A      fault-tolerance preserving framework that guards against the corruption of      the auxiliary state introduced at the concrete system to ensure that the      deployed program is verifiably reliable.      To achieve these goals, we conducted research in the area of sensor networks, formal methods, and distributed systems. The main accomplishments of this work are as follows:     Developing      useful transformations to wireless networked systems We investigated      models for the concrete WSNs that takes into account the energy-efficiency      requirements and message loss characteristics of the concrete system. We      identified that existing transformations from high-level abstract      distributed systems models to WSNs quickly become inefficient in the      presence of prevalent message losses in WSNs, and this prohibits their      wider  adoption.       To address this problem, we proposed a variation of the high-level  shared memory model, the 'SF' shared memory model, where the  actions of each node are  partitioned into 'slow' actions and 'fast' actions. The traditional shared memory model consists only of fast actions and a lost message can disable the nodes from execution.     Slow actions, on the other hand, enable the nodes to use slightly stale state from other nodes, so a message loss does not prevent the node from execution. We quantified over the advantages of using slow actions under environments with varying message loss probabilities, and find that a slow action has asymptotically better chance of getting executed than a fast action when the message loss probability increases. We also presented guidelines for helping the protocol designer identify which actions can be marked as slow so as to enable the transformed program to be more loosely-coupled, and tolerate communication problems (latency, loss) better.     We      have developed algorithms for utilizing parallelism and symmetry during      automated revision of WSN programs. In particular, in this work, we      focused on parallelizing the task involved in addition of fault-tolerance      with the use of multiple threads. We found that parallelism that relies on      independent behavior of nodes (such as those in WSNs) provides a      significant benefit in reducing the time for revision. We have also found      that symmetry that utilizes the observation that code of different sensors      is 'almost identical' can also significantly reduce the time for revision.      We have also extended our work on applying the problem of revision with SCR toolset. Specifically, we have developed rules for transforming SCR specification into input to our synthesis tool and utilize it to generate a revised SCR specification that provides fault-tolerance requirements. We have further utilized these results in revision of UML models and SystemC TLM programs.     We      have also focused on utilizing our work in developing scalable approaches      for verifying self-stabili...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR:  Small:  Collaborative Research: Combining Static Analysis and Dynamic Run-time Optimization for Parallel Discrete Event Simulation in Many-Core Environments</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>333031.00</AwardTotalIntnAmount>
<AwardAmount>358031</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project investigates how a new processor paradigm (multi-core architectures) changes the way Parallel Discrete Event Simulation (PDES) is done. This topic is important given the wide use of simulation and the emergence of multi-core architectures. PDES is likely to play an increasingly important role in discrete event simulation as Moore?s Law is sharply curtailed and explicit parallelism becomes the major avenue for improving performance of sequential applications. Improving PDES performance translates to improved.&lt;br/&gt;&lt;br/&gt;Discrete Event Simulation (DES) is widely used for performance evaluation in many application domains. The fine grained nature of PDES causes its performance and scalability to be limited by communication latency. The emergence of multi-core architectures and their expected evolution into manycore systems offers potential relief to PDES and other fine grained parallel applications because the cost of communication within a chip is dramatically lower than conventional networked communication. Absent this dominant effect, PDES performance will be determined by issues such as load balancing, synchronization and optimism control, and the choice and configuration of various other algorithms and data structures of the simulator. Operation in a manycore environment introduces new system tradeoffs that must be effectively balanced by the system software. Primarily, the pressure on the memory system and resilience to load fluctuations will emerge as critical issues that we address in the proposed research. Finally, the more predictable nature of communication cost in this environment (due in part to the more frequent synchronization possible between nearby cores) can be exploited, especially by static analysis, for effective simulation. &lt;br/&gt;&lt;br/&gt;As multi-cores become the default microprocessor architecture, applications that are performance constrained must evolve to use parallelism to take advantage of the resources available on the cores. This project?s new PDES can have a significant impact on a number of applications that rely on discrete event simulations. The PIs plan to incorporate the research results into a graduate level course on parallel simulation techniques and to involve undergraduate students in the project.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/08/2009</MinAmdLetterDate>
<MaxAmdLetterDate>05/12/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0916323</AwardID>
<Investigator>
<FirstName>Nael</FirstName>
<LastName>Abu-Ghazaleh</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nael Abu-Ghazaleh</PI_FULL_NAME>
<EmailAddress>nael@cs.binghamton.edu</EmailAddress>
<PI_PHON>6077774748</PI_PHON>
<NSF_ID>000275373</NSF_ID>
<StartDate>08/08/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Dmitry</FirstName>
<LastName>Ponomarev</LastName>
<PI_MID_INIT>V</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dmitry V Ponomarev</PI_FULL_NAME>
<EmailAddress>dponomar@binghamton.edu</EmailAddress>
<PI_PHON>6077772000</PI_PHON>
<NSF_ID>000126433</NSF_ID>
<StartDate>08/08/2009</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Binghamton</Name>
<CityName>BINGHAMTON</CityName>
<ZipCode>139026000</ZipCode>
<PhoneNumber>6077776136</PhoneNumber>
<StreetAddress>4400 VESTAL PKWY E</StreetAddress>
<StreetAddress2><![CDATA[PO Box 6000]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY22</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>090189965</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Binghamton]]></Name>
<CityName>BINGHAMTON</CityName>
<StateCode>NY</StateCode>
<ZipCode>139026000</ZipCode>
<StreetAddress><![CDATA[4400 VESTAL PKWY E]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY22</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~333031</FUND_OBLG>
<FUND_OBLG>2010~12500</FUND_OBLG>
<FUND_OBLG>2011~12500</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Simulation is a critical capability used in the design and evaluation of systems across a wide-range of domains. &nbsp;Parallel Simulation can improve the performance and capacity of simulation, allowing us to study larger models in more details and for more scenarios. &nbsp;In this project, we explored how to improve the performance of parallel discrete event simulation on emerging multi-core and many-core computing systems. &nbsp;We identified and characterized the bottlenecks and developed new algorithms and optimizations that improve the performance of parallel simulation significatnly on these platforms. &nbsp;We looked at how communication support can be improved to take advantage of the memory hierarchy available on such systems. &nbsp;We explored these issue son three different multi-core architectures with significantly different designs. &nbsp;We developed approaches to manage the high cost of communication across a network of multi-core systems. &nbsp;We also looked at how we can analyze the model being simulated and take advantage of its properties to improve the simulation performance. &nbsp;We explored how to make simulation more effectively manage interference from other co-located applications. &nbsp;These algorithms, optimizations and the experiences gathered while developing and evaluating them represent the intellectual merit of the project.</p> <p>The developed techniques were integrated within the ROSS simulation engine and made available to other researchers. &nbsp;This includes both core simulation and communication algorithms, synchronization optimizations, and memory optimizations. &nbsp;We also make available our partitioning algorithms that are based on the simulation model analysis. &nbsp;Finally, we also make available our work to thread remapping approaches for managing intereference from other applications. &nbsp;Experiences with all these investigates have been published and will inform the work of other researchers in parallel simulation, parallel computing in general, as well as manycore architecture design. &nbsp;The work results have been dessiminated in 11 scientific publications in top journals and conferences in the area of parallel simulation. &nbsp;The project lead to the training of one PhD student and one MS student in this important area. &nbsp;It also supported through REU supplements, three undergraduate students who also got trained in this area. &nbsp;Educational material was developed and used in the graduate computer architecture class based on the results of the project. &nbsp;These represent the broader impacts of the project.</p><br> <p>            Last Modified: 01/17/2014<br>      Modified by: Nael&nbsp;Abu-Ghazaleh</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Simulation is a critical capability used in the design and evaluation of systems across a wide-range of domains.  Parallel Simulation can improve the performance and capacity of simulation, allowing us to study larger models in more details and for more scenarios.  In this project, we explored how to improve the performance of parallel discrete event simulation on emerging multi-core and many-core computing systems.  We identified and characterized the bottlenecks and developed new algorithms and optimizations that improve the performance of parallel simulation significatnly on these platforms.  We looked at how communication support can be improved to take advantage of the memory hierarchy available on such systems.  We explored these issue son three different multi-core architectures with significantly different designs.  We developed approaches to manage the high cost of communication across a network of multi-core systems.  We also looked at how we can analyze the model being simulated and take advantage of its properties to improve the simulation performance.  We explored how to make simulation more effectively manage interference from other co-located applications.  These algorithms, optimizations and the experiences gathered while developing and evaluating them represent the intellectual merit of the project.  The developed techniques were integrated within the ROSS simulation engine and made available to other researchers.  This includes both core simulation and communication algorithms, synchronization optimizations, and memory optimizations.  We also make available our partitioning algorithms that are based on the simulation model analysis.  Finally, we also make available our work to thread remapping approaches for managing intereference from other applications.  Experiences with all these investigates have been published and will inform the work of other researchers in parallel simulation, parallel computing in general, as well as manycore architecture design.  The work results have been dessiminated in 11 scientific publications in top journals and conferences in the area of parallel simulation.  The project lead to the training of one PhD student and one MS student in this important area.  It also supported through REU supplements, three undergraduate students who also got trained in this area.  Educational material was developed and used in the graduate computer architecture class based on the results of the project.  These represent the broader impacts of the project.       Last Modified: 01/17/2014       Submitted by: Nael Abu-Ghazaleh]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

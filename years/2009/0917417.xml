<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small:  Learnability, Randomness, and Lower Bounds</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/15/2010</AwardEffectiveDate>
<AwardExpirationDate>04/30/2015</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy Kimbrel</SignBlockName>
<PO_EMAI>tkimbrel@nsf.gov</PO_EMAI>
<PO_PHON>7032927924</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project is motivated by new connections between the research fields of computational complexity theory and machine learning theory.  Computational complexity theory aims to understand which problems can be solved efficiently on a computer by determining the amounts of computational resources such as CPU time, memory space, or circuit area that are required to solve problems.  At the center of this field is the famous P vs. NP question which impacts virtually every scientific and engineering discipline, given the thousands of diverse NP-complete problems that have been discovered.  Machine learning theory studies the extent to which computers can learn from data and their ability to make future predictions and classifications based on what has been learned.  Some powerful learning algorithms have been discovered, but whether computers can be programmed to accomplish many learning tasks remains an open question.&lt;br/&gt;&lt;br/&gt;Both computational complexity and machine learning aim to understand the capabilities and limitations of computation, but the two fields study different types of problems and use different kinds of techniques.  This research will employ techniques and ideas from each of these two fields to impact the other field, specifically with the goal of proving "lower bound" results.  This research will be accomplished by making use of a new vantage point provided by algorithmic randomness to relate complexity and learning problems.  Learning algorithms will be utilized to establish lower bounds on the computational resources required to solve problems in computational complexity.  The converse direction will be investigated to apply techniques and ideas from computational complexity to show that "attribute-efficient" learning algorithms do not exist for certain concept classes.  Algorithmic randomness and Kolmogorov complexity will be used to improve our understanding of the capabilities and limitations of learning algorithms.&lt;br/&gt;&lt;br/&gt;This research will improve our understanding of computational complexity, which is informative to many areas of science and engineering where computation plays a role.  This project aims to better understand what learning tasks can be accomplished efficiently by computers, which has applications to the foundations of artificial intelligence.  In particular, this research will identify new obstacles that must be overcome in order to design successful automatic learning systems.  A greater synergy will be developed between computational complexity theory and machine learning theory, with the benefit of laying a foundation for future collaboration and interdisciplinary work across these fields.</AbstractNarration>
<MinAmdLetterDate>05/19/2010</MinAmdLetterDate>
<MaxAmdLetterDate>05/19/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0917417</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Hitchcock</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>John M Hitchcock</PI_FULL_NAME>
<EmailAddress>jhitchco@cs.uwyo.edu</EmailAddress>
<PI_PHON>3077665341</PI_PHON>
<NSF_ID>000392588</NSF_ID>
<StartDate>05/19/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wyoming</Name>
<CityName>Laramie</CityName>
<ZipCode>820712000</ZipCode>
<PhoneNumber>3077665320</PhoneNumber>
<StreetAddress>1000 E. University Avenue</StreetAddress>
<StreetAddress2><![CDATA[Department 3355]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Wyoming</StateName>
<StateCode>WY</StateCode>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WY00</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>069690956</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WYOMING</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>069690956</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Wyoming]]></Name>
<CityName>Laramie</CityName>
<StateCode>WY</StateCode>
<ZipCode>820712000</ZipCode>
<StreetAddress><![CDATA[1000 E. University Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Wyoming</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WY00</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9217</Code>
<Text>NATNL RESERCH &amp; EDUCAT NETWORK</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~300000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project was motivated by the interplay between the subfields computational complexity, computational learning, and algorithmic randomness of theoretical computer science. Computational complexity theory studies the resources required to solve problems by algorithms on a computer. Computational learning theory studies the capability of algorithms to learn from examples and experience. Algorithmic randomness theory studies the interaction between computation and randomness. This research results of this projected have been disseminated in ten conference and journal publications, one M.S. thesis, and one Ph.D. dissertation. Here were summarize a few of the main themes.</p> <p>Much of research in the project centered around questions related to the famous P vs. NP question, one of the most fundamental questions inall of computer science. This question is important because of the many optimization problems in engineering and science that are NP-complete.</p> <p>We used learning algorithms to study the complexity of NP-complete sets, obtaining new theorems on whether sparse sets and linear threshold circuits may be NP-complete. We also used learning algorithms to study the complexity of sets of Kolmogorov random strings.</p> <p>The Berman-Hartmanis conjecture states that all NP-complete sets are isomorphic. In relation to this conjecture, we studied whether NP-complete sets are complete under length-increasing reductions.&nbsp;</p> <p>We established a stronger connection between the existence of exact learning algorithms and circuit lower bounds. This has possible implications for derandomization of probablistic algorithms and for cryptography.</p> <p>We studied the complexity of the Minimum Circuit Size Problem (MCSP). This fundamental problem is unusual because it is NP but not known to be NP-complete. We established new limitations on our abilityto prove that this problem is NP-complete, giving evidence that MCSP is an NP-intermediate problem.</p><br> <p>            Last Modified: 09/03/2015<br>      Modified by: John&nbsp;M&nbsp;Hitchcock</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project was motivated by the interplay between the subfields computational complexity, computational learning, and algorithmic randomness of theoretical computer science. Computational complexity theory studies the resources required to solve problems by algorithms on a computer. Computational learning theory studies the capability of algorithms to learn from examples and experience. Algorithmic randomness theory studies the interaction between computation and randomness. This research results of this projected have been disseminated in ten conference and journal publications, one M.S. thesis, and one Ph.D. dissertation. Here were summarize a few of the main themes.  Much of research in the project centered around questions related to the famous P vs. NP question, one of the most fundamental questions inall of computer science. This question is important because of the many optimization problems in engineering and science that are NP-complete.  We used learning algorithms to study the complexity of NP-complete sets, obtaining new theorems on whether sparse sets and linear threshold circuits may be NP-complete. We also used learning algorithms to study the complexity of sets of Kolmogorov random strings.  The Berman-Hartmanis conjecture states that all NP-complete sets are isomorphic. In relation to this conjecture, we studied whether NP-complete sets are complete under length-increasing reductions.   We established a stronger connection between the existence of exact learning algorithms and circuit lower bounds. This has possible implications for derandomization of probablistic algorithms and for cryptography.  We studied the complexity of the Minimum Circuit Size Problem (MCSP). This fundamental problem is unusual because it is NP but not known to be NP-complete. We established new limitations on our abilityto prove that this problem is NP-complete, giving evidence that MCSP is an NP-intermediate problem.       Last Modified: 09/03/2015       Submitted by: John M Hitchcock]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

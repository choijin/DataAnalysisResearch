<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: A Foundation for Effects</AwardTitle>
    <AwardEffectiveDate>07/15/2009</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2014</AwardExpirationDate>
    <AwardAmount>499149</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Anindya Banerjee</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Modern programming languages provide sophisticated control mechanisms, making them suitable to program a wide variety of applications. It becomes a challenge for a language designer to bring together these features without creating inconsistencies or for a programmer to understand how to use them. The proposed work aims to provide a sound and robust framework for reasoning about a variety of control mechanisms in isolation and more importantly about the complex interactions among them.&lt;br/&gt;&lt;br/&gt;The Curry-Howard isomorphism will guide the development of such a framework, which entails connecting programming languages to logic. The connection to logic allows one to formalize questions regarding expressive power and to exchange and borrow results with the field of proof theory. New logics expressing dynamic properties directly, as opposed to through program transformations, will be investigated. An advantage of this approach is that compilation, execution, optimization and code safety are expressed within the same foundation level.&lt;br/&gt;&lt;br/&gt;The study will have a direct impact on how to reason about security properties, since it provides methods to reason about dynamic properties in a continuously changing context. It will also have an impact on program verification, since it provides a better understanding of the invariants that programs should satisfy.</AbstractNarration>
    <MinAmdLetterDate>07/17/2009</MinAmdLetterDate>
    <MaxAmdLetterDate>07/17/2009</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0917329</AwardID>
    <Investigator>
      <FirstName>Zena</FirstName>
      <LastName>Ariola</LastName>
      <EmailAddress>ariola@cs.uoregon.edu</EmailAddress>
      <StartDate>07/17/2009</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Oregon Eugene</Name>
      <CityName>Eugene</CityName>
      <ZipCode>974035219</ZipCode>
      <PhoneNumber>5413465131</PhoneNumber>
      <StreetAddress>5219 UNIVERSITY OF OREGON</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Oregon</StateName>
      <StateCode>OR</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>9216</Code>
      <Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9217</Code>
      <Text>NATNL RESERCH &amp; EDUCAT NETWORK</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>

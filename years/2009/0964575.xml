<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC:Medium:  The impact of operating systems on application robustness</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/15/2010</AwardEffectiveDate>
<AwardExpirationDate>12/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>1151381.00</AwardTotalIntnAmount>
<AwardAmount>1167381</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ralph Wachter</SignBlockName>
<PO_EMAI>rwachter@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>It is widely estimated that one in four computers is part of a botnet, and therefore under the control of an attacker.  These computers are used to loot bank accounts, send spam, and perform DDoS (Distributed Denial of Service) attacks.  The attacker almost always gains control of these computers by remotely attacking applications or the operating system on which these applications depend.  The robustness---the ability to withstand attack---of the operating system has long been known as essential to produce secure systems.  But even the most robust operating system cannot prevent applications from being exploited, and therefore has a limited effect on application robustness.&lt;br/&gt;&lt;br/&gt;This project investigates the effect of the operating system on application robustness, and in particular the effect that the operating-system interface (the architecture and details of its system calls) has on the ability to write more robust applications.  In particular, this project seeks to eliminate pitfalls in system calls; these pitfalls lead to security holes and make application development much more difficult.  Eliminating pitfalls (and thus the resulting security holes) makes it more difficult to successfully attack applications.  To evaluate the extent to which pitfalls can be eliminated, this project is building a operating system called Ethos.  The Ethos interface will be analyzed and evaluated on its own and versus those in traditional operating systems.</AbstractNarration>
<MinAmdLetterDate>03/10/2010</MinAmdLetterDate>
<MaxAmdLetterDate>06/07/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0964575</AwardID>
<Investigator>
<FirstName>Jon</FirstName>
<LastName>Solworth</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jon A Solworth</PI_FULL_NAME>
<EmailAddress>solworth@cs.uic.edu</EmailAddress>
<PI_PHON>3129960955</PI_PHON>
<NSF_ID>000190427</NSF_ID>
<StartDate>03/10/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Bernstein</LastName>
<PI_MID_INIT>J</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel J Bernstein</PI_FULL_NAME>
<EmailAddress>proposal-qlznvbgnroelrkdkzl@box.cr.yp.to</EmailAddress>
<PI_PHON>7739358017</PI_PHON>
<NSF_ID>000147338</NSF_ID>
<StartDate>03/10/2010</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Chicago</Name>
<CityName>Chicago</CityName>
<ZipCode>606124305</ZipCode>
<PhoneNumber>3129962862</PhoneNumber>
<StreetAddress>809 S. Marshfield Avenue</StreetAddress>
<StreetAddress2><![CDATA[MB 502, M/C 551]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>098987217</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Chicago]]></Name>
<CityName>Chicago</CityName>
<StateCode>IL</StateCode>
<ZipCode>606124305</ZipCode>
<StreetAddress><![CDATA[809 S. Marshfield Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~352406</FUND_OBLG>
<FUND_OBLG>2011~396141</FUND_OBLG>
<FUND_OBLG>2012~418834</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Today's operating systems have their roots in systems which were designed before security became an essential component of software. &nbsp; Since these operating systems were not designed to be secure, they are not secure.</p> <p>Our goal was to design and implement an operating system called Ethos which was far easier to create secure applications. To do so, we used only the strongest security mechanisms. &nbsp; For example, passwords are used only to unlock cryptographic keys on the local computer, and cryptographic keys are used to authenticate over the network. &nbsp;The result is only one password is needed, and it is only used after cryptographic authentication. &nbsp;We also designed and implemented mechansims which would scale to the Internet, support mobility, and have very low latency.</p> <p>Security mechanisms, while important, are not sufficient. &nbsp;Today's systems are far too fragile, enabling attacks on software which effectively circomvent the security mechanisms. &nbsp; We thus defined far more robust and simple semantics, eliminating many programming (and system administration) error that turn out to be security holes.</p> <p>The result is a small, easy to use operating system which provide many protections by construction. &nbsp;In such a system---unlike today's widely used systems---it is impossible for the programmer to make an error which eliminates the protections guaranteed by our system.</p> <p>We are planning to have the first release of this software as open source in the coming month.</p><br> <p>            Last Modified: 08/06/2015<br>      Modified by: Jon&nbsp;A&nbsp;Solworth</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Today's operating systems have their roots in systems which were designed before security became an essential component of software.   Since these operating systems were not designed to be secure, they are not secure.  Our goal was to design and implement an operating system called Ethos which was far easier to create secure applications. To do so, we used only the strongest security mechanisms.   For example, passwords are used only to unlock cryptographic keys on the local computer, and cryptographic keys are used to authenticate over the network.  The result is only one password is needed, and it is only used after cryptographic authentication.  We also designed and implemented mechansims which would scale to the Internet, support mobility, and have very low latency.  Security mechanisms, while important, are not sufficient.  Today's systems are far too fragile, enabling attacks on software which effectively circomvent the security mechanisms.   We thus defined far more robust and simple semantics, eliminating many programming (and system administration) error that turn out to be security holes.  The result is a small, easy to use operating system which provide many protections by construction.  In such a system---unlike today's widely used systems---it is impossible for the programmer to make an error which eliminates the protections guaranteed by our system.  We are planning to have the first release of this software as open source in the coming month.       Last Modified: 08/06/2015       Submitted by: Jon A Solworth]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small:  Collaborative Research:  Tool Support for Producing High Assurance and Reliable Software for Wireless Sensor Actor Networks</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>250000.00</AwardTotalIntnAmount>
<AwardAmount>250000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Wireless sensor networks (WSNs) have been mainly used for data collection purposes, and have not been employed in the context of any consistency- or safety-critical applications. As such software development for WSNs has been done mostly on a best-effort basis. However, as WSNs get more integrated with actuation capabilities, the resulting wireless sensor actor networks (WSANs) require more assurance and survivability guarantees. The goal of this project is to design and implement the tool-support necessary for achieving assurance and reliability of WSANs software.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;The project will produce a transformation tool that allows programs for WSANs to be written in high-level models traditionally used to describe abstract distributed programs and automatically transforms these abstract programs, while preserving their correctness and reliability properties, into programs deployed in WSANs. The project will also develop a synthesis tool that manipulates the given abstract distributed programs for the automated addition of desired level of fault-tolerance. Finally, the project will design a framework that guards against the corruption of the auxiliary state introduced at the concrete system to ensure that the deployed program is verifiably reliable.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;This project will simplify the development of high assurance WSANs software, and has the potential to pave the way to high assurance cyber-physical systems development. The project will integrate research and education through coursework development, building and dissemination of systems software, and outreach to the wider community.</AbstractNarration>
<MinAmdLetterDate>08/21/2009</MinAmdLetterDate>
<MaxAmdLetterDate>07/26/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0916504</AwardID>
<Investigator>
<FirstName>Murat</FirstName>
<LastName>Demirbas</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Murat Demirbas</PI_FULL_NAME>
<EmailAddress>demirbas@buffalo.edu</EmailAddress>
<PI_PHON>7166453180</PI_PHON>
<NSF_ID>000282083</NSF_ID>
<StartDate>08/21/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Buffalo</Name>
<CityName>Buffalo</CityName>
<ZipCode>142282567</ZipCode>
<PhoneNumber>7166452634</PhoneNumber>
<StreetAddress>520 Lee Entrance</StreetAddress>
<StreetAddress2><![CDATA[Suite 211]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>038633251</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Buffalo]]></Name>
<CityName>Buffalo</CityName>
<StateCode>NY</StateCode>
<ZipCode>142282567</ZipCode>
<StreetAddress><![CDATA[520 Lee Entrance]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2009~85000</FUND_OBLG>
<FUND_OBLG>2010~82500</FUND_OBLG>
<FUND_OBLG>2011~82500</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>As wireless sensor networks (WSNs) get more integrated with actuation capabilities, the resulting wireless sensor actor networks (WSANs) require more assurance and survivability guarantees. The goal of this project is to design and implement the tool-support necessary for producing high-assurance and reliable software for WSANs. The main challenge in addressing this problem is that the high-level models considered in developing and verifying distributed systems do not account for the challenges and opportunities in wireless networks.</p> <p><br />To fill this gap, the project aimed to produce a transformation tool that allows programs for WSANs to be written in high-level models traditionally used to describe abstract distributed programs and automatically transforms these abstract programs, while preserving their correctness and reliability properties, into programs deployed in WSANs.&nbsp;</p> <p>The project also aimed to develop a synthesis tool that manipulates the given abstract distributed programs for the automated addition of desired level of fault-tolerance.&nbsp;</p> <p><br />We achieved the following tasks for addressing the project's goals:</p> <p>1) Developing useful transformations from distributed system models to wireless networked systems.&nbsp;</p> <p>2) Developing the middleware services required for the transformation.&nbsp;</p> <p>3) Automated synthesis of fault-tolerance.&nbsp;<br /><br />The major impact from our task on developing useful transformations were the findings that 1) message losses in the concrete WSNs model penalizes the performance of the transformed program severely, and 2) by identifying and deliberately designing slow actions at the abstract level we can improve the performance of the transformed program asymptotically. (Slow actions mean that the process can tolerate slightly stale state from other processes, which enables the concrete system to be more loosely-coupled, and tolerate communication problems better.)</p> <p><br />The major impact from our task on developing middleware services for the transformation was the finding that by restricting the state updates to be only local at the node, rather than allowing a direct write to the states of neighboring nodes, we can obtain a useful and very efficient, fast subset of our earlier distributed transaction implementation on WSANs.</p> <p><br />Another major finding was that the results in our work have the potential to apply to scenarios in distributed systems to expedite the execution of distributed protocols. In particular, recent research has focused on expediting execution of distributed protocols by reducing wait involved in different actions. However, the work in this context is focused on the use of syntactic information and therefore is limited in its application. Our work on partitioning of slow fast actions is semantic in nature and, hence is expected to have a wider application.</p> <p><br />The major impact from our task on automated synthesis of fault-tolerance is that we can achieve orders of magnitude reductions in the cost of verification by suitably decomposing the algorithm and exploiting the symmetry of nodes' programs in WSNs.</p> <p><br />More recently we found that the slow-fast action idea transcends the WSN model and provides similar performance improvements and developer-friendly features in the cloud computing systems domain, particularly for processing of large-scale graph applications.</p> <p><br />This project supported training and education of two graduate students: Serafettin Tasci and Bahadir Ismail Aydin.</p> <p>This project also resulted in several conference and journal publications. A list of publications and more details are available at:</p> <p>http://www.cse.buffalo.edu/~demirbas/Prose/index.html</p><br> <p>            Last Modified: 11/27/2013<br>      Modified by: Murat&nbsp;Demirbas</p> </div> <div class="porSideCol"></div> </div...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ As wireless sensor networks (WSNs) get more integrated with actuation capabilities, the resulting wireless sensor actor networks (WSANs) require more assurance and survivability guarantees. The goal of this project is to design and implement the tool-support necessary for producing high-assurance and reliable software for WSANs. The main challenge in addressing this problem is that the high-level models considered in developing and verifying distributed systems do not account for the challenges and opportunities in wireless networks.   To fill this gap, the project aimed to produce a transformation tool that allows programs for WSANs to be written in high-level models traditionally used to describe abstract distributed programs and automatically transforms these abstract programs, while preserving their correctness and reliability properties, into programs deployed in WSANs.   The project also aimed to develop a synthesis tool that manipulates the given abstract distributed programs for the automated addition of desired level of fault-tolerance.    We achieved the following tasks for addressing the project's goals:  1) Developing useful transformations from distributed system models to wireless networked systems.   2) Developing the middleware services required for the transformation.   3) Automated synthesis of fault-tolerance.   The major impact from our task on developing useful transformations were the findings that 1) message losses in the concrete WSNs model penalizes the performance of the transformed program severely, and 2) by identifying and deliberately designing slow actions at the abstract level we can improve the performance of the transformed program asymptotically. (Slow actions mean that the process can tolerate slightly stale state from other processes, which enables the concrete system to be more loosely-coupled, and tolerate communication problems better.)   The major impact from our task on developing middleware services for the transformation was the finding that by restricting the state updates to be only local at the node, rather than allowing a direct write to the states of neighboring nodes, we can obtain a useful and very efficient, fast subset of our earlier distributed transaction implementation on WSANs.   Another major finding was that the results in our work have the potential to apply to scenarios in distributed systems to expedite the execution of distributed protocols. In particular, recent research has focused on expediting execution of distributed protocols by reducing wait involved in different actions. However, the work in this context is focused on the use of syntactic information and therefore is limited in its application. Our work on partitioning of slow fast actions is semantic in nature and, hence is expected to have a wider application.   The major impact from our task on automated synthesis of fault-tolerance is that we can achieve orders of magnitude reductions in the cost of verification by suitably decomposing the algorithm and exploiting the symmetry of nodes' programs in WSNs.   More recently we found that the slow-fast action idea transcends the WSN model and provides similar performance improvements and developer-friendly features in the cloud computing systems domain, particularly for processing of large-scale graph applications.   This project supported training and education of two graduate students: Serafettin Tasci and Bahadir Ismail Aydin.  This project also resulted in several conference and journal publications. A list of publications and more details are available at:  http://www.cse.buffalo.edu/~demirbas/Prose/index.html       Last Modified: 11/27/2013       Submitted by: Murat Demirbas]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

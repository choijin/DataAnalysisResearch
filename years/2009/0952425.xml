<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Advanced System-Level Support for Hybrid Multi-Tasking Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2010</AwardEffectiveDate>
<AwardExpirationDate>02/29/2016</AwardExpirationDate>
<AwardTotalIntnAmount>407086.00</AwardTotalIntnAmount>
<AwardAmount>407086</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This work investigates new methods to provide operating system support for hybrid computing systems. A hybrid system includes one or more instruction-based processors coupled with accelerator logic that exploits application parallelism to increase performance. The work focuses on accelerators constructed from reconfigurable hardware, such as field-programmable gate array (FPGA) logic. Reconfigurable hardware also reduces energy by directly implementing the needed computation instead of fetching, decoding, and executing instructions. Future work will extend the investigation to other types of accelerators, such as general-purpose graphics processing units (GPGPUs). In particular, the research studies the interdependence of accelerator management and software thread scheduling in multi-tasking hybrid systems, and proposes integrating these two system-level functions to increase the overall performance and energy-efficiency. This will encourage industry to further embrace hybrid computing in the development of new products, and thus, enable more capable and energy-efficient mobile devices; quiet multi-function household information appliances; portable medical devices; and more flexible, capable, and robust infrastructure systems in transportation, healthcare, and other key industries. &lt;br/&gt;&lt;br/&gt;This project also targets to improve teaching, learning, and diversity in Computer Engineering. Activities include developing curriculum and teaching aids, outreach activities, undergraduate research, and involvement in education-related committees. As a part of this project, participants will create new instructional materials for Computer Engineering topics at a variety of levels of understanding.</AbstractNarration>
<MinAmdLetterDate>02/18/2010</MinAmdLetterDate>
<MaxAmdLetterDate>04/30/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0952425</AwardID>
<Investigator>
<FirstName>Katherine</FirstName>
<LastName>Morrow</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Katherine Morrow</PI_FULL_NAME>
<EmailAddress>kati@engr.wisc.edu</EmailAddress>
<PI_PHON>6082623822</PI_PHON>
<NSF_ID>000304888</NSF_ID>
<StartDate>02/18/2010</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 6401]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WI02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>161202122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WISCONSIN SYSTEM</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041188822</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Wisconsin-Madison]]></Name>
<CityName>MADISON</CityName>
<StateCode>WI</StateCode>
<ZipCode>537151218</ZipCode>
<StreetAddress><![CDATA[21 North Park Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WI02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~80101</FUND_OBLG>
<FUND_OBLG>2011~77007</FUND_OBLG>
<FUND_OBLG>2012~80089</FUND_OBLG>
<FUND_OBLG>2013~83283</FUND_OBLG>
<FUND_OBLG>2014~86606</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Various highly-parallel architectures have proposed as replacements for or assistants to traditional processors for highly-parallel computations such as graphic processing, scientific data processing, signal processing, encryption, and others. Although processor design has made great strides improving performance and reducing power, processors are still fundamentally "jack of all trades" devices. In many respects, they are more complex than necessary yet not specialized for these applications (i.e., not as fast or energy-efficient as possible). Traditional processors are still critical for their flexibility, but off-loading these computations to more specialized hardware provides significant performance and energy benefits.</p> <p>A challenge in incorporating accelerators, whether configurable hardware that implements tasks as high-performance circuits, or General-Purpose Graphics Processing Units (GPGPUs) that are a large set of (relatively) simpler processors, is the coordination of these resources within the operating system of a multi-tasking system.</p> <p>This project examined scheduling within multitasking heterogeneous systems and issues related to managing "spatial" multitasking of accelerators (allocating a subset of the accelerator to each of multiple applications simultaneously) instead of only "temporal" multitasking (applications taking turns using all hardware resources at once). We devloped a number of effective techniques that incorporate information regarding the nature of tasks and the hardware to make dynamic resource allocation decisions that effectively maximize performance, meet deadlines, minimize power, ensure fairness, or some combination of these.</p> <p>First, we developed algorithms for scheduling tasks in heterogeneous real-time systems. We examined systems with firm-deadline tasks, where a deadline is an expiration time for the "usefulness" of a computation. For example, if a frame in a video cannot be decoded quickly enough to play it at the correct time, it is often best to "drop" (not show) the frame rather than slow the video. In this work, each task required a different time to complete on each resource, and in some cases the "preferred" resource for each task (the one on which it executes most quickly) differed for different tasks (modeling different affinities of tasks to type of resources). We created scheduling methodologies that reduced deadline misses for these systems.</p> <p>We also created scheduling techniques for mixed-deadline heterogeneous real-time systems that execute a combination of periodic hard-deadline tasks (i.e., known tasks whose deadlines must not be missed or the system fails) and aperiodic soft-deadline tasks (cannot predict these prior to run-time, but they still require responsiveness). This models a mixed-use system such as a smartphone. Our methods increased the ability to complete the aperiodic tasks within a reasonable time period while ensuring that all hard deadlines were met.</p> <p>Other aspects of this work examined spatial multitasking within GPGPU systems. First we examined allocating GPGPU resources to tasks based on meeting quality-of-service (QoS) requirements (e.g., meeting minimum video playback speed). We presented two possible alternatives: (1) disabling "extra" resources (not required to meet QoS) to save power, and (2) reallocating "extra" resources to "best-effort" applications (without a QoS requirement) to improve their performance. This method was able to measure performance and dynamically adjust the allocation as needed. We also demonstrated significant power savings or performance improvements depending on the chosen method.</p> <p>Another study took advantage of process variation within GPGPUs to improve performance and energy. The manufacturing process results in some chip regions having the potential to run faster than others. Normally a chip's "speed" is limited by the sl...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Various highly-parallel architectures have proposed as replacements for or assistants to traditional processors for highly-parallel computations such as graphic processing, scientific data processing, signal processing, encryption, and others. Although processor design has made great strides improving performance and reducing power, processors are still fundamentally "jack of all trades" devices. In many respects, they are more complex than necessary yet not specialized for these applications (i.e., not as fast or energy-efficient as possible). Traditional processors are still critical for their flexibility, but off-loading these computations to more specialized hardware provides significant performance and energy benefits.  A challenge in incorporating accelerators, whether configurable hardware that implements tasks as high-performance circuits, or General-Purpose Graphics Processing Units (GPGPUs) that are a large set of (relatively) simpler processors, is the coordination of these resources within the operating system of a multi-tasking system.  This project examined scheduling within multitasking heterogeneous systems and issues related to managing "spatial" multitasking of accelerators (allocating a subset of the accelerator to each of multiple applications simultaneously) instead of only "temporal" multitasking (applications taking turns using all hardware resources at once). We devloped a number of effective techniques that incorporate information regarding the nature of tasks and the hardware to make dynamic resource allocation decisions that effectively maximize performance, meet deadlines, minimize power, ensure fairness, or some combination of these.  First, we developed algorithms for scheduling tasks in heterogeneous real-time systems. We examined systems with firm-deadline tasks, where a deadline is an expiration time for the "usefulness" of a computation. For example, if a frame in a video cannot be decoded quickly enough to play it at the correct time, it is often best to "drop" (not show) the frame rather than slow the video. In this work, each task required a different time to complete on each resource, and in some cases the "preferred" resource for each task (the one on which it executes most quickly) differed for different tasks (modeling different affinities of tasks to type of resources). We created scheduling methodologies that reduced deadline misses for these systems.  We also created scheduling techniques for mixed-deadline heterogeneous real-time systems that execute a combination of periodic hard-deadline tasks (i.e., known tasks whose deadlines must not be missed or the system fails) and aperiodic soft-deadline tasks (cannot predict these prior to run-time, but they still require responsiveness). This models a mixed-use system such as a smartphone. Our methods increased the ability to complete the aperiodic tasks within a reasonable time period while ensuring that all hard deadlines were met.  Other aspects of this work examined spatial multitasking within GPGPU systems. First we examined allocating GPGPU resources to tasks based on meeting quality-of-service (QoS) requirements (e.g., meeting minimum video playback speed). We presented two possible alternatives: (1) disabling "extra" resources (not required to meet QoS) to save power, and (2) reallocating "extra" resources to "best-effort" applications (without a QoS requirement) to improve their performance. This method was able to measure performance and dynamically adjust the allocation as needed. We also demonstrated significant power savings or performance improvements depending on the chosen method.  Another study took advantage of process variation within GPGPUs to improve performance and energy. The manufacturing process results in some chip regions having the potential to run faster than others. Normally a chip's "speed" is limited by the slowest region. In this work, we assumed we could clock each GPGPU compute unit at its own maximum f...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

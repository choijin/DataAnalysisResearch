<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: High-level Programming Models and Frameworks for GPGPU-based Computing</AwardTitle>
<AwardEffectiveDate>08/15/2009</AwardEffectiveDate>
<AwardExpirationDate>07/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>477739.00</AwardTotalIntnAmount>
<AwardAmount>477739</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This award is funded under the American Recovery and Reinvestment Act of 2009 (Public Law 111-5).&lt;br/&gt;&lt;br/&gt;Graphics Processing Units (GPUs) have emerged as a promising alternative in&lt;br/&gt;the transition of the computing industry to mainstream parallel computing.&lt;br/&gt;Enabling applications to benefit from their potential requires that GPU programming be made accessible to the average programmer. This research focuses on the challenges making GPU programming easier through new high-level programming models, and enabling efficient GPU execution through compilation frameworks for these models.&lt;br/&gt;Two complementary GPU programming models are proposed --- OpenMP, which is widely used for shared-memory parallel programming, and Parallel Operator Data-Flow Graphs (PO-DFGs), which naturally represent algorithms in a wide range of current and emerging application domains. Various optimization techniques are developed for programs written to these models, including partitioning the program between the host CPU and GPUs, stream optimizations that render the program's memory access characteristics to be more amenable to the GPU's memory system, minimizing data transfer between the host and GPU memory, and GPU architecture-specific optimizations.  The research contributes to the evolution of GPGPU programming from manual ports of applications using low-level APIs, to the use of high-level parallel programming models.</AbstractNarration>
<MinAmdLetterDate>08/03/2009</MinAmdLetterDate>
<MaxAmdLetterDate>06/04/2013</MaxAmdLetterDate>
<ARRAAmount>477739</ARRAAmount>
<AwardID>0916817</AwardID>
<Investigator>
<FirstName>Rudolf</FirstName>
<LastName>Eigenmann</LastName>
<EmailAddress>eigenman@udel.edu</EmailAddress>
<StartDate>08/03/2009</StartDate>
<EndDate>06/04/2013</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Anand</FirstName>
<LastName>Raghunathan</LastName>
<EmailAddress>raghunathan@purdue.edu</EmailAddress>
<StartDate>08/03/2009</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>6890</Code>
<Text>RECOVERY ACT ACTION</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9217</Code>
<Text>NATNL RESERCH &amp; EDUCAT NETWORK</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

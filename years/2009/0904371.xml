<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Medium: MACANTOK -- a MAchine-Code-ANalysis TOol Kit -- and its Applications</AwardTitle>
    <AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
    <AwardExpirationDate>09/30/2015</AwardExpirationDate>
    <AwardAmount>600000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Anindya Banerjee</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Recent work has revealed how important it is to examine the&lt;br/&gt;properties of programs after they have been translated to machine&lt;br/&gt;code. For instance, many security exploits depend on&lt;br/&gt;platform-specific features that are not visible at the source-code&lt;br/&gt;level, such as memory-layout details (e.g., the offsets of variables&lt;br/&gt;in activation records and padding between fields of a structure). The&lt;br/&gt;expected contributions of the project include (i) a&lt;br/&gt;language-independent tool generator that, from a formal specification&lt;br/&gt;of a given instruction set's syntax and semantics, generates&lt;br/&gt;implementations of dynamic-analysis, static-analysis, and&lt;br/&gt;symbolic-evaluation components tailored to that instruction set, and&lt;br/&gt;(ii) a variety of prototype language-specific applications (i.e.,&lt;br/&gt;specific machine-code-analysis tools), including&lt;br/&gt;&lt;br/&gt; o A tool to automate the detection of bugs and security&lt;br/&gt; vulnerabilities in machine code. The aim is to identify definite&lt;br/&gt; bugs and vulnerabilities, and information about what is required to&lt;br/&gt; trigger them.&lt;br/&gt; o A tool to check sequencing properties on machine code.&lt;br/&gt; o A tool that can aid in detecting interoperability problems among&lt;br/&gt; components by inferring input/output and network-communication&lt;br/&gt; formats, and by summarizing the behavior of a component's client.&lt;br/&gt;&lt;br/&gt;The results will help programmers create correct, reliable, and secure&lt;br/&gt;software systems by providing them with new kinds of tools to (a) verify&lt;br/&gt;properties of a program?s behavior, and (b) find potential bugs and&lt;br/&gt;security vulnerabilities.</AbstractNarration>
    <MinAmdLetterDate>08/21/2009</MinAmdLetterDate>
    <MaxAmdLetterDate>08/21/2009</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0904371</AwardID>
    <Investigator>
      <FirstName>Thomas</FirstName>
      <LastName>Reps</LastName>
      <EmailAddress>reps@cs.wisc.edu</EmailAddress>
      <StartDate>08/21/2009</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Wisconsin-Madison</Name>
      <CityName>MADISON</CityName>
      <ZipCode>537151218</ZipCode>
      <PhoneNumber>6082623822</PhoneNumber>
      <StreetAddress>21 North Park Street</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Wisconsin</StateName>
      <StateCode>WI</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
  </Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>III: Small: Effective Convex Solvers for Machine Learning</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>437466.00</AwardTotalIntnAmount>
<AwardAmount>453466</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sylvia Spengler</SignBlockName>
<PO_EMAI>sspengle@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Many large scale machine learning problems are formulated as optimization problems, in which some measure of error or loss is to be minimized over a suitable training corpus.  Real problems have too many data points to fit in a single computer.  Hence the data and/or computation must be distributed over a network of computers.  Often the only practical methods for extremely large problems are so-called splitting methods, but their convergence properties are extremely variable: sometimes very fast, sometimes very slow, in ways that can be hard to predict.  The goal of this project is to gain a better understanding of the convergence behavior and to use this understanding to construct accelerated algorithms with more consistent convergence properties.  This will allow the application of machine learning techniques to a much wider class of problems.&lt;br/&gt;&lt;br/&gt;Splitting methods (or more precisely alternating direction methods) are based on the idea that a general convex optimization problem can be split into two or more parts, each of which can be solved much more easily compared to the problem as a whole.  The methods cycle through all the variables in turn, optimizing over each subset of variables leaving the rest fixed.  The proposed work builds on a preliminary analysis of a simple model problem using the eigen-structure of certain matrix operators.  The project is devoted to extending this analysis to more general problems, as well as developing faster solvers using well-established computational technologies for the matrix eigenvalue problem.  Success will be measured in terms of the generality of the theory developed and the improvements in the observed convergence behavior on real problems.&lt;br/&gt;&lt;br/&gt;With faster solvers, discovery of major regions of influence in a global-scale social network (e.g. Facebook or Twitter) could become practical on modest computer platforms.  The same holds for tracking disease propagation and people in video sequences.  With efficient solvers, tracking software could be deployed on local hardware without the need for high-powered central servers.  This will lead to advances in countless areas such data mining, compressive sensing, recommender systems, signal processing, missing data imputation, analysis of large scale social, biological or computer networks, image reconstruction, denoising and classification.&lt;br/&gt;&lt;br/&gt;The results of this research are to be disseminated in papers in the principal journals and conferences in machine learning, data mining, and optimization as well as in the form of software packages via the WWW (http://www-users.cs.umn.edu/~boley/ML-Optimization).&lt;br/&gt;&lt;br/&gt;The project depends on the interaction between different disciplines and applications areas, which will attract students from a variety of backgrounds at both the graduate and undergraduate level.  Some research tasks are suitable as projects in classes on linear algebra, optimization, data mining, machine learning and are to be developed for both undergraduate and graduate students.  Undergraduate students, including women and members of underrepresented groups, will see the value of mathematical algorithms to solve real problems of interest to them.</AbstractNarration>
<MinAmdLetterDate>08/24/2013</MinAmdLetterDate>
<MaxAmdLetterDate>07/08/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319749</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Boley</LastName>
<PI_MID_INIT>L</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel L Boley</PI_FULL_NAME>
<EmailAddress>boley@cs.umn.edu</EmailAddress>
<PI_PHON>6126253887</PI_PHON>
<NSF_ID>000667335</NSF_ID>
<StartDate>08/24/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Minnesota-Twin Cities</Name>
<CityName>Minneapolis</CityName>
<ZipCode>554552070</ZipCode>
<PhoneNumber>6126245599</PhoneNumber>
<StreetAddress>200 OAK ST SE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Minnesota</StateName>
<StateCode>MN</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MN05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>555917996</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF MINNESOTA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>117178941</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Minnesota-Twin Cities]]></Name>
<CityName>Minneapolis</CityName>
<StateCode>MN</StateCode>
<ZipCode>554550159</ZipCode>
<StreetAddress><![CDATA[200 Union Street SE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Minnesota</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MN05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramElement>
<Code>7495</Code>
<Text>Robust Intelligence</Text>
</ProgramElement>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>7495</Code>
<Text>ROBUST INTELLIGENCE</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~271888</FUND_OBLG>
<FUND_OBLG>2014~181578</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Intellectual Merit</p> <p>Scalable Optimization methods are the computational tools behind many successful tasks in economic analysis, machine learning, data analytics.&nbsp; computer vision, and pattern recognition.&nbsp; Traditional analyses of the convergence of optimization methods provide global bounds that guarantee convergence.&nbsp; But the price one pays for guaranteed global bounds is that the bounds are much more pessimistic than observed practice.&nbsp; This project was a first attempt to explain the detailed bahavior of such methods in practice.&nbsp; The results show that many methods go through a series of stages in which the optimal acceleration strategy can change radically.&nbsp; This leads to potential substantial, qualitative improvements in the behavior of the methods.</p> <p><br />Broader Impact</p> <p>Applications of this work were explored in the area of network analysis and bioinformatics.&nbsp; Social networks, computer networks, traffic networks, are all examples of networks that can be modelled as graphs with vertices and edges.&nbsp; The analysis of networks with one-way edges is much more challenging compared to graphs with undirected edges.&nbsp; However, one outcome of this project has been to show that many properties for directed graphs can be computed using almost the same formulas as for undirected graphs.&nbsp; This includes estimated the effective connectivity of vertices in terms of average one-way hitting or round-trip commute times.&nbsp; As part of this project, the propagation of trust through a social network was investigated.&nbsp; If the network is seeded with only a few pair-wise trust values, based on an initial series of transactions between two actors (vertices), one can rapidly predict trust values between any pair of actors in the network.&nbsp; It is also possible to compute the trust values if one must treat one node in the network as a pariah, such as if it is known to be a bad actor.</p><br> <p>            Last Modified: 10/23/2018<br>      Modified by: Daniel&nbsp;L&nbsp;Boley</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intellectual Merit  Scalable Optimization methods are the computational tools behind many successful tasks in economic analysis, machine learning, data analytics.  computer vision, and pattern recognition.  Traditional analyses of the convergence of optimization methods provide global bounds that guarantee convergence.  But the price one pays for guaranteed global bounds is that the bounds are much more pessimistic than observed practice.  This project was a first attempt to explain the detailed bahavior of such methods in practice.  The results show that many methods go through a series of stages in which the optimal acceleration strategy can change radically.  This leads to potential substantial, qualitative improvements in the behavior of the methods.   Broader Impact  Applications of this work were explored in the area of network analysis and bioinformatics.  Social networks, computer networks, traffic networks, are all examples of networks that can be modelled as graphs with vertices and edges.  The analysis of networks with one-way edges is much more challenging compared to graphs with undirected edges.  However, one outcome of this project has been to show that many properties for directed graphs can be computed using almost the same formulas as for undirected graphs.  This includes estimated the effective connectivity of vertices in terms of average one-way hitting or round-trip commute times.  As part of this project, the propagation of trust through a social network was investigated.  If the network is seeded with only a few pair-wise trust values, based on an initial series of transactions between two actors (vertices), one can rapidly predict trust values between any pair of actors in the network.  It is also possible to compute the trust values if one must treat one node in the network as a pariah, such as if it is known to be a bad actor.       Last Modified: 10/23/2018       Submitted by: Daniel L Boley]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

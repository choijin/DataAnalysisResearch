<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Generalized Network Slicing for NSF OpenCloud</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>296143.00</AwardTotalIntnAmount>
<AwardAmount>296143</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>John Brassil</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project will demonstrate the feasibility of generalized network slicing for Software Defined Networks (SDN) that would enable multiple multi-tenant virtual clouds on the same physical infrastructure.  The generalized network slicing is aimed at network operators as opposed to the end users or tenants of a cloud. The network operators require network slicing with the ability to specify performance, topology, network programmability, and independent address space and require performance isolation. In this regard the proposed network slicing is distinct compared to other efforts in the broader area of network virtualization and can be used independent of network virtualization aimed at supporting 100s and 1000s of cloud tenants.&lt;br/&gt;&lt;br/&gt;The project will demonstrate generalized network slicing system by focusing on four fundamental challenges:&lt;br/&gt;       - Topology Mapping. Goal is to allow an experimenter or a tenant to specify topology of her network slice and map the (virtual) slice topology on the physical network and maintain this mapping as both physical and slice topologies change over time.&lt;br/&gt;       - Address Space Mapping. Goal is to allow a tenant to use her own private address space and translate the private address space to the physical address space while exploiting packet forwarding capabilities of the existing devices.&lt;br/&gt;       - Control Function Mapping. Goal is to allow each tenant to have SDN style programming capability of her virtual network slice and map control functions on to the corresponding physical instantiation of the network.&lt;br/&gt;       - Performance Isolation. Goal is to allow each tenant to specify resource requirements for her network slice and allocate and police resource usage for each virtual slice to ensure performance isolation.&lt;br/&gt;&lt;br/&gt;The project will focus on demonstrating the functionality and gaining valuable experience with experimentation. This will help the community to subsequently focus on performance, scale, robustness, and other attributes of the solution that are needed for a real world deployment.&lt;br/&gt;&lt;br/&gt;The cloud is rapidly changing the face of computing, and as such, is having an increasing effect on experimental systems research, teaching and research in the broader Computer Science community, and how research is done across the breadth of science and engineering. By demonstrating the feasibility of network slicing as an important building block of a research cloud this project will inform the the on-going discussion about the cloud?s evolution.</AbstractNarration>
<MinAmdLetterDate>08/12/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/12/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1343906</AwardID>
<Investigator>
<FirstName>Nick</FirstName>
<LastName>McKeown</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nick W McKeown</PI_FULL_NAME>
<EmailAddress>nickm@ee.stanford.edu</EmailAddress>
<PI_PHON>6507253641</PI_PHON>
<NSF_ID>000487607</NSF_ID>
<StartDate>08/12/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Stanford University</Name>
<CityName>Stanford</CityName>
<ZipCode>943052004</ZipCode>
<PhoneNumber>6507232300</PhoneNumber>
<StreetAddress>450 Jane Stanford Way</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009214214</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>LELAND STANFORD JUNIOR UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009214214</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Stanford University]]></Name>
<CityName>Stanford</CityName>
<StateCode>CA</StateCode>
<ZipCode>943059025</ZipCode>
<StreetAddress><![CDATA[353 Serra Mall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramReference>
<Code>7363</Code>
<Text>RES IN NETWORKING TECH &amp; SYS</Text>
</ProgramReference>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>8002</Code>
<Text>CISE Research Resources</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~296143</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><h1>NSF EAGER Generalized Network Slicing: Outcomes Report</h1> <p class="Default">&nbsp;</p> <p class="Default">We proposed an exploratory project to demonstrate the feasibility of generalized network slicing?for SDN that would enable multiple virtual tenant networks on the same physical network. We focused on four fundamental challenges:</p> <p class="Default">&nbsp;</p> <ul> <li>Topology Mapping. Allow a tenant to specify topology of her?virtual network (a slice) and map the (virtual) topology on the physical network and maintain this mapping as both physical and virtual topologies change over time. </li> </ul> <p class="Default">&nbsp;</p> <ul> <li>Address Space Mapping. Allow a tenant to use her own private address space and translate the private address space to the physical address space while exploiting packet forwarding capabilities of the existing devices. </li> </ul> <p class="Default">&nbsp;</p> <ul> <li>Control Function Mapping. Allow each tenant to have SDN style programming capability of her virtual network and map control functions on to the corresponding physical instantiation of the network. </li> </ul> <p class="Default">&nbsp;</p> <ul> <li>Performance Isolation. Allow each tenant to specify resource requirements for?her network slice and allocate and police resource usage for each virtual slice to ensure performance isolation.</li> </ul> <p class="Default">&nbsp;</p> <ul> <li>Control of Programmable Forwarding: Give more control to a virtual network operator using programmable data plane capabilities made possible by P4 (<a href="http://p4.org/">http://p4.org/</a>) and a new class of programmable switches that are starting to become available. </li> </ul> <p class="Default">&nbsp;</p> <p>In collaboration with Open Networking Laboratory (ON.Lab) we developed OpenVirteX (OVX), a network virtualization platform that enables operators to create and manage virtual Software Defined Networks (vSDNs) on behalf of their tenants. Tenants are free to specify the topology and addressing scheme of their vSDN, and run their own Network Operating System (NOS) to control it. Since OpenVirteX logically decouples vSDNs from the infrastructure, it also enables the introduction of features such as link and switch resiliency, and network snapshotting and migration of these tenant networks. OVX functions as an OpenFlow controller proxy between an operator&rsquo;s physical network and the tenants&rsquo; network OSes. Our evaluations of OVX demonstrated it is capable of presenting tenants with configurable vSDNs while incurring a modest overhead to the control channel.</p> <p class="Default">&nbsp;</p> <p>We deployed OVX on Internet 2 NDDI, a nation-wide research network, to demonstrate its capabilities in a live physical WAN. We ran two vSDNs, one a copy of the I2 topology and the other, a single giant switch. Each vSDN was controlled by its network OS, ONOS and Floodlight, respectively, which ran unique applications on I2 WAN.</p> <p class="Default">We open sourced OVX and it is available on github with an Apache 2.0 license and many R&amp;E networks deployed and experimented with OVX.&nbsp;</p> <p class="Default">&nbsp;</p> <p class="Default">In collaboration with Princeton University, VMWare, and Barefoot Networks, we developed PISCES, a software switch derived from Open vSwitch (OVS), a hard-wired hypervisor switch, whose behavior is customized using P4. PISCES is not hard-wired to specific protocols; this independence makes it easy to add new features. We demonstrated how the compiler can analyze the high-level specification to optimize forwarding performance. Our evaluation shows that PISCES performs comparably to OVS and that PISCES programs are about 40 times shorter than equivalent changes to OVS source code.</p> <p class="Default">&nbsp;</p> <p>We have made PISCES available as open-source on github at <a href="https://github.com/P4-vSwitch">https://github.com/P4-vSwitch</a> with significant interest in the community.</p> <p class="Default">&nbsp;</p><br> <p>            Last Modified: 11/14/2016<br>      Modified by: Nick&nbsp;W&nbsp;Mckeown</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[NSF EAGER Generalized Network Slicing: Outcomes Report   We proposed an exploratory project to demonstrate the feasibility of generalized network slicing?for SDN that would enable multiple virtual tenant networks on the same physical network. We focused on four fundamental challenges:    Topology Mapping. Allow a tenant to specify topology of her?virtual network (a slice) and map the (virtual) topology on the physical network and maintain this mapping as both physical and virtual topologies change over time.      Address Space Mapping. Allow a tenant to use her own private address space and translate the private address space to the physical address space while exploiting packet forwarding capabilities of the existing devices.      Control Function Mapping. Allow each tenant to have SDN style programming capability of her virtual network and map control functions on to the corresponding physical instantiation of the network.      Performance Isolation. Allow each tenant to specify resource requirements for?her network slice and allocate and police resource usage for each virtual slice to ensure performance isolation.     Control of Programmable Forwarding: Give more control to a virtual network operator using programmable data plane capabilities made possible by P4 (http://p4.org/) and a new class of programmable switches that are starting to become available.      In collaboration with Open Networking Laboratory (ON.Lab) we developed OpenVirteX (OVX), a network virtualization platform that enables operators to create and manage virtual Software Defined Networks (vSDNs) on behalf of their tenants. Tenants are free to specify the topology and addressing scheme of their vSDN, and run their own Network Operating System (NOS) to control it. Since OpenVirteX logically decouples vSDNs from the infrastructure, it also enables the introduction of features such as link and switch resiliency, and network snapshotting and migration of these tenant networks. OVX functions as an OpenFlow controller proxy between an operator?s physical network and the tenants? network OSes. Our evaluations of OVX demonstrated it is capable of presenting tenants with configurable vSDNs while incurring a modest overhead to the control channel.    We deployed OVX on Internet 2 NDDI, a nation-wide research network, to demonstrate its capabilities in a live physical WAN. We ran two vSDNs, one a copy of the I2 topology and the other, a single giant switch. Each vSDN was controlled by its network OS, ONOS and Floodlight, respectively, which ran unique applications on I2 WAN. We open sourced OVX and it is available on github with an Apache 2.0 license and many R&amp;E networks deployed and experimented with OVX.    In collaboration with Princeton University, VMWare, and Barefoot Networks, we developed PISCES, a software switch derived from Open vSwitch (OVS), a hard-wired hypervisor switch, whose behavior is customized using P4. PISCES is not hard-wired to specific protocols; this independence makes it easy to add new features. We demonstrated how the compiler can analyze the high-level specification to optimize forwarding performance. Our evaluation shows that PISCES performs comparably to OVS and that PISCES programs are about 40 times shorter than equivalent changes to OVS source code.    We have made PISCES available as open-source on github at https://github.com/P4-vSwitch with significant interest in the community.         Last Modified: 11/14/2016       Submitted by: Nick W Mckeown]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

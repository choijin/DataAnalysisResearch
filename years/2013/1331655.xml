<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: Programming Standing Up</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/11/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>152848.00</AwardTotalIntnAmount>
<AwardAmount>152848</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07050000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>EEC</Abbreviation>
<LongName>Div Of Engineering Education and Centers</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Donna Riley</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This engineering education research project will develop the software and high school curricula to teach programming using mobile devices that will allow students to walk around and interact with each other as they develop programs for virtual robotics competitions.  The project is driven by the hypothesis that a mobile, collaborative programming platform will improve learning outcomes in designing, generating, and evaluating algorithmic knowledge.  The hypothesis has been subdivided into four measurable outcomes focusing on learning, transfer of programming knowledge, engagement, and procedures.  Both learning and system development are addressed in the proposed research.&lt;br/&gt;&lt;br/&gt;The broader significance and importance of this project, if successful, are to fundamentally change how students learn computer literacy.  Rather than sitting at a computer to develop programs, students actively move around and interact in the task of preparing for robot competitions.  This work may engage a more diverse group of students in learning the basics of programming, a key skill for the 21st century workforce.</AbstractNarration>
<MinAmdLetterDate>04/15/2013</MinAmdLetterDate>
<MaxAmdLetterDate>04/15/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1331655</AwardID>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Berland</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Matthew Berland</PI_FULL_NAME>
<EmailAddress>mberland@wisc.edu</EmailAddress>
<PI_PHON>6082637379</PI_PHON>
<NSF_ID>000557531</NSF_ID>
<StartDate>04/15/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Wisconsin-Madison</Name>
<CityName>MADISON</CityName>
<ZipCode>537151218</ZipCode>
<PhoneNumber>6082623822</PhoneNumber>
<StreetAddress>21 North Park Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 6401]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<StateCode>WI</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WI02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>161202122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WISCONSIN SYSTEM</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041188822</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Wisconsin Center for Education Research]]></Name>
<CityName>Madison</CityName>
<StateCode>WI</StateCode>
<ZipCode>537061706</ZipCode>
<StreetAddress><![CDATA[1025 West Johnson Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Wisconsin</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WI02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1340</Code>
<Text>EngEd-Engineering Education</Text>
</ProgramElement>
<ProgramReference>
<Code>110E</Code>
<Text>EDUCATION RESEARCH</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~152848</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Computer programming is frequently taught (and learned) in a traditional single-user, single-computer, assignment-based way, but we know that this is rarely the best way to learn complex content. In this project, we explored how making beginner computer programming both mobile (on phones) and social (with friends) can make it easier to learn. In short, we found that it was easier to learn beginner computer programming in a mobile, social setting for a few reasons: primarily, if you explain your computer program to somebody else, you understand it better yourself; if you use your hands and feet to try out a program, it is fundamentally easier to understand; embedding programming in a multiplayer game makes it easier for students to try out things that do not work; and tinkering can be an effective way to learn computer programming.<br /><br />In the process of finding out how a mobile, social game might help people learn to program, we pioneered a couple of new ways to understand how people learn. Specifically, we adapted and refined "educational data mining" and "learning analytics" techniques to better understand how students' behaviors and how their programs changed over time. Understanding how, when, and why students get better at programming can help us teach programming more effectively in many different situations.<br /><br />That said, other research has suggested that students do not learn effectively without teachers, but teachers rarely have the kind of resources and information that would be most helpful to have when teaching programming. We built a system by which teachers could see (in real time) how their students' programs were evolving so they could better match students together. Teachers that used our system reported that it was very helpful for making matches and for helping their students learn. However, there is a lot more work that needs to be done on how best to help teachers help their students and how to support collaboration live in a computer science or engineering classroom.<br /><br />In sum, our findings highlight the important role of both collaboration and tinkering in learning to program. This project opened up several new and promising avenues on how best to teach programming, how to understand where students have problems learning to program, and how to support all students in learning to program.&nbsp;</p><br> <p>            Last Modified: 11/25/2014<br>      Modified by: Matthew&nbsp;Berland</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Computer programming is frequently taught (and learned) in a traditional single-user, single-computer, assignment-based way, but we know that this is rarely the best way to learn complex content. In this project, we explored how making beginner computer programming both mobile (on phones) and social (with friends) can make it easier to learn. In short, we found that it was easier to learn beginner computer programming in a mobile, social setting for a few reasons: primarily, if you explain your computer program to somebody else, you understand it better yourself; if you use your hands and feet to try out a program, it is fundamentally easier to understand; embedding programming in a multiplayer game makes it easier for students to try out things that do not work; and tinkering can be an effective way to learn computer programming.  In the process of finding out how a mobile, social game might help people learn to program, we pioneered a couple of new ways to understand how people learn. Specifically, we adapted and refined "educational data mining" and "learning analytics" techniques to better understand how students' behaviors and how their programs changed over time. Understanding how, when, and why students get better at programming can help us teach programming more effectively in many different situations.  That said, other research has suggested that students do not learn effectively without teachers, but teachers rarely have the kind of resources and information that would be most helpful to have when teaching programming. We built a system by which teachers could see (in real time) how their students' programs were evolving so they could better match students together. Teachers that used our system reported that it was very helpful for making matches and for helping their students learn. However, there is a lot more work that needs to be done on how best to help teachers help their students and how to support collaboration live in a computer science or engineering classroom.  In sum, our findings highlight the important role of both collaboration and tinkering in learning to program. This project opened up several new and promising avenues on how best to teach programming, how to understand where students have problems learning to program, and how to support all students in learning to program.        Last Modified: 11/25/2014       Submitted by: Matthew Berland]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

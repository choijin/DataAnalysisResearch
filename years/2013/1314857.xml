<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Medium: Collaborative: DIORE: Digital Insertion and Observation Resistant Execution</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>799499.00</AwardTotalIntnAmount>
<AwardAmount>815499</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Cloud computing allows users to delegate data and computation to cloud providers, at the cost of giving up physical control of their computing infrastructure. An attacker with physical access to the computing platform can perform various physical attacks, referred to as digital insertion and observation attacks, which include probing memory buses, tampering with memory, and cold-boot style attacks.  While memory encryption can prevent direct leakage of data under digital observation, memory access patterns to even encrypted data may leak sensitive information. This work will allow organizations to securely outsource their computing infrastructure to an untrusted cloud provider, while preserving a similar level of security as if hosting the infrastructure in house&lt;br/&gt;&lt;br/&gt;This project will develop DIORE (Digital Insertion and Observation Resistant Execution) which is a combined hardware software platform immune to digital insertion and observation attacks. DIORE provides memory-trace oblivious execution, relying on efficient hardware implementations of Oblivious RAM, and novel compiler techniques for partitioning programs such that Oblivious RAM accesses are minimized. This ensures that an adversary with access to a program execution's memory trace learns nothing about the code or data other than what is revealed intentionally. DIORE opens up possibilities for new cloud applications involving sensitive information such as genomic, medical, or financial data -- domains that are considered too privacy sensitive for today's cloud.</AbstractNarration>
<MinAmdLetterDate>06/14/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/11/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1314857</AwardID>
<Investigator>
<FirstName>Samrat</FirstName>
<LastName>Bhattacharjee</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Samrat Bhattacharjee</PI_FULL_NAME>
<EmailAddress>bobby@cs.umd.edu</EmailAddress>
<PI_PHON>3014051658</PI_PHON>
<NSF_ID>000261786</NSF_ID>
<StartDate>06/14/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Hicks</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael W Hicks</PI_FULL_NAME>
<EmailAddress>mwh@cs.umd.edu</EmailAddress>
<PI_PHON>3014052710</PI_PHON>
<NSF_ID>000116426</NSF_ID>
<StartDate>06/14/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Elaine</FirstName>
<LastName>Shi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Elaine Shi</PI_FULL_NAME>
<EmailAddress>runting@cs.cmu.edu</EmailAddress>
<PI_PHON>4122682565</PI_PHON>
<NSF_ID>000624210</NSF_ID>
<StartDate>06/14/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MD05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>790934285</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MARYLAND, COLLEGE PARK</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003256088</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Maryland, College Park]]></Name>
<CityName>College Park</CityName>
<StateCode>MD</StateCode>
<ZipCode>207425141</ZipCode>
<StreetAddress><![CDATA[3112 LEE BLDG 7809 Regents Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MD05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~799499</FUND_OBLG>
<FUND_OBLG>2014~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>Cloud computing is revolutionizing technology services, allowing clients to</span></p> <p><span>delegate data storage and computing needs to separate providers. This</span></p> <p><span>research addressed security challenges that arise when applications wish to</span></p> <p><span>store and compute on private data. We formalized the notion of an</span></p> <p><span>application that is memory-trace oblivious (MTO), which means it is able to</span></p> <p><span>keep secrets hidden even from the most unscrupulous of cloud providers,</span></p> <p><span>with fine-grained access to hardware measurements. We developed Ghostrider,</span></p> <p><span>a hardware/software co-design that can ensure MTO at low performance cost.</span></p> <p><span>Its key element is special hardware called oblivious RAM which regularly</span></p> <p><span>scrambles where information is stored. Not all computers may have oblivious</span></p> <p><span>RAM, however, and other approaches to hiding can sometimes be more</span></p> <p><span>efficient. As such, we developed Lobliv, a special programming language can</span></p> <p><span>be used to program oblivious RAM, but also related services, in software.</span></p> <p><span>The language provides security-by-construction: Mathematical proof ensures</span></p> <p><span>that all programs you can write in Lobliv are sure to be MTO.</span></p> <p><span>&nbsp;</span></p> <p><span>Along with theoretical properties of secure execution, we have</span></p> <p><span>developed new Operating Systems abstractions that aid in secure and</span></p> <p><span>high performance programming.&nbsp; We have introduced Light-weight</span></p> <p><span>contexts (lwCs) that provides independent units of protection,</span></p> <p><span>privilege, and execution state within a process. A process may include</span></p> <p><span>several lwCs, each with possibly different views of memory, file</span></p> <p><span>descriptors, and access capabilities. We have demonsrated how lwCs can</span></p> <p><span>be used to efficiently implement important security and performance</span></p> <p><span>primitives including process roll-back (process can return to a prior</span></p> <p><span>recorded state), isolated address spaces (lwCs within the process may</span></p> <p><span>have different views of memory, e.g., isolating sensitive data from</span></p> <p><span>network-facing components or isolating different user sessions), and</span></p> <p><span>privilege separation (in-process reference monitors can arbitrate and</span></p> <p><span>control access).</span></p> <p>&nbsp;</p> <p><span>We have also designed and implemented protections for smart and IoT</span></p> <p><span>devices by exploring the "Trusted Path" primitive.&nbsp; Trusted paths</span></p> <p><span>protect the authenticity, and either integrity or confidentiality, of</span></p> <p><span>communication between a trusted software program and an I/O device.</span></p> <p><span>We have designed a comprehensive framework for user specification of</span></p> <p><span>policies, and have built two systems, SeCloak that provides for on-off</span></p> <p><span>policies with little change to the existing OS kernel, and SeIO--- a</span></p> <p><span>comprehensive framework for trusted IO.</span></p> <p><span>&nbsp;</span></p> <p><span><br /></span></p> <p>&nbsp;</p><br> <p>            Last Modified: 10/11/2018<br>      Modified by: Samrat&nbsp;Bhattacharjee</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Cloud computing is revolutionizing technology services, allowing clients to  delegate data storage and computing needs to separate providers. This  research addressed security challenges that arise when applications wish to  store and compute on private data. We formalized the notion of an  application that is memory-trace oblivious (MTO), which means it is able to  keep secrets hidden even from the most unscrupulous of cloud providers,  with fine-grained access to hardware measurements. We developed Ghostrider,  a hardware/software co-design that can ensure MTO at low performance cost.  Its key element is special hardware called oblivious RAM which regularly  scrambles where information is stored. Not all computers may have oblivious  RAM, however, and other approaches to hiding can sometimes be more  efficient. As such, we developed Lobliv, a special programming language can  be used to program oblivious RAM, but also related services, in software.  The language provides security-by-construction: Mathematical proof ensures  that all programs you can write in Lobliv are sure to be MTO.     Along with theoretical properties of secure execution, we have  developed new Operating Systems abstractions that aid in secure and  high performance programming.  We have introduced Light-weight  contexts (lwCs) that provides independent units of protection,  privilege, and execution state within a process. A process may include  several lwCs, each with possibly different views of memory, file  descriptors, and access capabilities. We have demonsrated how lwCs can  be used to efficiently implement important security and performance  primitives including process roll-back (process can return to a prior  recorded state), isolated address spaces (lwCs within the process may  have different views of memory, e.g., isolating sensitive data from  network-facing components or isolating different user sessions), and  privilege separation (in-process reference monitors can arbitrate and  control access).     We have also designed and implemented protections for smart and IoT  devices by exploring the "Trusted Path" primitive.  Trusted paths  protect the authenticity, and either integrity or confidentiality, of  communication between a trusted software program and an I/O device.  We have designed a comprehensive framework for user specification of  policies, and have built two systems, SeCloak that provides for on-off  policies with little change to the existing OS kernel, and SeIO--- a  comprehensive framework for trusted IO.                Last Modified: 10/11/2018       Submitted by: Samrat Bhattacharjee]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

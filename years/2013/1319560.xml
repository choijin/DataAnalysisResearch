<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Collaborative Research: Gray Box Testing of Complex Cyber-Physical Systems Using Optimization and Optimal Control Techniques</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>249998.00</AwardTotalIntnAmount>
<AwardAmount>265998</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The project develops new methodologies for testing complex Cyber-Physical Systems that perform safety-critical tasks in a wide variety of application domains such as automotive, airspace, medical devices and power generation. The primary challenge in these applications lies in the complexity of the physical system, modeled as systems of non-linear Ordinary Differential Equations (ODE) with a large number of state variables, and the interaction of this physical subsystem with a software-based controller. In many industrial applications, these models are not even available in a closed-form representation and only system simulations can be performed. In this project, ideas from optimization and optimal control theory are employed in order to drive the process of state-space exploration for system verification. The theory of robustness metrics for temporal logic specifications is combined with non-smooth optimization theory which results in gradient descent search methods for multi-modal CPS. At a higher level, concrete and symbolic execution techniques are combined to enhance the performance of the search methods. The verification methods can be readily integrated into existing industrial strength simulation environments. The target applications for such verification tools are from the domains of medical and automotive applications.&lt;br/&gt;&lt;br/&gt;Verification of complex Cyber-Physical Systems (CPS) is a challenging problem. Continuous and multiple recalls of medical and automotive products due to software errors across virtually all manufacturers establish the urgency and importance of the problem. This project integrates usable verification tools inside existing and widely adopted model-based development platforms. The application focus on the verification of medical and automotive software aims to avoid harmful losses due to errors in these safety-critical systems. The concrete benefit to society is twofold: first, improved system safety and dependability; and, second, reduced development times for new products. The educational aspects of this project revolve around courses that train students on model-based design and verification methods for safety-critical CPS. The educational mission of the project also stresses a "safety first" approach to designing CPS wherein specification and verification are taught as integral steps in the design rather than post-design steps. Besides research publications, avenues of dissemination include sharing of software, models, and course materials via cps-vo.org and other publicly accessible websites.</AbstractNarration>
<MinAmdLetterDate>09/13/2013</MinAmdLetterDate>
<MaxAmdLetterDate>04/17/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319560</AwardID>
<Investigator>
<FirstName>Georgios</FirstName>
<LastName>Fainekos</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Georgios Fainekos</PI_FULL_NAME>
<EmailAddress>fainekos@asu.edu</EmailAddress>
<PI_PHON>4809655479</PI_PHON>
<NSF_ID>000542660</NSF_ID>
<StartDate>09/13/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Arizona State University</Name>
<CityName>TEMPE</CityName>
<ZipCode>852816011</ZipCode>
<PhoneNumber>4809655479</PhoneNumber>
<StreetAddress>ORSPA</StreetAddress>
<StreetAddress2><![CDATA[660 South Mill Avenue, Suite 310]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<StateCode>AZ</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>AZ09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>943360412</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>ARIZONA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>806345658</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Arizona State University]]></Name>
<CityName>Tempe</CityName>
<StateCode>AZ</StateCode>
<ZipCode>852876011</ZipCode>
<StreetAddress><![CDATA[PO Box 852876011]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>AZ09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~249998</FUND_OBLG>
<FUND_OBLG>2015~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This collaborative research project investigated systematic methods for testing complex Cyber-Physical Systems. Cyber-Physical Systems (CPS) such as automotive software and medical devices incorporate software that runs in a closed feedback loop within a complex physical environment. The benefits of embedding computational intelligence in our critical infrastructure and devices are overwhelming: improved levels of system efficiency, safety, cost reduction, customization and usability. However, the consequences of failures and design errors in such systems can range from serious injury (and even deaths) to major economic negative consequences. For example, both the automotive and the medical device industries issue multiple software-related recalls on a yearly basis. Many of these recalls can lead to life threatening situations. Concrete examples range from cruise control systems that do not disengage to infusion pumps that may overdose patients. As a result, the process of systematically testing these systems can expose potential faults that can then be evaluated for possible mitigations.&nbsp; Yet, the large state-spaces and combination of continuous (physical) dynamics with discrete (cyber-software) switches makes the systematic testing hard.</p> <p>The project investigated gray-box approaches to the model-based testing of CPS by developing tools that combined a variety of symbolic approaches with simulation-guided testing. The project resulted in many new classes of approaches to systematic testing and falsification of CPS. One class of approaches involved the use of multiple trajectory segments that are systematically spliced together to form a single trajectory of the system under test that can potentially lead to violations. Another class of approaches combined gradient descent techniques for continuous systems with robustness guided testing to systematically steer the executions of the systems towards a potentially faulty behavior. As byproduct of these studies, temporal logic monitoring tools were also developed. Our approaches were implemented in prototype tools and tested against a series of case studies. One set of case studies involved control software for automotive systems in conjunction with plant models expressed in Simulink/Stateflow. Another set of case studies involved artificial pancreas medical devices that are currently in late stage clinical trials on human patients. These studies were successful in discovering interesting corner case behaviors in the systems under study.</p> <p>The project directly funded two PhD students at Arizona State University (Houssam Abbas and Shakiba Yaghoubi) and it produced multiple joint papers authored by the University of Colorado and the Arizona State University teams. Furthermore, the PIs collaborated on course material pertaining to an undergraduate theory of computation and a graduate course on the foundations of CPS. &nbsp;The work done in the project was also disseminated through talks at various conferences, an invited paper at EMSOFT 2016 and an invited tutorial at ACC 2015. Some of the tools are publicly available at the web-site:</p> <p><a href="https://sites.google.com/a/asu.edu/s-taliro/" target="_blank">https://sites.google.com/a/asu.edu/s-taliro/</a></p> <p>under General Public License. Therefore, they can be directly utilized by other academic and industrial groups on a variety of different applications. For example, the software tools are used by industry groups in Toyota and Bosch. &nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 01/02/2018<br>      Modified by: Georgios&nbsp;Fainekos</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2018/1319560/1319560_10280164_1514876958553_staliro_vprocess--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1319560/1319560_10280164_1514876958553_staliro_vprocess--rgov-800width.jpg" title="S-TaLiRo Software Tool"><img src="/por/images/Reports/POR/2018/1319560/1319560_10280164_1514876958553_staliro_vprocess--rgov-66x44.jpg" alt="S-TaLiRo Software Tool"></a> <div class="imageCaptionContainer"> <div class="imageCaption">The publicly available software tool S-TaLiRo and the functionality it supports for automatic test case generation for CPS.</div> <div class="imageCredit">Georgios Fainekos</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Georgios&nbsp;Fainekos</div> <div class="imageTitle">S-TaLiRo Software Tool</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This collaborative research project investigated systematic methods for testing complex Cyber-Physical Systems. Cyber-Physical Systems (CPS) such as automotive software and medical devices incorporate software that runs in a closed feedback loop within a complex physical environment. The benefits of embedding computational intelligence in our critical infrastructure and devices are overwhelming: improved levels of system efficiency, safety, cost reduction, customization and usability. However, the consequences of failures and design errors in such systems can range from serious injury (and even deaths) to major economic negative consequences. For example, both the automotive and the medical device industries issue multiple software-related recalls on a yearly basis. Many of these recalls can lead to life threatening situations. Concrete examples range from cruise control systems that do not disengage to infusion pumps that may overdose patients. As a result, the process of systematically testing these systems can expose potential faults that can then be evaluated for possible mitigations.  Yet, the large state-spaces and combination of continuous (physical) dynamics with discrete (cyber-software) switches makes the systematic testing hard.  The project investigated gray-box approaches to the model-based testing of CPS by developing tools that combined a variety of symbolic approaches with simulation-guided testing. The project resulted in many new classes of approaches to systematic testing and falsification of CPS. One class of approaches involved the use of multiple trajectory segments that are systematically spliced together to form a single trajectory of the system under test that can potentially lead to violations. Another class of approaches combined gradient descent techniques for continuous systems with robustness guided testing to systematically steer the executions of the systems towards a potentially faulty behavior. As byproduct of these studies, temporal logic monitoring tools were also developed. Our approaches were implemented in prototype tools and tested against a series of case studies. One set of case studies involved control software for automotive systems in conjunction with plant models expressed in Simulink/Stateflow. Another set of case studies involved artificial pancreas medical devices that are currently in late stage clinical trials on human patients. These studies were successful in discovering interesting corner case behaviors in the systems under study.  The project directly funded two PhD students at Arizona State University (Houssam Abbas and Shakiba Yaghoubi) and it produced multiple joint papers authored by the University of Colorado and the Arizona State University teams. Furthermore, the PIs collaborated on course material pertaining to an undergraduate theory of computation and a graduate course on the foundations of CPS.  The work done in the project was also disseminated through talks at various conferences, an invited paper at EMSOFT 2016 and an invited tutorial at ACC 2015. Some of the tools are publicly available at the web-site:  https://sites.google.com/a/asu.edu/s-taliro/  under General Public License. Therefore, they can be directly utilized by other academic and industrial groups on a variety of different applications. For example, the software tools are used by industry groups in Toyota and Bosch.            Last Modified: 01/02/2018       Submitted by: Georgios Fainekos]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CIF: Small: Distributed Storage Systems from Combinatorial Designs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>12/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>399999.00</AwardTotalIntnAmount>
<AwardAmount>399999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Phillip Regalia</SignBlockName>
<PO_EMAI>pregalia@nsf.gov</PO_EMAI>
<PO_PHON>7032922981</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Large scale content sharing, social networking sites and cloud storage providers require massive amounts of data (on the order of hundreds of petabytes) to be stored in a distributed manner. In these systems, node failures and loss of data are the norm rather than the exception. Thus, it is of critical importance to investigate storage techniques and algorithms that (a) allow for data recovery in the presence of node failures and (b) allow for efficient regeneration of failed nodes. It is, of course, desirable to perform the regeneration in a distributed manner and optimize performance metrics associated with it. For instance, it is desirable that the regeneration process be fast and that only a few nodes be contacted for the repair. The investigator will research storage methods that allow for very simple and efficient repair while simultaneously allowing for data recovery in the presence of a large number of failures. The research involves the investigation of distributed storage systems that are resilient to multiple failures and can be repaired in an exact and uncoded manner; i.e., the new node may produce an exact copy of the failed node by simply downloading packets from the surviving nodes, with no computational overhead. &lt;br/&gt;&lt;br/&gt;Replication codes are increasingly deployed in large-scale data centers in use by major internet companies. Advances in reconstruction codes are expected to translate into millions of dollars in savings in maintenance costs in such data centers. To ensure accessibility of the results of this research, implementation will be carried out using the open source Hadoop distributed file system, the preferred platform for cutting-edge research and development in distributed cloud storage.</AbstractNarration>
<MinAmdLetterDate>06/10/2013</MinAmdLetterDate>
<MaxAmdLetterDate>05/31/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1320416</AwardID>
<Investigator>
<FirstName>Aditya</FirstName>
<LastName>Ramamoorthy</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Aditya Ramamoorthy</PI_FULL_NAME>
<EmailAddress>adityar@iastate.edu</EmailAddress>
<PI_PHON>5152941583</PI_PHON>
<NSF_ID>000305890</NSF_ID>
<StartDate>06/10/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Iowa State University</Name>
<CityName>AMES</CityName>
<ZipCode>500112207</ZipCode>
<PhoneNumber>5152945225</PhoneNumber>
<StreetAddress>1138 Pearson</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<StateCode>IA</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IA04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>005309844</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>IOWA STATE UNIVERSITY OF SCIENCE AND TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>005309844</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Iowa State University]]></Name>
<CityName>Ames</CityName>
<StateCode>IA</StateCode>
<ZipCode>500112207</ZipCode>
<StreetAddress><![CDATA[3222 Coover Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IA04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7935</Code>
<Text>COMM &amp; INFORMATION THEORY</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7935</Code>
<Text>COMM &amp; INFORMATION THEORY</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~399999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Combinatorial design theory has its roots in recreational mathematics and is concerned with the arrangement of the elements of a finite set into subsets, such that the collection of subsets has certain nice properties. The qualifier ``nice'' refers to tractable mathematical properties. The overarching goal of this project was to investigate the applications of combinatorial designs in various modern problems ranging from distributed storage systems, large scale content caching and networked function computation.</p> <p>Large scale distributed storage systems are used in several contexts, such as social networking sites (Facebook, Twitter etc.) and cloud storage (Amazon, Microsoft etc.). The widespread adoption of these systems has introduced several new research problems. For instance, these systems often consist of individually unreliable nodes; however, the system needs to have reliable data access. When nodes fail, the system needs to be repaired in a speedy manner, by consuming as few resources (drives accessed, energy etc.) as possible. While protecting storage systems against failures is an old problem, in the modern context the issue of reducing the repair overload is new. Exploring the link with combinatorial designs resulted in several new findings in this area.</p> <p>Caching is the technique of choice in the large scale distribution of content over the Internet. Indeed caching is routinely used by video sharing websites to reduce the overall latency experienced by an end user. In the last five years, there have been significant findings that suggest that the judicious usage of information theoretic techniques can make caching significantly more efficient. Within this domain, this project studied fundamental limits on caching and practical approaches for applying information theoretic concepts to caching.</p> <p>Finally, the last part of the project investigated novel impossibility results within the area of function computation over networks. Intuitively, it is impossible to compute a function if one does not know one of the inputs. In a networked situation information can travel in complicated ways over different paths, so what is possible or impossible to compute over networks becomes much harder to reason about. This project examined several combinatorial design theory inspired methods for this problem.</p> <p>Above all this project helped to facilitate a crucial cross-fertilization between basic mathematics and engineering applications. This led to several new findings that have been published in various journals and conferences and disseminated to various communities.</p> <p>This project helped support (in part) the graduate and postdoctoral education of three graduate students and one postdoctoral fellow. Two of them have gone on to careers in academia and two will be joining the workforce soon. The project has also allowed the integration of the research findings into existing courses being taught at Iowa State University.</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/24/2019<br>      Modified by: Aditya&nbsp;Ramamoorthy</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Combinatorial design theory has its roots in recreational mathematics and is concerned with the arrangement of the elements of a finite set into subsets, such that the collection of subsets has certain nice properties. The qualifier ``nice'' refers to tractable mathematical properties. The overarching goal of this project was to investigate the applications of combinatorial designs in various modern problems ranging from distributed storage systems, large scale content caching and networked function computation.  Large scale distributed storage systems are used in several contexts, such as social networking sites (Facebook, Twitter etc.) and cloud storage (Amazon, Microsoft etc.). The widespread adoption of these systems has introduced several new research problems. For instance, these systems often consist of individually unreliable nodes; however, the system needs to have reliable data access. When nodes fail, the system needs to be repaired in a speedy manner, by consuming as few resources (drives accessed, energy etc.) as possible. While protecting storage systems against failures is an old problem, in the modern context the issue of reducing the repair overload is new. Exploring the link with combinatorial designs resulted in several new findings in this area.  Caching is the technique of choice in the large scale distribution of content over the Internet. Indeed caching is routinely used by video sharing websites to reduce the overall latency experienced by an end user. In the last five years, there have been significant findings that suggest that the judicious usage of information theoretic techniques can make caching significantly more efficient. Within this domain, this project studied fundamental limits on caching and practical approaches for applying information theoretic concepts to caching.  Finally, the last part of the project investigated novel impossibility results within the area of function computation over networks. Intuitively, it is impossible to compute a function if one does not know one of the inputs. In a networked situation information can travel in complicated ways over different paths, so what is possible or impossible to compute over networks becomes much harder to reason about. This project examined several combinatorial design theory inspired methods for this problem.  Above all this project helped to facilitate a crucial cross-fertilization between basic mathematics and engineering applications. This led to several new findings that have been published in various journals and conferences and disseminated to various communities.  This project helped support (in part) the graduate and postdoctoral education of three graduate students and one postdoctoral fellow. Two of them have gone on to careers in academia and two will be joining the workforce soon. The project has also allowed the integration of the research findings into existing courses being taught at Iowa State University.          Last Modified: 05/24/2019       Submitted by: Aditya Ramamoorthy]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative Proposal: Efficient Computer Algebra Techniques for Scalable Verification of Galois Field Arithmetic Circuits</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>205071.00</AwardTotalIntnAmount>
<AwardAmount>205071</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>With the spread of Internet and mobile devices, transferring information safely and securely has become more important than ever. The hardware and software systems utilized in such applications, e.g. cryptography, perform arithmetic computations over Galois fields. The specialized nature and the high complexity of the hardware architectures require manual, custom design, which raises the potential for errors/bugs in the design implementation. Hardware bugs in arithmetic circuits not only cause unintended operation, but they also make cryptosystems vulnerable to security attacks. Validating the correctness of, and bug-catching in, arithmetic hardware is imperative. This project investigates the use of modern Symbolic Computer Algebra techniques for formal verification of Galois field arithmetic circuits. &lt;br/&gt;&lt;br/&gt;Verification of cyber-security is a problem of great importance, and it is attracting a lot of research at the software-level. However, hardware verification of primitive Galois field computations in crypto-systems has not seen much breakthrough. The main reason for this is that the arithmetic circuit architectures employed in cryptography are very complex and their size is extremely large. Conventional verification techniques are unable to scale with respect to the large size. To address these problems, the project aims to integrate computer algebra with circuit analysis techniques for verification. By exploiting the circuit design information, the project will attempt to overcome the complexity of symbolic computation. This research enables design of domain-specific computer-aided verification tools for efficient, scalable verification of Galois field circuits. The project impacts computer-aided verification technology, secure system-design and validation, and it advances fundamental knowledge in both computer algebra and design verification of arithmetic circuits. Enabling the validation of security and privacy of data also, in general, impacts the society.</AbstractNarration>
<MinAmdLetterDate>06/24/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/24/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1320335</AwardID>
<Investigator>
<FirstName>Priyank</FirstName>
<LastName>Kalla</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Priyank Kalla</PI_FULL_NAME>
<EmailAddress>kalla@ece.utah.edu</EmailAddress>
<PI_PHON>8015877617</PI_PHON>
<NSF_ID>000256377</NSF_ID>
<StartDate>06/24/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<StreetAddress2><![CDATA[Second Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009095365</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF UTAH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009095365</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Utah]]></Name>
<CityName/>
<StateCode>UT</StateCode>
<ZipCode>841128930</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~205071</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p style="text-align: left;"><span style="white-space: pre;"> </span>Project Outcomes Report</p> <p style="text-align: left;">With the spread of Internet and mobile devices, transferring information safely and securely has become more important than ever. Galois field (GF) arithmetic forms a critical component in communications and security-related infrastructure comprising hardware and software systems. Therefore, hardware implementations of GF arithmetic requires dedicated, sophisticated and custom-designed circuits. This raises the potential for errors and bugs in the implementations, which may lead to not just erroneous&nbsp;operations but also security vulnerabilities that can be maliciously exploited. Due to their large size and high complexity, validation of &nbsp;such circuits was beyond the capabilities of the state-of-the-art techniques. The objective of this project was to create new knowledge and technology, and engineer efficient verification tools to formally verify the correctness of hardware implementations of GF arithmetic circuits used in cryptography.</p> <p>The project discovered new models, algorithms and computer-aided verification tools for GF arithmetic circuits. Our research exploited concepts that lie at the cross-roads of commutative algebra, algebraic geometry and circuit verification. We demonstrated how the theory and technology of Groebner bases -- a powerful algebraic concept -- can be exploited to validate the circuits. Groebner basis algorithms however exhibit very high complexity. One of the main discoveries of our effort is that the circuits under verification can be analyzed to discover the combinatorial structure inherent in the problem. Exploiting this structure can help to greatly simplify the verification problem.&nbsp;</p> <p>Using our tools and techniques, we have been able to formally prove the&nbsp;correctness of, and catch bugs in, a variety of practical elliptic curve cryptography (ECC) circuits based on GF arithmetic. The U.S. National Institute for Standards and Technology (NIST) standardizes the class of such circuits for use in ECC.&nbsp;Using our techniques we can verify many&nbsp;NIST-standard GF arithmetic crypto-circuits, and our approach can be used as an automatic certification process for hardware to be used in cryptosystems. Another application of our work is to reverse-engineer the polynomial function implemented by a GF arithmetic circuit, which can be used to characterize the bugs in the designs.&nbsp;</p> <p>As another project outcome, a computer-aided verification tool for GF arithmetic circuits has been designed and released to the community through the PI's website. Along with the CAD tool, various GF arithmetic benchmark circuits have been designed, archived, and made available to the hardware verification community to evaluate their tools and techniques on cryptography circuits. The project also delivered educational outcomes. The PI was invited to deliver tutorials on this topic at three different conferences and workshops related to hardware verification: i) the BIRS workshop on theoretical foundations of applied SAT solving, 2014; ii) Intl. conf. on Formal Methods in Computer-Aided Design, 2015; and iii) Intl. High-Level Design Validation and Test Worshop, 2016. The PI has also instituted a new senior- and graduate-level course at his institution on hardware verification using computer algebra techniques. The research outcomes of this project significantly contributed to the development of knowledge and technology-base for this curriculum.</p> <p>The publications, software tools, tutorials and course materials are all freely available from the PI's website at the University of Utah from the URL &nbsp;http://www.ece.utah.edu/~kalla.</p><br> <p>            Last Modified: 02/08/2017<br>      Modified by: Priyank&nbsp;Kalla</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Project Outcomes Report With the spread of Internet and mobile devices, transferring information safely and securely has become more important than ever. Galois field (GF) arithmetic forms a critical component in communications and security-related infrastructure comprising hardware and software systems. Therefore, hardware implementations of GF arithmetic requires dedicated, sophisticated and custom-designed circuits. This raises the potential for errors and bugs in the implementations, which may lead to not just erroneous operations but also security vulnerabilities that can be maliciously exploited. Due to their large size and high complexity, validation of  such circuits was beyond the capabilities of the state-of-the-art techniques. The objective of this project was to create new knowledge and technology, and engineer efficient verification tools to formally verify the correctness of hardware implementations of GF arithmetic circuits used in cryptography.  The project discovered new models, algorithms and computer-aided verification tools for GF arithmetic circuits. Our research exploited concepts that lie at the cross-roads of commutative algebra, algebraic geometry and circuit verification. We demonstrated how the theory and technology of Groebner bases -- a powerful algebraic concept -- can be exploited to validate the circuits. Groebner basis algorithms however exhibit very high complexity. One of the main discoveries of our effort is that the circuits under verification can be analyzed to discover the combinatorial structure inherent in the problem. Exploiting this structure can help to greatly simplify the verification problem.   Using our tools and techniques, we have been able to formally prove the correctness of, and catch bugs in, a variety of practical elliptic curve cryptography (ECC) circuits based on GF arithmetic. The U.S. National Institute for Standards and Technology (NIST) standardizes the class of such circuits for use in ECC. Using our techniques we can verify many NIST-standard GF arithmetic crypto-circuits, and our approach can be used as an automatic certification process for hardware to be used in cryptosystems. Another application of our work is to reverse-engineer the polynomial function implemented by a GF arithmetic circuit, which can be used to characterize the bugs in the designs.   As another project outcome, a computer-aided verification tool for GF arithmetic circuits has been designed and released to the community through the PI's website. Along with the CAD tool, various GF arithmetic benchmark circuits have been designed, archived, and made available to the hardware verification community to evaluate their tools and techniques on cryptography circuits. The project also delivered educational outcomes. The PI was invited to deliver tutorials on this topic at three different conferences and workshops related to hardware verification: i) the BIRS workshop on theoretical foundations of applied SAT solving, 2014; ii) Intl. conf. on Formal Methods in Computer-Aided Design, 2015; and iii) Intl. High-Level Design Validation and Test Worshop, 2016. The PI has also instituted a new senior- and graduate-level course at his institution on hardware verification using computer algebra techniques. The research outcomes of this project significantly contributed to the development of knowledge and technology-base for this curriculum.  The publications, software tools, tutorials and course materials are all freely available from the PI's website at the University of Utah from the URL  http://www.ece.utah.edu/~kalla.       Last Modified: 02/08/2017       Submitted by: Priyank Kalla]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Medium: Collaborative: DIORE: Digital Insertion and Observation Resistant Execution</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>416000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Cloud computing allows users to delegate data and computation to cloud providers, at the cost of giving up physical control of their computing infrastructure. An attacker with physical access to the computing platform can perform various physical attacks, referred to as digital insertion and observation attacks, which include probing memory buses, tampering with memory, and cold-boot style attacks.  While memory encryption can prevent direct leakage of data under digital observation, memory access patterns to even encrypted data may leak sensitive information. This work will allow organizations to securely outsource their computing infrastructure to an untrusted cloud provider, while preserving a similar level of security as if hosting the infrastructure in house&lt;br/&gt;&lt;br/&gt;This project will develop DIORE (Digital Insertion and Observation Resistant Execution) which is a combined hardware software platform immune to digital insertion and observation attacks. DIORE provides memory-trace oblivious execution, relying on efficient hardware implementations of Oblivious RAM, and novel compiler techniques for partitioning programs such that Oblivious RAM accesses are minimized. This ensures that an adversary with access to a program execution's memory trace learns nothing about the code or data other than what is revealed intentionally. DIORE opens up possibilities for new cloud applications involving sensitive information such as genomic, medical, or financial data -- domains that are considered too privacy sensitive for today's cloud.</AbstractNarration>
<MinAmdLetterDate>06/14/2013</MinAmdLetterDate>
<MaxAmdLetterDate>05/23/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1314709</AwardID>
<Investigator>
<FirstName>Mohit</FirstName>
<LastName>Tiwari</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mohit Tiwari</PI_FULL_NAME>
<EmailAddress>tiwari@austin.utexas.edu</EmailAddress>
<PI_PHON>8057084506</PI_PHON>
<NSF_ID>000635277</NSF_ID>
<StartDate>06/14/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName>Austin</CityName>
<StateCode>TX</StateCode>
<ZipCode>787121532</ZipCode>
<StreetAddress><![CDATA[101 East 27th St., Suite 5.300]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~400000</FUND_OBLG>
<FUND_OBLG>2014~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Programs today compute on secret health, financial, or business data, and it is critical that computers transform from overgrown calculators into machines that ensure the confidentiality of users&rsquo; data. In particular, this proposal demonstrates that attackers with physical access to the machine that computes on secret data can learn users&rsquo; secrets from observing only the memory access trace of the program. While prior work uses encryption to hide the content of memory, it leaves the memory address trace unprotected. This proposal demonstrates a concrete attack on sensitive programs like databases, proposes a new algorithmic defense to turn each memory address trace into a cryptographically random trace, adapts the algorithm&nbsp;to be implementable on processors with high memory bandwidth (e.g., reconfigurable logic in the cloud), and improves upon the baseline design through novel processor, compiler, and programming languages.&nbsp;</p> <p>&nbsp;</p> <p>While the direct goals of this project are memory-trace secure systems, this project has bootstrapped significant initial work into pre-emptively addressing all digital side-channels &mdash;- including Spectre, Meltdown, and other speculation-drive side-channels that have been proposed recently &mdash;- through a new processor (and instruction set) designed to explicitly enable control over hardware-level information flows.</p> <p>&nbsp;</p> <p>Further, we have extended the compiler-hardware defense model beyond digital side-channels. In recent work, we show how post-quantum lattice cryptography algorithmscan leak information during both decryption and key-exchange. We have proposed hardware-level masking solutions that tie in with compiler-level techniques. We are working with processor manufacturers to help transition the above research into commercial products.</p><br> <p>            Last Modified: 05/31/2019<br>      Modified by: Mohit&nbsp;Tiwari</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Programs today compute on secret health, financial, or business data, and it is critical that computers transform from overgrown calculators into machines that ensure the confidentiality of users? data. In particular, this proposal demonstrates that attackers with physical access to the machine that computes on secret data can learn users? secrets from observing only the memory access trace of the program. While prior work uses encryption to hide the content of memory, it leaves the memory address trace unprotected. This proposal demonstrates a concrete attack on sensitive programs like databases, proposes a new algorithmic defense to turn each memory address trace into a cryptographically random trace, adapts the algorithm to be implementable on processors with high memory bandwidth (e.g., reconfigurable logic in the cloud), and improves upon the baseline design through novel processor, compiler, and programming languages.      While the direct goals of this project are memory-trace secure systems, this project has bootstrapped significant initial work into pre-emptively addressing all digital side-channels &mdash;- including Spectre, Meltdown, and other speculation-drive side-channels that have been proposed recently &mdash;- through a new processor (and instruction set) designed to explicitly enable control over hardware-level information flows.     Further, we have extended the compiler-hardware defense model beyond digital side-channels. In recent work, we show how post-quantum lattice cryptography algorithmscan leak information during both decryption and key-exchange. We have proposed hardware-level masking solutions that tie in with compiler-level techniques. We are working with processor manufacturers to help transition the above research into commercial products.       Last Modified: 05/31/2019       Submitted by: Mohit Tiwari]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

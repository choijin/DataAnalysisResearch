<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Network Coding Theory for Distributed Storage</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2013</AwardEffectiveDate>
<AwardExpirationDate>01/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>351432.00</AwardTotalIntnAmount>
<AwardAmount>351432</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>richard brown</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Modern data centers are becoming the next computing platform for the Internet. These massive farms of computer servers are an indispensable component of the information age, enabling applications like web search, social networks, cloud computing, as well as distributed file and video sharing. The problem of storing and processing massive amounts of information over networks is significant and challenging.&lt;br/&gt;Still, most existing distributed storage systems represent information by suboptimal replication schemes combined with ad-hoc networking protocols. This research is focused on understanding, on a fundamental level, how to represent, store, and process information in distributed storage systems.&lt;br/&gt;&lt;br/&gt;Specifically, this research involves the design of novel distributed storage codes that use network coding theory to address modern storage challenges. As is well known, general multi-source information theory problems can be notoriously intractable. This research focuses on the framework of storage networks and builds on recent results of the PI to investigate: 1) Dynamics of coded storage systems. How to maintain coded information representations over networks. Prior work has demonstrated the key role of network coding for such problems but the fundamental bounds remain unknown for several cases of interest. 2) Interference Alignment for Network Coding. Interference alignment techniques were introduced to mitigate wireless interference at the physical layer but also have surprising applicability in distributed storage and other network coding problems. This research is developing a novel mathematical framework that interprets interference alignment techniques through optimization theory. This project is strongly coupled with educational developments and outreach through an online wiki bibliography and online tutorial presentations.</AbstractNarration>
<MinAmdLetterDate>06/06/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/18/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1344179</AwardID>
<Investigator>
<FirstName>Georgios-Alex</FirstName>
<LastName>Dimakis</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Georgios-Alex Dimakis</PI_FULL_NAME>
<EmailAddress>dimakis@austin.utexas.edu</EmailAddress>
<PI_PHON>5124713068</PI_PHON>
<NSF_ID>000515168</NSF_ID>
<StartDate>06/06/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName>Austin</CityName>
<StateCode>TX</StateCode>
<ZipCode>787121532</ZipCode>
<StreetAddress><![CDATA[101 E. 27th St]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7797</Code>
<Text>Comm &amp; Information Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7937</Code>
<Text>NETWORK CODING AND INFO THEORY</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~71512</FUND_OBLG>
<FUND_OBLG>2013~183317</FUND_OBLG>
<FUND_OBLG>2015~96603</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Coding theory studies how to protect data by introducing redundancy to achieve reliability when information is lost or corrupted.&nbsp;</p> <p>A simple example is creating a parity disk (as done in RAID) that allows the recovery from one disk failure. This is achieved by XORing the bits of the disks to create the parity. Classical theory assumes that the original data and additional redundant parities are co-located. <strong>However, big data requires distributed storage over a computer network as done in distributed file systems like Hadoop MapReduce (HDFS) and the Google File system (GFS).</strong></p> <p>&nbsp;<br />The problem is that failure of a disk at one location requires moving large amounts of information from other locations to reconstruct the failed storage node. &nbsp;Classical erasure codes (like Reed-Solomon codes) require a very large amount of communication to reconstruct even a single failed disk. This is called <strong>the code repair problem</strong>.&nbsp;</p> <p><br />This project studied the design of new erasure codes (called&nbsp;<strong>Regenerating Codes</strong> and <strong>Locally Repairable Codes </strong>(<strong>LRC</strong>s)) to address the code repair problem. The main result is that it is possible to do much better than Reed-Solomon: failures can be repaired&nbsp;with significantly less communication. This project tackled this challenge by establishing information theoretic bounds for the required communication to repair a code, and also by designing codes that can be efficiently repaired. This project led to the <strong>discovery of LRCs</strong>, codes with <strong>locality</strong> and <strong>availability</strong> and <strong>new regenerating codes</strong>.&nbsp;</p> <p>In addition to developing the required information theory, this project developed a new component of the Hadoop Distributed File system (HDFS) that uses LRC codes instead of Reed-Solomon. This is an open source project called <strong>HDFS Xorbas</strong> that has significantly influenced distributed storage systems.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/21/2017<br>      Modified by: Georgios-Alex&nbsp;Dimakis</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Coding theory studies how to protect data by introducing redundancy to achieve reliability when information is lost or corrupted.   A simple example is creating a parity disk (as done in RAID) that allows the recovery from one disk failure. This is achieved by XORing the bits of the disks to create the parity. Classical theory assumes that the original data and additional redundant parities are co-located. However, big data requires distributed storage over a computer network as done in distributed file systems like Hadoop MapReduce (HDFS) and the Google File system (GFS).    The problem is that failure of a disk at one location requires moving large amounts of information from other locations to reconstruct the failed storage node.  Classical erasure codes (like Reed-Solomon codes) require a very large amount of communication to reconstruct even a single failed disk. This is called the code repair problem.    This project studied the design of new erasure codes (called Regenerating Codes and Locally Repairable Codes (LRCs)) to address the code repair problem. The main result is that it is possible to do much better than Reed-Solomon: failures can be repaired with significantly less communication. This project tackled this challenge by establishing information theoretic bounds for the required communication to repair a code, and also by designing codes that can be efficiently repaired. This project led to the discovery of LRCs, codes with locality and availability and new regenerating codes.   In addition to developing the required information theory, this project developed a new component of the Hadoop Distributed File system (HDFS) that uses LRC codes instead of Reed-Solomon. This is an open source project called HDFS Xorbas that has significantly influenced distributed storage systems.           Last Modified: 06/21/2017       Submitted by: Georgios-Alex Dimakis]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

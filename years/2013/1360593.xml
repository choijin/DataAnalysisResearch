<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Medium: Parallel Algorithms and Software for High-Throughput Sequence Assembly</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/12/2013</AwardEffectiveDate>
<AwardExpirationDate>04/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>925181.00</AwardTotalIntnAmount>
<AwardAmount>925181</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Mitra Basu</SignBlockName>
<PO_EMAI>mbasu@nsf.gov</PO_EMAI>
<PO_PHON>7032928649</PO_PHON>
</ProgramOfficer>
<AbstractNarration>High-throughput next-generation DNA sequencing technologies (NGS) are causing a major revolution in life sciences research by allowing rapid and cost-effective sampling of genomes and transcriptomes (expressed genomic sequences). Assembly of genomes and transcriptomes from billions of such randomly sampled sequences is an important problem in computational biology. While significant strides have been made, much work remains in addressing the diverse and rapidly emerging platforms, improving assembly quality, and scaling to both large-scale data sizes and large genomes.&lt;br/&gt;&lt;br/&gt; This project will harness the power of high performance computing to develop effective solutions for sequence assembly. It will lead to the development of scalable, efficient parallel algorithms and a parallel integrated software framework for genome and transcriptome assembly. The project seeks to advance the state of the art by targeting important unsolved problems such as hybrid assembly of sequences from multiple NGS platforms, making fundamental algorithmic advances to improve assembly quality, and conducting an in-depth effort at parallel algorithms development for the entire gamut of problems that arise in connection with assembly. It will be carried out by an interdisciplinary team of investigators, in partnership with leading NGS manufacturers and academicians involved in large plant genome sequencing projects.&lt;br/&gt;&lt;br/&gt; The project will lead to the release of a scalable parallel software package for sequence assembly that will be made available to the scientific community. Postdoctoral and graduate students will be trained in computer science driven interdisciplinary research and in writing efficient high performance computing software. The project will influence curriculum development and will lead to educational materials in bioinformatics for next-generation sequencing.</AbstractNarration>
<MinAmdLetterDate>09/19/2013</MinAmdLetterDate>
<MaxAmdLetterDate>03/30/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1360593</AwardID>
<Investigator>
<FirstName>Srinivas</FirstName>
<LastName>Aluru</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Srinivas Aluru</PI_FULL_NAME>
<EmailAddress>aluru@cc.gatech.edu</EmailAddress>
<PI_PHON>4043851486</PI_PHON>
<NSF_ID>000388133</NSF_ID>
<StartDate>09/19/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia Tech Research Corporation</Name>
<CityName>Atlanta</CityName>
<ZipCode>303320420</ZipCode>
<PhoneNumber>4048944819</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>GA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>097394084</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGIA TECH RESEARCH CORPORATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>097394084</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Georgia Institute of Technology]]></Name>
<CityName>Atlanta</CityName>
<StateCode>GA</StateCode>
<ZipCode>303320002</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>GA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7931</Code>
<Text>COMPUTATIONAL BIOLOGY</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~487680</FUND_OBLG>
<FUND_OBLG>2014~437500</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Genome sequencing has become a ubiquitous tool in a diverse set of fields ranging from biosciences and medicine to forensics and anthropology due to the continually decreasing costs and increasing throughput.&nbsp; A central task in sequence analysis is genome assembly, where complete genomes are reconstructed from the short sequences produced by the sequencers, called reads.&nbsp;&nbsp; In de novo assembly, a genome is reconstructed using only information embedded in the reads, whereas in remapping, the reads are aligned to a reference genome.&nbsp; While remapping enables comparisons to an existing genome, de novo assembly is required when studying organisms for which there are not previous assemblies or when large structural variations or high number of mutations are suspected.&nbsp; The assembly task is complicated by many factors, including sequencing errors, non-uniform coverage, sample characteristics in genomic, metagenomic, and transcriptomic sequencing, organism type, and mutation or disease state.&nbsp; As adoption of genome sequencing continues to expand, the increasing individual and total data volumes pose significant computational challenges, while assembly quality continues to be the paramount objective.&nbsp;&nbsp; This project sought to improve quality via advanced statistical methods to identify and correct errors early in the processing pipeline, and a novel sequencing methodology for repetitive genomes.&nbsp; To improve assembly speed, we developed efficient sequential and parallel algorithms that are designed to handle large genomes with high coverage and to leverage large scale clusters and supercomputers as well as large multi-core systems.</p> <p>To address sequencer introduced errors, we developed a method to identify error free reads with 99.9% recall and 90% precision, leading to a subsequent error correction improvement of up to 10%.&nbsp; The approach of identifying error-free reads is applicable to error correction in general.&nbsp; At the same time, we improved the performance of our error correction algorithm 11-fold, and demonstrated for the first time distributed memory read error correction on a dataset with more than 1 billion reads.&nbsp;<br /><br />We designed a novel genome assembly algorithm that natively incorporates the lengths of reads and distances between paired-end reads as graph metadata.&nbsp; Graph traversal incorporating these distances as constraints directly computes the final contigs without a separate scaffolding phase and the accompanying heuristics.&nbsp; Our approach decreased the fraction of contigs that do not map to the genome, while increasing the fraction of the genome represented by the contigs. <br /><br />Computationally, we made significant advances in parallelizing and optimizing the genome assembly pipeline.&nbsp; Our new parallel de Bruijn graph construction and linear chain compaction algorithms generated initial contigs for a 700GB human genome read set in 31 seconds using 7680 cores on the Dept. of Energy Edison supercomputer, 3.7 times faster than the previous state-of-the-art.&nbsp;&nbsp; We additionally developed the first parallel connected components labelling and partitioning algorithms specifically for de Bruijn graphs to facilitate concurrent subgraph traversal and assembly while minimizing communication.&nbsp;&nbsp; <br /><br />As long read whole genome sequencing technology improves, the overlap-layout-consensus (OLC) assembly from the Sanger era has been re-popularized.&nbsp;&nbsp; We developed a minhash-based OLC graph construction algorithm that is the first to scale to billions of reads using distributed memory systems.&nbsp;&nbsp; For suffix array construction, our distributed memory algorithm was able to index a human genome sequence in under 8 seconds on 1024 cores, 110 times faster than the best sequential algorithm.&nbsp; <br /><br />The work performed under this project has broad impact beyond assembly.&nbsp;&nbsp; De Bruijn graphs are useful for comparative genomics, variant and polymorphism detection, and other bioinformatics tasks.&nbsp; Suffix arrays and trees are useful for text indexing and querying.&nbsp; Our connected components labelling algorithm has been shown to be applicable for other types of graphs.&nbsp;&nbsp; To facilitate dissemination and reuse, our implementations adopt open source software licensing, and are available at https://github.com/ParBLiSS. <br /><br />The project is a collaborative effort between 3 PIs, one each in computer science, statistics, and plant biology. The project supported the research of 1 research scientist, 4 Ph.D. students and 1 undergraduate student at Georgia Institution of Technology, and 4 Ph.D. students at Iowa State University, who gained valuable interdisciplinary research experience.&nbsp; The project supported the Ph.D. dissertation work of these students, including some whose Ph.D. disseration is solely based on the work carried out under the project. The lead PI gave several invited and keynote presentations to inform the research community about results from this project.</p><br> <p>            Last Modified: 07/30/2018<br>      Modified by: Srinivas&nbsp;Aluru</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2018/1360593/1360593_10170233_1532034791731_Pipeline--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1360593/1360593_10170233_1532034791731_Pipeline--rgov-800width.jpg" title="Assembly Pipeline"><img src="/por/images/Reports/POR/2018/1360593/1360593_10170233_1532034791731_Pipeline--rgov-66x44.jpg" alt="Assembly Pipeline"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Pipeline for Genome Assembly</div> <div class="imageCredit">X</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Srinivas&nbsp;Aluru</div> <div class="imageTitle">Assembly Pipeline</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1360593/1360593_10170233_1532035384445_teaser_assembly_report--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1360593/1360593_10170233_1532035384445_teaser_assembly_report--rgov-800width.jpg" title="de Bruijn Graph Assembly"><img src="/por/images/Reports/POR/2018/1360593/1360593_10170233_1532035384445_teaser_assembly_report--rgov-66x44.jpg" alt="de Bruijn Graph Assembly"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Pair-wise constraints in  de Bruijn Graph assembly</div> <div class="imageCredit">Self</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Srinivas&nbsp;Aluru</div> <div class="imageTitle">de Bruijn Graph Assembly</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Genome sequencing has become a ubiquitous tool in a diverse set of fields ranging from biosciences and medicine to forensics and anthropology due to the continually decreasing costs and increasing throughput.  A central task in sequence analysis is genome assembly, where complete genomes are reconstructed from the short sequences produced by the sequencers, called reads.   In de novo assembly, a genome is reconstructed using only information embedded in the reads, whereas in remapping, the reads are aligned to a reference genome.  While remapping enables comparisons to an existing genome, de novo assembly is required when studying organisms for which there are not previous assemblies or when large structural variations or high number of mutations are suspected.  The assembly task is complicated by many factors, including sequencing errors, non-uniform coverage, sample characteristics in genomic, metagenomic, and transcriptomic sequencing, organism type, and mutation or disease state.  As adoption of genome sequencing continues to expand, the increasing individual and total data volumes pose significant computational challenges, while assembly quality continues to be the paramount objective.   This project sought to improve quality via advanced statistical methods to identify and correct errors early in the processing pipeline, and a novel sequencing methodology for repetitive genomes.  To improve assembly speed, we developed efficient sequential and parallel algorithms that are designed to handle large genomes with high coverage and to leverage large scale clusters and supercomputers as well as large multi-core systems.  To address sequencer introduced errors, we developed a method to identify error free reads with 99.9% recall and 90% precision, leading to a subsequent error correction improvement of up to 10%.  The approach of identifying error-free reads is applicable to error correction in general.  At the same time, we improved the performance of our error correction algorithm 11-fold, and demonstrated for the first time distributed memory read error correction on a dataset with more than 1 billion reads.   We designed a novel genome assembly algorithm that natively incorporates the lengths of reads and distances between paired-end reads as graph metadata.  Graph traversal incorporating these distances as constraints directly computes the final contigs without a separate scaffolding phase and the accompanying heuristics.  Our approach decreased the fraction of contigs that do not map to the genome, while increasing the fraction of the genome represented by the contigs.   Computationally, we made significant advances in parallelizing and optimizing the genome assembly pipeline.  Our new parallel de Bruijn graph construction and linear chain compaction algorithms generated initial contigs for a 700GB human genome read set in 31 seconds using 7680 cores on the Dept. of Energy Edison supercomputer, 3.7 times faster than the previous state-of-the-art.   We additionally developed the first parallel connected components labelling and partitioning algorithms specifically for de Bruijn graphs to facilitate concurrent subgraph traversal and assembly while minimizing communication.     As long read whole genome sequencing technology improves, the overlap-layout-consensus (OLC) assembly from the Sanger era has been re-popularized.   We developed a minhash-based OLC graph construction algorithm that is the first to scale to billions of reads using distributed memory systems.   For suffix array construction, our distributed memory algorithm was able to index a human genome sequence in under 8 seconds on 1024 cores, 110 times faster than the best sequential algorithm.    The work performed under this project has broad impact beyond assembly.   De Bruijn graphs are useful for comparative genomics, variant and polymorphism detection, and other bioinformatics tasks.  Suffix arrays and trees are useful for text indexing and querying.  Our connected components labelling algorithm has been shown to be applicable for other types of graphs.   To facilitate dissemination and reuse, our implementations adopt open source software licensing, and are available at https://github.com/ParBLiSS.   The project is a collaborative effort between 3 PIs, one each in computer science, statistics, and plant biology. The project supported the research of 1 research scientist, 4 Ph.D. students and 1 undergraduate student at Georgia Institution of Technology, and 4 Ph.D. students at Iowa State University, who gained valuable interdisciplinary research experience.  The project supported the Ph.D. dissertation work of these students, including some whose Ph.D. disseration is solely based on the work carried out under the project. The lead PI gave several invited and keynote presentations to inform the research community about results from this project.       Last Modified: 07/30/2018       Submitted by: Srinivas Aluru]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: FP: DeCoP: Deterministic Cooperative Parallelism</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>750000.00</AwardTotalIntnAmount>
<AwardAmount>750000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Most modern computer systems have multiple computational cores that require parallel applications. Unfortunately, developing reliable and efficient parallel applications is notoriously difficult, in part due to nondeterministic scheduling, which can context-switch between parallel threads at any arbitrary program point. The resulting unpredictability and nondeterminism makes it extremely difficult to develop reliable parallel software.&lt;br/&gt;&lt;br/&gt;This project proposes to investigate and develop a better model for parallel programming based on extending simple cooperative concurrency to deterministic cooperative parallelism. Cooperative concurrency is a simple non-preemptive model requires minimal synchronization, and under which even buggy or incorrect preemptive programs often execute correctly. This effectively reduces the design complexity. Cooperative concurrency is simple but it does not yield any speedup. This proposal leverages software transactional memory to extract parallelism.  The proposal addresses three tightly coupled problems: provide simpler parallel semantics, novel techniques to provide efficient parallel execution, and integrate with existing complementary techniques like automatic parallelization and thread level speculation.  Graduate and undergraduate researchers some from under-represented groups will be involved in the research.  Overall, the project aims to make a fundamental advanced toward simpler to program parallel applications, with impacts not only in the computer science community but also in other fields like mobile systems.</AbstractNarration>
<MinAmdLetterDate>09/06/2013</MinAmdLetterDate>
<MaxAmdLetterDate>12/03/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1337278</AwardID>
<Investigator>
<FirstName>Cormac</FirstName>
<LastName>Flanagan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Cormac Flanagan</PI_FULL_NAME>
<EmailAddress>cormac@ucsc.edu</EmailAddress>
<PI_PHON>8314595375</PI_PHON>
<NSF_ID>000492363</NSF_ID>
<StartDate>09/06/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jose</FirstName>
<LastName>Renau</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jose Renau</PI_FULL_NAME>
<EmailAddress>renau@soe.ucsc.edu</EmailAddress>
<PI_PHON>4084290111</PI_PHON>
<NSF_ID>000313224</NSF_ID>
<StartDate>09/06/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Santa Cruz</Name>
<CityName>Santa Cruz</CityName>
<ZipCode>950641077</ZipCode>
<PhoneNumber>8314595278</PhoneNumber>
<StreetAddress>1156 High Street</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA20</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>125084723</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, SANTA CRUZ</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Santa Cruz]]></Name>
<CityName/>
<StateCode>CA</StateCode>
<ZipCode>950641077</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA20</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~750000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The XPS: FP: DeCoP: Deterministic Cooperative Parallelism award has resulted in several key contributions to the state of the art in parallel programming and beyond. Over 12 publications in highly respected conferences acknowledge this grant. The grant has supported several PhD students. This support has been key for the graduation of 5 PhD students.</p> <p>Most of the publications have focused on the challenge of parallel programming. The publications cover work in compilers,analysis, tools, and frameworks to simplify programming of complicated parallel systems. Special attention was given to data races and hardware languages.</p> <p>Early work on the grant analyzed thread escape and data races. This is one of the main complications of working with parallel programs because different threads of the program interact in unexpected ways. The authors released compiler passes and analysis tools used by the community.</p> <p>Later work have focused on improving the also parallel hardware description languages. These are more domain specific languages but that they also exhibit similar data races. The published work has created frameworks to improve the productivity when working with these languages.</p> <p>The students involved in this grant needed to evaluate new ideas, as such new benchmarking infrastructure was created. This resulted in additional publications. In addition to the publications, the PIs had a long tradition releasing the developed tools as open source. As such, there are public repositories with the work created. Other projects and institutions are already using them.</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 02/21/2019<br>      Modified by: Jose&nbsp;Renau</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The XPS: FP: DeCoP: Deterministic Cooperative Parallelism award has resulted in several key contributions to the state of the art in parallel programming and beyond. Over 12 publications in highly respected conferences acknowledge this grant. The grant has supported several PhD students. This support has been key for the graduation of 5 PhD students.  Most of the publications have focused on the challenge of parallel programming. The publications cover work in compilers,analysis, tools, and frameworks to simplify programming of complicated parallel systems. Special attention was given to data races and hardware languages.  Early work on the grant analyzed thread escape and data races. This is one of the main complications of working with parallel programs because different threads of the program interact in unexpected ways. The authors released compiler passes and analysis tools used by the community.  Later work have focused on improving the also parallel hardware description languages. These are more domain specific languages but that they also exhibit similar data races. The published work has created frameworks to improve the productivity when working with these languages.  The students involved in this grant needed to evaluate new ideas, as such new benchmarking infrastructure was created. This resulted in additional publications. In addition to the publications, the PIs had a long tradition releasing the developed tools as open source. As such, there are public repositories with the work created. Other projects and institutions are already using them.                Last Modified: 02/21/2019       Submitted by: Jose Renau]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NeTS: Small: Participatory Software Defined Networking</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Network configuration and management today is a complex and error-prone task, done by expert administrators, who implement policies as a  brittle composition of independent control rules on heterogeneous devices. Networks become stifled, as changes to configuration have hard-to-predict consequences in the resulting policies.  At the same time, there is pressure in the opposite direction for more dynamic networks, as increasingly distributed applications can benefit from network flexibility, and actually have information about the semantics of their traffic that can inform network configuration.  &lt;br/&gt;&lt;br/&gt;The goal of this project is to enable end-user applications to take active part in the configuration, provisioning, and management of the network, and, in turn, have more visibility into the network state to better reconfigure themselves.  The proposed approach, Participatory Software Defined Networking, aims to be a unifying and extensible framework to expose network control mechanisms and state to end-user applications. It leverages the emerging paradigm of Software Defined Networking, with its logically centralized and programmable control plane, and, in an analogy to Operating Systems, provides the "user-level system calls to the network".  Applications request current and future service properties, gain visibility into network properties, and provide hints about future demands to the network.  The research will combine programming languages techniques to define the semantics of policy and query language and compilation, with systems design and experiments on a real programmable network testbed, guided by real applications.&lt;br/&gt;&lt;br/&gt;Intellectual Merit: The contributions of this project are to expose the control plane of the network to end-user applications through a unifying and extensible framework, to solve the challenges to make this safe and efficient, and ultimately to allow for radical joint optimization of applications and the network. More specifically, this work will: (1) define the semantics for the delegation of privileges necessary for the safe exposure of the control plane to end-user applications. (2) define a high level hierarchical representation of policies, with flexible semantics for policy composition from different users, across several network resources. (3) produce a sound compilation strategy from the high level combined policies to efficient sets of distributed rules on switches and (4) propose and evaluate the joint optimization of applications and the network given the flexibilities and requirements of the former, and the constraints and load of the latter.&lt;br/&gt;&lt;br/&gt;Broader Impacts:  The results of the proposed research will be broadly applicable to regular network users, with direct, tangible benefits in efficiency, security, sharing, and ease of use of the networking infrastructure.  Participatory networking will enable home users (or their applications, on the users' behalf), to effectively configure the network according to intuitive policies. Network queries can provide the foundation for a ubiquitous "weather service" for networks, which can have positive effects on user expectations. Heavy users on campus networks, such as physicists, will be able to safely share the network without the need for physically separate networks. Enterprise users will be able to install firewall rules deeper in the network without requiring human intervention.  Co-optimization of applications and datacenter networks will enable significantly more efficient large-scale data processing, helping advance science and business at large. The PI will integrate undergraduate students in the research, and will create a course on Advanced Networking focused on SDNs and in datacenters. He will continue to speak about networking and the Internet to the 9th-grade girls at the NSF-sponsored Artemis program.</AbstractNarration>
<MinAmdLetterDate>08/30/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/30/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1320397</AwardID>
<Investigator>
<FirstName>Rodrigo</FirstName>
<LastName>Fonseca</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rodrigo Fonseca</PI_FULL_NAME>
<EmailAddress>rfonseca@cs.brown.edu</EmailAddress>
<PI_PHON>4018632777</PI_PHON>
<NSF_ID>000550621</NSF_ID>
<StartDate>08/30/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Brown University</Name>
<CityName>Providence</CityName>
<ZipCode>029129002</ZipCode>
<PhoneNumber>4018632777</PhoneNumber>
<StreetAddress>BOX 1929</StreetAddress>
<StreetAddress2><![CDATA[350 Eddy Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<StateCode>RI</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>RI01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001785542</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>BROWN UNIVERSITY IN PROVIDENCE IN THE STATE OF RHODE ISLAND AND PROVIDENCE PLANTATIONS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001785542</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Brown University]]></Name>
<CityName>Providence</CityName>
<StateCode>RI</StateCode>
<ZipCode>029129093</ZipCode>
<StreetAddress><![CDATA[Office of Sponsored Projects]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>RI01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~400000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Software-defined networking, or SDN, represents a paradigm shift in the way we design, build, operate, and reason about networks: instead of thinking about the network as a collection of routers, switches, cables, and hosts, SDN enables us to use tenets of other areas of Computer Science such as abstraction, programability, and verification, to reason about the properties of the network.</p> <p>At the start of the project enabled by this grant, SDN had already developed significantly, giving a lot more power to the network administrators. We can make an analogy to early operating systems, which created abstractions of the physical machines that made it much easier to write more complex programs that would run on different hardware. Initially, OSes gave this power to the administrators of the system, and then evolved to multi-user systems. In this transition, they had to implement and enforce isolation, protection, and sharing mechanisms to enable programs from multiple users to co-exist, simultaneously and in a fair way.</p> <p>This project's main goal was to, continuing the analogy, enable end-user applications to also take part in the powerful and programmatic configuration of the network enabled by SDNs. To this end, this project introduced the concept of 'Participatory Networks'. In the course of the three years, the project had significant intellectual merit.</p> <p>First, it demonstrated the benefits of application involvement in the configuration and operation of the network, with several examples, including enabling better sharing of the network in the presence of big data systems; enabling better security by having applications detect attacks and inform the network to defend in the appropriate place; enabling better quality video and audio conferences; and enabling multiple web video streams to share the same bottleneck link with much better quality and predictability.&nbsp;</p> <p>These benefits would not be useful if they were obtained by making other traffic suffer. The second contribution addresses this, and the project introduced a hierarchical logic (Hierarchical Flow Tables, or HFTs) to enable the distribution and delegation of privileges to the end-users and applications, much like an operating system does. The project includes a compiler that takes the hierarchical representation of these privileges and flattens it so that it can be installed in switches, and proved the compiler correct using formal assisted proofs. This compiler is part of an open-source SDN controller that has a user-facing northbound API.</p> <p>Other contributions included a tool for migration of existing legacy networks to SDN; a scriptable debugger for SDNs; a system, called Retro, that expands the concept of software-defined networks to software-defined generalized resource management; and a novel architecture for datacenter networks that enable users to choose properties of the paths they want each class of traffic to take when traversing the datacenter network.</p> <p>In terms of broader impacts, the project directly contributed to the education of 2 PhD students, 4 Master's students, had a smaller participation of 2 other PhD; the PI taught two special topics courses on SDNs and advanced networking, and made special content on SDNs for the undergraduate networking course. Lastly, the PI participated in the Artemis project at Brown with two lectures on network security to 9th-grade school girls.</p> <p>Finally, the project had a number of expressive publications: SIGCOMM (2), NSDI, SOSR (2), out of a total of 7. There were also 1 PhD thesis and 3 Master's thesis that were directly related to the project.</p><br> <p>            Last Modified: 06/30/2018<br>      Modified by: Rodrigo&nbsp;Fonseca</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Software-defined networking, or SDN, represents a paradigm shift in the way we design, build, operate, and reason about networks: instead of thinking about the network as a collection of routers, switches, cables, and hosts, SDN enables us to use tenets of other areas of Computer Science such as abstraction, programability, and verification, to reason about the properties of the network.  At the start of the project enabled by this grant, SDN had already developed significantly, giving a lot more power to the network administrators. We can make an analogy to early operating systems, which created abstractions of the physical machines that made it much easier to write more complex programs that would run on different hardware. Initially, OSes gave this power to the administrators of the system, and then evolved to multi-user systems. In this transition, they had to implement and enforce isolation, protection, and sharing mechanisms to enable programs from multiple users to co-exist, simultaneously and in a fair way.  This project's main goal was to, continuing the analogy, enable end-user applications to also take part in the powerful and programmatic configuration of the network enabled by SDNs. To this end, this project introduced the concept of 'Participatory Networks'. In the course of the three years, the project had significant intellectual merit.  First, it demonstrated the benefits of application involvement in the configuration and operation of the network, with several examples, including enabling better sharing of the network in the presence of big data systems; enabling better security by having applications detect attacks and inform the network to defend in the appropriate place; enabling better quality video and audio conferences; and enabling multiple web video streams to share the same bottleneck link with much better quality and predictability.   These benefits would not be useful if they were obtained by making other traffic suffer. The second contribution addresses this, and the project introduced a hierarchical logic (Hierarchical Flow Tables, or HFTs) to enable the distribution and delegation of privileges to the end-users and applications, much like an operating system does. The project includes a compiler that takes the hierarchical representation of these privileges and flattens it so that it can be installed in switches, and proved the compiler correct using formal assisted proofs. This compiler is part of an open-source SDN controller that has a user-facing northbound API.  Other contributions included a tool for migration of existing legacy networks to SDN; a scriptable debugger for SDNs; a system, called Retro, that expands the concept of software-defined networks to software-defined generalized resource management; and a novel architecture for datacenter networks that enable users to choose properties of the paths they want each class of traffic to take when traversing the datacenter network.  In terms of broader impacts, the project directly contributed to the education of 2 PhD students, 4 Master's students, had a smaller participation of 2 other PhD; the PI taught two special topics courses on SDNs and advanced networking, and made special content on SDNs for the undergraduate networking course. Lastly, the PI participated in the Artemis project at Brown with two lectures on network security to 9th-grade school girls.  Finally, the project had a number of expressive publications: SIGCOMM (2), NSDI, SOSR (2), out of a total of 7. There were also 1 PhD thesis and 3 Master's thesis that were directly related to the project.       Last Modified: 06/30/2018       Submitted by: Rodrigo Fonseca]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

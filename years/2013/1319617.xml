<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Safe Parallelization in a Dynamic Language</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2016</AwardExpirationDate>
<AwardTotalIntnAmount>253357.00</AwardTotalIntnAmount>
<AwardAmount>305357</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Ubiquity of multicore processors has created a demand to support parallel processing in all programming languages. However, the dynamic nature of scripting languages makes supporting correct parallel programming in these languages especially difficult. Recent research has enabled safe parallel programming through speculative program parallelization.  This project extends these techniques to support parallel programming in the Ruby language.  The work focuses on three areas: the interpreter, the core language libraries, and the garbage collector.  Through experimentation on Ruby, the research helps to understand the general synergy and limitations when a dynamic language meets dynamic parallelization.&lt;br/&gt;&lt;br/&gt;The resulting parallel Ruby implementation is a general-purpose parallel language that can be used by non-programming experts.  Because of its ease of use, it is expected to be very useful for rapid prototyping of parallel programming applications and teaching parallel programming across all scientific disciplines.  Transfer of this technology is facilitated by open-source distribution of the code on the Web. Outreach activities associated with the project include work with pre-college students, recruitment of students from under-represented groups, and collaboration with industry.  Education is integrated with the research through involvement of students in the language implementation, and by experimentation with the use of the parallel Ruby language in several courses.</AbstractNarration>
<MinAmdLetterDate>08/14/2013</MinAmdLetterDate>
<MaxAmdLetterDate>04/14/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319617</AwardID>
<Investigator>
<FirstName>Chen</FirstName>
<LastName>Ding</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Chen Ding</PI_FULL_NAME>
<EmailAddress>cding@cs.rochester.edu</EmailAddress>
<PI_PHON>5852751373</PI_PHON>
<NSF_ID>000325741</NSF_ID>
<StartDate>08/14/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Rochester</Name>
<CityName>Rochester</CityName>
<ZipCode>146270140</ZipCode>
<PhoneNumber>5852754031</PhoneNumber>
<StreetAddress>518 HYLAN, RC BOX 270140</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY25</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041294109</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ROCHESTER</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041294109</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Rochester]]></Name>
<CityName>Rochester</CityName>
<StateCode>NY</StateCode>
<ZipCode>146270226</ZipCode>
<StreetAddress><![CDATA[P.O.Box 270226]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~253357</FUND_OBLG>
<FUND_OBLG>2014~16000</FUND_OBLG>
<FUND_OBLG>2015~16000</FUND_OBLG>
<FUND_OBLG>2016~20000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>An increasing number of students and professionals use dynamic scripting languages such as PHP, Python, Perl, Javascript, Ruby, Matlab and R. &nbsp;Although these languages lag in performance compared to Fortran, C/C++ and Java, they are easier to learn and use, and they reuse and combine libraries and modules written in more efficient languages. &nbsp;Increasingly programmers want to write parallel code to utilize the multicore processors.</p> <p>The project has created the RubyBOP system which is an open source project on https://github.com/bop-langs/rubybop, with over 1,000 commits. &nbsp;RubyBOP augments the Ruby language with constructs to suggest possible parallelism and likely dependences. &nbsp;These suggestions are hints and safe against misuse. &nbsp;They are expressive enough to suggest function, task and loop parallelism. &nbsp;The most difficult component is speculative memory management including safe memory allocation and its interaction with garbage collection. &nbsp;The other significant component is object-level access monitoring. &nbsp;The project has supported research by the PI, a graduate student, and about a dozen undergraduate students.&nbsp;</p> <p>The PI and project students have taught safe parallel programming in two or more courses each year at University of Rochester. &nbsp;The research results have been presented in the First Workshop on the High Performance Scripting Languages and the Compiler-Driven Performance (CDP) workshops. &nbsp;The PI also organized a panel on compiling parallel dynamic languages in the 29th Languages and Compilers for Parallel Computing (LCPC) workshop in Rochester, New York. &nbsp;</p> <p>In the Ruby language resource page rubybib.org under the heading of Parallelism and Concurrency, three of the five papers are from University of Rochester, and one is a direct result of this project.</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/17/2016<br>      Modified by: Chen&nbsp;Ding</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2016/1319617/1319617_10267213_1477840173803_img_1532--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1319617/1319617_10267213_1477840173803_img_1532--rgov-800width.jpg" title="RubyBOP presentation 2015"><img src="/por/images/Reports/POR/2016/1319617/1319617_10267213_1477840173803_img_1532--rgov-66x44.jpg" alt="RubyBOP presentation 2015"></a> <div class="imageCaptionContainer"> <div class="imageCaption">RubyBOP: Safe Parallel RubyChen Ding, Jacob Bisnett, Benjamin O?Halloran, Cesar De Hoyos, Brian Gernhardt ? University of Rochester</div> <div class="imageCredit">Chen Ding</div> <div class="imageSubmitted">Chen&nbsp;Ding</div> <div class="imageTitle">RubyBOP presentation 2015</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ An increasing number of students and professionals use dynamic scripting languages such as PHP, Python, Perl, Javascript, Ruby, Matlab and R.  Although these languages lag in performance compared to Fortran, C/C++ and Java, they are easier to learn and use, and they reuse and combine libraries and modules written in more efficient languages.  Increasingly programmers want to write parallel code to utilize the multicore processors.  The project has created the RubyBOP system which is an open source project on https://github.com/bop-langs/rubybop, with over 1,000 commits.  RubyBOP augments the Ruby language with constructs to suggest possible parallelism and likely dependences.  These suggestions are hints and safe against misuse.  They are expressive enough to suggest function, task and loop parallelism.  The most difficult component is speculative memory management including safe memory allocation and its interaction with garbage collection.  The other significant component is object-level access monitoring.  The project has supported research by the PI, a graduate student, and about a dozen undergraduate students.   The PI and project students have taught safe parallel programming in two or more courses each year at University of Rochester.  The research results have been presented in the First Workshop on the High Performance Scripting Languages and the Compiler-Driven Performance (CDP) workshops.  The PI also organized a panel on compiling parallel dynamic languages in the 29th Languages and Compilers for Parallel Computing (LCPC) workshop in Rochester, New York.    In the Ruby language resource page rubybib.org under the heading of Parallelism and Concurrency, three of the five papers are from University of Rochester, and one is a direct result of this project.          Last Modified: 11/17/2016       Submitted by: Chen Ding]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF:Small: Hardware/Software Support for Debugging of Scaling Limiters in Many-Core Execution</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>499848.00</AwardTotalIntnAmount>
<AwardAmount>499848</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Until recently, a cost-effective way to make a program run faster was to buy a computer with a more recent processor, without making any changes to the program itself. However, in recent years this approach no longer works - instead of one ever-faster processor core, recent processors rely on increasing numbers of cores to provide better performance. To benefit from these new multi- and many-core processors, programs must be explicitly written to "scale," i.e., to keep getting faster as they run on more cores. Re-design for scaling is time-consuming and costly, especially considering that most programmers are not used to (nor trained for) writing programs that use more than one core. This NSF-funded project will analyze scaling problems in programs and report them to programmers with enough accuracy to help rapidly deal with the problems. An important aspect of this approach is that it also helps educate current programmers and future ones (e.g., college students) to anticipate scaling problems and avoid them in the future. Additional outreach activities are planned in middle and high schools in Atlanta (where minority students are the majority of the population) to educate both students and their teachers about key concepts in computer hardware and software. &lt;br/&gt;&lt;br/&gt;The main technical challenge in this project is that there are many types of scaling problems. Some scaling problems are related to the application itself, e.g., serial sections, lock contention, etc., and some are hardware-related, such as contention for interconnect bandwidth, serialization in directories, contention for capacity in shared caches, etc. The symptoms of these problems are often ambiguous, which makes them even more difficult for programmers to identify and correct. This project will provide hardware support for profiling that will help disambiguate some of the symptoms and attribute them to specific parts of the code, along with software tools that will analyze and report both software- and hardware-related scaling limiters. Our reporting will be specific enough to lead programmers directly to the code that should be "fixed" and help them understand why and how this code needs to be modified.</AbstractNarration>
<MinAmdLetterDate>07/31/2013</MinAmdLetterDate>
<MaxAmdLetterDate>07/31/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1320717</AwardID>
<Investigator>
<FirstName>Milos</FirstName>
<LastName>Prvulovic</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Milos Prvulovic</PI_FULL_NAME>
<EmailAddress>milos@cc.gatech.edu</EmailAddress>
<PI_PHON>4043856364</PI_PHON>
<NSF_ID>000312728</NSF_ID>
<StartDate>07/31/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia Tech Research Corporation</Name>
<CityName>Atlanta</CityName>
<ZipCode>303320420</ZipCode>
<PhoneNumber>4048944819</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>GA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>097394084</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGIA TECH RESEARCH CORPORATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>097394084</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Georgia Institute of Technology]]></Name>
<CityName>Atlanta</CityName>
<StateCode>GA</StateCode>
<ZipCode>303320002</ZipCode>
<StreetAddress><![CDATA[225 North Ave NW]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>GA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~499848</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>The main goal of this project are to design computer hardware and software that will identify, analyze, report, and help programmers mitigate problems that prevent application performance from improving as more cores become available. This is extremely important because current and future computer processors use increases in the number of cores as the main way of improving performance, so applications that fail to improve as additional cores are added end up having much worse performance than those that do benefit from using additional cores.</span></p> <p><span>This project has resulted in new hardware support for synchronization that allows programmers to utilize hardware-supported synchronization without worrying about the details of how exactly hardware supports synchronization, and hardware designers are free to design synchronization support without having to provide for each of the many tricky situations that may occur. Similarly, the project has produced improvements that are suitable for use in commercially available hardware transactional memory (HTM), allowing programmers to reap the performance scaling benefits from HTM without the risk of catastrophic performance that HTMs sometimes produce. The project has also produced a method for estimating the performance scaling of an application, i.e. predicting how (and if) performance will improve as more cores are added, and identifying the factors that limit that performance improvement.</span></p> <p><span>Finally, the project has helped initiate work on using electromagnetic emanations of a computer system to do performance profiling (learn about how the application is performing) without requiring changes to the application or the hardware it is running on. This is very important in scenarios where performance problems exist in deployed systems but are difficult for developers to&nbsp;reproduce, or where changes to the system are undesirable&nbsp;or difficult to do (e.g. for medical or industrial control systems). For such computer systems, our emanations-based profiling allows the deployed system to be subjected to performance profiling without changing the profiled system (or&nbsp;otherwise interfering with the system's work).</span></p> <p><strong>&nbsp;</strong><em></em></p><br> <p>            Last Modified: 10/14/2017<br>      Modified by: Milos&nbsp;Prvulovic</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The main goal of this project are to design computer hardware and software that will identify, analyze, report, and help programmers mitigate problems that prevent application performance from improving as more cores become available. This is extremely important because current and future computer processors use increases in the number of cores as the main way of improving performance, so applications that fail to improve as additional cores are added end up having much worse performance than those that do benefit from using additional cores.  This project has resulted in new hardware support for synchronization that allows programmers to utilize hardware-supported synchronization without worrying about the details of how exactly hardware supports synchronization, and hardware designers are free to design synchronization support without having to provide for each of the many tricky situations that may occur. Similarly, the project has produced improvements that are suitable for use in commercially available hardware transactional memory (HTM), allowing programmers to reap the performance scaling benefits from HTM without the risk of catastrophic performance that HTMs sometimes produce. The project has also produced a method for estimating the performance scaling of an application, i.e. predicting how (and if) performance will improve as more cores are added, and identifying the factors that limit that performance improvement.  Finally, the project has helped initiate work on using electromagnetic emanations of a computer system to do performance profiling (learn about how the application is performing) without requiring changes to the application or the hardware it is running on. This is very important in scenarios where performance problems exist in deployed systems but are difficult for developers to reproduce, or where changes to the system are undesirable or difficult to do (e.g. for medical or industrial control systems). For such computer systems, our emanations-based profiling allows the deployed system to be subjected to performance profiling without changing the profiled system (or otherwise interfering with the system's work).          Last Modified: 10/14/2017       Submitted by: Milos Prvulovic]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

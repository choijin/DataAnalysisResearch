<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: CLCCA (XPS: DSD) Future Extreme Scale Frameworks using DSL and ERTS</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>700000.00</AwardTotalIntnAmount>
<AwardAmount>700000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project will lay the foundations for solving large multi-scale multi-physics engineering problems using new computational frameworks on the next decade's exascale computers. These frameworks will anticipate trends in proposed future computer hardware by being adaptive, asynchronous, fault-tolerant, and energy-aware and will address the possible billion-way parallelism of exascale systems by both generating efficient specific code through a domain specific language (DSL) and by efficiently scheduling that code through an Exascale Run Time System, ERTS.&lt;br/&gt;&lt;br/&gt;The project's prototype computational framework will use Directed Acyclic Graphs (DAGs) to generate code in the DSL that is specialized for multicore nodes and/or accelerators and it will also use DAGS at the runtime system level in the ERTS. At a nodal multicore or accelerator level the DSL will be a declarative, high-level, type-safe domain-specific language for multi-scale, multi-physics simulations that will improve productivity by automating the writing of optimized code that is executed by the ERTS. In order to ensure that these activities produce relevant solutions for important engineering applications with high impact such as, for example, the design of new batteries and fuel cells or clean coal boilers, the project will employ a multi-disciplinary approach that couples computer science advances to the solution of such meaningful engineering problems.</AbstractNarration>
<MinAmdLetterDate>09/11/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/11/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1337145</AwardID>
<Investigator>
<FirstName>Martin</FirstName>
<LastName>Berzins</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Martin Berzins</PI_FULL_NAME>
<EmailAddress>mb@cs.utah.edu</EmailAddress>
<PI_PHON>8015851545</PI_PHON>
<NSF_ID>000175130</NSF_ID>
<StartDate>09/11/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Might</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Matthew Might</PI_FULL_NAME>
<EmailAddress>might@cs.utah.edu</EmailAddress>
<PI_PHON>4043763204</PI_PHON>
<NSF_ID>000068857</NSF_ID>
<StartDate>09/11/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>James</FirstName>
<LastName>Sutherland</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>James C Sutherland</PI_FULL_NAME>
<EmailAddress>james.sutherland@utah.edu</EmailAddress>
<PI_PHON>8015851246</PI_PHON>
<NSF_ID>000425319</NSF_ID>
<StartDate>09/11/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<StreetAddress2><![CDATA[Second Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009095365</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF UTAH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009095365</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Utah]]></Name>
<CityName/>
<StateCode>UT</StateCode>
<ZipCode>841129023</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~700000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><!-- p { margin-bottom: 0.1in; direction: ltr; color: rgb(0, 0, 10); line-height: 120%; text-align: left; }p.western { font-family: "Liberation Serif",serif; font-size: 12pt; }p.cjk { font-family: "Tahoma"; font-size: 12pt; }p.ctl { font-family: "Lohit Devanagari"; font-size: 12pt; }a:link { color: rgb(5, 99, 193); } --> <p class="western" style="margin-bottom: 0in; line-height: 100%;">This research has addressed three aspects of the challenges that arise from the need to solve complex science and engineering problems on parallel computer architectures. These aspects reflect the expertise of the three investigators concerning the use of&nbsp; software that makes it possible for scientists to solve problems at a much higher and more abstract level on larger and more complex parallel computers.</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">&nbsp;</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">The high-level specification of such applications  is done through the use of domain specific languages (DSLs) that allow problem  specification in a way that is close to the applications area, both being areas of expertise of Dr. James Sutherland. The design of DSL&rsquo;s  raises fundamental computer language questions  which were addressed by Dr. Matt Might. Once a problem has been specified through a DSL it is necessary to execute the DSL tasks in an efficient and fail-safe manner using a runtime system on  parallel computers. The design of these runtime systems is the research area of Dr. Martin Berzins.</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">&nbsp;</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">Dr. Might&rsquo;s group used template meta-programming which allows the C++ language to generate code at compile time. They looked at the theoretical and practical limits of template meta-meta-programming for C++ and found that C++ template meta-programming resembles a first-class term-rewriting system and that means that these programs can be much more better expressed in terms of higher-order term-rewriting systems and  this makes it easier to encode the core logic necessary to do template-meta-programming and DSL design and implementation.</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">This research used Honeycomb, which extends lexical scoping and nesting in C++ template meta-programming for Nebo/Fulmar which is the main  C++ template meta-programming DSL&nbsp; of the project. The research&nbsp; showed that Honeycomb could generate stencil physics code and also undertook fundamental research on the complexity of parsing techniques used for DSLs. This research also provided a much better and stronger idea of how to construct good domain specific languages for stencil operations using C++ template meta-programming.</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">&nbsp;</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">These results in turn influenced  the development of PoKiTT: a library for Portable Kinetics, Thermodynamics and Transport calculations. PoKiTT replaces much of the functionality provided by Cantera (a library at MIT) but with kernels that provide better performance in serial and add multicore and GPU kernels for reacting flow calculations. Speedups on 16 cores were approximately 10x and 40x for GPU over single core The dense linear algebra kernels provide speedups on a K20 GPU of 8-15x for linear solves and 15-30x for eigenvalue decomposition relative to single core performance execution for reacting flow calculations.</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">&nbsp;</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">In the area of runtime systems the decomposition of software into a programming model that generates a task-graph for execution by a runtime system makes portability and performance possible, but is challenging in key areas such as support for data structures, tasks on heterogeneous architectures, performance portability, power management and designing for resilience. In heterogeneous machines, accelerator tasks pose significant challenges over their CPU task counterparts particularly when tasks need communicated values and compute within a few milliseconds.  Current and emerging heterogeneous architectures necessitate addressing these challenges within Uintah. The principal result was to identify and address inefficiencies that arise when mapping tasks onto the GPU, to implement new schemes to reduce   runtime system overhead, to introduce new features that allow for more tasks to leverage on-node accelerators, and to show nodal performance results from these improvements.</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">&nbsp;</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">Finally in the area of making such task-based calculations more resilient the research used coarse replication of fine-mesh patches on a different compute node. This adds only about 12.5% overhead for three dimensional mesh blocks.  However, in order&nbsp; to avoid introducing an unacceptable degree of error it is necessary for the interpolation process to recreate the fine mesh to preserve physical solution properties such as positivity of chemical concentrations. Such interpolants were not available and so had to be discovered and implemented together with the use of existing fault tolerant tools for message passing. As a result ithere is now&nbsp; a prototype approach for dealing with resilience issues at exascale. Finally the project&nbsp; successfully demonstrated these approaches on two very recent and very different computers, the new NSF Stampede 2 computer at TACC in Austin and the current fastest machine in the world the Sunway Tiahulight at Wuxi China.</p> <p class="western" style="margin-bottom: 0in; line-height: 100%;"><a name="_GoBack"></a></p> <p class="western" style="margin-bottom: 0in; line-height: 100%;">Of equal importance to these technical results is the training and development outcome of this project wiith regard to those who worked on it. The research that undergraduate and graduate students have undertaken has helped prepare them for&nbsp; their future careers. In particular 4 MS students undertook research before graduating to go and work for industry and 7 students undertook research that was part of their Ph.D.s or led to them doing a Ph.D. As a result of this activity one undergraduate thesis resulted  and seven journal or conference papers were published with two more submitted or to be submitted.</p><br> <p>            Last Modified: 11/03/2017<br>      Modified by: Martin&nbsp;Berzins</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This research has addressed three aspects of the challenges that arise from the need to solve complex science and engineering problems on parallel computer architectures. These aspects reflect the expertise of the three investigators concerning the use of  software that makes it possible for scientists to solve problems at a much higher and more abstract level on larger and more complex parallel computers.   The high-level specification of such applications  is done through the use of domain specific languages (DSLs) that allow problem  specification in a way that is close to the applications area, both being areas of expertise of Dr. James Sutherland. The design of DSL?s  raises fundamental computer language questions  which were addressed by Dr. Matt Might. Once a problem has been specified through a DSL it is necessary to execute the DSL tasks in an efficient and fail-safe manner using a runtime system on  parallel computers. The design of these runtime systems is the research area of Dr. Martin Berzins.   Dr. Might?s group used template meta-programming which allows the C++ language to generate code at compile time. They looked at the theoretical and practical limits of template meta-meta-programming for C++ and found that C++ template meta-programming resembles a first-class term-rewriting system and that means that these programs can be much more better expressed in terms of higher-order term-rewriting systems and  this makes it easier to encode the core logic necessary to do template-meta-programming and DSL design and implementation. This research used Honeycomb, which extends lexical scoping and nesting in C++ template meta-programming for Nebo/Fulmar which is the main  C++ template meta-programming DSL  of the project. The research  showed that Honeycomb could generate stencil physics code and also undertook fundamental research on the complexity of parsing techniques used for DSLs. This research also provided a much better and stronger idea of how to construct good domain specific languages for stencil operations using C++ template meta-programming.   These results in turn influenced  the development of PoKiTT: a library for Portable Kinetics, Thermodynamics and Transport calculations. PoKiTT replaces much of the functionality provided by Cantera (a library at MIT) but with kernels that provide better performance in serial and add multicore and GPU kernels for reacting flow calculations. Speedups on 16 cores were approximately 10x and 40x for GPU over single core The dense linear algebra kernels provide speedups on a K20 GPU of 8-15x for linear solves and 15-30x for eigenvalue decomposition relative to single core performance execution for reacting flow calculations.   In the area of runtime systems the decomposition of software into a programming model that generates a task-graph for execution by a runtime system makes portability and performance possible, but is challenging in key areas such as support for data structures, tasks on heterogeneous architectures, performance portability, power management and designing for resilience. In heterogeneous machines, accelerator tasks pose significant challenges over their CPU task counterparts particularly when tasks need communicated values and compute within a few milliseconds.  Current and emerging heterogeneous architectures necessitate addressing these challenges within Uintah. The principal result was to identify and address inefficiencies that arise when mapping tasks onto the GPU, to implement new schemes to reduce   runtime system overhead, to introduce new features that allow for more tasks to leverage on-node accelerators, and to show nodal performance results from these improvements.   Finally in the area of making such task-based calculations more resilient the research used coarse replication of fine-mesh patches on a different compute node. This adds only about 12.5% overhead for three dimensional mesh blocks.  However, in order  to avoid introducing an unacceptable degree of error it is necessary for the interpolation process to recreate the fine mesh to preserve physical solution properties such as positivity of chemical concentrations. Such interpolants were not available and so had to be discovered and implemented together with the use of existing fault tolerant tools for message passing. As a result ithere is now  a prototype approach for dealing with resilience issues at exascale. Finally the project  successfully demonstrated these approaches on two very recent and very different computers, the new NSF Stampede 2 computer at TACC in Austin and the current fastest machine in the world the Sunway Tiahulight at Wuxi China.  Of equal importance to these technical results is the training and development outcome of this project wiith regard to those who worked on it. The research that undergraduate and graduate students have undertaken has helped prepare them for  their future careers. In particular 4 MS students undertook research before graduating to go and work for industry and 7 students undertook research that was part of their Ph.D.s or led to them doing a Ph.D. As a result of this activity one undergraduate thesis resulted  and seven journal or conference papers were published with two more submitted or to be submitted.       Last Modified: 11/03/2017       Submitted by: Martin Berzins]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

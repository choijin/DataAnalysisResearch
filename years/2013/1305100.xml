<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>RIGEE: Progressive Learning Platform for Computer Engineering</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>60120.00</AwardTotalIntnAmount>
<AwardAmount>84120</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07050000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>EEC</Abbreviation>
<LongName>Div Of Engineering Education and Centers</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Elliot Douglas</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The long-term vision for this Research Initiation Grant in Engineering Education is to transform the way computer engineering is taught by establishing the computer engineering curriculum around a carefully designed learning platform.  This engineering education project involves research and faculty collaborators from Computer Engineering, the English Department, and the College of Education. It aims to introduce the learning platform system in various computer engineering courses and perform qualitative and quantitative studies to gauge the impact on student learning.  The project will generate new knowledge on how students learn, retain, and transfer engineering concepts in a community of practice. It will also test whether students? fixed mindsets can be changed to growth mindsets.&lt;br/&gt;&lt;br/&gt;This research initiation project will provide a vehicle for the PI to explore PLP?s impact on student learning through well-known frameworks and assessment models. The impact on the PI and his graduate students will be significant, as they will learn the intricacies of quantitative and qualitative research in education. Undergraduate students will benefit through a well-designed educational tool. Collaborations will be formed that will lead to future projects where experts from the social and educational sciences will work with engineering faculty to perform rigorous research on student learning.</AbstractNarration>
<MinAmdLetterDate>12/21/2012</MinAmdLetterDate>
<MaxAmdLetterDate>06/05/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1305100</AwardID>
<Investigator>
<FirstName>Sohum</FirstName>
<LastName>Sohoni</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sohum A Sohoni</PI_FULL_NAME>
<EmailAddress>sohum.sohoni@asu.edu</EmailAddress>
<PI_PHON>4053388317</PI_PHON>
<NSF_ID>000269193</NSF_ID>
<StartDate>12/21/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Arizona State University</Name>
<CityName>TEMPE</CityName>
<ZipCode>852816011</ZipCode>
<PhoneNumber>4809655479</PhoneNumber>
<StreetAddress>ORSPA</StreetAddress>
<StreetAddress2><![CDATA[660 South Mill Avenue, Suite 310]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<StateCode>AZ</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>AZ09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>943360412</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>ARIZONA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>806345658</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Arizona State University]]></Name>
<CityName/>
<StateCode>AZ</StateCode>
<ZipCode>852816011</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>AZ09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1340</Code>
<Text>EngEd-Engineering Education</Text>
</ProgramElement>
<ProgramReference>
<Code>110E</Code>
<Text>EDUCATION RESEARCH</Text>
</ProgramReference>
<ProgramReference>
<Code>116E</Code>
<Text>RESEARCH EXP FOR UNDERGRADS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~60120</FUND_OBLG>
<FUND_OBLG>2013~12000</FUND_OBLG>
<FUND_OBLG>2014~12000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project focused on the initial development and pilot testing of a platform for visualizing the interaction of software and hardware. This platform, known as the Progressive Learning Platform (PLP), was designed as a tool for computer engineering students to write, test, debug, and visualize assembly language programs. Initial studies showed that the platform is effective, and future studies are planned to improve the platform both from its educational effectiveness and its translatability to other institutions. A number of graduate and undergraduate students have worked on its development, and will continue to do so even after the end of the grant period.</p> <p>Research studies have shown that one of the primary differences between novices and experts is that the experts see connections and the interconnectedness of components of a system, whereas novices fail to see these connections. The visualizations afforded by PLP reduce the abstractness of computing by providing scaffolding that enables students to build connections between high-level programs, their assembly language and machine code equivalents, and the underlying hardware&rsquo;s instruction-by-instruction execution of machine code. Although a few other simulators of this kind already exist, PLP offers three advantages over existing solutions. One, PLP provides a simulation and visualization tool that has one-to-one correspondence with hardware and students can run the same software on real hardware (to control a robot for example) that they tested in the simulator. Two, the PLP instruction set balances functionality with extraneous cognitive load, so that students and instructors can write programs that have real-world impact, but the instruction set and architectural complexity is not beyond the scope of a sophomore/junior student&rsquo;s understanding. Three, PLP is open source (including the hardware description in Verilog), which means that the infrastructure can be used to develop the same visualizations for other instruction set architectures, and any adopter can make tweaks adapt PLP to their own needs but then also make those tweaks or the new architecture available for future adoption by others.</p> <p>Further details on the platform can found on the project website:&nbsp;https://plp.asu.edu/</p><br> <p>            Last Modified: 10/16/2015<br>      Modified by: Sohum&nbsp;A&nbsp;Sohoni</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project focused on the initial development and pilot testing of a platform for visualizing the interaction of software and hardware. This platform, known as the Progressive Learning Platform (PLP), was designed as a tool for computer engineering students to write, test, debug, and visualize assembly language programs. Initial studies showed that the platform is effective, and future studies are planned to improve the platform both from its educational effectiveness and its translatability to other institutions. A number of graduate and undergraduate students have worked on its development, and will continue to do so even after the end of the grant period.  Research studies have shown that one of the primary differences between novices and experts is that the experts see connections and the interconnectedness of components of a system, whereas novices fail to see these connections. The visualizations afforded by PLP reduce the abstractness of computing by providing scaffolding that enables students to build connections between high-level programs, their assembly language and machine code equivalents, and the underlying hardwareÆs instruction-by-instruction execution of machine code. Although a few other simulators of this kind already exist, PLP offers three advantages over existing solutions. One, PLP provides a simulation and visualization tool that has one-to-one correspondence with hardware and students can run the same software on real hardware (to control a robot for example) that they tested in the simulator. Two, the PLP instruction set balances functionality with extraneous cognitive load, so that students and instructors can write programs that have real-world impact, but the instruction set and architectural complexity is not beyond the scope of a sophomore/junior studentÆs understanding. Three, PLP is open source (including the hardware description in Verilog), which means that the infrastructure can be used to develop the same visualizations for other instruction set architectures, and any adopter can make tweaks adapt PLP to their own needs but then also make those tweaks or the new architecture available for future adoption by others.  Further details on the platform can found on the project website: https://plp.asu.edu/       Last Modified: 10/16/2015       Submitted by: Sohum A Sohoni]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

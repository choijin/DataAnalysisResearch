<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2 SSI: Collaborative Research: Sustained Innovations for Linear Algebra Software (SILAS)</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2016</AwardExpirationDate>
<AwardTotalIntnAmount>510000.00</AwardTotalIntnAmount>
<AwardAmount>611954</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rajiv Ramnath</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>As the era of computer architectures dominated by serial processors comes to a close, the convergence of several unprecedented changes in processor design has produced a broad consensus that much of the essential software infrastructure of computational science and engineering is utterly obsolete. Math libraries have historically been in the vanguard of software that must be quickly adapted to such design revolutions because they are the common, low-level software workhorses that do all the most basic mathematical calculations for many different types of applications. The Sustained Innovation for Linear Algebra Software (SILAS) project updates two of the most widely used numerical libraries in the history of Computational Science and Engineering---LAPACK and ScaLAPACK, (abbreviated Sca/LAPACK)---enhancing and hardening them for this ongoing revolution in processor architecture and system design. SILAS creates a layered package of software components, capable of running at every level of the platform deployment pyramid, from the desktop to the largest supercomputers in the world. It achieves three complementary objectives: 1) Wherever possible, SILAS delivers seamless access to the most up-to-date algorithms, numerical implementations, and performance, by way of Sca/LAPACK programming interfaces that are familiar to many computational scientists; 2) Wherever necessary, SILAS makes advanced algorithms, numerical implementations and performance capabilities available through new interface extensions; and 3) SILAS provides a well engineered conduit through which new discoveries at the frontiers of research in these areas can be channeled as quickly as possible to all the application communities that depend on high performance linear algebra. The improvements and innovations included in SILAS derive from a variety of sources. They represent the results (including designs and well tested prototypes) of the PIs' own algorithmic and software research agenda, which has targeted multicore, hybrid and extreme scale system architectures. They are an outcome of extensive and on-going interactions with users, vendors, and the management of large NSF and DOE supercomputing facilities. They flow from cross-disciplinary engagement with other areas of computer science and engineering, anticipating the demands and opportunities of new architectures and programming models. And finally, they come from the enthusiastic participation of the research community in developing and offering enhanced versions of existing Sca/LAPACK codes.&lt;br/&gt;&lt;br/&gt;The primary impact of SILAS is a direct function of the importance of the Sca/LAPACK libraries to many branches of computational science. The Sca/LAPACK libraries are the community standard for dense linear algebra and have been adopted and/or supported by a large community of users, computing centers, and HPC vendors. Learning to use them is a basic part of the education of a computational scientist or engineer in many fields and at many academic institutions. Application domains where Sca/LAPACK have historically been heavily used include (among a host of other examples) airplane wing design, radar cross-section studies, flow around ships and other off-shore constructions, diffusion of solid bodies in a liquid, noise reduction, and diffusion of light through small particles. Moreover, the list of application partners working with SILAS to enhance and transform these libraries for next generation platforms expands this traditional list to include quantum chemistry, adaptive mesh refinement schemes, computational materials science, geophysical flows, stochastic simulation and database research for "big data". No other numerical library can claim this breadth of integration with the community. Thus, there is every reason to believe that enhancing these libraries with state of the art methods and algorithms and adapting them for new and emerging platforms (reaching up to extreme scale), will have a correspondingly large impact on the research and education community, government laboratories, and private industry.</AbstractNarration>
<MinAmdLetterDate>08/29/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/02/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1339676</AwardID>
<Investigator>
<FirstName>James</FirstName>
<LastName>Demmel</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>James W Demmel</PI_FULL_NAME>
<EmailAddress>demmel@cs.berkeley.edu</EmailAddress>
<PI_PHON>5106435386</PI_PHON>
<NSF_ID>000207659</NSF_ID>
<StartDate>08/29/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Berkeley</Name>
<CityName>BERKELEY</CityName>
<ZipCode>947101749</ZipCode>
<PhoneNumber>5106433891</PhoneNumber>
<StreetAddress>Sponsored Projects Office</StreetAddress>
<StreetAddress2><![CDATA[1608 Fourth Street, Suite 220]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>124726725</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF CALIFORNIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Berkeley]]></Name>
<CityName>Berkeley</CityName>
<StateCode>CA</StateCode>
<ZipCode>947201776</ZipCode>
<StreetAddress><![CDATA[564 Soda Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1253</Code>
<Text>OFFICE OF MULTIDISCIPLINARY AC</Text>
</ProgramElement>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramElement>
<Code>8069</Code>
<Text>CDS&amp;E-MSS</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8009</Code>
<Text>Scientifc Software Integration</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~400000</FUND_OBLG>
<FUND_OBLG>2014~161954</FUND_OBLG>
<FUND_OBLG>2015~50000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Outcomes Report for SILAS &ndash; NSF 1339822</p> <p>The convergence of several unprecedented changes in processor design, including formidable new system constraints and revolutionary levels of heterogeneity, has produced a broad consensus that much of the essential software infrastructure of computational science and engineering (CS&amp;E) is becoming obsolete. Math libraries are historically in the vanguard of software that needs to adapt to such changes, both because they are the low level workhorses critical to the accuracy and performance of so many different types of applications, and because they have proved to be outstanding vehicles for finding and implementing solutions to the problems that new types of architectures pose. Under the <em>Sustained Innovation for Linear Algebra Software</em> (SILAS) project, the principal designers of LAPACK and ScaLAPACK&mdash;two of the most widely used numerical libraries in the history of CS&amp;E, have maintained, enhanced, hardened, and updated these libraries (abbreviated Sca/LAPACK), as well as widely used research libraries that exploit the new processor innovations &mdash; PLASMA (multicore), MAGMA (accelerators), and DPLASMA (distributed memory) &mdash; for the ongoing revolution in processor architecture and system design.</p> <p>&nbsp;</p> <p><strong>Intellectual merit:</strong></p> <p>The advanced research in dense linear algebra (DLA) performed under SILAS generated fundamental new knowledge and understanding for numerical algorithms on emerging architectures, including the following: (1) Successful research results on how to transition DLA libraries to multicore and accelerator enabled versions; (2) Vastly improved numerical methods and algorithms, such as communication-avoiding algorithms; (3) Autotuning methods, methodology, and tools; (4) New solver designs requested by users and stakeholder communities; (5) DLA programming models and software engineering to keep a substantial code base efficient and maintainable at reasonable cost in the future.</p> <p>&nbsp;</p> <p><strong>Broader Impacts:</strong></p> <p>Under SILAS, the Sca/LAPACK libraries were maintained, enhanced, hardened, and updated. Improved versions were regularly released as follows: (1) Releases targeting multicore and accelerators included MAGMA 2.1 (Aug. 2016), MAGMA 2.0 (May 2016), MAGMA 1.7 (Sept. 2015), MAGMA 1.6 (Nov. 2014), MAGMA 1.5 (Sept. 2014). PLASMA releases followed similar schedule of two major releases per year. In addition, there were separate MAGMA releases targeting Intel Xeon Phi and AMD GPU architectures; (2) The reference implementation for Sca/LAPACK was maintained by incorporating vastly improved numerical methods and algorithms that resulted from SILAS research and community algorithmic developments. For example, LAPACK 3.6.1 (June 2016) included blocked back-transformation for the non-symmetric eigenvalue problem, LAPACK 3.6.0 (Nov. 2015): BLAS3 routines for generalized SVD, blocked Hessenberg-triangular reductions, removed deprecated subroutines, complex Jacobi SVD, recursive Cholesky, and Subset SVD, LAPACK 3.5.0 (Nov. 2013): 2-by-1 CS decomposition, Symmetric LDLT factorization routines with rook pivoting algorithm; (3) Ease of use and deployment were improved, and the software engineering approach was updated to keep the substantial code base efficient, maintainable, and testable at reasonable cost in the future.</p> <p>&nbsp;</p> <p><strong>Sustainability of Sca/LAPACK, and impact on industry and education:</strong></p> <p>The enhancements under SILAS, including modified software engineering, improved the sustainability of Sca/LAPACK and enhanced openness to contributions by a larger community of developers. Consequently, despite the ongoing revolution in processor architectures, the Sca/LAPACK libraries continued to be the community standard for dense linear algebra and to be adopted and/or supported by a large community of users, computing centers, and HPC vendors. Sca/LAPACK is used now in libraries like Armadillo, Blaze, MATLAB, NumPy and R, solvers like Hypre, MUMPS, PETSc, SuperLU and Trilinos. The SILAS team collaborates with groups and organizations who provide improved versions of different library components, including Intel MKL, AMD ACML, Cray LibSci, Debian, Cygwin, Red Hat/Fedora, and Apple Accelerate Framework. Sca/LAPACK is used in many applications, e.g., for electronic-structure calculations in packages like ABINIT, Quantum ESPRESSO and VASP, finite element packages DEAL II (2007 Wilkinson Prize for Numerical Software) and OpenSees. Moreover, learning to use Sca/LAPACK is a basic part of the education of a computational scientist or engineer in many fields and at many academic institutions. No other numerical library can claim this breadth of integration with the community. The SILAS team provided one-month Summer REUs for undergraduate students from various ethnic groups and genders, taught recurring graduate level Scientific Computing for Engineers class, gave recurring tutorials at major conferences, including SC and ISC. Along with the numerous tutorials, classes, workshops, and User Group meetings,&nbsp; the SILAS team published project results and techniques in a tutorial manner and provided responsive assistance to a large user base via email and web-based systems.</p><br> <p>            Last Modified: 01/03/2017<br>      Modified by: James&nbsp;W&nbsp;Demmel</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Outcomes Report for SILAS &ndash; NSF 1339822  The convergence of several unprecedented changes in processor design, including formidable new system constraints and revolutionary levels of heterogeneity, has produced a broad consensus that much of the essential software infrastructure of computational science and engineering (CS&amp;E) is becoming obsolete. Math libraries are historically in the vanguard of software that needs to adapt to such changes, both because they are the low level workhorses critical to the accuracy and performance of so many different types of applications, and because they have proved to be outstanding vehicles for finding and implementing solutions to the problems that new types of architectures pose. Under the Sustained Innovation for Linear Algebra Software (SILAS) project, the principal designers of LAPACK and ScaLAPACK&mdash;two of the most widely used numerical libraries in the history of CS&amp;E, have maintained, enhanced, hardened, and updated these libraries (abbreviated Sca/LAPACK), as well as widely used research libraries that exploit the new processor innovations &mdash; PLASMA (multicore), MAGMA (accelerators), and DPLASMA (distributed memory) &mdash; for the ongoing revolution in processor architecture and system design.     Intellectual merit:  The advanced research in dense linear algebra (DLA) performed under SILAS generated fundamental new knowledge and understanding for numerical algorithms on emerging architectures, including the following: (1) Successful research results on how to transition DLA libraries to multicore and accelerator enabled versions; (2) Vastly improved numerical methods and algorithms, such as communication-avoiding algorithms; (3) Autotuning methods, methodology, and tools; (4) New solver designs requested by users and stakeholder communities; (5) DLA programming models and software engineering to keep a substantial code base efficient and maintainable at reasonable cost in the future.     Broader Impacts:  Under SILAS, the Sca/LAPACK libraries were maintained, enhanced, hardened, and updated. Improved versions were regularly released as follows: (1) Releases targeting multicore and accelerators included MAGMA 2.1 (Aug. 2016), MAGMA 2.0 (May 2016), MAGMA 1.7 (Sept. 2015), MAGMA 1.6 (Nov. 2014), MAGMA 1.5 (Sept. 2014). PLASMA releases followed similar schedule of two major releases per year. In addition, there were separate MAGMA releases targeting Intel Xeon Phi and AMD GPU architectures; (2) The reference implementation for Sca/LAPACK was maintained by incorporating vastly improved numerical methods and algorithms that resulted from SILAS research and community algorithmic developments. For example, LAPACK 3.6.1 (June 2016) included blocked back-transformation for the non-symmetric eigenvalue problem, LAPACK 3.6.0 (Nov. 2015): BLAS3 routines for generalized SVD, blocked Hessenberg-triangular reductions, removed deprecated subroutines, complex Jacobi SVD, recursive Cholesky, and Subset SVD, LAPACK 3.5.0 (Nov. 2013): 2-by-1 CS decomposition, Symmetric LDLT factorization routines with rook pivoting algorithm; (3) Ease of use and deployment were improved, and the software engineering approach was updated to keep the substantial code base efficient, maintainable, and testable at reasonable cost in the future.     Sustainability of Sca/LAPACK, and impact on industry and education:  The enhancements under SILAS, including modified software engineering, improved the sustainability of Sca/LAPACK and enhanced openness to contributions by a larger community of developers. Consequently, despite the ongoing revolution in processor architectures, the Sca/LAPACK libraries continued to be the community standard for dense linear algebra and to be adopted and/or supported by a large community of users, computing centers, and HPC vendors. Sca/LAPACK is used now in libraries like Armadillo, Blaze, MATLAB, NumPy and R, solvers like Hypre, MUMPS, PETSc, SuperLU and Trilinos. The SILAS team collaborates with groups and organizations who provide improved versions of different library components, including Intel MKL, AMD ACML, Cray LibSci, Debian, Cygwin, Red Hat/Fedora, and Apple Accelerate Framework. Sca/LAPACK is used in many applications, e.g., for electronic-structure calculations in packages like ABINIT, Quantum ESPRESSO and VASP, finite element packages DEAL II (2007 Wilkinson Prize for Numerical Software) and OpenSees. Moreover, learning to use Sca/LAPACK is a basic part of the education of a computational scientist or engineer in many fields and at many academic institutions. No other numerical library can claim this breadth of integration with the community. The SILAS team provided one-month Summer REUs for undergraduate students from various ethnic groups and genders, taught recurring graduate level Scientific Computing for Engineers class, gave recurring tutorials at major conferences, including SC and ISC. Along with the numerous tutorials, classes, workshops, and User Group meetings,  the SILAS team published project results and techniques in a tutorial manner and provided responsive assistance to a large user base via email and web-based systems.       Last Modified: 01/03/2017       Submitted by: James W Demmel]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

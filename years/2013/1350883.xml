<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Systems for Transparency in Personal Devices and Services</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/15/2014</AwardEffectiveDate>
<AwardExpirationDate>12/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>318599.00</AwardTotalIntnAmount>
<AwardAmount>498419</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>In the current age of personal devices and online services, many "why" questions people ask are left unanswered. Questions such as "why am I seeing this online ad?", "is my application sending my contact information to somewhere else?", or "why is my device not lasting even a day?" are often raised but left unanswered.&lt;br/&gt;&lt;br/&gt;The underlying issue of answering these questions is transparency. If a system is transparent, i.e., if a system provides detailed information that reveals its inner working, then we can start answering the "why" questions. For example, if an application or a platform reveals how the application behaves in regards to all the data read from contacts, we should be able to answer "is my application sending my contact information to somewhere else?".&lt;br/&gt;&lt;br/&gt;To address the challenge of transparency, this project designs a suite of techniques and tools that provide greater transparency into how applications and platforms behave. Especially, this project focuses on three most pressing areas in personal devices and online services that desire transparency?personal data use, system behavior, and energy usage. For the transparency in personal data use, this project designs techniques to track personal data use across front-end smartphones and back-end data center systems. An automated instrumentation framework for smartphone provenance management and a service for managing provenance in data centers form the core of this functionality. For the transparency in system behavior, this project designs a tracing framework for the Android platform. Our design is tailored to the needs for mobile tracing such as holistic tracing of both applications and the platform as well as instrumentation customization for performance and energy. For the transparency in energy usage, this project designs an activity-based energy usage monitoring tool for personal devices. This tool raises the level of abstraction to user activities, providing user-centric transparency for energy usage.&lt;br/&gt;&lt;br/&gt;This project provides a unique opportunity that can advance the state-of-the-art in multiple domains---applications for personal devices, data center systems, personal device platforms, mobile program and platform instrumentation, and data provenance management---with a focus on transparency. If successful, this research will benefit users, developers, researchers, and providers of personal devices and online services. The results will be disseminated through publications, open-source software, and real deployment.</AbstractNarration>
<MinAmdLetterDate>01/22/2014</MinAmdLetterDate>
<MaxAmdLetterDate>03/12/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1350883</AwardID>
<Investigator>
<FirstName>Steven</FirstName>
<LastName>Ko</LastName>
<PI_MID_INIT>Y</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Steven Y Ko</PI_FULL_NAME>
<EmailAddress>stevko@buffalo.edu</EmailAddress>
<PI_PHON>7166454732</PI_PHON>
<NSF_ID>000554971</NSF_ID>
<StartDate>01/22/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Buffalo</Name>
<CityName>Buffalo</CityName>
<ZipCode>142282567</ZipCode>
<PhoneNumber>7166452634</PhoneNumber>
<StreetAddress>520 Lee Entrance</StreetAddress>
<StreetAddress2><![CDATA[Suite 211]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>038633251</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Buffalo]]></Name>
<CityName/>
<StateCode>NY</StateCode>
<ZipCode>142602500</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~252170</FUND_OBLG>
<FUND_OBLG>2015~82626</FUND_OBLG>
<FUND_OBLG>2017~80938</FUND_OBLG>
<FUND_OBLG>2018~82685</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div class="page" title="Page 3"> <div class="layoutArea"> <div class="column"> <p>This project has explored how to provide transparency in mobile OSes. What we mean by transparency in this project is&nbsp;an ability for a mobile system to tell its users&nbsp;why it is doing what it is doing. The need for such property has arisen in recent years, primarily due to the ubiquitous popularity of personal devices such as smartphones and tablets. Although they provide much technological convenience, they also bring many&nbsp;why&nbsp;questions from users such as&nbsp;&ldquo;is this application sending a personal phone number to some Internet server?&rdquo;&nbsp;or&nbsp;&ldquo;is it tracking my locations?&rdquo;. Thus, we have developed various tools to analyze and understand what mobile apps can potentially do when users install them and use them. Our tools mainly use a technique called information flow analysis, and we have proposed new techniques to perform information flow analysis for mobile apps more accurately and efficiently.&nbsp;</p> <p>The first tool we have developed is called BlueSeal. This tool reveals if an Android app can leak private date that belongs to its user such as phone numbers, device IDs, location, etc. The main technical challenge that this tool has overcome is performing information flow analysis on an Android app. An Android app has a program structure that is different from desktop or server applications, and traditional information flow analysis assumes the structures of desktop or server applications. Thus, we have developed a technique that understands the structure of an Android app and performs information flow analysis on it.</p> <p>After we finished our initial tool, the research evolved into adding more capabilities related to malware behavior detection, which is a broader category than private date leak detection. We proposed two new techniques---one is called complex flow analysis and the other is called string analaysis. Our complex flow analysis is an improvement over traditional information flow analysis. Traditional information flow analysis focues on detecting a single flow of information. Using this as a foundation, our complex flow analysis detects multiple, correlated flows and group them together (which we call a complex flow). This complex flow is used to further analyze if the Android app contains similar complex flows that malicious Android apps contain. We show that this approach detects malicious Android apps quite accurately.</p> <p>The next technique we proposed is string analysis. In this analysis, we detect the presence and use of strings in an Android app to determine whether or not the app can exhibit malicious behavior. The reason why we use strings to detect malicious behavior is that on Android strings are used to access private data, system resourses, other app's capabilities, etc. Thus, we hypothesized that it could be a good indicator for malicious behavior and have verified that it is indeed a good indicator for malicious behavior. In doing so, we have designed a string analysis technique for Android apps and also used maching learning techniques to detect if there are similar string usage patterns between an app that we analyze and known malicious apps. Our results show that this approach can effectively detect malicious behavior of an Android app.</p> <p>Overall, this project has explored how to provide more transprency to users regarding how a mobile app can behave when it is installed. We have proposed three new techniques that perform information flow analysis on Android apps, and we show that our techniques can improve the state-of-the-art in terms of analysis capabilities and accuracy of results.</p> </div> </div> </div><br> <p>            Last Modified: 04/30/2020<br>      Modified by: Steven&nbsp;Y&nbsp;Ko</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[    This project has explored how to provide transparency in mobile OSes. What we mean by transparency in this project is an ability for a mobile system to tell its users why it is doing what it is doing. The need for such property has arisen in recent years, primarily due to the ubiquitous popularity of personal devices such as smartphones and tablets. Although they provide much technological convenience, they also bring many why questions from users such as "is this application sending a personal phone number to some Internet server?" or "is it tracking my locations?". Thus, we have developed various tools to analyze and understand what mobile apps can potentially do when users install them and use them. Our tools mainly use a technique called information flow analysis, and we have proposed new techniques to perform information flow analysis for mobile apps more accurately and efficiently.   The first tool we have developed is called BlueSeal. This tool reveals if an Android app can leak private date that belongs to its user such as phone numbers, device IDs, location, etc. The main technical challenge that this tool has overcome is performing information flow analysis on an Android app. An Android app has a program structure that is different from desktop or server applications, and traditional information flow analysis assumes the structures of desktop or server applications. Thus, we have developed a technique that understands the structure of an Android app and performs information flow analysis on it.  After we finished our initial tool, the research evolved into adding more capabilities related to malware behavior detection, which is a broader category than private date leak detection. We proposed two new techniques---one is called complex flow analysis and the other is called string analaysis. Our complex flow analysis is an improvement over traditional information flow analysis. Traditional information flow analysis focues on detecting a single flow of information. Using this as a foundation, our complex flow analysis detects multiple, correlated flows and group them together (which we call a complex flow). This complex flow is used to further analyze if the Android app contains similar complex flows that malicious Android apps contain. We show that this approach detects malicious Android apps quite accurately.  The next technique we proposed is string analysis. In this analysis, we detect the presence and use of strings in an Android app to determine whether or not the app can exhibit malicious behavior. The reason why we use strings to detect malicious behavior is that on Android strings are used to access private data, system resourses, other app's capabilities, etc. Thus, we hypothesized that it could be a good indicator for malicious behavior and have verified that it is indeed a good indicator for malicious behavior. In doing so, we have designed a string analysis technique for Android apps and also used maching learning techniques to detect if there are similar string usage patterns between an app that we analyze and known malicious apps. Our results show that this approach can effectively detect malicious behavior of an Android app.  Overall, this project has explored how to provide more transprency to users regarding how a mobile app can behave when it is installed. We have proposed three new techniques that perform information flow analysis on Android apps, and we show that our techniques can improve the state-of-the-art in terms of analysis capabilities and accuracy of results.          Last Modified: 04/30/2020       Submitted by: Steven Y Ko]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

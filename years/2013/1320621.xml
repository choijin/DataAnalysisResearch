<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: Scalable and accurate direct solvers for integral equations on surfaces</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>219999.00</AwardTotalIntnAmount>
<AwardAmount>219999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rosemary Renaut</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The goal of the proposed research is to develop faster and more accurate algorithms for computing approximate solutions to a broad class of equations  that  model physical phenomena such as heat transport, deformation of elastic bodies, scattering of electromagnetic waves, and many others. The task of solving such equations is frequently the most time consuming part of computational simulations, and is the part that determines which problems can be modeled computationally, and which cannot. Dealing with complicated shapes (e.g.  scattering from complex geometry or flow through channels of complicated shape) adds difficulty to the computational task.&lt;br/&gt;&lt;br/&gt;Technically speaking, most existing large-scale numerical algorithms for solving partial differential and integral equations on complex geometries are based on so called "iterative methods" which construct a sequence of approximate solutions that gradually approach the exact solution. The proposed research seeks to develop "direct methods" for solving  equations. A "direct method" computes the unknown data from the given data in one shot.  When available, direct methods are often preferred to iterative ones since they are more robust, and  can be used in a "black-box" way.  As a result these are  more suitable for incorporation in general purpose software, and in many cases work for important problems that cannot be solved with existing iterative methods. The reason that they are today typically not used is that existing direct methods for many problems are often prohibitively expensive. However, recent results by the PIs and other researchers have proven that it is possible to construct direct methods that are competitive in terms of speed with the very fastest existing iterative solvers. The new algorithms will be applied to the simulation of fluid flows and biomolecular simulations, and their performance will be demonstrated by the execution of simulations on complex geometries.</AbstractNarration>
<MinAmdLetterDate>07/14/2013</MinAmdLetterDate>
<MaxAmdLetterDate>07/14/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1320621</AwardID>
<Investigator>
<FirstName>Denis</FirstName>
<LastName>Zorin</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Denis Zorin</PI_FULL_NAME>
<EmailAddress>dzorin@mrl.nyu.edu</EmailAddress>
<PI_PHON>2129983405</PI_PHON>
<NSF_ID>000270109</NSF_ID>
<StartDate>07/14/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>New York University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100121019</ZipCode>
<PhoneNumber>2129982121</PhoneNumber>
<StreetAddress>70 WASHINGTON SQUARE S</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041968306</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NEW YORK UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041968306</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[New York University]]></Name>
<CityName>New York</CityName>
<StateCode>NY</StateCode>
<ZipCode>100121019</ZipCode>
<StreetAddress><![CDATA[251 Mercer Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1271</Code>
<Text>COMPUTATIONAL MATHEMATICS</Text>
</ProgramElement>
<ProgramReference>
<Code>9263</Code>
<Text>COMPUTATIONAL SCIENCE &amp; ENGING</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~219999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><br />The main contributions of this projected include advances in the algorithms and software for integral equations, including equations on &nbsp;two-dimensional domains, surfaces in three dimensions and volumes bounded by surfaces, as well as applications of such solvers to &nbsp;biological flow problems.<br />A range of common physical problems (electric field and heat distribution computations, small-deformation elasticity, certain types of flows, e.g., capillary flows, can be formulated and discretized as integral equations. When available, this type of discretizations offer many advantages in &nbsp;accuracy and robustness. These advantages are particularly pronounced in the case of moving boundaries: these methods eliminate most of the need for meshing the domain, a standard step in solvers which is often most time-consuming and prone to failure.<br />At the same time, a key element for applying integral equations in practice is availability of efficient solvers for inversion of resulting &nbsp;dense systems of algebraic equations; existing solvers are less mature and available, compared to solvers for sparse systems (i.e., systems with mostly zero elements). For integral equations, most solvers are iterative, thanks to one of the key properties of these formulations: unlike PDE discretizations, the number of iterations required is usually small, and does notchange if a larger problem is solved. &nbsp;However, in many important cases (for example, for problems with complex boundaries, with different boundary parts in close proximity), the number of iterations still can be high. &nbsp;In the sparse case, these problems are common and are handled by a different type of solvers: either direct solvers or iterative solvers with preconditioning which can be thought of as a generalization of both. &nbsp;For the integral equation case, there were relatively few efforts to develop solvers of this type, especially solvers of optimal complexity, which is needed for scalability.<br />Intellectual merit. &nbsp;The outcomes of this project include:1. We completed the development the and released the code for an optimal direct solver for integral equations in the plane, based on a two-level compression scheme for matrices. For larger problems, this solver significantly outperforms existing ones.<br />2. We developed a new preconditioned iterative solver, based on &nbsp;quantized tensor-train hierarchical compression of integral equation matrices. &nbsp;For volume and boundary integrals in simple geometries, it can actually converge in one iteration, yielding a practical fast O(N) direct solver. For boundary integrals in complex geometries, we show that a low accuracy approximation can be reliably used as a &nbsp;preconditioner. The distinctive feature of this solver is its remarkably low, compared to other solvers memory cost, which is sublinear in the number of variables in terms of additional storage required, so for large systems.<br />3. We have developed another important component of integral equation solvers for complex geometries, a new quadrature scheme for computing the integrals involved. &nbsp;Integrals involved in the equations typically have singular or close to singular integrands, requiring special quadratures for integrating these. A recent approach called quadrature-by-expansion (QBX) has demonstrated that these difficulties can be circumvented, but requires analysis specific to each kernel. We developed a general-purpose approach, &nbsp;relying solely on point evaluations, which we demonstrated to work (in two dimensions) for a range of equations. This approach also considerably simplifies the requirements for mathematical surface/curve descriptions that can be used by the solver.&nbsp;We have developed estimates for the accuracy of this quadrature method &nbsp;in the case of Laplace and Yukawa potentials.<br />4. We have &nbsp;worked to extend our software for simulation of flows with immersed deformable membranes (vesicles, cells etc) based on solving integral equations, to address several issues related to singular and nearly-singular integrals. &nbsp;Near-collisions, common in dense suspensions, remained one of the weak spots in our previous work; as a part of this project, we have worked to integrate a more accurate quadrature, and contact constraints The latter aspects is very important, for lowering the computational cost of the method. As a result, we are able to model high density suspensions of cells, at a far lower (order of magnitude or more) than was previously possible.&nbsp;<br />Jointly with applied mathematicians studying cell division processes, &nbsp;we worked to scale up the code for modeling filaments in Stokes flow inside a cell, to investigate two important questions in the mechanics of cell division: (i) the effect of confinement on the hydrodynamic mobility of microtubule asters; and (ii) the dynamics of the positioning of mitotic spindle in complex cell geometries.</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 07/24/2017<br>      Modified by: Denis&nbsp;Zorin</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  The main contributions of this projected include advances in the algorithms and software for integral equations, including equations on  two-dimensional domains, surfaces in three dimensions and volumes bounded by surfaces, as well as applications of such solvers to  biological flow problems. A range of common physical problems (electric field and heat distribution computations, small-deformation elasticity, certain types of flows, e.g., capillary flows, can be formulated and discretized as integral equations. When available, this type of discretizations offer many advantages in  accuracy and robustness. These advantages are particularly pronounced in the case of moving boundaries: these methods eliminate most of the need for meshing the domain, a standard step in solvers which is often most time-consuming and prone to failure. At the same time, a key element for applying integral equations in practice is availability of efficient solvers for inversion of resulting  dense systems of algebraic equations; existing solvers are less mature and available, compared to solvers for sparse systems (i.e., systems with mostly zero elements). For integral equations, most solvers are iterative, thanks to one of the key properties of these formulations: unlike PDE discretizations, the number of iterations required is usually small, and does notchange if a larger problem is solved.  However, in many important cases (for example, for problems with complex boundaries, with different boundary parts in close proximity), the number of iterations still can be high.  In the sparse case, these problems are common and are handled by a different type of solvers: either direct solvers or iterative solvers with preconditioning which can be thought of as a generalization of both.  For the integral equation case, there were relatively few efforts to develop solvers of this type, especially solvers of optimal complexity, which is needed for scalability. Intellectual merit.  The outcomes of this project include:1. We completed the development the and released the code for an optimal direct solver for integral equations in the plane, based on a two-level compression scheme for matrices. For larger problems, this solver significantly outperforms existing ones. 2. We developed a new preconditioned iterative solver, based on  quantized tensor-train hierarchical compression of integral equation matrices.  For volume and boundary integrals in simple geometries, it can actually converge in one iteration, yielding a practical fast O(N) direct solver. For boundary integrals in complex geometries, we show that a low accuracy approximation can be reliably used as a  preconditioner. The distinctive feature of this solver is its remarkably low, compared to other solvers memory cost, which is sublinear in the number of variables in terms of additional storage required, so for large systems. 3. We have developed another important component of integral equation solvers for complex geometries, a new quadrature scheme for computing the integrals involved.  Integrals involved in the equations typically have singular or close to singular integrands, requiring special quadratures for integrating these. A recent approach called quadrature-by-expansion (QBX) has demonstrated that these difficulties can be circumvented, but requires analysis specific to each kernel. We developed a general-purpose approach,  relying solely on point evaluations, which we demonstrated to work (in two dimensions) for a range of equations. This approach also considerably simplifies the requirements for mathematical surface/curve descriptions that can be used by the solver. We have developed estimates for the accuracy of this quadrature method  in the case of Laplace and Yukawa potentials. 4. We have  worked to extend our software for simulation of flows with immersed deformable membranes (vesicles, cells etc) based on solving integral equations, to address several issues related to singular and nearly-singular integrals.  Near-collisions, common in dense suspensions, remained one of the weak spots in our previous work; as a part of this project, we have worked to integrate a more accurate quadrature, and contact constraints The latter aspects is very important, for lowering the computational cost of the method. As a result, we are able to model high density suspensions of cells, at a far lower (order of magnitude or more) than was previously possible.  Jointly with applied mathematicians studying cell division processes,  we worked to scale up the code for modeling filaments in Stokes flow inside a cell, to investigate two important questions in the mechanics of cell division: (i) the effect of confinement on the hydrodynamic mobility of microtubule asters; and (ii) the dynamics of the positioning of mitotic spindle in complex cell geometries.             Last Modified: 07/24/2017       Submitted by: Denis Zorin]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

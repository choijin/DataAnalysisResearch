<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR:  Small:  On Modeling Software Dynamics for Feedback Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>456171.00</AwardTotalIntnAmount>
<AwardAmount>456171</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project develops science and technology for ensuring performance stability of large-scale software systems, such as resource management mechanisms used in data centers. The term "stability" is used here in a control-theoretic sense that applies to dynamical systems and roughly means freedom from divergence a range of desired system states. Performance stability refers to stability of performance parameters, such as latency, response time, service throughput, utilization, cache hit ratio, or timeout rate. The project develops the foundations and tools necessary to ensure software stability, and to diagnose and undo root causes of unstable behavior when it occurs in deployed systems. A significant contribution lies in exploring rules and guidelines that, if obeyed, allow reasoning about software stability in a compositional manner, such that stability of composite systems can be inferred from stability of components. Compositional stability analysis of software performance is facilitated by advances in control theory such as Passivity Theory and the Theory of Positive and Dissipative Systems. These advances offer a wealth of results on stability and compositionality for a restricted category of non-linear systems that fits software models. &lt;br/&gt;&lt;br/&gt;Performance stability challenges have been largely overlooked in software design. They are not typically manifest in small systems, but grow with the size and complexity of systems. The trend towards more software consolidation and outsourcing of computing services entails more complexity, more layering, and more interactions among various resource management mechanisms, making it harder to anticipate side-effects, and more likely there will be stability problems. The project improves the current understanding of the design, execution, and management of large systems that exploit feedback mechanisms to achieve performance and robustness objectives. Educational activities include incorporation of project elements into several courses taught by the PI, and involvement of undergraduate students in the research. Outreach activities include an on-campus "Feedback Computing Day", a tutorial on feedback computing to be offered in conjunction with a major research conference, and efforts by the PI to recruit students from under-represented groups. Dissemination activities include documentation of results of the research in a book by the PI, and efforts to transition technology through collaborators in industry.</AbstractNarration>
<MinAmdLetterDate>09/09/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/22/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1320209</AwardID>
<Investigator>
<FirstName>Tarek</FirstName>
<LastName>Abdelzaher</LastName>
<PI_MID_INIT>F</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tarek F Abdelzaher</PI_FULL_NAME>
<EmailAddress>zaher@cs.uiuc.edu</EmailAddress>
<PI_PHON>2172656793</PI_PHON>
<NSF_ID>000325165</NSF_ID>
<StartDate>09/09/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName/>
<StateCode>IL</StateCode>
<ZipCode>618207473</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~456171</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The project investigated the topic of feedback computing; namely, the use of feedback in software computing systems. An important category of modern software systems that use feedback is learning systems. Thus, a key area of investigation was to better understand systems that learn. The investigation led to several publications on the exploration of feedback to improve aspects of software behavior.</p> <p>Early investigation focused on software stability analysis and performance composability. A "cloud-computing-like" testbed was constructed. The testbed comprised 80 machines, collectively featuring more than 400 cores under software control to meet various objectives on latency, load distribution, energy consumption and temperature. This testbed was used to understand impact of software feedback control on overall system performance. Several examples of performance management problems in large-scale dynamic software systems were addressed, where feedback loops must allocate multiple distributed resources, accommodate complex execution flow graphs (that need multi-stage processing), and adapt to dynamically changing workloads.&nbsp;</p> <p>The concept of passivity was explored in the context of software feedback computing as a means to argue about stability. Several types of software were investigated from a passivity perspective. The findings contributed to a&nbsp;Dagstuhl seminar on self-aware computing systems. A later Dagstuhl report was developed to set an agenda for the field of self-aware computing, where the need for intelligence and feedback was prominently recognized. The PI co-authored three chapters towards that book.&nbsp;</p> <p>In later years of the project, the work shifted from challenges of the (cloud) back-end to the resource-constrained front-end, where new challenges were identified due to the more stringest resource limitations, as well as the emerging need for machine intelligence. The project was extended (at no cost to NSF) to allow the investigation of learning in resource-constrainted environments with an eye on adaptive Internet of Things (IoT) applications.</p> <p>Resulting advances in intelligent IoT systems were found to be of relevance to emerging defense paradigms, where fast feedback, software resilience, and machine adaptation to resource constraints are paramount. This direction eventually conributed to a new effort, led by the PI, on the topic of the Internet of Battlefield Things.&nbsp;</p> <p>Finally, the project concluded with an investigation of deep learning as one of the most influential new examples of the use of feedback in computing software. Multiple publications appeared by the PI on the optimization and control of deep learning systems and applications.&nbsp;</p> <p>On the whole, the project covered three major areas of feedback computing in modern software systems; namely: (i) feedback, adaptation, and optimization challenges in the cloud back-end, (ii) feedback, adaptation, and optimization challenges in the resource-limited (edge) front-end, and (iii) challenges in importing machine intelligence into the above front-end/back-end framework. The investigation led to advances in resource-economy, improved resilience, and assured performance guarantees.</p> <p>In terms of broader impact and dissemination, the project (i) advanced a computing testbed used for both research and education (class projects) on feedback computing, (ii) informed a Dagstuhl seminar on the future research agenda for self-aware computing, (iii) significantly influenced the vision and research directions of the Internet of Battlefield Things, a novel paradigm for next-generation defense systems, (iv) produced a masters thesis and a Ph.D. thesis as well as several research assistanships to help shape the future talent pipeline, (v) contributed to the creation of a new conference, called the International Conference on Internet of Things Design and Implementation, to address new IoT challenges, including resilience, adaptation, and intelligence, where the PI is a steering committee co-chair, and (vi) resulted in several publications, talks, and modules on the topic of the award.</p><br> <p>            Last Modified: 04/05/2020<br>      Modified by: Tarek&nbsp;F&nbsp;Abdelzaher</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The project investigated the topic of feedback computing; namely, the use of feedback in software computing systems. An important category of modern software systems that use feedback is learning systems. Thus, a key area of investigation was to better understand systems that learn. The investigation led to several publications on the exploration of feedback to improve aspects of software behavior.  Early investigation focused on software stability analysis and performance composability. A "cloud-computing-like" testbed was constructed. The testbed comprised 80 machines, collectively featuring more than 400 cores under software control to meet various objectives on latency, load distribution, energy consumption and temperature. This testbed was used to understand impact of software feedback control on overall system performance. Several examples of performance management problems in large-scale dynamic software systems were addressed, where feedback loops must allocate multiple distributed resources, accommodate complex execution flow graphs (that need multi-stage processing), and adapt to dynamically changing workloads.   The concept of passivity was explored in the context of software feedback computing as a means to argue about stability. Several types of software were investigated from a passivity perspective. The findings contributed to a Dagstuhl seminar on self-aware computing systems. A later Dagstuhl report was developed to set an agenda for the field of self-aware computing, where the need for intelligence and feedback was prominently recognized. The PI co-authored three chapters towards that book.   In later years of the project, the work shifted from challenges of the (cloud) back-end to the resource-constrained front-end, where new challenges were identified due to the more stringest resource limitations, as well as the emerging need for machine intelligence. The project was extended (at no cost to NSF) to allow the investigation of learning in resource-constrainted environments with an eye on adaptive Internet of Things (IoT) applications.  Resulting advances in intelligent IoT systems were found to be of relevance to emerging defense paradigms, where fast feedback, software resilience, and machine adaptation to resource constraints are paramount. This direction eventually conributed to a new effort, led by the PI, on the topic of the Internet of Battlefield Things.   Finally, the project concluded with an investigation of deep learning as one of the most influential new examples of the use of feedback in computing software. Multiple publications appeared by the PI on the optimization and control of deep learning systems and applications.   On the whole, the project covered three major areas of feedback computing in modern software systems; namely: (i) feedback, adaptation, and optimization challenges in the cloud back-end, (ii) feedback, adaptation, and optimization challenges in the resource-limited (edge) front-end, and (iii) challenges in importing machine intelligence into the above front-end/back-end framework. The investigation led to advances in resource-economy, improved resilience, and assured performance guarantees.  In terms of broader impact and dissemination, the project (i) advanced a computing testbed used for both research and education (class projects) on feedback computing, (ii) informed a Dagstuhl seminar on the future research agenda for self-aware computing, (iii) significantly influenced the vision and research directions of the Internet of Battlefield Things, a novel paradigm for next-generation defense systems, (iv) produced a masters thesis and a Ph.D. thesis as well as several research assistanships to help shape the future talent pipeline, (v) contributed to the creation of a new conference, called the International Conference on Internet of Things Design and Implementation, to address new IoT challenges, including resilience, adaptation, and intelligence, where the PI is a steering committee co-chair, and (vi) resulted in several publications, talks, and modules on the topic of the award.       Last Modified: 04/05/2020       Submitted by: Tarek F Abdelzaher]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Static-Analysis-Driven Engineering of Modern Software Systems</AwardTitle>
<AwardEffectiveDate>02/01/2014</AwardEffectiveDate>
<AwardExpirationDate>01/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>449994.00</AwardTotalIntnAmount>
<AwardAmount>449994</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Users of software are all too familiar with its shortcomings: software&lt;br/&gt;is slow, software is buggy and software is insecure.  When a complex&lt;br/&gt;software system fails, it is unhelpfully simplistic to blame the&lt;br/&gt;implementors of the system as incompetent.  The truth is that software&lt;br/&gt;engineers are uniquely disadvantaged among the traditional engineering&lt;br/&gt;disciplines because they lack a viable predictive model for the&lt;br/&gt;systems they design and build. That is, a software engineer cannot&lt;br/&gt;predict the behavior of software in practice in the same way that a&lt;br/&gt;civil engineer can predict the behavior of a bridge under load. The&lt;br/&gt;primary intellectual merit of this research is that it lays the&lt;br/&gt;critical, systematic foundations for the science of prediction for&lt;br/&gt;software. The broader impacts are to enable engineers to build better&lt;br/&gt;software with the aid of predictivity. Moreover, this research also&lt;br/&gt;seeks to develop courses and educational material to train the next&lt;br/&gt;generation of software engineers in the art of constructing fast,&lt;br/&gt;safe, reliable and secure software in this fashion.  As this research&lt;br/&gt;transfers into practice and engineers adopt this methodology, it will&lt;br/&gt;significantly strengthen the foundation of national&lt;br/&gt;cyberinfrastructure.&lt;br/&gt;&lt;br/&gt;The core technical thrust of this research is the development of a&lt;br/&gt;systematic method for the synthesis of static analyzers for complex,&lt;br/&gt;modern programming languages.  It also explores whether or not this&lt;br/&gt;methodology can be automated in whole or in part. To motivate the&lt;br/&gt;development of this method, this research applies the method to the&lt;br/&gt;synthesis of intensional static analyzers for popular scripting&lt;br/&gt;languages such as JavaScript, Perl, PHP, Ruby and Python?many of which&lt;br/&gt;happen to be the languages powering modern, web-based software.  The&lt;br/&gt;foundational technical concept of this research is the systematic&lt;br/&gt;transformation of small-step interpreters into static analyzers.&lt;br/&gt;Small-step analyzers promise unique advantages over traditional&lt;br/&gt;techniques, including more opportunities for optimizing speed and&lt;br/&gt;precision, and clearer, easier reasoning about the soundness of the&lt;br/&gt;results of the analysis.</AbstractNarration>
<MinAmdLetterDate>01/23/2014</MinAmdLetterDate>
<MaxAmdLetterDate>05/29/2018</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1350344</AwardID>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Might</LastName>
<EmailAddress>might@cs.utah.edu</EmailAddress>
<StartDate>01/23/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR:Small: Scalable Transaction Management and Consistency Models for Cloud Data Storage Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>429236.00</AwardTotalIntnAmount>
<AwardAmount>461236</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The goal of this project is to develop scalable techniques and system architectures for transaction management in cloud computing systems.  In the recent years, various data management systems based on key-value storage models have emerged to address the scalability requirements of cloud based applications. However, these systems do not provide rich data management primitives, such as multi-row serializable transactions, often needed in many application domains. This project is investigating scalable transaction management techniques for key-value based data storage systems with the aim of supporting multi-row transactions with ACID (atomicity, isolation, durability, consistency) properties in such systems.  For scalability, this investigation is based on utilizing the snapshot isolation model.  Additional issues arise in supporting transaction management for geographically replicated data across different cloud datacenters.  Considering that weaker consistency models can be adequate in certain applications, this project aims to develop techniques for supporting different transactional consistency models such as snapshot isolation, causal consistency, serializability, and session-level consistency for geo-replicated data in cloud applications.  Moreover, the goal of this project is to exploit the semantics of data operations for enhanced performance and availability. &lt;br/&gt;&lt;br/&gt;This project aims at enabling the use of key-value based cloud data storage models for a large-class of applications with various different data consistency requirements. The lack of transaction support with strong consistency models in cloud computing systems has been an obstacle in adoption of such systems in many critical application domains. A potentially transformative impact of this project will be towards enabling a broader class of applications to utilize cloud computing systems.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/09/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/04/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319333</AwardID>
<Investigator>
<FirstName>Anand</FirstName>
<LastName>Tripathi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Anand Tripathi</PI_FULL_NAME>
<EmailAddress>tripathi@umn.edu</EmailAddress>
<PI_PHON>6126259515</PI_PHON>
<NSF_ID>000369365</NSF_ID>
<StartDate>09/09/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Minnesota-Twin Cities</Name>
<CityName>Minneapolis</CityName>
<ZipCode>554552070</ZipCode>
<PhoneNumber>6126245599</PhoneNumber>
<StreetAddress>200 OAK ST SE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Minnesota</StateName>
<StateCode>MN</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MN05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>555917996</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF MINNESOTA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>117178941</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Minnesota-Twin Cities]]></Name>
<CityName/>
<StateCode>MN</StateCode>
<ZipCode>554550159</ZipCode>
<StreetAddress><![CDATA[200 Union Street SE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Minnesota</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MN05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~429236</FUND_OBLG>
<FUND_OBLG>2014~16000</FUND_OBLG>
<FUND_OBLG>2015~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Helvetica} --> <!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Helvetica} --> <p class="p1">The major accomplishments of this award are in developing scalable models and protocols for transaction management in key-value based data management systems and utilizing these models for building a transaction-based parallel programming framework for large-scale graph problems.</p> <p class="p1">Intellectual Merit:</p> <p class="p1">This project developed scalable transaction management techniques for Hadoop/HBase to support serializable multi-row transactions utilizing the snapshot isolation model. This result is reported in a journal paper [3]. The investigation on transaction management for partially replicated data management systems resulted in the development of the Partitioned Causal Snapshot Isolation (PCSI) protocol. The design of this protocol is reported in a paper [2]. Further refinements of this protocol to scale-out its performance on a computing cluster of 100 nodes is reported in another publication [8]. This work received the Best Paper Award at the IEEE Cloud Computing (2016) conference. Building upon this transaction management protocol, a model was developed for simultaneously supporting transactions with different consistency levels in an application. This model supports transactions in four classes of consistency levels. serializable, causal snapshot isolation (CSI), causal snapshot isolation with concurrent commutative updates (CSI-CM), and asynchronous updates with eventual/causal consistency. This work is reported in a paper [10], and the use of this model in groupware applications is reported in [4]. Another significant outcome from this project is the development of the Beehive [6, 7] framework for parallel programming of graph problems. It is based on a transactional model of parallel computing. Since its initial design reported in [6] we achieved more than 50-fold performance scaling of this system. This required a multi-pronged approach to overcome many of the issues which arise due to the use of Java RMI serialization costs in remote data access and garbage collection overheads of Java. The current system supports a hybrid model using both Thrift and Java RMI because Thrift performs better than Java RMI but does not support object-class hierarchy in communication. For further performance scaling, a decentralized protocol for transaction validation was developed. Utilizing the transactional computing model of Beehive, this project developed incremental computation techniques in dynamic&nbsp; and evolving graph structures. This work is reported in a journal paper [9].</p> <p class="p1">Broader Impacts:</p> <p class="p1">The results from this project were reported in two journal publications [3, 9], several conference papers publications [2, 4, 5, 6, 7, 8, 10], and technical reports. The results of this project are also disseminated through the project website (http://ajanta.cs.umn.edu) and the University of Minnesota Digital Conservancy (httts://conservancy.umn.edu). The Beehive codebase has been made available as open-source software under GNU GPL V3 license for public access through the project website.&nbsp;This project&nbsp; also developed Beehive programmer's guidebook [1] for the research community to utilize this system. This award supported participation of one PhD student, seven Masters students, and six undergraduate REU students. All graduate students performed their research projects towards their degree requirements and co-authored papers. Additionally, two other Masters students performed their degree related research on Beehive. Our work on this award was presented at three Open House events organized by the Department of Computer Science &amp; Engineering. These events were attended by a broad cross-section of outreach community consisting of people from local companies and regional colleges.</p> <!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.5px Helvetica} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Helvetica} --> <p class="p1">References</p> <p class="p2">[1] Henry Hoang and Anand Tripathi. Beehive Programmer's Guidebook. http://ajanta.cs.umn.edu/BeehiveGuidebook/, 2018.</p> <p class="p2">[2] Vinit Padhye, Gowtham Rajappan, and Anand Tripathi. Transaction Management using Causal Snapshot Isolation in Partially Replicated Databases. In Proc. of the IEEE SRDS, 2014.</p> <p class="p2">[3] Vinit Padhye and Anand Tripathi. Scalable Transaction Management with Snapshot Isolation for NoSQL Data Storage Systems. IEEE Transactions on Services Computing, 2015.</p> <p class="p2">[4] Anand Tripathi. A Transaction Model with Multilevel Consistency for Shared Data in Distributed Groupware Systems. In&nbsp; IEEE IConference on Collaboration and Internet Computing, 2016.</p> <p class="p2">[5] Anand Tripathi and Henry Hoang. Design of a Location-based Publish/Subscribe Service using a Graphbased Computing Model. In&nbsp; IEEE Conference on Collaboration and Internet Computing,2017.</p> <p class="p2">[6] Anand Tripathi, Vinit Padhye, and Tara Sasank Sunkara. Beehive: A Framework for Graph Data Analytics on Cloud Computing Platform . In Seventh Workshop on Parallel Programming Models and Systems Software for High-End Computing (P2S2),&nbsp; in conjunction with ICPP, 2014.</p> <p class="p2">[7] Anand Tripathi, Vinit Padhye, Tara Sasank Sunkara, Jeremy Tucker, BhagavathiDhass Thirunavukarasu, Varun Pandey, and Rahul R. Sharma. A Transactional Model for Parallel Programming of Graph Applications on Computing Clusters. In&nbsp; IEEE International Conference on Cloud Computing, 2017.</p> <p class="p2">[8] Anand Tripathi and Gowtham Rajappan. Scalable Transaction Management for Partially Replicated Data in Cloud Computing Environments. In IEEE International Conference&nbsp; on Cloud Computing, 2016.</p> <p class="p2">[9] Anand Tripathi, Rahul R. Sharma, Manu Khandelwal, Tanmay Mehta. Incremental Parallel Computing for Continuous Queries in Dynamic Graphs using a Transactional&nbsp; Model. Concurrency and Computation: Practice and Experience, 30(18), 2018.</p> <p class="p2">[10] Anand Tripathi and BhagawathiDhass Thirunavukarasu. A Transaction Model for Management of Replicated Data with Multiple Consistency Levels. In&nbsp; IEEE International Conference on Big Data, 2015.</p> <p class="p2">&nbsp;</p> <p class="p1">&nbsp;</p> <p class="p1">&nbsp;</p><br> <p>            Last Modified: 11/28/2018<br>      Modified by: Anand&nbsp;Tripathi</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  The major accomplishments of this award are in developing scalable models and protocols for transaction management in key-value based data management systems and utilizing these models for building a transaction-based parallel programming framework for large-scale graph problems. Intellectual Merit: This project developed scalable transaction management techniques for Hadoop/HBase to support serializable multi-row transactions utilizing the snapshot isolation model. This result is reported in a journal paper [3]. The investigation on transaction management for partially replicated data management systems resulted in the development of the Partitioned Causal Snapshot Isolation (PCSI) protocol. The design of this protocol is reported in a paper [2]. Further refinements of this protocol to scale-out its performance on a computing cluster of 100 nodes is reported in another publication [8]. This work received the Best Paper Award at the IEEE Cloud Computing (2016) conference. Building upon this transaction management protocol, a model was developed for simultaneously supporting transactions with different consistency levels in an application. This model supports transactions in four classes of consistency levels. serializable, causal snapshot isolation (CSI), causal snapshot isolation with concurrent commutative updates (CSI-CM), and asynchronous updates with eventual/causal consistency. This work is reported in a paper [10], and the use of this model in groupware applications is reported in [4]. Another significant outcome from this project is the development of the Beehive [6, 7] framework for parallel programming of graph problems. It is based on a transactional model of parallel computing. Since its initial design reported in [6] we achieved more than 50-fold performance scaling of this system. This required a multi-pronged approach to overcome many of the issues which arise due to the use of Java RMI serialization costs in remote data access and garbage collection overheads of Java. The current system supports a hybrid model using both Thrift and Java RMI because Thrift performs better than Java RMI but does not support object-class hierarchy in communication. For further performance scaling, a decentralized protocol for transaction validation was developed. Utilizing the transactional computing model of Beehive, this project developed incremental computation techniques in dynamic  and evolving graph structures. This work is reported in a journal paper [9]. Broader Impacts: The results from this project were reported in two journal publications [3, 9], several conference papers publications [2, 4, 5, 6, 7, 8, 10], and technical reports. The results of this project are also disseminated through the project website (http://ajanta.cs.umn.edu) and the University of Minnesota Digital Conservancy (httts://conservancy.umn.edu). The Beehive codebase has been made available as open-source software under GNU GPL V3 license for public access through the project website. This project  also developed Beehive programmer's guidebook [1] for the research community to utilize this system. This award supported participation of one PhD student, seven Masters students, and six undergraduate REU students. All graduate students performed their research projects towards their degree requirements and co-authored papers. Additionally, two other Masters students performed their degree related research on Beehive. Our work on this award was presented at three Open House events organized by the Department of Computer Science &amp; Engineering. These events were attended by a broad cross-section of outreach community consisting of people from local companies and regional colleges.  References [1] Henry Hoang and Anand Tripathi. Beehive Programmer's Guidebook. http://ajanta.cs.umn.edu/BeehiveGuidebook/, 2018. [2] Vinit Padhye, Gowtham Rajappan, and Anand Tripathi. Transaction Management using Causal Snapshot Isolation in Partially Replicated Databases. In Proc. of the IEEE SRDS, 2014. [3] Vinit Padhye and Anand Tripathi. Scalable Transaction Management with Snapshot Isolation for NoSQL Data Storage Systems. IEEE Transactions on Services Computing, 2015. [4] Anand Tripathi. A Transaction Model with Multilevel Consistency for Shared Data in Distributed Groupware Systems. In  IEEE IConference on Collaboration and Internet Computing, 2016. [5] Anand Tripathi and Henry Hoang. Design of a Location-based Publish/Subscribe Service using a Graphbased Computing Model. In  IEEE Conference on Collaboration and Internet Computing,2017. [6] Anand Tripathi, Vinit Padhye, and Tara Sasank Sunkara. Beehive: A Framework for Graph Data Analytics on Cloud Computing Platform . In Seventh Workshop on Parallel Programming Models and Systems Software for High-End Computing (P2S2),  in conjunction with ICPP, 2014. [7] Anand Tripathi, Vinit Padhye, Tara Sasank Sunkara, Jeremy Tucker, BhagavathiDhass Thirunavukarasu, Varun Pandey, and Rahul R. Sharma. A Transactional Model for Parallel Programming of Graph Applications on Computing Clusters. In  IEEE International Conference on Cloud Computing, 2017. [8] Anand Tripathi and Gowtham Rajappan. Scalable Transaction Management for Partially Replicated Data in Cloud Computing Environments. In IEEE International Conference  on Cloud Computing, 2016. [9] Anand Tripathi, Rahul R. Sharma, Manu Khandelwal, Tanmay Mehta. Incremental Parallel Computing for Continuous Queries in Dynamic Graphs using a Transactional  Model. Concurrency and Computation: Practice and Experience, 30(18), 2018. [10] Anand Tripathi and BhagawathiDhass Thirunavukarasu. A Transaction Model for Management of Replicated Data with Multiple Consistency Levels. In  IEEE International Conference on Big Data, 2015.             Last Modified: 11/28/2018       Submitted by: Anand Tripathi]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

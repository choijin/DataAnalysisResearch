<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Collaborative: Extensible Symbolic Analysis Modulo SMT: Combining the Powers of Rewriting, Narrowing, and SMT Solving in Maude</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>249516.00</AwardTotalIntnAmount>
<AwardAmount>249516</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project develops the foundations for automating verification of secure and trustworthy systems. It extends the range of analyses that are amenable to automated checking and addresses scalability. Symbolic techniques that represent possibly infinite sets of states by symbolic constraints have become important tools, but many systems of interest fall outside the scope of current techniques. There is a real need to extend and combine the power of symbolic analysis techniques to cover a much wider class of systems in order to develop the foundations for security and trustworthy software and systems.&lt;br/&gt;&lt;br/&gt;Maude is a language based on rewriting logic. Maude can be used to model a system of any kind -- for example, an algorithm, a database, a hardware system, a programming language, a network protocol, a sensor network, or the molecular biology dynamics of a cell -- using a set of rewrite rules that describe the systems behavior. The current Maude implementation provides a high performance rewrite engine, as well as built-in search, unification, and model checking tools to support execution and analysis of systems specified in Maude. This project will develop general extensibility techniques for symbolic analysis that can simultaneously combine the power of Satisfiability Modulo Theories (SMT) constraint solving, rewriting- and unification-based analysis, and automata-based model checking to analyze a wide variety of systems beyond the scope of each separate technique. Specifically, the goals of the project are to: (i) develop the semantic foundations of extensible symbolic analysis combining SMT solving, rewriting and narrowing, and automata-based model checking; (ii) endow the Maude formal specification system with combined symbolic analysis capabilities based on such foundations; and (iii) demonstrate through case studies the power of such combined and extensible symbolic techniques in analyzing challenging systems in areas such as: model checking, theorem proving, programming languages, cryptographic protocols, and real-time and cyber-physical systems. &lt;br/&gt;&lt;br/&gt;Maude has a substantial set of users who are doing research on approaches to secure and trustworthy systems. These users are poised to use the new techniques and tools as they develop. For critical systems, where even small security issues can lead to catastrophic failures, this foundational research will support rigorous techniques and tools for automated and scalable checking.</AbstractNarration>
<MinAmdLetterDate>07/15/2013</MinAmdLetterDate>
<MaxAmdLetterDate>07/15/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1318848</AwardID>
<Investigator>
<FirstName>Carolyn</FirstName>
<LastName>Talcott</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Carolyn Talcott</PI_FULL_NAME>
<EmailAddress>clt@csl.sri.com</EmailAddress>
<PI_PHON>6508593044</PI_PHON>
<NSF_ID>000412710</NSF_ID>
<StartDate>07/15/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SRI International</Name>
<CityName>Menlo Park</CityName>
<ZipCode>940253493</ZipCode>
<PhoneNumber>7032478529</PhoneNumber>
<StreetAddress>333 RAVENSWOOD AVE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009232752</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>SRI INTERNATIONAL</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009232752</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SRI International]]></Name>
<CityName>Menlo Park</CityName>
<StateCode>CA</StateCode>
<ZipCode>940253493</ZipCode>
<StreetAddress><![CDATA[333 Ravenwswood Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~249516</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><br /><br />Symbolic techniques that represent possibly infinite sets of states by symbolic constraints and support decision or semi-decision procedures based on such constraints have become essential to automate large parts of the verification of secure, trustworthy systems and make their verification much more scalable. Current symbolic techniques lack or have limited support for extensibility.<br />This project addresses the extensibility problem by developing general techniques for symbolic analysis that can simultaneously combine the power of SMT solving, rewriting- and unification-based analysis, and automata-based model checking to analyze a wide variety of systems beyond the scope of each separate technique.<br /><br /><strong>Intellectual Merit.</strong><br />In the three years of this collaborative project progress has been made in three areas: (1) advancement of the Maude system implementation; (2) theoretical foundations; and (3) case studies.</p> <p>1. The Maude system was advanced by joint design by SRI and UIUC and implementation by SRI of new features extending the symbolic analysis capabilities of Maude as follows:&nbsp;(i) linking the SMT solver CVC4 into Maude using a formalization of SMT-LIB, the standard interface to SMT solvers;&nbsp;(ii) multi-step search (reachability analysis) modulo SMT;&nbsp;(iii) support for finitary unification of a wide class of terms modulo associativity;&nbsp;(iv) improved folding variant narrowing generation, folding variant narrowing is key to automatically obtain reasonably efficient unification algorithms for a large class of equational theories; and&nbsp;(v) implementation of the rewriting modulo SMT symbolic model checking method.<br />All these new features are part of the current &nbsp;Maude distributions, available from http://maude.cs.uiuc.edu<br /><br />2. Theoretical foundations and new experimental systems of symbolic analysis were developed and prototyped in Maude as follows: development of new symbolic-based methods for rewriting and model checking modulo SMT, narrowing-based model checking of infinite-state systems for the LTLR temporal logic, narrowing-based predicate abstraction, new symbolic methods for proving termination, including new conditional and context-sensitive termination methods, new constraint-based symbolic computation and/or model checking methods, development of a new method for constraint-based unification modulo conditional equational theories, and new decision procedures for the theories of order-sorted uninterpreted function symbols and of such symbols modulo associativity-commutativity.</p> <p>Finally, a new generic satisfiability algorithm for initial algebras of FVP theories called variant-based satisfiability has been recently developed.</p> <p>The termination methods developed are the most effective to date for proving termination of conditional rewrite-rule-based systems, as shown by winnig the recent Termination of Rewriting competitions in the conditional rewriting category.<br /><br />3. Many case studies were carried out to demonstrate the power of combined and extensible symbolic techniques in analyzing challenging systems in areas such as: model checking, theorem proving, programming languages, cryptographic protocols, and real-time and cyber-physical systems.</p> <ul> <li>&nbsp;Application of variant narrowing to the formal verification of cryptographic protocols.</li> <li>&nbsp;Applications to real-time and cyber-physical systems, include schedulers, wireless protocols, cloud-based systems, and cyber-physical systems.</li> <li>&nbsp;An executable Maude model of clinical trial protocols was developed and extended to model cross cohort timing constraints and stopping criteria for "first in human" Phase I trials to test safety and efficacy of new drugs.</li> <li>&nbsp;A framework for specifying cyber-physical agents that accounts for agents knowledge and goals, and properties of the physical environment was formalized in Maude and system designs analyzed in several scenarios involving autonomous robots and drones.</li> <li>&nbsp;A symbolic model of a distance bounding protocol with mixed discrete and continuous time elements was specified in Maude and search modulo SMT was used to find a novel attack in which the verifier believes the prover is within distance but in fact the prover is significantly farther away.</li> <li>&nbsp;A new intruder model for cyberphysical protocol analysis was proposed, and proved complete. This was used in combination with search modulo SMT to automatically find attacks in space/time aware crypto protocols.</li> <li>&nbsp;A new framework for formally modeling and analyzing MANETs ascyber-physical systems has been proposed and demonstrated on variousMANET protocols.</li> <li>&nbsp;An executable semantics of the real-time languagefor orchestration of web services, Orc, was developed in Maude.This semantics was applied verification of Orc programs.</li> <li>&nbsp;An executable semantics of the KLAIM web programming language was developed in Maude, and used to demonstrate a correct-by construction semantics-based distributed implementation of KLAIM.</li> <li>&nbsp;The power of rewriting modulo SMT to verify a scheduling algorithm beyond the scope of timed automata was demonstrated in a case study verifying programs in NASA's PLEXIL language for distributed programming of robotic tasks.</li> </ul> <p><br /><strong>Broader Impact.</strong><br />Besides publishing technical papers describing the above-mentioned results in many conferences and journals, the new features added to Maude thanks to this project are now used by many researchers in the US, Europe, South Americal, and Japan. &nbsp;Furthermore, the PIs have given seven invited talks at international conferences and summer schools, presenting results of the project.</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/29/2016<br>      Modified by: Carolyn&nbsp;Talcott</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Symbolic techniques that represent possibly infinite sets of states by symbolic constraints and support decision or semi-decision procedures based on such constraints have become essential to automate large parts of the verification of secure, trustworthy systems and make their verification much more scalable. Current symbolic techniques lack or have limited support for extensibility. This project addresses the extensibility problem by developing general techniques for symbolic analysis that can simultaneously combine the power of SMT solving, rewriting- and unification-based analysis, and automata-based model checking to analyze a wide variety of systems beyond the scope of each separate technique.  Intellectual Merit. In the three years of this collaborative project progress has been made in three areas: (1) advancement of the Maude system implementation; (2) theoretical foundations; and (3) case studies.  1. The Maude system was advanced by joint design by SRI and UIUC and implementation by SRI of new features extending the symbolic analysis capabilities of Maude as follows: (i) linking the SMT solver CVC4 into Maude using a formalization of SMT-LIB, the standard interface to SMT solvers; (ii) multi-step search (reachability analysis) modulo SMT; (iii) support for finitary unification of a wide class of terms modulo associativity; (iv) improved folding variant narrowing generation, folding variant narrowing is key to automatically obtain reasonably efficient unification algorithms for a large class of equational theories; and (v) implementation of the rewriting modulo SMT symbolic model checking method. All these new features are part of the current  Maude distributions, available from http://maude.cs.uiuc.edu  2. Theoretical foundations and new experimental systems of symbolic analysis were developed and prototyped in Maude as follows: development of new symbolic-based methods for rewriting and model checking modulo SMT, narrowing-based model checking of infinite-state systems for the LTLR temporal logic, narrowing-based predicate abstraction, new symbolic methods for proving termination, including new conditional and context-sensitive termination methods, new constraint-based symbolic computation and/or model checking methods, development of a new method for constraint-based unification modulo conditional equational theories, and new decision procedures for the theories of order-sorted uninterpreted function symbols and of such symbols modulo associativity-commutativity.  Finally, a new generic satisfiability algorithm for initial algebras of FVP theories called variant-based satisfiability has been recently developed.  The termination methods developed are the most effective to date for proving termination of conditional rewrite-rule-based systems, as shown by winnig the recent Termination of Rewriting competitions in the conditional rewriting category.  3. Many case studies were carried out to demonstrate the power of combined and extensible symbolic techniques in analyzing challenging systems in areas such as: model checking, theorem proving, programming languages, cryptographic protocols, and real-time and cyber-physical systems.   Application of variant narrowing to the formal verification of cryptographic protocols.  Applications to real-time and cyber-physical systems, include schedulers, wireless protocols, cloud-based systems, and cyber-physical systems.  An executable Maude model of clinical trial protocols was developed and extended to model cross cohort timing constraints and stopping criteria for "first in human" Phase I trials to test safety and efficacy of new drugs.  A framework for specifying cyber-physical agents that accounts for agents knowledge and goals, and properties of the physical environment was formalized in Maude and system designs analyzed in several scenarios involving autonomous robots and drones.  A symbolic model of a distance bounding protocol with mixed discrete and continuous time elements was specified in Maude and search modulo SMT was used to find a novel attack in which the verifier believes the prover is within distance but in fact the prover is significantly farther away.  A new intruder model for cyberphysical protocol analysis was proposed, and proved complete. This was used in combination with search modulo SMT to automatically find attacks in space/time aware crypto protocols.  A new framework for formally modeling and analyzing MANETs ascyber-physical systems has been proposed and demonstrated on variousMANET protocols.  An executable semantics of the real-time languagefor orchestration of web services, Orc, was developed in Maude.This semantics was applied verification of Orc programs.  An executable semantics of the KLAIM web programming language was developed in Maude, and used to demonstrate a correct-by construction semantics-based distributed implementation of KLAIM.  The power of rewriting modulo SMT to verify a scheduling algorithm beyond the scope of timed automata was demonstrated in a case study verifying programs in NASA's PLEXIL language for distributed programming of robotic tasks.    Broader Impact. Besides publishing technical papers describing the above-mentioned results in many conferences and journals, the new features added to Maude thanks to this project are now used by many researchers in the US, Europe, South Americal, and Japan.  Furthermore, the PIs have given seven invited talks at international conferences and summer schools, presenting results of the project.          Last Modified: 11/29/2016       Submitted by: Carolyn Talcott]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

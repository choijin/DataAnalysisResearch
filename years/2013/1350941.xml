<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Carbon Footprint Modeling and Elastic Caching for Greening Services</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>01/01/2014</AwardEffectiveDate>
<AwardExpirationDate>12/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>376245.00</AwardTotalIntnAmount>
<AwardAmount>462813</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>As Internet services scale, their growing energy and carbon footprints present conflicting challenges.  On one hand, services must keep energy costs low.  On the other, they should make costly investments to undo environmental harm caused by their energy footprint.  Carbon offsets are transferable certificates that undo greenhouse gas emission, even when offset holders are located in carbon-heavy regions, making them attractive to large-scale, geographically distributed services.  This research project lays the foundation for greening services, a new class of Internet services that buy carbon offsets for user requests routed through their servers (i.e., a service that makes other services green).  People who use popular large-scale services could undo their carbon footprint by simply routing their requests through a greening service.  The greening service would manage costs.&lt;br/&gt;&lt;br/&gt;The intellectual challenge for greening services is to model or confirm carbon footprints for servers outside of their control.  The key insight is that emerging trends within cloud computing, e.g., energy-efficient servers, auto scaling, and open source software, provide uniformity.  Dissimilarity between services, in terms of response times and energy footprints, is increasingly due to service-specific features.  We use black-box machine learning approaches to infer these features.&lt;br/&gt;&lt;br/&gt;Beyond greening services, the proposed research will help system managers identify performance bugs, especially costly bugs that shift energy consumption toward datacenters with high energy costs.  As part of the proposed research, the PI will conduct outreach to underserved institutions and to local, Columbus, OH, area high schools.</AbstractNarration>
<MinAmdLetterDate>12/05/2013</MinAmdLetterDate>
<MaxAmdLetterDate>03/12/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1350941</AwardID>
<Investigator>
<FirstName>Christopher</FirstName>
<LastName>Stewart</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Christopher Stewart</PI_FULL_NAME>
<EmailAddress>cstewart@cse.ohio-state.edu</EmailAddress>
<PI_PHON>5857197769</PI_PHON>
<NSF_ID>000534897</NSF_ID>
<StartDate>12/05/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Ohio State University</Name>
<CityName>Columbus</CityName>
<ZipCode>432101016</ZipCode>
<PhoneNumber>6146888735</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[1960 Kenny Road]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>832127323</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OHIO STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001964634</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Ohio State University]]></Name>
<CityName/>
<StateCode>OH</StateCode>
<ZipCode>432101277</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~180470</FUND_OBLG>
<FUND_OBLG>2016~94430</FUND_OBLG>
<FUND_OBLG>2017~92407</FUND_OBLG>
<FUND_OBLG>2018~95506</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>I am deeply grateful to NSF, program managers and anonymous reviewers.&nbsp; The NSF Career Award changed the trajectory of my career and buoyed my confidence as a scholar.&nbsp;</p> <p>The research impacted multiple research communities (e.g., INFOCOM, ICAC, Eurosys, SOCC) and produced outstanding broader impact.&nbsp; In this summary, I will discuss two research contributions and a key broader impact.&nbsp;</p> <p>Research Contribution #1:&nbsp; PhD alumnus Nan Deng (Google) and Zichen Xu(Nanchang University) studied geographically distributed storage systems.&nbsp; These systems spread data across multiple sites (i.e., states and countries) and provide reliable and fast data access.&nbsp; Sites powered by clean energy can reduce the storage systems carbon footprint but may increase costs, degrade fault tolerance and slow down access times.&nbsp; We collected data on renewable energy patterns and carbon offset markets.&nbsp; We found differences across sites that varied over time.&nbsp; We developed a storage system that monitored renewable energy patterns and made online data placement decisions.&nbsp; Our system reduced carbon footprint while respecting service level objectives on availability and response time.&nbsp; As a key insight, we observed that cloud spot market prices, like carbon footprints, also vary from site to site and over time.&nbsp; We extended our approach to consider reduce costs for geographically distributed storage hosted on spot markets.&nbsp; At the time of publication, our storage system could use Amazon spot markets to host data services more cheaply and reliably than Amazon's own ElastiCache product.&nbsp;&nbsp;</p> <p>Research Contribution #2: PhD candidate Nathaniel Morris (exp graduation 2021) had produced a body of work on computational sprinting. With Denard Scaling, computer architects could double transistors on chip without increasing power density.&nbsp; Unfortunately, modern processors can not employ Denard Scaling techniques: More transistors means increased power density and thermal disssipation.&nbsp; Computational sprinting is an adaptive technique to manage processor speed and thermal limits.&nbsp; Sprints are short bursts of computational power, during which many transistors are powered on.&nbsp; Sprints are followed by longer periods where processors cool while operating at slower, sustainable speeds.&nbsp; The research challenge for computational sprinting is to achieve out sized speedup (i.e., low response time) from occassional sprints.&nbsp; We proposed "sprint ability" a guiding evaluation paradigm for system managers.&nbsp; Sprint ability challenges managers to compare their sprinting policies to the best possible sprinting policies (i.e., optimization) not just against default/no sprinting policies.&nbsp; We have shown that ad-hoc but intuitive policies often achieve low sprint ability.&nbsp; We also developed model-driven computational sprinting, where (1) we profile workload execution with and without sprinting offline and (2) create accurate models for a range of sprinting policies.&nbsp; Model-driven approaches can explore the whole space of policies to uncover the best.&nbsp; However, sprinting is hard to model because it defies an key assumption in classic analytic queuing models.&nbsp; With sprinting, service time and queuing delay are not independent.&nbsp; Our model-driven techniques use machine learning to map operating conditions for each workload to effective sprinting speedup, i.e., a metric that considers the effect of sprinting on service time and queuing delay.&nbsp; We implemented our model-driven approach to manage sprinting with DVFS and core scaling.&nbsp; At the time of publication, our approach was able to find sprinting policies that outperformed state-of-the-art systems from Microsoft Research and the University of Michigan.&nbsp; We continue to explore model-driven techniques for computational sprinting using emerging technologies, like Intel Cache Allocation Technology.&nbsp;</p> <p>Broader impact #1: We sought to develop a series of outreach events for 7-8th graders interested in computer science that would (1) boost participation in computer science and (2) spark interest in research and advanced engineering.&nbsp; With the help of undergaduate alumnus Jon Reuben (Apple), Ohio State ACM-W Presidents (Lizzy Burl, Winnie Lie, Emily Engle and Courtney Campbell), we created Buck-I-Code, an annual weekend workshop for middle school students in the Columbus metro area.&nbsp; Buck-I-Code is now in its 7th year (now called Code I/O).&nbsp; We have served over 250 students.&nbsp; The event is now sponsored by industry collaborators and organized wholly by undergraduate students.&nbsp; We expect this event to continue for years to come.&nbsp; A key feature of Buck-I-Code was the integration of research and outreach.&nbsp; The workshop includes hands-on programming and accessible presentations on active research projects.&nbsp; Further, Buck-I-Code spawned other workshop targeting primary students, e.g., High School hack-a-thon, NCWIT after school programs and cool-tech girls programming workshops.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 03/03/2020<br>      Modified by: Christopher&nbsp;Stewart</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ I am deeply grateful to NSF, program managers and anonymous reviewers.  The NSF Career Award changed the trajectory of my career and buoyed my confidence as a scholar.   The research impacted multiple research communities (e.g., INFOCOM, ICAC, Eurosys, SOCC) and produced outstanding broader impact.  In this summary, I will discuss two research contributions and a key broader impact.   Research Contribution #1:  PhD alumnus Nan Deng (Google) and Zichen Xu(Nanchang University) studied geographically distributed storage systems.  These systems spread data across multiple sites (i.e., states and countries) and provide reliable and fast data access.  Sites powered by clean energy can reduce the storage systems carbon footprint but may increase costs, degrade fault tolerance and slow down access times.  We collected data on renewable energy patterns and carbon offset markets.  We found differences across sites that varied over time.  We developed a storage system that monitored renewable energy patterns and made online data placement decisions.  Our system reduced carbon footprint while respecting service level objectives on availability and response time.  As a key insight, we observed that cloud spot market prices, like carbon footprints, also vary from site to site and over time.  We extended our approach to consider reduce costs for geographically distributed storage hosted on spot markets.  At the time of publication, our storage system could use Amazon spot markets to host data services more cheaply and reliably than Amazon's own ElastiCache product.    Research Contribution #2: PhD candidate Nathaniel Morris (exp graduation 2021) had produced a body of work on computational sprinting. With Denard Scaling, computer architects could double transistors on chip without increasing power density.  Unfortunately, modern processors can not employ Denard Scaling techniques: More transistors means increased power density and thermal disssipation.  Computational sprinting is an adaptive technique to manage processor speed and thermal limits.  Sprints are short bursts of computational power, during which many transistors are powered on.  Sprints are followed by longer periods where processors cool while operating at slower, sustainable speeds.  The research challenge for computational sprinting is to achieve out sized speedup (i.e., low response time) from occassional sprints.  We proposed "sprint ability" a guiding evaluation paradigm for system managers.  Sprint ability challenges managers to compare their sprinting policies to the best possible sprinting policies (i.e., optimization) not just against default/no sprinting policies.  We have shown that ad-hoc but intuitive policies often achieve low sprint ability.  We also developed model-driven computational sprinting, where (1) we profile workload execution with and without sprinting offline and (2) create accurate models for a range of sprinting policies.  Model-driven approaches can explore the whole space of policies to uncover the best.  However, sprinting is hard to model because it defies an key assumption in classic analytic queuing models.  With sprinting, service time and queuing delay are not independent.  Our model-driven techniques use machine learning to map operating conditions for each workload to effective sprinting speedup, i.e., a metric that considers the effect of sprinting on service time and queuing delay.  We implemented our model-driven approach to manage sprinting with DVFS and core scaling.  At the time of publication, our approach was able to find sprinting policies that outperformed state-of-the-art systems from Microsoft Research and the University of Michigan.  We continue to explore model-driven techniques for computational sprinting using emerging technologies, like Intel Cache Allocation Technology.   Broader impact #1: We sought to develop a series of outreach events for 7-8th graders interested in computer science that would (1) boost participation in computer science and (2) spark interest in research and advanced engineering.  With the help of undergaduate alumnus Jon Reuben (Apple), Ohio State ACM-W Presidents (Lizzy Burl, Winnie Lie, Emily Engle and Courtney Campbell), we created Buck-I-Code, an annual weekend workshop for middle school students in the Columbus metro area.  Buck-I-Code is now in its 7th year (now called Code I/O).  We have served over 250 students.  The event is now sponsored by industry collaborators and organized wholly by undergraduate students.  We expect this event to continue for years to come.  A key feature of Buck-I-Code was the integration of research and outreach.  The workshop includes hands-on programming and accessible presentations on active research projects.  Further, Buck-I-Code spawned other workshop targeting primary students, e.g., High School hack-a-thon, NCWIT after school programs and cool-tech girls programming workshops.           Last Modified: 03/03/2020       Submitted by: Christopher Stewart]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: Almost Symmetric Integer Programs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>130000.00</AwardTotalIntnAmount>
<AwardAmount>147800</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07030000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>CMMI</Abbreviation>
<LongName>Div Of Civil, Mechanical, &amp; Manufact Inn</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Georgia-Ann Klutke</SignBlockName>
<PO_EMAI>gaklutke@nsf.gov</PO_EMAI>
<PO_PHON>7032922443</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The objective of this collaborative research award is to develop techniques that exploit almost symmetry in integer programming. In the past decade, the exploitation of regular symmetries has led to a dramatic decrease in computation time for many classes of integer programming problems. Unfortunately, many of these problems, perhaps due to measurement or modeling error, are only close to being symmetric; minuscule differences in coefficients can hide exact symmetries. These almost symmetries are permutations that can become exact symmetries when the problem instance is modified slightly. This project seeks to expand the concept of symmetry to include almost symmetries and will develop a framework to treat almost symmetries as if they are actual symmetries. This will significantly broaden the class of optimization problem that can benefit from symmetry-exploiting techniques, resulting in improved computational times for a wider class of problems. This project will develop software that identifies almost symmetries and used to identify the prevalence of almost symmetries and assess how the existence of almost symmetries affect the difficulty of an integer programming instance. Algorithms designed to exploit almost symmetries will be developed and tested. &lt;br/&gt;&lt;br/&gt;If successful, this project will make advances not just to integer programming, but to a  wider set disciplines including graph theory, algebra, and data mining applications, as symmetries and almost symmetries pervade all the sciences, in particular engineering and mathematics. The techniques developed will allow the solving of large-scale real-world problems that are currently unsolvable. The developed software will be made available under a suitable open source license so that other researchers can build on our work and integrate it into their projects.</AbstractNarration>
<MinAmdLetterDate>08/15/2013</MinAmdLetterDate>
<MaxAmdLetterDate>03/06/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1332662</AwardID>
<Investigator>
<FirstName>James</FirstName>
<LastName>Ostrowski</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>James A Ostrowski</PI_FULL_NAME>
<EmailAddress>jostrows@utk.edu</EmailAddress>
<PI_PHON>8659747657</PI_PHON>
<NSF_ID>000612916</NSF_ID>
<StartDate>08/15/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Tennessee Knoxville</Name>
<CityName>Knoxville</CityName>
<ZipCode>379163801</ZipCode>
<PhoneNumber>8659743466</PhoneNumber>
<StreetAddress>1331 CIR PARK DR</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<StateCode>TN</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TN02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003387891</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TENNESSEE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003387891</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Tennessee Knoxville]]></Name>
<CityName>Knoxville</CityName>
<StateCode>TN</StateCode>
<ZipCode>379960003</ZipCode>
<StreetAddress><![CDATA[409 East Stadium Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TN02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>006Y</Code>
<Text>OE Operations Engineering</Text>
</ProgramElement>
<ProgramElement>
<Code>5514</Code>
<Text>OPERATIONS RESEARCH</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>072E</Code>
<Text>NETWORKS &amp; QUEUING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>073E</Code>
<Text>OPTIMIZATION &amp; DECISION MAKING</Text>
</ProgramReference>
<ProgramReference>
<Code>077E</Code>
<Text>SIMULATION MODELS</Text>
</ProgramReference>
<ProgramReference>
<Code>116E</Code>
<Text>RESEARCH EXP FOR UNDERGRADS</Text>
</ProgramReference>
<ProgramReference>
<Code>5514</Code>
<Text>OPERATIONS RESEARCH</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9231</Code>
<Text>SUPPL FOR UNDERGRAD RES ASSIST</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~130000</FUND_OBLG>
<FUND_OBLG>2014~4800</FUND_OBLG>
<FUND_OBLG>2015~5000</FUND_OBLG>
<FUND_OBLG>2017~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Symmetry-exploiting techniques are an important tool to solve large-scale symmetric integer programs. Unfortunately, many integer programs arising from theoretical as well as real-world settings are only close to being symmetric: minimal differences in coefficients break exact symmetries. Thus, well-known techniques for treating symmetries are rendered inapplicable. We extended the notion of symmetry to almost symmetries and developed a framework to treat almost symmetries in a way similar to treating symmetries. This significantly broadened the class of optimization problem that benefit from symmetry-exploiting techniques.</p> <p>&nbsp;Detecting almost symmetries is a hard problem in itself. However, we were able to develop methods can efficiently compute symmetries in real-world problems. In doing so, we were able to demonstrate that not only do real world instances contain almost symmetry, so do randomized instances. This is an interesting result, as it is well known that random instances are unlikely to have any pure symmetry.</p> <p>&nbsp;An application of particular interest is the unit commitment problem, the problem of scheduling power generators in a way that allows for the generation of electricity at least cost. These problems typically involve generators that have nearly identical (but not exactly identical) features. We have demonstrated that by designing optimization algorithms that recognize and exploit this structure, we can solve unit commitment problems considerably faster.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/15/2017<br>      Modified by: James&nbsp;A&nbsp;Ostrowski</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Symmetry-exploiting techniques are an important tool to solve large-scale symmetric integer programs. Unfortunately, many integer programs arising from theoretical as well as real-world settings are only close to being symmetric: minimal differences in coefficients break exact symmetries. Thus, well-known techniques for treating symmetries are rendered inapplicable. We extended the notion of symmetry to almost symmetries and developed a framework to treat almost symmetries in a way similar to treating symmetries. This significantly broadened the class of optimization problem that benefit from symmetry-exploiting techniques.   Detecting almost symmetries is a hard problem in itself. However, we were able to develop methods can efficiently compute symmetries in real-world problems. In doing so, we were able to demonstrate that not only do real world instances contain almost symmetry, so do randomized instances. This is an interesting result, as it is well known that random instances are unlikely to have any pure symmetry.   An application of particular interest is the unit commitment problem, the problem of scheduling power generators in a way that allows for the generation of electricity at least cost. These problems typically involve generators that have nearly identical (but not exactly identical) features. We have demonstrated that by designing optimization algorithms that recognize and exploit this structure, we can solve unit commitment problems considerably faster.           Last Modified: 12/15/2017       Submitted by: James A Ostrowski]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

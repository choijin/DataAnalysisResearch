<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF:Small: Social-Technical Code Search</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Programming has undergone a paradigm shift: with the abundance of resources available on the web, including open source code repositories, question and answer forums, tutorials, and online books, programmers now routinely search for code. Indeed, it can easily be argued that the modern programmer has to be as versed in finding and interpreting relevant code on the web as they are in actually writing code.&lt;br/&gt;&lt;br/&gt;Clearly, how effective and efficient developers are in their searches depends on the tool they use. Whether a search concerns a quest for an entire component that performs certain functionality, a hunt for an example of how to use an API, or a quick look for how to implement some algorithm, the success of the search stands or falls with the quality and relevance of the results returned by the chosen search engine.&lt;br/&gt;&lt;br/&gt;This proposal seeks to explore the concept of social-technical code search, in which the information that is used by the search engine to produce its results is enriched with both social and technical metadata that, together, construct a rich context about the code, its current state, and how it came about. We hypothesize that this context significantly increases the quality and relevance of code search results, and, particularly, too, enables the developer to effectively explore code search results rather than just examining each result one-by-one in isolation.&lt;br/&gt;&lt;br/&gt;Specific outcomes from this research will include: (1) a novel conceptual approach to code search, (2) new ranking algorithms that take into account both code and its social-technical context when ordering search results, (3) a novel code search engine and associated search interface, (4) new insights into how developers search for code, and (5) an publicly available archive of search queries and behaviors that can be mined and analyzed by other researchers for their purposes.</AbstractNarration>
<MinAmdLetterDate>09/04/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/04/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1321112</AwardID>
<Investigator>
<FirstName>Adriaan</FirstName>
<LastName>van der Hoek</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Adriaan W van der Hoek</PI_FULL_NAME>
<EmailAddress>andre@ics.uci.edu</EmailAddress>
<PI_PHON>9498246326</PI_PHON>
<NSF_ID>000418719</NSF_ID>
<StartDate>09/04/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Irvine</Name>
<CityName>Irvine</CityName>
<ZipCode>926977600</ZipCode>
<PhoneNumber>9498247295</PhoneNumber>
<StreetAddress>160 Aldrich Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>45</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA45</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>046705849</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, IRVINE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Irvine]]></Name>
<CityName>Irvine</CityName>
<StateCode>CA</StateCode>
<ZipCode>926173067</ZipCode>
<StreetAddress><![CDATA[5171 California Avenue, Ste 150]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>45</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA45</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~300000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Programming has undergone a paradigm shift: with the abundance of resources available on the web, including&nbsp;open source code repositories, question and answer forums, tutorials, and even online books, programmers&nbsp;now routinely search for code. Indeed, it can easily be argued that the modern programmer has&nbsp;to be as versed in finding and interpreting relevant code on the web as they are in actually writing code.</p> <p>The overarching goal of this work was to explore the concept of social-technical code search, in which the information that&nbsp;is used by the search engine to produce its results is enriched with both social and technical metadata that,&nbsp;together, construct a rich context about the code, its current state, and how it came about. The hypothes was that this social-technical context significantly increases the quality and relevance of code search results, and, particularly,&nbsp;too, enables the developer to effectively explore code search results rather than just examining each result&nbsp;one-by-one in isolation.&nbsp;</p> <p>The project resulted in a variety of outcomes, including two prototype search engines, several experiments with those search engines, and a number of findings.</p> <p>Two search engines were constructed. The first is CodeExchange (codeexchange.ics.uci.edu). It includes a variety of novel features that enable developers to rapidly reformulate search queries. The search engine offers keyword recommendations, enables quick selection of programmatic constructs to be added to a query, allows critiques of specific results, and constructs queries in query parts that can be easily turned on and off. In one experiment, involving public deployment of CodeExchange, 78% of the successful queries used these advanced features. In a second experiment, consisting of a laboratory study comparing CodeExchange to GitHUB code search, we found that using CodeExchange resulted in a savings of 3 1/2 minutes on average, for search tasks that were limited to 10 minutes each.</p> <p>The second search engine is CodeLikeThis (codelikethis.ics.uci.edu), which explores an entirely different paradigm of search. Rather than relying on the developer offering a new set of keywords with each iteration, CodeLikeThis operates by providing a diverse set of results on the first keyword search, and then letting the developer simply choose one of the results and provide a directly for the search engine: 'more like this' (which results in a narrowing of the search around the chosen result), 'somewhat like this' (which narrows the search but retains some of the diversity), and 'less like this' (which backs out and offers a broader set or results again). Similarity is determined both by the nature of the code chosen and various contextual factors (e.g., similarity in programming language, author, project, size, ...). A particularly important experiment in the lead-up to CodeLikeThis showed that users value a diverse, on-topic, and succint set of results over a set of results that are just on-topic, meaning that the starting point for CodeLikeThis had to reflect those properties.</p> <p>A conclusive, comparative experiment comparing CodeExchange, CodeLikeThis, Google, and a baseline search engine revealed that support for iteration by using social technical context benefits the search process in a number of cases. Results also showed, however, that different features helped with different kinds of queries. Overall, the results point to the fact that an integrated search engine that combines the various features for iteration is a desirable path of future exploration.</p> <p>&nbsp;</p><br> <p>            Last Modified: 01/05/2017<br>      Modified by: Adriaan&nbsp;W&nbsp;Van Der Hoek</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2017/1321112/1321112_10274893_1483660317800_codeexchange--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1321112/1321112_10274893_1483660317800_codeexchange--rgov-800width.jpg" title="CodeExchange"><img src="/por/images/Reports/POR/2017/1321112/1321112_10274893_1483660317800_codeexchange--rgov-66x44.jpg" alt="CodeExchange"></a> <div class="imageCaptionContainer"> <div class="imageCaption">CodeExchange search interface</div> <div class="imageCredit">UC Irvine</div> <div class="imagePermisssions">Royalty-free (unrestricted use)</div> <div class="imageSubmitted">Adriaan&nbsp;W&nbsp;Van Der Hoek</div> <div class="imageTitle">CodeExchange</div> </div> </li> <li> <a href="/por/images/Reports/POR/2017/1321112/1321112_10274893_1483660361361_codelikethis--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1321112/1321112_10274893_1483660361361_codelikethis--rgov-800width.jpg" title="CodeLikeThis"><img src="/por/images/Reports/POR/2017/1321112/1321112_10274893_1483660361361_codelikethis--rgov-66x44.jpg" alt="CodeLikeThis"></a> <div class="imageCaptionContainer"> <div class="imageCaption">CodeLikeThis search interface</div> <div class="imageCredit">UC Irvine</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Adriaan&nbsp;W&nbsp;Van Der Hoek</div> <div class="imageTitle">CodeLikeThis</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Programming has undergone a paradigm shift: with the abundance of resources available on the web, including open source code repositories, question and answer forums, tutorials, and even online books, programmers now routinely search for code. Indeed, it can easily be argued that the modern programmer has to be as versed in finding and interpreting relevant code on the web as they are in actually writing code.  The overarching goal of this work was to explore the concept of social-technical code search, in which the information that is used by the search engine to produce its results is enriched with both social and technical metadata that, together, construct a rich context about the code, its current state, and how it came about. The hypothes was that this social-technical context significantly increases the quality and relevance of code search results, and, particularly, too, enables the developer to effectively explore code search results rather than just examining each result one-by-one in isolation.   The project resulted in a variety of outcomes, including two prototype search engines, several experiments with those search engines, and a number of findings.  Two search engines were constructed. The first is CodeExchange (codeexchange.ics.uci.edu). It includes a variety of novel features that enable developers to rapidly reformulate search queries. The search engine offers keyword recommendations, enables quick selection of programmatic constructs to be added to a query, allows critiques of specific results, and constructs queries in query parts that can be easily turned on and off. In one experiment, involving public deployment of CodeExchange, 78% of the successful queries used these advanced features. In a second experiment, consisting of a laboratory study comparing CodeExchange to GitHUB code search, we found that using CodeExchange resulted in a savings of 3 1/2 minutes on average, for search tasks that were limited to 10 minutes each.  The second search engine is CodeLikeThis (codelikethis.ics.uci.edu), which explores an entirely different paradigm of search. Rather than relying on the developer offering a new set of keywords with each iteration, CodeLikeThis operates by providing a diverse set of results on the first keyword search, and then letting the developer simply choose one of the results and provide a directly for the search engine: 'more like this' (which results in a narrowing of the search around the chosen result), 'somewhat like this' (which narrows the search but retains some of the diversity), and 'less like this' (which backs out and offers a broader set or results again). Similarity is determined both by the nature of the code chosen and various contextual factors (e.g., similarity in programming language, author, project, size, ...). A particularly important experiment in the lead-up to CodeLikeThis showed that users value a diverse, on-topic, and succint set of results over a set of results that are just on-topic, meaning that the starting point for CodeLikeThis had to reflect those properties.  A conclusive, comparative experiment comparing CodeExchange, CodeLikeThis, Google, and a baseline search engine revealed that support for iteration by using social technical context benefits the search process in a number of cases. Results also showed, however, that different features helped with different kinds of queries. Overall, the results point to the fact that an integrated search engine that combines the various features for iteration is a desirable path of future exploration.          Last Modified: 01/05/2017       Submitted by: Adriaan W Van Der Hoek]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Medium: Collaborative Research: Transactional Software Infrastructures: Making the Most of Hardware Transactions</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2013</AwardEffectiveDate>
<AwardExpirationDate>05/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>599928.00</AwardTotalIntnAmount>
<AwardAmount>599928</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Modern computer systems are undergoing a pervasive change. They are becoming increasingly parallel, meaning that multiple processing units, or cores, work together to carry out tasks.  To facilitate the kinds of synchronization and coordination needed to exploit these new architectures, leading hardware vendors have developed a new generation of processor architectures that provide hardware transactional memory, a synchronization structure that promises to avoid many of the well-known pitfalls and limitations of conventional approaches to synchronization.  The move to hardware transactions will bring about a fundamental positive change in the way multicore machines are programmed.&lt;br/&gt;&lt;br/&gt;This project will redesign basic synchronization structures such as locks, memory management, and a range of concurrent data structures such as heaps, hash tables, and skip lists.  These new structures will be embodied in an open-source C++ library.  The project's goal is to create better performing, more reliable, and less expensive parallel software, scalable to larger systems, while at the same time making code simpler and more reliable.  Moreover, this project will enhance understanding of how hardware transactional memory can be used effectively, a benefit to both users and manufacturers of future processors.</AbstractNarration>
<MinAmdLetterDate>05/16/2013</MinAmdLetterDate>
<MaxAmdLetterDate>04/30/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1301926</AwardID>
<Investigator>
<FirstName>Nir</FirstName>
<LastName>Shavit</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nir Shavit</PI_FULL_NAME>
<EmailAddress>shanir@csail.mit.edu</EmailAddress>
<PI_PHON>6173248440</PI_PHON>
<NSF_ID>000457678</NSF_ID>
<StartDate>05/16/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName>Cambride</CityName>
<StateCode>MA</StateCode>
<ZipCode>021394307</ZipCode>
<StreetAddress><![CDATA[77 Massachusetts Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~393253</FUND_OBLG>
<FUND_OBLG>2015~206675</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project developed several key transacational memory based algorithms that both use hardware transactions and enable their better utilization.&nbsp;&nbsp; Perhaps the most influential outcome of this proposal is reduced hardware NOrec: a technology for implementing efficient hybrid transactional memories.&nbsp; Hybrid transaction memory is a technology that allows us to overcome the limitations of full hardware transactions by encapsulating them with a software alternative in case they fail to commit.&nbsp; Our reduced hardware NOrec technology which is currently in the process of being added to GCC is perhaps the most efficient hybrid transactional memory to date.&nbsp; Another important outcome of this research has the been StackTrack algorithm, an automated transaction based approach to memory reclamation.&nbsp; The technology uses hardware transactions to capture atomic views of the system stack and locations in memory in order to enable an efficient memory reclamation scheme for concurrent programs.&nbsp; Finally, the research in this grant supported the design of new data structures such as Leaplists and Spraylists that are transaction based, and amalgamated schemes for executing lock based data structures using hardware transactions.&nbsp; Overall, the above technologies greatly simplify the way programmers develop concurrent data structures by using the power of hardware transactions available on today's multicore architectures.</p><br> <p>            Last Modified: 10/25/2016<br>      Modified by: Nir&nbsp;Shavit</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project developed several key transacational memory based algorithms that both use hardware transactions and enable their better utilization.   Perhaps the most influential outcome of this proposal is reduced hardware NOrec: a technology for implementing efficient hybrid transactional memories.  Hybrid transaction memory is a technology that allows us to overcome the limitations of full hardware transactions by encapsulating them with a software alternative in case they fail to commit.  Our reduced hardware NOrec technology which is currently in the process of being added to GCC is perhaps the most efficient hybrid transactional memory to date.  Another important outcome of this research has the been StackTrack algorithm, an automated transaction based approach to memory reclamation.  The technology uses hardware transactions to capture atomic views of the system stack and locations in memory in order to enable an efficient memory reclamation scheme for concurrent programs.  Finally, the research in this grant supported the design of new data structures such as Leaplists and Spraylists that are transaction based, and amalgamated schemes for executing lock based data structures using hardware transactions.  Overall, the above technologies greatly simplify the way programmers develop concurrent data structures by using the power of hardware transactions available on today's multicore architectures.       Last Modified: 10/25/2016       Submitted by: Nir Shavit]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

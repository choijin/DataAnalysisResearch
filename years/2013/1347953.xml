<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Exploratory Studies of New Automata Models and Algorithms for TCAM-based Regular Expression Matching</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>50000.00</AwardTotalIntnAmount>
<AwardAmount>50000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Regular expression matching is the core operation in a wide range of networking and security services (such as malware filtering) on most networking middleboxes and security devices. As each packet is processed by such a device, the packet payload is examined to determine if it matches any of the specified regular expressions, each of which might correspond to a specific security threat. In most regular expression matching solutions, the regular expressions are converted into a finite state automata model which is then used to perform the search. Because each packet must be searched, high speed and low memory regular expression matching solutions are required. Unfortunately, the standard automata models, deterministic finite state automata (DFA) and nondeterministic finite state automata (NFA), are insufficient because neither can achieve both low memory and high speed. This project explores the feasibility of new high speed low memory regular expression matching solutions based on ternary content addressable memory (TCAM). If successful, the result will be a fundamentally new regular expression matching solution that will help make the Internet both faster and more secure.&lt;br/&gt;&lt;br/&gt;This project will develop new regular expression matching solutions by developing new finite state automata models such as the overlay deterministic finite state automata (ODFA) that account for memory inefficiencies in DFA. Along with developing new automata models, the project will develop new scalable and automated algorithms for efficiently constructing the automata from the input regular expressions as well as efficient algorithms for encoding these automata in TCAM. A key design constraint for the automata models and algorithms will be leveraging the prioritized parallel search and ternary compression capabilities of TCAM to reduce automata size and decrease the time required for each automata lookup.</AbstractNarration>
<MinAmdLetterDate>08/15/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/15/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1347953</AwardID>
<Investigator>
<FirstName>Eric</FirstName>
<LastName>Torng</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Eric K Torng</PI_FULL_NAME>
<EmailAddress>torng@cse.msu.edu</EmailAddress>
<PI_PHON>5173533543</PI_PHON>
<NSF_ID>000124714</NSF_ID>
<StartDate>08/15/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Alex</FirstName>
<LastName>Liu</LastName>
<PI_MID_INIT>X</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Alex X Liu</PI_FULL_NAME>
<EmailAddress>alexliu@cse.msu.edu</EmailAddress>
<PI_PHON>5178020805</PI_PHON>
<NSF_ID>000482202</NSF_ID>
<StartDate>08/15/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Michigan State University</Name>
<CityName>East Lansing</CityName>
<ZipCode>488242600</ZipCode>
<PhoneNumber>5173555040</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[426 Administration Bldg, Rm2]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>08</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI08</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>193247145</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MICHIGAN STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>053343976</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Michigan State University]]></Name>
<CityName>East Lansing</CityName>
<StateCode>MI</StateCode>
<ZipCode>488241226</ZipCode>
<StreetAddress><![CDATA[428 S. Shaw Lane, Room 3115]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>08</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI08</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~50000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Regular expression matching is the core operation in a wide range of networking and security services (such as malware filtering) on most networking middleboxes and security devices (such as routers and network intrusion detection and prevention systems). As each packet is processed by such a device, the packet payload is examined to determine if it matches any of the specified regular expressions, each of which might correspond to a specific security threat. In most regular expression matching solutions, the regular expressions are converted into a finite state automata model which is then used to perform the search. Because each packet must be searched, high speed and low memory regular expression matching solutions are required. Unfortunately, the standard automata models, deterministic finite state automata (DFA) and nondeterministic finite state automata (NFA), are insufficient because neither can achieve both low memory and high speed. This project explored the feasibility of new high speed low memory regular expression matching solutions based on ternary content addressable memory (TCAM). If successful, the result will be a fundamentally new regular expression matching solution that will help make the Internet both faster and more secure. This project developed new regular expression matching solutions by developing new finite state automata models such as the overlay deterministic finite state automata (ODFA) that account for memory inefficiencies in DFA. Along with developing new automata models, the project developed new scalable and automated algorithms for efficiently constructing the automata from the input regular expressions as well as efficient algorithms for encoding these automata in TCAM.<br /><br />In this project, we have successfully achieved the research objective of this EAGER project is to determine if a high-speed low-memory RegEx matching solution that satisfies the following four requirements can be built using new automata models, new algorithms, and a new memory model: (1) DFA Speed: The matching speed should be one memory lookup per character like DFA. This enables networking and security devices to process packets at line speed. (2) NFA Size: The amount of memory used should be polynomial in the size of given RegExes. For large RegEx sets, this enables the efficient construction and storage of the corresponding automata. (3) Automated Construction: The construction of its memory image should be fully automated. This enables the RegEx matching scheme to be practical for deployment in industry. (4) Scalable Construction: The automated construction algorithm should be scalable, i.e., the required time and memory should be polynomial in the size of the given RegExes. This enables the RegEX matching scheme to be applied to large RegEX sets.<br /><br />The fundamental concepts developed in this project have led to a much deeper understanding of RegEx matching and their underlying automata models. Performing RegEx matching at wire speed is a fundamental, yet extremely challenging, networking and security problem. To achieve the ambitious goal of fast and scalable RegEx matching, we have developed several new and potentially transformative concepts (such as TCAM-based RegEx matching), new automata models (such as overlay automata and compressed finite automata), and algorithms (such as the scalable D^2FA construction algorithms). Our work helps to bridge several different communities including networking, security, theory, architecture, compilers, programming languages, and foster interaction and communication among them.<br /><br />Our research results have been successfully published in top tier computer science conferences (such as INFOCOM), and computer science journals (such as IEEE/ACM Transactions on Networking and IEEE Journal on Selected Areas in Communications). This project has supported a number of Ph.D. students, some of them ha...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Regular expression matching is the core operation in a wide range of networking and security services (such as malware filtering) on most networking middleboxes and security devices (such as routers and network intrusion detection and prevention systems). As each packet is processed by such a device, the packet payload is examined to determine if it matches any of the specified regular expressions, each of which might correspond to a specific security threat. In most regular expression matching solutions, the regular expressions are converted into a finite state automata model which is then used to perform the search. Because each packet must be searched, high speed and low memory regular expression matching solutions are required. Unfortunately, the standard automata models, deterministic finite state automata (DFA) and nondeterministic finite state automata (NFA), are insufficient because neither can achieve both low memory and high speed. This project explored the feasibility of new high speed low memory regular expression matching solutions based on ternary content addressable memory (TCAM). If successful, the result will be a fundamentally new regular expression matching solution that will help make the Internet both faster and more secure. This project developed new regular expression matching solutions by developing new finite state automata models such as the overlay deterministic finite state automata (ODFA) that account for memory inefficiencies in DFA. Along with developing new automata models, the project developed new scalable and automated algorithms for efficiently constructing the automata from the input regular expressions as well as efficient algorithms for encoding these automata in TCAM.  In this project, we have successfully achieved the research objective of this EAGER project is to determine if a high-speed low-memory RegEx matching solution that satisfies the following four requirements can be built using new automata models, new algorithms, and a new memory model: (1) DFA Speed: The matching speed should be one memory lookup per character like DFA. This enables networking and security devices to process packets at line speed. (2) NFA Size: The amount of memory used should be polynomial in the size of given RegExes. For large RegEx sets, this enables the efficient construction and storage of the corresponding automata. (3) Automated Construction: The construction of its memory image should be fully automated. This enables the RegEx matching scheme to be practical for deployment in industry. (4) Scalable Construction: The automated construction algorithm should be scalable, i.e., the required time and memory should be polynomial in the size of the given RegExes. This enables the RegEX matching scheme to be applied to large RegEX sets.  The fundamental concepts developed in this project have led to a much deeper understanding of RegEx matching and their underlying automata models. Performing RegEx matching at wire speed is a fundamental, yet extremely challenging, networking and security problem. To achieve the ambitious goal of fast and scalable RegEx matching, we have developed several new and potentially transformative concepts (such as TCAM-based RegEx matching), new automata models (such as overlay automata and compressed finite automata), and algorithms (such as the scalable D^2FA construction algorithms). Our work helps to bridge several different communities including networking, security, theory, architecture, compilers, programming languages, and foster interaction and communication among them.  Our research results have been successfully published in top tier computer science conferences (such as INFOCOM), and computer science journals (such as IEEE/ACM Transactions on Networking and IEEE Journal on Selected Areas in Communications). This project has supported a number of Ph.D. students, some of them have successfully graduated with Ph.D. degrees.  The results that we developed in this project...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

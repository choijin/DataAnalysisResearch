<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER:Real-time Semantics for the ParalleX Execution Model to Enable Single-Image Multicore Embedded Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2016</AwardExpirationDate>
<AwardTotalIntnAmount>230000.00</AwardTotalIntnAmount>
<AwardAmount>255000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Two extremes of modern computing are supercomputers in the Petaflops performance regime taking up thousands of square feet and embedded computing found in cell phones, automobiles, and TV remote controls. Yet these apparently disparate classes of computing devices have many properties and requirements in common and, in fact, are converging. Power, reliability, multicore, efficiency, and programmability are among the many demands that these two historically separate forms share. The multicore challenge demands a new strategy for organizing and conducting concurrent tasks, which is referred to as a "model of computation" or alternatively an "execution model". Typically embedded computers have been programmed individually by cores to guarantee real-time operation. But as their performance requirements grow, embedded processors will have to depend on multiple cores to achieve needed response time. Supercomputers are relying on multicore components with exponentially growing number of cores per socket to deliver increased performance with technology advances. This project is producing a new version of the ParalleX execution model to support embedded real-time multicore operation while imbuing future supercomputers with the semantics of real-time for introspection, enabling dynamic adaptive resource management and task scheduling. This further advances future supercomputers, as a current trend is to replace heavyweight cores such as the IBM Power architecture or the Intel x86 architecture with lightweight cores similar to embedded processors like the IBM PowerPC architecture or the Intel Xeon Phi architecture. Other supercomputer projects are exploring the use of the ARM embedded cores for high performance systems. The availability of the ParalleX real-time execution model will unify both embedded control computers and high performance computers for mutual support and benefit. Key results of this project will be a new runtime system that can serve both embedded and high performance computing systems and a programming interface to facilitate scalable application development of both.&lt;br/&gt;&lt;br/&gt;The project's broader significance is that it will dramatically strengthen US competitiveness in both realms of computing-critical domains and enhance the nation?s economic development while addressing key challenges to the advancement of both. The field of supercomputing is facing a major challenge in how to continue to exploit technology advancement and the ParalleX execution model augmented with real-time introspection is providing the guiding principles to support co-design of architecture, programming methods, and system software and tools. Embedded control computers need to be able to use parallel processing with a single-system image for ease of programming and adaptive resource utilization. ParalleX will provide this capability. Finally, through the work of this project, future embedded processors will become the building blocks of the next generation of high performance computing to achieve exascale performance by decade's end.</AbstractNarration>
<MinAmdLetterDate>08/29/2013</MinAmdLetterDate>
<MaxAmdLetterDate>04/10/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1352969</AwardID>
<Investigator>
<FirstName>Thomas</FirstName>
<LastName>Sterling</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Thomas Sterling</PI_FULL_NAME>
<EmailAddress>tron@indiana.edu</EmailAddress>
<PI_PHON>8128564597</PI_PHON>
<NSF_ID>000119080</NSF_ID>
<StartDate>08/29/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Maciej</FirstName>
<LastName>Brodowicz</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Maciej Brodowicz</PI_FULL_NAME>
<EmailAddress>simultac@gmail.com</EmailAddress>
<PI_PHON>8122878110</PI_PHON>
<NSF_ID>000492001</NSF_ID>
<StartDate>08/29/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Indiana University</Name>
<CityName>Bloomington</CityName>
<ZipCode>474013654</ZipCode>
<PhoneNumber>3172783473</PhoneNumber>
<StreetAddress>509 E 3RD ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>006046700</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF INDIANA UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>006046700</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Center for Research in Extreme Scale Technologies (CREST)]]></Name>
<CityName>Bloomington</CityName>
<StateCode>IN</StateCode>
<ZipCode>474082671</ZipCode>
<StreetAddress><![CDATA[2719 E. 10th. Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~230000</FUND_OBLG>
<FUND_OBLG>2014~12000</FUND_OBLG>
<FUND_OBLG>2015~13000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The experimental ParalleX model of execution introduced in the last decade focuses on counteracting the effects of primary sources of performance degradation in application execution: starvation, latency, overhead, and contention on access to shared resources. Since it was primarily developed in the context of High-Performance Computing, ParalleX must also address power efficiency and fault tolerance, two factors that fundamentally impact the cost of operating a supercomputer and the reliability of its operation. The latter presents also a significant problem to supercomputer users who cannot run their simulations for extended periods of time without suffering the overheads of checkpointing and restarts. However, the ParalleX model and its implementation in the form of the HPX-5 runtime system have not yet been considered as a platform for real-time scheduling and execution of tasks &ndash; a concept mainly of interest to embedded computing. While HPX-5 had many mechanisms supporting efficient scheduling of multiple tasks and their synchronization on server-class hardware, it was unclear whether (a) it could operate within limited resources provided by a multi-core embedded computer and (b) real-time scheduling support can be effectively integrated with the existing runtime code base. The findings of this project suggest an affirmative answer to both of these questions. While more investigation is necessary to quantify all effects of real-time task interactions (mutual and with other types of code executing concurrently with them), the benchmark measurements collected on several types of embedded processing boards indicate that real-time operation may be supported effectively by an asynchronous, fine-grain many-tasking runtime system.</p> <p>Another important outcome of this project relates to pedagogical aspects of involving high school and undergraduate students in performing research support activities and effectively collaborating with university-level researchers. To avoid the risks of students being placed in a critical path of the project and not delivering, their assigned tasks were related to final validation of results on an autonomous vehicle (quad-copter drone). For this purpose they had to produce a detailed design of the vehicle, complete with operational parameters and specifications. Building the test vehicle involved development of necessary skills in multiple domains: electrical engineering, mechanical engineering, CAD-based design, CNC fabrication, 3-D printing, and embedded systems programming. While the participating students had a previous exposure to some of them, the project offered an unparalleled opportunity for extending the gamut of their knowledge to multiple domains and techniques, and testing them in practice. While not all of the planned objectives were realized (some of them were simply overly ambitious), the drone made its maiden flight in the second year of the project. The project supported (along with REU funding) a total of four undergraduate students from Indiana and Purdue Universities and four high schoolers of both genders. The students also gave colloquia in front of CREST staff, honing their public speaking skills. The exposure to this more structured way of conducting research and developing technology has already brought tangential results: some of the participating high-school students continue to be involved in other projects at IU. The lessons learned by the PIs served as a blueprint to establishing a permanent fabrication lab currently used by students enrolled in the courses offered by the recently created department of Intelligent Systems Engineering &ndash; the first foray into engineering at the IU Bloomington campus.</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/23/2017<br>      Modified by: Maciej&nbsp;Brodowicz</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The experimental ParalleX model of execution introduced in the last decade focuses on counteracting the effects of primary sources of performance degradation in application execution: starvation, latency, overhead, and contention on access to shared resources. Since it was primarily developed in the context of High-Performance Computing, ParalleX must also address power efficiency and fault tolerance, two factors that fundamentally impact the cost of operating a supercomputer and the reliability of its operation. The latter presents also a significant problem to supercomputer users who cannot run their simulations for extended periods of time without suffering the overheads of checkpointing and restarts. However, the ParalleX model and its implementation in the form of the HPX-5 runtime system have not yet been considered as a platform for real-time scheduling and execution of tasks &ndash; a concept mainly of interest to embedded computing. While HPX-5 had many mechanisms supporting efficient scheduling of multiple tasks and their synchronization on server-class hardware, it was unclear whether (a) it could operate within limited resources provided by a multi-core embedded computer and (b) real-time scheduling support can be effectively integrated with the existing runtime code base. The findings of this project suggest an affirmative answer to both of these questions. While more investigation is necessary to quantify all effects of real-time task interactions (mutual and with other types of code executing concurrently with them), the benchmark measurements collected on several types of embedded processing boards indicate that real-time operation may be supported effectively by an asynchronous, fine-grain many-tasking runtime system.  Another important outcome of this project relates to pedagogical aspects of involving high school and undergraduate students in performing research support activities and effectively collaborating with university-level researchers. To avoid the risks of students being placed in a critical path of the project and not delivering, their assigned tasks were related to final validation of results on an autonomous vehicle (quad-copter drone). For this purpose they had to produce a detailed design of the vehicle, complete with operational parameters and specifications. Building the test vehicle involved development of necessary skills in multiple domains: electrical engineering, mechanical engineering, CAD-based design, CNC fabrication, 3-D printing, and embedded systems programming. While the participating students had a previous exposure to some of them, the project offered an unparalleled opportunity for extending the gamut of their knowledge to multiple domains and techniques, and testing them in practice. While not all of the planned objectives were realized (some of them were simply overly ambitious), the drone made its maiden flight in the second year of the project. The project supported (along with REU funding) a total of four undergraduate students from Indiana and Purdue Universities and four high schoolers of both genders. The students also gave colloquia in front of CREST staff, honing their public speaking skills. The exposure to this more structured way of conducting research and developing technology has already brought tangential results: some of the participating high-school students continue to be involved in other projects at IU. The lessons learned by the PIs served as a blueprint to establishing a permanent fabrication lab currently used by students enrolled in the courses offered by the recently created department of Intelligent Systems Engineering &ndash; the first foray into engineering at the IU Bloomington campus.          Last Modified: 06/23/2017       Submitted by: Maciej Brodowicz]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

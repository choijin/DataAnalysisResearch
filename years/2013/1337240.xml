<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: DSD: Polymorphic Hardware Specialization for Domain-Specific Algorithms and Data Structures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>698273.00</AwardTotalIntnAmount>
<AwardAmount>698273</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Serious physical design issues are breaking down traditional abstractions&lt;br/&gt;in computer systems and motivating computer architects to turn to&lt;br/&gt;hardware specialization. Hardware specialized for a single task will&lt;br/&gt;almost always be of higher performance and more efficient, in terms of&lt;br/&gt;silicon area and energy consumption, compared to a flexible hardware&lt;br/&gt;implementation that can handle many different tasks. Resolving this&lt;br/&gt;tension between less efficient general architectures and more efficient&lt;br/&gt;specialized architectures, particularly within the context of mainstream&lt;br/&gt;computing platforms, is one of the grand challenges facing the computer&lt;br/&gt;architecture community.&lt;br/&gt;&lt;br/&gt;The project is based on an observation of how software engineers address&lt;br/&gt;analogous challenges in the very applications targeted for&lt;br/&gt;specialization. Software engineers seek to create specialized yet&lt;br/&gt;flexible code, and the ubiquitous approach is to develop carefully&lt;br/&gt;crafted libraries of algorithms and data structures that are polymorphic&lt;br/&gt;over the types of input, output, and stored values. The key idea is to&lt;br/&gt;leverage the effort software engineers have already invested and explore&lt;br/&gt;polymorphic hardware specialization in the form of polymorphic&lt;br/&gt;algorithm-specific units and polymorphic data-structure-specific units&lt;br/&gt;for template-based software libraries. The project is using a vertically&lt;br/&gt;integrated approach to investigate polymorphic hardware specialization&lt;br/&gt;from a variety of perspectives including computer architecture, hardware&lt;br/&gt;synthesis, compiler optimization, and runtime systems. The techniques&lt;br/&gt;developed as part of this project will be an important step towards&lt;br/&gt;addressing the physical design issues, which threaten to disrupt the&lt;br/&gt;long-standing trend towards ever increasing computing performance relied&lt;br/&gt;on by all aspects of modern society.</AbstractNarration>
<MinAmdLetterDate>09/05/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/05/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1337240</AwardID>
<Investigator>
<FirstName>Christopher</FirstName>
<LastName>Batten</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Christopher Batten</PI_FULL_NAME>
<EmailAddress>cbatten@cornell.edu</EmailAddress>
<PI_PHON>6072552672</PI_PHON>
<NSF_ID>000539036</NSF_ID>
<StartDate>09/05/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Zhiru</FirstName>
<LastName>Zhang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Zhiru Zhang</PI_FULL_NAME>
<EmailAddress>zhiruz@cornell.edu</EmailAddress>
<PI_PHON>6072555014</PI_PHON>
<NSF_ID>000631474</NSF_ID>
<StartDate>09/05/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY23</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>872612445</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CORNELL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002254837</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Cornell University]]></Name>
<CityName>Ithaca</CityName>
<StateCode>NY</StateCode>
<ZipCode>148533801</ZipCode>
<StreetAddress><![CDATA[323 Rhodes Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY23</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~698273</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Serious physical design issues are motivating computer system designers to use hardware specialization in future computer chips. Hardware specialized for a single task will almost always be higher performance and more efficient, in terms of silicon area and energy consumption, compared to a flexible hardware implementation that can handle many different tasks. Resolving this tension between less efficient general architectures and more efficient specialized architectures is one of the grand challenges in computer engineering today. Overcoming this challenge will help ensure the continued increase in computational capability which has enabled tremendous advances in all corners of society.</p> <p>The project was based on an observation of how software engineers address similar challenges. Software engineers create specialized yet flexible code through carefully crafted libraries of algorithms (i.e., how programs compute) and data structures (i.e., how programs store data). These algorithms and data structures are templated based on the types of input, output, and stored values. Given this observation, the project explored hardware specialization for templated algorithms and data structures, along with the hardware design methodologies required to generate and use these templates. More specifically the research team designed, implemented, and evaluated a variety of novel specialized hardware units capable of efficiently executing templated loop- and task-based parallel algorithms which potentially use templated array-, tree-, table-, and graph-based data structures. The research team also invented and evaluated a variety of novel algorithms to enable automatically transforming templated software libraries into templated hardware units. These ideas were put into practice in multiple hardware prototypes, and several of the tools and benchmarks developed in this project have been released as open-source software projects.</p> <p>As part of this project's educational outreach plan, the PIs developed two new courses targeted towards advanced undergraduates and first-year graduate students. The first course focuses on high-level digital design automation and teaches students the algorithms and optimization techniques involved in automatically transforming software-based descriptions of algorithms into hardware descriptions. The second course focuses on specialized digital chip design and teaches students the principles and practices involved in transforming hardware descriptions into actual chip layout using state-of-the art design tools. Both courses dovetail to form a comprehensive design experience on hardware specialization from software to layout. Each PI also led a week-long design experience for high-school students as part of the CURIE/CATALYST Academies. The CURIE/CATALYST Academies are organized by the Office of Diversity Programming in Engineering at Cornell University; the CURIE Academy focuses on young women, while the CATALYST Academy focuses on young men and women of diverse racial, socioeconomic, and geographic backgrounds. CURIE/CATALYST scholars spend their mornings learning about the various fields within engineering, and spend their afternoons working on the design project. Both PIs developed related yet unique design experiences focused on applying computer engineering to solve real-world problems including early disaster warning, wearable health monitoring, and smart electrical power grids.</p><br> <p>            Last Modified: 02/26/2019<br>      Modified by: Christopher&nbsp;Batten</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Serious physical design issues are motivating computer system designers to use hardware specialization in future computer chips. Hardware specialized for a single task will almost always be higher performance and more efficient, in terms of silicon area and energy consumption, compared to a flexible hardware implementation that can handle many different tasks. Resolving this tension between less efficient general architectures and more efficient specialized architectures is one of the grand challenges in computer engineering today. Overcoming this challenge will help ensure the continued increase in computational capability which has enabled tremendous advances in all corners of society.  The project was based on an observation of how software engineers address similar challenges. Software engineers create specialized yet flexible code through carefully crafted libraries of algorithms (i.e., how programs compute) and data structures (i.e., how programs store data). These algorithms and data structures are templated based on the types of input, output, and stored values. Given this observation, the project explored hardware specialization for templated algorithms and data structures, along with the hardware design methodologies required to generate and use these templates. More specifically the research team designed, implemented, and evaluated a variety of novel specialized hardware units capable of efficiently executing templated loop- and task-based parallel algorithms which potentially use templated array-, tree-, table-, and graph-based data structures. The research team also invented and evaluated a variety of novel algorithms to enable automatically transforming templated software libraries into templated hardware units. These ideas were put into practice in multiple hardware prototypes, and several of the tools and benchmarks developed in this project have been released as open-source software projects.  As part of this project's educational outreach plan, the PIs developed two new courses targeted towards advanced undergraduates and first-year graduate students. The first course focuses on high-level digital design automation and teaches students the algorithms and optimization techniques involved in automatically transforming software-based descriptions of algorithms into hardware descriptions. The second course focuses on specialized digital chip design and teaches students the principles and practices involved in transforming hardware descriptions into actual chip layout using state-of-the art design tools. Both courses dovetail to form a comprehensive design experience on hardware specialization from software to layout. Each PI also led a week-long design experience for high-school students as part of the CURIE/CATALYST Academies. The CURIE/CATALYST Academies are organized by the Office of Diversity Programming in Engineering at Cornell University; the CURIE Academy focuses on young women, while the CATALYST Academy focuses on young men and women of diverse racial, socioeconomic, and geographic backgrounds. CURIE/CATALYST scholars spend their mornings learning about the various fields within engineering, and spend their afternoons working on the design project. Both PIs developed related yet unique design experiences focused on applying computer engineering to solve real-world problems including early disaster warning, wearable health monitoring, and smart electrical power grids.       Last Modified: 02/26/2019       Submitted by: Christopher Batten]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

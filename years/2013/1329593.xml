<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CPS: Breakthrough: Safe Protocols in Cyber-Physical Systems (CPS)</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>457207.00</AwardTotalIntnAmount>
<AwardAmount>457207</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>David Corman</SignBlockName>
<PO_EMAI>dcorman@nsf.gov</PO_EMAI>
<PO_PHON>7032928754</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The objective of this research is to prove that cyber-physical systems are safe before they are deployed. The approaches the research investigates are extensions of approaches used to test communications protocols. The problems with cyber-physical systems are that 1) they are much more complicated than communications protocols,  2) time is a more critical component of these systems, and 3) in a competitive environment there are likely to be many implementations that must interoperate.&lt;br/&gt;&lt;br/&gt;The complexity of communications protocols is reduced by using a layered architecture. Each layer provides a well defined service to the next layer. This research is developing multi-dimensional architectures that reflect the different ways that the cyber-physical system interacts with the physical world. The techniques are evaluated on a driver-assisted merge protocol.  An architecture for the merge protocol has four dimensions organized as stacks for communications, external sensors, vehicle monitoring and control, and timing.  This architecture will also be useful during standardization.&lt;br/&gt;&lt;br/&gt;Timing increases verification complexity by increasing the number of potential execution paths. The research conducted in this project explores how to reduce the number of paths by synchronizing clocks and using simultaneous operations. This approach is reasonable because of the timing accuracy now available with GPS. A two step verification process is used that creates an unambiguous model of the cyber-physical system, first proving that the model is safe, then checking that each implementation conforms to the model.  This reduces the number and cost of tests for a three-party merge protocol.  Specifically, assuming there are N implementation versions for different manufacturers and models, this approach reduces the number of necessary interaction tests, which would be cubic in N, to a single model verification and N conformance tests.</AbstractNarration>
<MinAmdLetterDate>09/09/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/09/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1329593</AwardID>
<Investigator>
<FirstName>Nicholas</FirstName>
<LastName>Maxemchuk</LastName>
<PI_MID_INIT>F</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nicholas F Maxemchuk</PI_FULL_NAME>
<EmailAddress>nick@ee.columbia.edu</EmailAddress>
<PI_PHON>2128540580</PI_PHON>
<NSF_ID>000154268</NSF_ID>
<StartDate>09/09/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Columbia University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100276902</ZipCode>
<PhoneNumber>2128546851</PhoneNumber>
<StreetAddress>2960 Broadway</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>049179401</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF COLUMBIA UNIVERSITY IN THE CITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>049179401</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Columbia University]]></Name>
<CityName>New York</CityName>
<StateCode>NY</StateCode>
<ZipCode>100276902</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7918</Code>
<Text>CYBER-PHYSICAL SYSTEMS (CPS)</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~457207</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Intelligent, collaborative vehicles communicate with one another, using previously agreed upon protocols. Intelligent, autonomous vehicles operate independent of other vehicles and may modify their operations as they learn. In an earlier work we demonstrated that collaborative vehicles can significantly increase the capacity of a highway by using intelligent braking and cruise control. The improvement in capacity is a function of the fraction of the vehicles that can communicate, and can result in the highway supporting several times the current number of vehicles during a rush hour.</p> <p>&nbsp;</p> <p>Our objective in this project was to use techniques developed at Bell labs in the 1990&rsquo;s, for communications protocols, to prove that a protocol will not cause accidents, and that protocols implemented by different manufacturers will operate together. The techniques restrict the operations performed by the protocols to those that can be defined by a finite state machine (FSM). In the 1990&rsquo;s we developed a probabilistic verification technique that allowed us to test the most likely sequences that the protocol will execute and bound the untested sequences. We used the rural Chinese Postman Algorithm to generate a short test sequence that guarantees that an implementation correctly performs all of the operations specified by a protocol.</p> <p>&nbsp;</p> <p>These techniques cannot be applied directly to collaborative vehicles because the new protocols are much more complicated than the communications protocols and have critical time dependencies. We applied the techniques by defining a multiple stack architecture for the vehicle protocols and using a synchronized clock.</p> <p>&nbsp;</p> <p>&nbsp;The multiple stack architecture has a separate stack for each interaction with the physical world. The lowest layer of each stack defines the interaction with the physical world, and the intelligent protocols in each layer use the capabilities provided by the lower layer, similar to the communications protocols used in the Internet. The verification and testing techniques are only applied to the intelligent protocols, and are applied separately to the protocols in each layer assuming that the lower layers have already been tested.</p> <p>&nbsp;</p> <p>Protocols that use synchronized clocks are possible because the timing accuracy provided by GPS and crystal oscillators is finer than required by the physical movement of a vehicle. Synchronized clocks allow us to specify events that occur simultaneously. This reduces the number of protocol paths that must be considered. When events occur in multiple vehicles, we no longer have to consider which event occurred first. Simple FSM&rsquo;s do not model time, by using synchronized clocks and scheduling messages to the FSM&rsquo;s, we can remove time from the FSM&rsquo;s. We have also defined two protocols that use synchronized clocks to obtain new characteristics. The first is a broadcast protocol that quickly informs all of the participants when any participant leaves the group. The second is a lock protocol, in which vehicles cannot remain locked because vehicles have left a group without releasing their lock.</p> <p>&nbsp;</p> <p>In the final year we began to attack the problem of malicious users who send messages and try to cause harm. Messages are divided into classes, data messages that transmit information such as sensor readings, and control messages that change the state of the FSM. For instance, in a simple merge protocol, a control message may move a vehicle into a state where it believes that it is safe to merge between two vehicles in an adjacent lane. We modified the merge protocol so that all sensor measurements are performed by at least two vehicles. We modified the verification package to test the protocol when a malicious vehicle can send any sequence of the messages defined by the finite state machine. This assumption results in many more high probability events. We were able to verify that a malicious user would not cause an accident in the simple merge protocol by modifying the protocol so that an unexpected message caused a vehicle to leave the collaborative mode and enter the autonomous driving mode. Previously, unexpected messages were discarded and the vehicle remained in the same state. The protocol modification reduced the number of sequences that were tested.</p><br> <p>            Last Modified: 11/04/2017<br>      Modified by: Nicholas&nbsp;F&nbsp;Maxemchuk</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intelligent, collaborative vehicles communicate with one another, using previously agreed upon protocols. Intelligent, autonomous vehicles operate independent of other vehicles and may modify their operations as they learn. In an earlier work we demonstrated that collaborative vehicles can significantly increase the capacity of a highway by using intelligent braking and cruise control. The improvement in capacity is a function of the fraction of the vehicles that can communicate, and can result in the highway supporting several times the current number of vehicles during a rush hour.     Our objective in this project was to use techniques developed at Bell labs in the 1990?s, for communications protocols, to prove that a protocol will not cause accidents, and that protocols implemented by different manufacturers will operate together. The techniques restrict the operations performed by the protocols to those that can be defined by a finite state machine (FSM). In the 1990?s we developed a probabilistic verification technique that allowed us to test the most likely sequences that the protocol will execute and bound the untested sequences. We used the rural Chinese Postman Algorithm to generate a short test sequence that guarantees that an implementation correctly performs all of the operations specified by a protocol.     These techniques cannot be applied directly to collaborative vehicles because the new protocols are much more complicated than the communications protocols and have critical time dependencies. We applied the techniques by defining a multiple stack architecture for the vehicle protocols and using a synchronized clock.      The multiple stack architecture has a separate stack for each interaction with the physical world. The lowest layer of each stack defines the interaction with the physical world, and the intelligent protocols in each layer use the capabilities provided by the lower layer, similar to the communications protocols used in the Internet. The verification and testing techniques are only applied to the intelligent protocols, and are applied separately to the protocols in each layer assuming that the lower layers have already been tested.     Protocols that use synchronized clocks are possible because the timing accuracy provided by GPS and crystal oscillators is finer than required by the physical movement of a vehicle. Synchronized clocks allow us to specify events that occur simultaneously. This reduces the number of protocol paths that must be considered. When events occur in multiple vehicles, we no longer have to consider which event occurred first. Simple FSM?s do not model time, by using synchronized clocks and scheduling messages to the FSM?s, we can remove time from the FSM?s. We have also defined two protocols that use synchronized clocks to obtain new characteristics. The first is a broadcast protocol that quickly informs all of the participants when any participant leaves the group. The second is a lock protocol, in which vehicles cannot remain locked because vehicles have left a group without releasing their lock.     In the final year we began to attack the problem of malicious users who send messages and try to cause harm. Messages are divided into classes, data messages that transmit information such as sensor readings, and control messages that change the state of the FSM. For instance, in a simple merge protocol, a control message may move a vehicle into a state where it believes that it is safe to merge between two vehicles in an adjacent lane. We modified the merge protocol so that all sensor measurements are performed by at least two vehicles. We modified the verification package to test the protocol when a malicious vehicle can send any sequence of the messages defined by the finite state machine. This assumption results in many more high probability events. We were able to verify that a malicious user would not cause an accident in the simple merge protocol by modifying the protocol so that an unexpected message caused a vehicle to leave the collaborative mode and enter the autonomous driving mode. Previously, unexpected messages were discarded and the vehicle remained in the same state. The protocol modification reduced the number of sequences that were tested.       Last Modified: 11/04/2017       Submitted by: Nicholas F Maxemchuk]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

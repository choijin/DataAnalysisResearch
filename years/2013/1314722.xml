<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Medium: Collaborative: The Theory and Practice of Key Derivation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>531235.00</AwardTotalIntnAmount>
<AwardAmount>531235</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Shannon Beck</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Most cryptographic applications crucially rely on secret keys that are chosen randomly and are unknown to an attacker. Unfortunately, the process of deriving secret keys in practice is often difficult, error-prone and riddled with security vulnerabilities. Badly generated keys offer a prevalent source of attacks that render complex cryptographic applications completely insecure, despite their sophisticated design and rigorous mathematical analysis.  Even though key derivation plays a central role in the security landscape, it has received surprisingly little formal study within the cryptographic community, leading to a large disconnect between the theory and practice.&lt;br/&gt; &lt;br/&gt;In this project, several important scenarios for key derivation are examined for their capability to improve security with provable guarantees, including the use of random number generators (RNGs), passwords, and biometrics.  In particular:&lt;br/&gt; &lt;br/&gt;- How RNGs are designed to properly combine the entropy gathering, randomness extraction and pseudorandom generation modules, while achieving the best possible subset of clearly defined security properties against a variety of adversarial scenarios.&lt;br/&gt; &lt;br/&gt;- How to reduce the effectiveness of ?offline dictionary attacks? when generating keys from passwords.&lt;br/&gt; &lt;br/&gt;- How biometrics can be safely reused to generate many secret keys across many applications raises several interesting questions, combining cryptographic security properties with those of error-correcting codes.</AbstractNarration>
<MinAmdLetterDate>06/21/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/21/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1314722</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Wichs</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel Wichs</PI_FULL_NAME>
<EmailAddress>d.wichs@neu.edu</EmailAddress>
<PI_PHON>6173732461</PI_PHON>
<NSF_ID>000577804</NSF_ID>
<StartDate>06/21/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northeastern University</Name>
<CityName>BOSTON</CityName>
<ZipCode>021155005</ZipCode>
<PhoneNumber>6173733004</PhoneNumber>
<StreetAddress>360 HUNTINGTON AVE</StreetAddress>
<StreetAddress2><![CDATA[177-500]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001423631</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTHEASTERN UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001423631</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Northeastern University]]></Name>
<CityName/>
<StateCode>MA</StateCode>
<ZipCode>021155005</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~531235</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>Essentially all cryptographic applications crucially rely on secret keys that are chosen randomly and are unknown to an attacker. Unfortunately, the process of deriving secret keys in practice is often difficult, error-prone and riddled with security vulnerabilities and pitfalls. Indeed, badly generated keys offer a prevalent source of attacks that render complex cryptographic applications completely insecure despite their sophisticated design and rigorous mathematical security analysis. Given the central role that key derivation plays in the security landscape, it receives surprisingly little formal study within the cryptographic community, which has correspondingly had surprisingly little influence on the process of key derivation in practice. The major goal of this project is to examine several different scenarios for key derivation, including the use of random number generators (RNGs), passwords and biometrics. In all these cases, we develop a thorough&nbsp;theoretical foundations&nbsp;and formal understanding of the required security properties and propose new methods that provide improved security with provable guarantees.</span></p> <p><span>We concentrate on the following areas:</span><br /><br /><span>(1) System Random Number Generators (RNGs). RNGs are an important and complex system component whose goal is to gather entropy from various sources (e.g., the timing of system calls), carefully manage the gathered pools of entropy over time, and periodically use them to output arbitrarily long strings of seemingly random bits, which can be used as cryptographic secret keys.</span><br /><br /><span>As part of our research, we found practical attacks on the Linux's RNG /dev/random, and showed the first theoretical analysis (and improvements) of Windows 8 RNG Fortuna. In addition to attacking/analyzing these existing RNG constructions, we also designed a new theoretical framework for building and rigorously analyzing RNGs, and designed several new and provably secure RNGs in our framework, which provide both qualitative and quantitative security and efficiency improvements to known RNG constructions.</span><br /><br /><br /><span>(2) Key Derivation minimizing Entropy Loss. The problem of key derivation is a fundamental cryptographic problem of how to convert an imperfect entropy source such as password into the longest possible nearly uniform cryptographic key. Previous solutions to this problem achieved this task, but at the expense of extracting a key which was noticeably shorter than the entropy of the source. In fact, some prior work even suggested that such non-trivial entropy loss is inherent to the problem. In a very surprising result, we showed that this intuition is wrong, by designing the first provably secure key derivation functions (for a large collection of cryptographic applications) which achieve almost no entropy loss. Given that many entropy sources have very little entropy to begin with, we hope that our work will likely have a significant impact in practice.</span><br /><br /><span>(3) Key Derivation from passwords. One of the main challenges of generating keys from passwords is the issue of offline dictionary attacks where an attacker searches over all possible passwords in a small dictionary. We propose new solutions that reduce the effectiveness of such attacks. One of our ideas is to introduce a semi-trusted online entity ("helper") that can help users derive strong cryptographic keys from passwords and prevent offline dictionary attacks, but cannot hurt the user's security if it is ever compromised. We want this helper to be able to identify incorrect password attempts without being able to mount an offline dictionary attack. We achieve this by giving the helper only a single bit of information about the password which is sufficient to identify each incorrect password guess with probability 1/2 and therefore detect if too many such guesses are made. &nbsp;</span><br /><br /><span>(4) Random Oracle with Auxiliary Input. Most practical methods for key derivation rely on the "random oracle model" - a framework that allows for rigorous security analysis including analyzing quantitative levels of security. However, the concrete security bounds that the random oracle promises are overly optimistic when we consider realistic attacks that may involve large amount of "pre-computation" before attacking a specific instance . In our work, we propose a variant of the random oracle model that takes such pre-computation into account and allows us to analyze the security level of various primitives in such settings.&nbsp;</span><br /><br /><span>Beyond the scientific impact, we believe this project will have a broader impact on society. The poor security of current key-derivation schemes is one of the most common targets of real-world attacks. We expect the results of this research to be useful in significantly improving the security landscape for companies and individuals. On a more direct level, much of the research for this project involved the participation of PhD students and postdocs and included a large mentoring and career-development component. We emphasized diversity and inclusion of under-represented minorities. The participants include a female PhD student and two female postdocs who are continuing on to a research career in academia.</span></p><br> <p>            Last Modified: 10/26/2018<br>      Modified by: Daniel&nbsp;Wichs</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Essentially all cryptographic applications crucially rely on secret keys that are chosen randomly and are unknown to an attacker. Unfortunately, the process of deriving secret keys in practice is often difficult, error-prone and riddled with security vulnerabilities and pitfalls. Indeed, badly generated keys offer a prevalent source of attacks that render complex cryptographic applications completely insecure despite their sophisticated design and rigorous mathematical security analysis. Given the central role that key derivation plays in the security landscape, it receives surprisingly little formal study within the cryptographic community, which has correspondingly had surprisingly little influence on the process of key derivation in practice. The major goal of this project is to examine several different scenarios for key derivation, including the use of random number generators (RNGs), passwords and biometrics. In all these cases, we develop a thorough theoretical foundations and formal understanding of the required security properties and propose new methods that provide improved security with provable guarantees.  We concentrate on the following areas:  (1) System Random Number Generators (RNGs). RNGs are an important and complex system component whose goal is to gather entropy from various sources (e.g., the timing of system calls), carefully manage the gathered pools of entropy over time, and periodically use them to output arbitrarily long strings of seemingly random bits, which can be used as cryptographic secret keys.  As part of our research, we found practical attacks on the Linux's RNG /dev/random, and showed the first theoretical analysis (and improvements) of Windows 8 RNG Fortuna. In addition to attacking/analyzing these existing RNG constructions, we also designed a new theoretical framework for building and rigorously analyzing RNGs, and designed several new and provably secure RNGs in our framework, which provide both qualitative and quantitative security and efficiency improvements to known RNG constructions.   (2) Key Derivation minimizing Entropy Loss. The problem of key derivation is a fundamental cryptographic problem of how to convert an imperfect entropy source such as password into the longest possible nearly uniform cryptographic key. Previous solutions to this problem achieved this task, but at the expense of extracting a key which was noticeably shorter than the entropy of the source. In fact, some prior work even suggested that such non-trivial entropy loss is inherent to the problem. In a very surprising result, we showed that this intuition is wrong, by designing the first provably secure key derivation functions (for a large collection of cryptographic applications) which achieve almost no entropy loss. Given that many entropy sources have very little entropy to begin with, we hope that our work will likely have a significant impact in practice.  (3) Key Derivation from passwords. One of the main challenges of generating keys from passwords is the issue of offline dictionary attacks where an attacker searches over all possible passwords in a small dictionary. We propose new solutions that reduce the effectiveness of such attacks. One of our ideas is to introduce a semi-trusted online entity ("helper") that can help users derive strong cryptographic keys from passwords and prevent offline dictionary attacks, but cannot hurt the user's security if it is ever compromised. We want this helper to be able to identify incorrect password attempts without being able to mount an offline dictionary attack. We achieve this by giving the helper only a single bit of information about the password which is sufficient to identify each incorrect password guess with probability 1/2 and therefore detect if too many such guesses are made.    (4) Random Oracle with Auxiliary Input. Most practical methods for key derivation rely on the "random oracle model" - a framework that allows for rigorous security analysis including analyzing quantitative levels of security. However, the concrete security bounds that the random oracle promises are overly optimistic when we consider realistic attacks that may involve large amount of "pre-computation" before attacking a specific instance . In our work, we propose a variant of the random oracle model that takes such pre-computation into account and allows us to analyze the security level of various primitives in such settings.   Beyond the scientific impact, we believe this project will have a broader impact on society. The poor security of current key-derivation schemes is one of the most common targets of real-world attacks. We expect the results of this research to be useful in significantly improving the security landscape for companies and individuals. On a more direct level, much of the research for this project involved the participation of PhD students and postdocs and included a large mentoring and career-development component. We emphasized diversity and inclusion of under-represented minorities. The participants include a female PhD student and two female postdocs who are continuing on to a research career in academia.       Last Modified: 10/26/2018       Submitted by: Daniel Wichs]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

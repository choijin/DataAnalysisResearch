<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Pushing the Frontier of Linear-Time Model-Checking Technology</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>304582.00</AwardTotalIntnAmount>
<AwardAmount>304582</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Model checking is a technique for verifying the correctness of computer &lt;br/&gt;systems. Different implementations are in wide industrial usage today. &lt;br/&gt;There are still, however, many large gaps in our understanding of the &lt;br/&gt;algorithmic issues involved in model checking, and the technology is still &lt;br/&gt;greatly challenged by industrial designs. For example, in hardware-design &lt;br/&gt;verification, it is rarely possible to apply existing tools to complete units &lt;br/&gt;with clear functionality. This project is pushing the frontier of this &lt;br/&gt;technology with the goal of scaling its applicability to functional system &lt;br/&gt;units by developing novel scalable algorithms for model checking. The &lt;br/&gt;result will be increased reliability of computer systems. &lt;br/&gt;&lt;br/&gt;This project will explore the mathematical approach to design &lt;br/&gt;verification that uses automata theory as a unifying paradigm for design &lt;br/&gt;specification and verification. The automata-theoretic approach separates the &lt;br/&gt;logical and the combinatorial aspects of reasoning about systems. The translation &lt;br/&gt;of specifications to automata handles the logic and shifts all the combinatorial &lt;br/&gt;difficulties to questions about automata, yielding clean and asymptotically optimal &lt;br/&gt;algorithms. While the fundamental theory is well understood, there are &lt;br/&gt;still many challenging gaps and improved algorithms can enhance the &lt;br/&gt;scalability of this approach significantly. This project investigates ways of improving &lt;br/&gt;automata-theoretic algorithms so they are more suitable for model checking &lt;br/&gt;at scale.</AbstractNarration>
<MinAmdLetterDate>06/25/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/25/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319459</AwardID>
<Investigator>
<FirstName>Moshe</FirstName>
<LastName>Vardi</LastName>
<PI_MID_INIT>Y</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Moshe Y Vardi</PI_FULL_NAME>
<EmailAddress>vardi@rice.edu</EmailAddress>
<PI_PHON>7133485977</PI_PHON>
<NSF_ID>000462277</NSF_ID>
<StartDate>06/25/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>William Marsh Rice University</Name>
<CityName>Houston</CityName>
<ZipCode>770051827</ZipCode>
<PhoneNumber>7133484820</PhoneNumber>
<StreetAddress>6100 MAIN ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>050299031</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WILLIAM MARSH RICE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>050299031</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[William Marsh Rice University]]></Name>
<CityName/>
<StateCode>TX</StateCode>
<ZipCode>770051827</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~304582</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Pushing the Frontier of Linear-Time Model-Checking Technology:</p> <p><br />Model checking is a verification technology that enables reasoning about&nbsp;the behavior of interactive compuing systems, resulting in more reliable&nbsp;systems.&nbsp; The basic theory of model checking was worked out in the 1980s&nbsp;and 1990s, and tools based in this approach are in wide industrial usage&nbsp;today.&nbsp; It turns out, however, that there are still many large gaps in&nbsp;&nbsp;our understanding of the algorithmic issues involved in model checking,&nbsp;and the technology is still greatly challenged by industrial designs.&nbsp;For example, in hardware-design verification, it is rarely possible to&nbsp;&nbsp;apply existing tools to units with clear functionality.&nbsp; Instead,&nbsp;verification engineers typically have to chop such units into blocks&nbsp;without clear functionality, demanding extensive effort .&nbsp; This project is aimed at pushing the frontier of&nbsp;&nbsp;this technology with the goal of scaling its applicability to functional&nbsp;system units, by developing novel scalable algorithms for checking.</p> <p>The intellectual merit of this project is the application of the&nbsp;theoretical ideas to industrial design verification, which uses the theoryof finite-state machines as a unifying paradigm for design specification,&nbsp;verification, and synthesis.&nbsp; This perspective considers the relationships&nbsp;between designs and their specifications as relationships between formal&nbsp;languages. By translating design and logical specificationsto finite-state machines, questions about programs and their specifications&nbsp;can be reduced to questions about finite-state machines. More specifically,&nbsp;questions such as satisfiability of specifications and correctness of designs&nbsp;with respect to their specifications can be reduced to questions such as&nbsp;non-emptiness and containment of automata.&nbsp; This approach separates&nbsp;the logical and the combinatorial aspects of reasoning about systems.&nbsp;&nbsp;this approach significantly.~&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/07/2017<br>      Modified by: Moshe&nbsp;Y&nbsp;Vardi</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Pushing the Frontier of Linear-Time Model-Checking Technology:   Model checking is a verification technology that enables reasoning about the behavior of interactive compuing systems, resulting in more reliable systems.  The basic theory of model checking was worked out in the 1980s and 1990s, and tools based in this approach are in wide industrial usage today.  It turns out, however, that there are still many large gaps in  our understanding of the algorithmic issues involved in model checking, and the technology is still greatly challenged by industrial designs. For example, in hardware-design verification, it is rarely possible to  apply existing tools to units with clear functionality.  Instead, verification engineers typically have to chop such units into blocks without clear functionality, demanding extensive effort .  This project is aimed at pushing the frontier of  this technology with the goal of scaling its applicability to functional system units, by developing novel scalable algorithms for checking.  The intellectual merit of this project is the application of the theoretical ideas to industrial design verification, which uses the theoryof finite-state machines as a unifying paradigm for design specification, verification, and synthesis.  This perspective considers the relationships between designs and their specifications as relationships between formal languages. By translating design and logical specificationsto finite-state machines, questions about programs and their specifications can be reduced to questions about finite-state machines. More specifically, questions such as satisfiability of specifications and correctness of designs with respect to their specifications can be reduced to questions such as non-emptiness and containment of automata.  This approach separates the logical and the combinatorial aspects of reasoning about systems.  this approach significantly.~                                      Last Modified: 12/07/2017       Submitted by: Moshe Y Vardi]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

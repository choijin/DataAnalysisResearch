<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Approximating NP-Hard Problems -Efficient Algorithms and their Limits</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>12/01/2012</AwardEffectiveDate>
<AwardExpirationDate>12/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>394497.00</AwardTotalIntnAmount>
<AwardAmount>394497</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The vast majority of planning or design tasks involves an optimization problem, seeking to either minimize the cost of the proposed solution, or maximize its efficiency or payoff.  Often, the goal would be the identification of the optimal solution from a set of finite many discrete options (combinatorial optimization).  Unfortunately, an exact solution for the overwhelming majority of optimization problems turns out to be computationally intractable.  To cope with intractability, one often settles for algorithms that provably approximate the optimal solution. The following question stems naturally from the notion of approximation: For a given combinatorial optimization problem, what is the best approximation to the optimal solution that can be efficiently computed?&lt;br/&gt;&lt;br/&gt;There are two facets to answering the above question: designing approximation algorithms and showing that no efficient algorithm can provide a better approximation guarantee (hardness result). The convergence of these two seemingly different facets has been one of the most exciting developments in theoretical computer science in recent years. This project would involve the design of improved approximation algorithms as well as showing that these algorithms are essentially optimal. Although the design of approximation algorithms is a vast area of research, the main tool underlying an overwhelming majority of existing approximation algorithms is a convex optimization technique such as linear or semidefinite programming. Existing algorithmic techniques have hit upon a common barrier on a large number of fundamental combinatorial optimization problems, a barrier that is encapsulated by the tantalizing "Unique Games Conjecture (UGC)." Therefore the study of approximability is at a very exciting juncture. On one hand, an affirmation of the UGC would resolve long standing open questions , demonstrate an underlying unity in combinatorial optimization problems, and, more importantly, show that the simplest semidefinite programs yield the best approximations. On the other hand, disproving the UGC would lead to new algorithmic techniques that will eventually lead to better approximation algorithms.&lt;br/&gt;&lt;br/&gt;The PI proposes a set of research questions involving both design of approximation algorithms and hardness of approximation results. Broadly speaking, the project has the following four research themes:&lt;br/&gt;&lt;br/&gt;1) Understand the power of semidefinite programming hierarchies via the design of new algorithms and constructions of integrality gap examples.&lt;br/&gt;&lt;br/&gt;2) Extend the emerging framework of approximability under the UGC to a larger class of combinatorial optimization problems.&lt;br/&gt;&lt;br/&gt;3) Develop technical machinery and gadgets to show unconditionally some of the hardness results based on the UGC, making progress towards its resolution.&lt;br/&gt;&lt;br/&gt;4) Apply the analytic tools developed in hardness of approximation to other branches of theoretical computer science, such as the study of exact algorithms for constraint satisfaction problems.&lt;br/&gt;&lt;br/&gt;This research necessarily draws upon tools from various theoretical disciplines such as coding theory, property testing, computational learning, derandomization and discrete harmonic analysis. The research has a strong potential for broader impact in terms of scientific workshops, developement of graduate courses, lecture notes and survey articles on the latest research in approximation, promoting undergraduate research, and advising Ph.D students.</AbstractNarration>
<MinAmdLetterDate>06/03/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/04/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1343104</AwardID>
<Investigator>
<FirstName>Prasad</FirstName>
<LastName>Raghavendra</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Prasad Raghavendra</PI_FULL_NAME>
<EmailAddress>nrprasad@gmail.com</EmailAddress>
<PI_PHON>4043853353</PI_PHON>
<NSF_ID>000567499</NSF_ID>
<StartDate>06/03/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Berkeley</Name>
<CityName>BERKELEY</CityName>
<ZipCode>947101749</ZipCode>
<PhoneNumber>5106433891</PhoneNumber>
<StreetAddress>Sponsored Projects Office</StreetAddress>
<StreetAddress2><![CDATA[1608 Fourth Street, Suite 220]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>124726725</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF CALIFORNIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Berkeley]]></Name>
<CityName>berkeley</CityName>
<StateCode>CA</StateCode>
<ZipCode>947091050</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~74497</FUND_OBLG>
<FUND_OBLG>2013~80000</FUND_OBLG>
<FUND_OBLG>2014~80000</FUND_OBLG>
<FUND_OBLG>2015~160000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;</p> <div>Optimization, perhaps the most ubiquitous computational task of all, consists of finding a solution that either maximizes or minimizes a certain function while satisfying a set of constraints. &nbsp; If the space of solutions to the problem is finite and discrete, then such problems are referred to as "combinatorial optimization" problems. Unfortunately, most combinatorial optimization problems are computationally intractable to solve exactly, i.e., it is widely believed that finding the optimal solution would be prohibitively time-consuming. &nbsp;A classic approach to find approximate solutions that has been studied for more than four decades now, is the use of ``convex relaxations".&nbsp; The idea of convex relaxation is to convert the underlying optimization task into a convex optimization task, since efficient algorithms are known for convex optimization. Converting an arbitrary combinatorial optimization problem in to a convex optimization task is inherently lossy, in that we only recover an approximate solution to the original problem in the process.&nbsp; The question then is, how good is the approximation? &nbsp;and which convex relaxation yield the best approximation?</div> <div>Among all convex relaxation techniques, perhaps the most powerful one is the so-called ``Sum-of-Squares semidefinite program (SoS SDP)". &nbsp; The SoS SDP is a convex relaxation technique that can be shown to underlie or subsume a majority of the algorithms in combinatorial optimization. &nbsp;This is true to the extent that, if a natural SoS SDP relaxation for an optimization problem fails to yield a good approximation, then it is likely no known algorithm will. &nbsp;Yet, the power of SoS SDP relaxations is not very well understood, in that for many fundamental computational problems, we don't know what is the approximation obtained via SoS SDP relaxation.</div> <div>The work carried out under this proposal made important advances in our understanding of this mysterious yet powerful algorithmic technique. &nbsp;Specifically, the work obtained the following results:</div> <div>1) &nbsp;Unique Games conjecture which is among the most important open questions in complexity theory, is an unproven conjecture which implies that certain simple SDP relaxations yield the best possible approximation for large classes of combinatorial optimization problems. &nbsp;While the conjecture remains wide open, this work obtained constructed hard instances (so called gadgets) of unique games against certain SDP relaxations -- yielding the strongest known evidence for the conjecture's truth. &nbsp;The "gadgets" so constructed also yielded the best known results on the intractability of certain basic combinatorial optimization problems like graph coloring.</div> <div>2) The PI and his coauthors exactly characterized the power of SoS SDPs against random constraint satisfaction problems. &nbsp;Constraint satisfaction problems (CSP) are one of the ubiquitous and basic computational problems, that capture most settings where there are a set of discrete variables and a set of discrete constraints on them. &nbsp;Random CSPs have been widely studied in theoretical computer science, statistical physics and probability theory. &nbsp; Using techniques from the theory of random matrices, we exactly characterize the power of SoS SDPs in this context. &nbsp;On the one hand, this result yields algorithms for random CSPs, and on the other hand, the result can be viewed as evidence for the computational intractability for certain random CSPs -- a widely held but unproven belief in computer science.</div> <div>3) &nbsp;Given a graph (say a social network), detecting subsets of the network that are isolated, i.e., not connected strongly with the rest of the network, is a basic computational problem known as sparsest cut. &nbsp; &nbsp;Representing the network as a matrix, and using the eigenvectors of the matrix to find a sparse cut, is a classic algorithm that is widely applied in practice, in areas such as image processing. &nbsp;This approach of using eigenvectors is grounded in a well-known result in spectral graph theory from 1980s, known as the Cheeger inequality. &nbsp;PI and coauthors obtained generalizations of this classic result, &nbsp;that gave a formal grounding behind the widely used algorithmic heuristic of using higher order eigenvectors in graph decomposition algorithms.</div> <p>&nbsp;</p> <p>&nbsp;PI and coauthors also proved the computational intractability of certain basic problems like approximating vertex expansion and matrix completion. &nbsp;These intractability results nicely complement existing algorithms for these problems, by demarcating the border beyond which the problems become computationally intractable.</p> <p>&nbsp;</p> <div>Broader Impacts:</div> <p>&nbsp;</p> <p>In the course of the project, the PI directly advised five graduate students many of whom either directly or indirectly contributed to it. &nbsp;</p> <p>The PI along with James Lee was one of the lead-organizers of a semester long program on Spectral Graph Theory at Simons Institute. &nbsp;This program included three workshops and a an expository boot camp on the topic. &nbsp;More than 100 researchers participated in the program, up to 30 of whom were graduate students or postdoctoral researchers. &nbsp;</p> <p>The PI created and taught graduate classes on Hardness of Approximation and Theoretical Computer Science's Greatest Hits. &nbsp;The PI has given several expository lectures at numerous venues during the course of the project.</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/12/2017<br>      Modified by: Prasad&nbsp;Raghavendra</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Optimization, perhaps the most ubiquitous computational task of all, consists of finding a solution that either maximizes or minimizes a certain function while satisfying a set of constraints.   If the space of solutions to the problem is finite and discrete, then such problems are referred to as "combinatorial optimization" problems. Unfortunately, most combinatorial optimization problems are computationally intractable to solve exactly, i.e., it is widely believed that finding the optimal solution would be prohibitively time-consuming.  A classic approach to find approximate solutions that has been studied for more than four decades now, is the use of ``convex relaxations".  The idea of convex relaxation is to convert the underlying optimization task into a convex optimization task, since efficient algorithms are known for convex optimization. Converting an arbitrary combinatorial optimization problem in to a convex optimization task is inherently lossy, in that we only recover an approximate solution to the original problem in the process.  The question then is, how good is the approximation?  and which convex relaxation yield the best approximation? Among all convex relaxation techniques, perhaps the most powerful one is the so-called ``Sum-of-Squares semidefinite program (SoS SDP)".   The SoS SDP is a convex relaxation technique that can be shown to underlie or subsume a majority of the algorithms in combinatorial optimization.  This is true to the extent that, if a natural SoS SDP relaxation for an optimization problem fails to yield a good approximation, then it is likely no known algorithm will.  Yet, the power of SoS SDP relaxations is not very well understood, in that for many fundamental computational problems, we don't know what is the approximation obtained via SoS SDP relaxation. The work carried out under this proposal made important advances in our understanding of this mysterious yet powerful algorithmic technique.  Specifically, the work obtained the following results: 1)  Unique Games conjecture which is among the most important open questions in complexity theory, is an unproven conjecture which implies that certain simple SDP relaxations yield the best possible approximation for large classes of combinatorial optimization problems.  While the conjecture remains wide open, this work obtained constructed hard instances (so called gadgets) of unique games against certain SDP relaxations -- yielding the strongest known evidence for the conjecture's truth.  The "gadgets" so constructed also yielded the best known results on the intractability of certain basic combinatorial optimization problems like graph coloring. 2) The PI and his coauthors exactly characterized the power of SoS SDPs against random constraint satisfaction problems.  Constraint satisfaction problems (CSP) are one of the ubiquitous and basic computational problems, that capture most settings where there are a set of discrete variables and a set of discrete constraints on them.  Random CSPs have been widely studied in theoretical computer science, statistical physics and probability theory.   Using techniques from the theory of random matrices, we exactly characterize the power of SoS SDPs in this context.  On the one hand, this result yields algorithms for random CSPs, and on the other hand, the result can be viewed as evidence for the computational intractability for certain random CSPs -- a widely held but unproven belief in computer science. 3)  Given a graph (say a social network), detecting subsets of the network that are isolated, i.e., not connected strongly with the rest of the network, is a basic computational problem known as sparsest cut.    Representing the network as a matrix, and using the eigenvectors of the matrix to find a sparse cut, is a classic algorithm that is widely applied in practice, in areas such as image processing.  This approach of using eigenvectors is grounded in a well-known result in spectral graph theory from 1980s, known as the Cheeger inequality.  PI and coauthors obtained generalizations of this classic result,  that gave a formal grounding behind the widely used algorithmic heuristic of using higher order eigenvectors in graph decomposition algorithms.      PI and coauthors also proved the computational intractability of certain basic problems like approximating vertex expansion and matrix completion.  These intractability results nicely complement existing algorithms for these problems, by demarcating the border beyond which the problems become computationally intractable.    Broader Impacts:     In the course of the project, the PI directly advised five graduate students many of whom either directly or indirectly contributed to it.    The PI along with James Lee was one of the lead-organizers of a semester long program on Spectral Graph Theory at Simons Institute.  This program included three workshops and a an expository boot camp on the topic.  More than 100 researchers participated in the program, up to 30 of whom were graduate students or postdoctoral researchers.    The PI created and taught graduate classes on Hardness of Approximation and Theoretical Computer Science's Greatest Hits.  The PI has given several expository lectures at numerous venues during the course of the project.          Last Modified: 05/12/2017       Submitted by: Prasad Raghavendra]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

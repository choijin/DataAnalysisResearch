<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Exposing Attack Vectors and Identifying Defense Solutions for Data Cellular Networks</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Shannon Beck</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project addresses several key emerging security challenges that arise due to the wildly successful large-scale adoption of mobile devices with diverse network capabilities.  The novel approach focuses on to understanding how various information that are legitimately and willingly provided by smartphone users due to the requested permissions of downloaded applications can be potentially abused.  The second research focus is to identify improvements in the design of cellular network middlebox (e.g., firewall) policies by detailed exposure and explicitly defining the key requirements.  Using insights from the two research thrusts, support to detect abuse of network resources by mobile devices is explored, leveraging both existing mechanisms and new improvements for evaluation. There are three key areas of technical contributions from this project: (1) Investigation of the construction of cellular botnets from non-traditional means, (2) Discovery of the deficiency of cellular network policies to resource abuse and targeted attacks, and (3) Misbehavior detection of mobile devices in abusing infrastructure resources to gain unfair advantages in network and energy usage.&lt;br/&gt;&lt;br/&gt;This project will have significant and broad impact on both the networking security community and our society, as effective reliance on mobile devices for information access is rapidly growing and security assurance of cellular data network infrastructure is critical to achieving robust and highly available mobile networks and network services. Any software developed in this work will be available to the research community and the network operator community. Associated experimental tools and specific experimental configurations will be released through web venues.</AbstractNarration>
<MinAmdLetterDate>08/15/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/15/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1318306</AwardID>
<Investigator>
<FirstName>Zhuoqing</FirstName>
<LastName>Mao</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Zhuoqing M Mao</PI_FULL_NAME>
<EmailAddress>zmao@umich.edu</EmailAddress>
<PI_PHON>7347635407</PI_PHON>
<NSF_ID>000490161</NSF_ID>
<StartDate>08/15/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Regents of the University of Michigan - Ann Arbor</Name>
<CityName>Ann Arbor</CityName>
<ZipCode>481091274</ZipCode>
<PhoneNumber>7347636438</PhoneNumber>
<StreetAddress>3003 South State St. Room 1062</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>073133571</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF MICHIGAN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>073133571</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Michigan Ann Arbor]]></Name>
<CityName>Ann Arbor</CityName>
<StateCode>MI</StateCode>
<ZipCode>481092121</ZipCode>
<StreetAddress><![CDATA[2260Hayward, BBB Building, 4629]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~500000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In this project, we have successfully investigated several emerging challenges associated&nbsp;with cellular and mobile device security. Here are the main findings:</p> <p>(1)&nbsp;We investigated how open ports on mobile apps on Android platform can lead to serious security vulnerabilities.<br />Open ports are typically used by server software to serve remote clients, and the usage historically leads to remote exploitation due to insufficient protection. Smartphone operating systems inherit the open port support, but since they are significantly different from traditional server machines in performance and availability guarantees, little is known about how smartphone applications use open ports and what the security implications are. In this paper, we perform the first systematic study of open port usage on mobile platform and their security implications. To achieve this goal, we design and implement OPAnalyzer, a static analysis tool which can effectively identify and characterize vulnerable open port usage in Android applications.</p> <p>(2)&nbsp;&nbsp;We conduct the first systematic study in understanding the security properties of the usage of Unix domain sockets by both Android apps and system daemons as an IPC (Inter-process Communication) mechanism, especially for cross-layer communications between the Java and native layers. We propose a tool called SInspector to expose potential security vulnerabilities in using Unix domain sockets through the process of identifying socket addresses,detecting authentication checks, and performing data flow analysis. Our in-depth analysis revealed some serious vulnerabilities in popular apps and system daemons, such as root privilege escalation and arbitrary file access. Based on our findings, we propose countermeasures and improved practices for utilizing Unix domain sockets on Android.</p> <p>(3)&nbsp;Our work is the first to propose a methodology to systematically uncover the inconsistency in security policy enforcement in Android. We do not assume Android?s security policies are known and focus only on inconsistent enforcement. We propose&nbsp;Kratos, a tool that leverages static analysis to build a precise callgraph for identifying paths that allow third-party applications with insufficient privilege to access sensitive resources, violating security policies. Kratos is designed to analyze any Android system,including vendor-customized versions. Using Kratos, we have conservatively discovered at least fourteen inconsistent security enforcement cases that can lead to security check circumvention vulnerabilities across important and popular services such as the SMS service and the Wi-Fi service, incurring impact such as privilege escalation, denial of service, and soft reboot. Our findings also provide useful insights on how to proactively prevent such security enforcement inconsistency within Android.</p> <p>In terms of broader impact, we have published the research findings at top conferences and released prototypes of the software to mitigate identified security vulnerabilities. We have also contributed to CVEs and performed other responsible disclosures to ensure the identified security vulnerabilities are properly addressed.</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/25/2018<br>      Modified by: Zhuoqing&nbsp;M&nbsp;Mao</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2018/1318306/1318306_10267790_1543182005968_sInspector--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1318306/1318306_10267790_1543182005968_sInspector--rgov-800width.jpg" title="SInspector: Detecting The Misuse of Android Unix Domain Sockets"><img src="/por/images/Reports/POR/2018/1318306/1318306_10267790_1543182005968_sInspector--rgov-66x44.jpg" alt="SInspector: Detecting The Misuse of Android Unix Domain Sockets"></a> <div class="imageCaptionContainer"> <div class="imageCaption">: Overview of our approach to identifying potentially vulnerable apps and system daemons.</div> <div class="imageCredit">Zhuoqing Mao</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Zhuoqing&nbsp;M&nbsp;Mao</div> <div class="imageTitle">SInspector: Detecting The Misuse of Android Unix Domain Sockets</div> </div> </li> <li> <a href="/por/images/Reports/POR/2018/1318306/1318306_10267790_1543182090025_Kratos--rgov-214x142.jpg" original="/por/images/Reports/POR/2018/1318306/1318306_10267790_1543182090025_Kratos--rgov-800width.jpg" title="Kratos: Discovering Inconsistent Security Policy Enforcement in the Android Framework"><img src="/por/images/Reports/POR/2018/1318306/1318306_10267790_1543182090025_Kratos--rgov-66x44.jpg" alt="Kratos: Discovering Inconsistent Security Policy Enforcement in the Android Framework"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Kratos analysis flow. There are four major phases: (1) Preprocessing,(2) Call Graph Construction, (3) Call Graph Annotation, and (4) InconsistencyDetection.</div> <div class="imageCredit">Zhuoqing Mao</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Zhuoqing&nbsp;M&nbsp;Mao</div> <div class="imageTitle">Kratos: Discovering Inconsistent Security Policy Enforcement in the Android Framework</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In this project, we have successfully investigated several emerging challenges associated with cellular and mobile device security. Here are the main findings:  (1) We investigated how open ports on mobile apps on Android platform can lead to serious security vulnerabilities. Open ports are typically used by server software to serve remote clients, and the usage historically leads to remote exploitation due to insufficient protection. Smartphone operating systems inherit the open port support, but since they are significantly different from traditional server machines in performance and availability guarantees, little is known about how smartphone applications use open ports and what the security implications are. In this paper, we perform the first systematic study of open port usage on mobile platform and their security implications. To achieve this goal, we design and implement OPAnalyzer, a static analysis tool which can effectively identify and characterize vulnerable open port usage in Android applications.  (2)  We conduct the first systematic study in understanding the security properties of the usage of Unix domain sockets by both Android apps and system daemons as an IPC (Inter-process Communication) mechanism, especially for cross-layer communications between the Java and native layers. We propose a tool called SInspector to expose potential security vulnerabilities in using Unix domain sockets through the process of identifying socket addresses,detecting authentication checks, and performing data flow analysis. Our in-depth analysis revealed some serious vulnerabilities in popular apps and system daemons, such as root privilege escalation and arbitrary file access. Based on our findings, we propose countermeasures and improved practices for utilizing Unix domain sockets on Android.  (3) Our work is the first to propose a methodology to systematically uncover the inconsistency in security policy enforcement in Android. We do not assume Android?s security policies are known and focus only on inconsistent enforcement. We propose Kratos, a tool that leverages static analysis to build a precise callgraph for identifying paths that allow third-party applications with insufficient privilege to access sensitive resources, violating security policies. Kratos is designed to analyze any Android system,including vendor-customized versions. Using Kratos, we have conservatively discovered at least fourteen inconsistent security enforcement cases that can lead to security check circumvention vulnerabilities across important and popular services such as the SMS service and the Wi-Fi service, incurring impact such as privilege escalation, denial of service, and soft reboot. Our findings also provide useful insights on how to proactively prevent such security enforcement inconsistency within Android.  In terms of broader impact, we have published the research findings at top conferences and released prototypes of the software to mitigate identified security vulnerabilities. We have also contributed to CVEs and performed other responsible disclosures to ensure the identified security vulnerabilities are properly addressed.          Last Modified: 11/25/2018       Submitted by: Zhuoqing M Mao]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Medium: TCloud: A Self-Defending, Self-Evolving and Self-Accounting Trustworthy Cloud Platform</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>999991.00</AwardTotalIntnAmount>
<AwardAmount>999991</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Shannon Beck</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The use of cloud computing has revolutionized the way in which cyber infrastructure is used and managed. The on-demand access to seemingly infinite resources provided by this paradigm has enabled technical innovation and indeed innovative business models and practices. This rosy picture is threatened, however, by increasing nefarious interest in cloud platforms. Specifically, the shared tenant, shared resource nature of cloud platforms, as well as the natural accrual of valuable information in cloud platforms, provide both the incentive and the possible means of exploitation. &lt;br/&gt;&lt;br/&gt;To address these concerns we are developing a self-defending, self-evolving, and self-accounting trustworthy cloud platform, the TCloud. Our approach in realizing TCloud holds to the following five tenets. First, defense-in-depth through innate containment, separation and diversification at the architectural level. Second, least authority by clear separation of functionality and associated privilege within the architecture. Third, explicit orchestration of security functions based on cloud-derived and external intelligence.  Fourth, moving-target-defense through deception and dynamic evolution of the platform.  Fifth, verifiable accountability through light weight validation and auditable monitoring, record keeping and analysis.&lt;br/&gt;&lt;br/&gt;Our approach to fundamentally refactor the cloud architecture to explicitly enable security related functionality lays the foundation for truly trustworthy cloud computing. Given the unrelenting push towards the use of cloud technologies our work has broad applicability across industry, healthcare, government and academia. All software we develop will be released to the community in open source form.</AbstractNarration>
<MinAmdLetterDate>08/19/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/19/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1314945</AwardID>
<Investigator>
<FirstName>Eric</FirstName>
<LastName>Eide</LastName>
<PI_MID_INIT>N</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Eric N Eide</PI_FULL_NAME>
<EmailAddress>eeide@cs.utah.edu</EmailAddress>
<PI_PHON>8015855512</PI_PHON>
<NSF_ID>000423472</NSF_ID>
<StartDate>08/19/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Robert</FirstName>
<LastName>Ricci</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Robert Ricci</PI_FULL_NAME>
<EmailAddress>ricci@cs.utah.edu</EmailAddress>
<PI_PHON>8015818354</PI_PHON>
<NSF_ID>000518706</NSF_ID>
<StartDate>08/19/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jacobus</FirstName>
<LastName>VAN DER MERWE</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jacobus VAN DER MERWE</PI_FULL_NAME>
<EmailAddress>kobus@cs.utah.edu</EmailAddress>
<PI_PHON>8015813012</PI_PHON>
<NSF_ID>000540324</NSF_ID>
<StartDate>08/19/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Feifei</FirstName>
<LastName>Li</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Feifei Li</PI_FULL_NAME>
<EmailAddress>lifeifei@cs.utah.edu</EmailAddress>
<PI_PHON>8015856673</PI_PHON>
<NSF_ID>000598994</NSF_ID>
<StartDate>08/19/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<StreetAddress2><![CDATA[Second Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009095365</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF UTAH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009095365</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Utah]]></Name>
<CityName/>
<StateCode>UT</StateCode>
<ZipCode>841128930</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~999991</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The TCloud research project investigated novel methods for addressing the security issues of modern cloud computing platforms. Today, the technical innovations and business models enabled by cloud computing are threatened by security shortcomings of the cloud platforms themselves. The shared-tenant, shared-resource nature of cloud platforms, as well as the natural accrual of valuable data in cloud platforms, provide both the incentive and the possible means of exploitation. The TCloud project was founded on the assumption that cloud tenants are potentially malicious and may attempt to attack other tenants and the cloud platform. Further, while the project assumed that cloud providers are not malicious, it also assumed that the cloud platform as a whole cannot be unconditionally trusted.<br /><br />The TCloud project developed and evaluated several components of a trustworthy cloud computing platform in which security is an explicit "first-class citizen," not an afterthought. The components reflect the project's focus on three architectural principles for trustworthy cloud infrastructure: partitioning, auditing, and intelligent orchestration. The components developed under these principles included (1) DEIDtect, a distributed and elastic intrusion-detection system architecture; (2) Potassium, an implementation of "penetration testing as a service" that a cloud provider could offer to tenants; (3) VmiCVS, a tool that uses virtual machine introspection (VMI) to scan for potential vulnerabilities in tenants' software; (4) CloudVMI, a library enabling "VMI as service"; (5) ATOM, a framework for efficient monitoring of resources in an infrastructure-as-a-service platform; (6) CloudSight, a system that provides tenants with "transparency" into the cloud platform and enables cross-layer cloud troubleshooting; (7) Polygravity, a method for cloud providers to accurately determine tenant traffic usage through lightweight measurements in a multi-tenant datacenter; (8) DeepLog, a deep neural network model utilizing "long short-term memory" for performing anomaly detection through the analysis of system logs; (9) Spell, a structured streaming parser for event logs using an approach based on the identification of longest common subsequences; (10) Harpocrates, a system for moving secure computation from origin webservers to nodes within a content distribution network; and (11) Fluorescence, a tool that uses VMI-based observations and "fingerprinting" to detect kernel-resident anomalies within a "herd" of similar virtual machines, without the need for training over specific anomalies. In addition, the project investigated and evaluated (12) the application of capability-enabled networking to clouds, enabling secure collaboration between cloud tenants; and (13) inter-tenant information-leakage channels that are realized through a cloud's shared management services. The project's investigations in the above-listed areas were disseminated to the public through scholarly publications and open-source software.<br /><br />The intellectual merit of the project was embodied in the techniques, software, and publications that the project team created to assess and demonstrate the potential for improved security in future clouds. The components help point the way to a future in which cloud tenants receive stronger security guarantees and cloud platforms are self-defending, self-evolving, and self-accounting. The broader impacts of the project include the training of more than twenty graduate and undergraduate students, yielding two completed PhD dissertations, two completed MS theses, and one completed MS project; tech transfer through collaboration with industry partners; and the potential impact of improved cloud security on many disciplines and activities. Compute clouds are commonplace in essentially all areas of science, engineering, and commerce. By securing and otherwise improving the cloud technologies that are critical to their work, the outcomes of the TCloud project have the potential to strengthen many areas of human activity outside of computer science.</p><br> <p>            Last Modified: 12/05/2018<br>      Modified by: Eric&nbsp;N&nbsp;Eide</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The TCloud research project investigated novel methods for addressing the security issues of modern cloud computing platforms. Today, the technical innovations and business models enabled by cloud computing are threatened by security shortcomings of the cloud platforms themselves. The shared-tenant, shared-resource nature of cloud platforms, as well as the natural accrual of valuable data in cloud platforms, provide both the incentive and the possible means of exploitation. The TCloud project was founded on the assumption that cloud tenants are potentially malicious and may attempt to attack other tenants and the cloud platform. Further, while the project assumed that cloud providers are not malicious, it also assumed that the cloud platform as a whole cannot be unconditionally trusted.  The TCloud project developed and evaluated several components of a trustworthy cloud computing platform in which security is an explicit "first-class citizen," not an afterthought. The components reflect the project's focus on three architectural principles for trustworthy cloud infrastructure: partitioning, auditing, and intelligent orchestration. The components developed under these principles included (1) DEIDtect, a distributed and elastic intrusion-detection system architecture; (2) Potassium, an implementation of "penetration testing as a service" that a cloud provider could offer to tenants; (3) VmiCVS, a tool that uses virtual machine introspection (VMI) to scan for potential vulnerabilities in tenants' software; (4) CloudVMI, a library enabling "VMI as service"; (5) ATOM, a framework for efficient monitoring of resources in an infrastructure-as-a-service platform; (6) CloudSight, a system that provides tenants with "transparency" into the cloud platform and enables cross-layer cloud troubleshooting; (7) Polygravity, a method for cloud providers to accurately determine tenant traffic usage through lightweight measurements in a multi-tenant datacenter; (8) DeepLog, a deep neural network model utilizing "long short-term memory" for performing anomaly detection through the analysis of system logs; (9) Spell, a structured streaming parser for event logs using an approach based on the identification of longest common subsequences; (10) Harpocrates, a system for moving secure computation from origin webservers to nodes within a content distribution network; and (11) Fluorescence, a tool that uses VMI-based observations and "fingerprinting" to detect kernel-resident anomalies within a "herd" of similar virtual machines, without the need for training over specific anomalies. In addition, the project investigated and evaluated (12) the application of capability-enabled networking to clouds, enabling secure collaboration between cloud tenants; and (13) inter-tenant information-leakage channels that are realized through a cloud's shared management services. The project's investigations in the above-listed areas were disseminated to the public through scholarly publications and open-source software.  The intellectual merit of the project was embodied in the techniques, software, and publications that the project team created to assess and demonstrate the potential for improved security in future clouds. The components help point the way to a future in which cloud tenants receive stronger security guarantees and cloud platforms are self-defending, self-evolving, and self-accounting. The broader impacts of the project include the training of more than twenty graduate and undergraduate students, yielding two completed PhD dissertations, two completed MS theses, and one completed MS project; tech transfer through collaboration with industry partners; and the potential impact of improved cloud security on many disciplines and activities. Compute clouds are commonplace in essentially all areas of science, engineering, and commerce. By securing and otherwise improving the cloud technologies that are critical to their work, the outcomes of the TCloud project have the potential to strengthen many areas of human activity outside of computer science.       Last Modified: 12/05/2018       Submitted by: Eric N Eide]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

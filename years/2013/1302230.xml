<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Medium: Collaborative Research: FRP for Real</AwardTitle>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>63599.00</AwardTotalIntnAmount>
<AwardAmount>63599</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Functional Reactive Programming, or FRP, is a declarative programming paradigm based on two fundamental abstractions: a continuous (functional) modeling of time-varying behaviors, and a discrete (reactive) calculus of user and process interaction.  FRP provides a novel and effective approach to solving problems in which there is a combination of both continuous and discrete entities such as found in computer animation, robotics, control systems, GUIs, and interactive multimedia.  FRP's broader impact is seen in its adoption by several other research projects, and its use in several applications different from those at Yale.  The proposed work will strengthen these existing projects, and further broaden the applicability of FRP.  The proposed improvements in implementation will make FRP more suitable for compute-intensive applications, such as interactive 3D graphics and real-time audio processing.  It will also benefit the modeling and simulation community, which often uses declarative approaches to specifying and solving problems.&lt;br/&gt; &lt;br/&gt;Previous research at Yale helped to establish the foundations of FRP, and demonstrated its utility in several application domains.  Despite this preliminary success, more work is needed to make "FRP for real."  That is, to develop a system that facilitates writing natural and concise descriptions of reactive behaviors, responds well enough to satisfy most common real-time constraints, reifies real-world objects as first-class signal functions, runs efficiently through program optimization and parallel execution on multicore architectures, and has been validated in a real-world application domain, specifically audio signal processing.  The proposed research will advance the overall FRP methodology in three areas: Language Design (type system extensions to capture resource constraints, a redesign of the mediation between the discrete and continuous, and a better syntax to capture the essence of FRP); Language Implementation (program optimizations, multicore execution, asynchronous sub-processes); and Validation and Testing (with a focus on real-time audio signal processing).</AbstractNarration>
<MinAmdLetterDate>09/17/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/22/2017</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1302230</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Peterson</LastName>
<EmailAddress>jpeterson@western.edu</EmailAddress>
<StartDate>09/17/2013</StartDate>
<EndDate>08/22/2017</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ruzica</FirstName>
<LastName>Piskac</LastName>
<EmailAddress>ruzica.piskac@yale.edu</EmailAddress>
<StartDate>08/22/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Western Colorado University</Name>
<CityName>Gunnison</CityName>
<ZipCode>812317000</ZipCode>
<PhoneNumber>9709433400</PhoneNumber>
<StreetAddress>1 Western Way</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Colorado</StateName>
<StateCode>CO</StateCode>
</Institution>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
</Appropriation>
</Award>
</rootTag>

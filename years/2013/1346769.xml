<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CIVL: A Concurrency Intermediate Verification Language</AwardTitle>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>308000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Parallel programming has become increasingly common with the advent of&lt;br/&gt;"multi-core" computer chips that pack many processors into a single&lt;br/&gt;chip. Most standard laptop and desktop computers now come with anywhere&lt;br/&gt;from two to thirty-two such cores. Such chips offer unprecedented computing power, but at a price: to&lt;br/&gt;extract their full potential, programmers writing software for the new&lt;br/&gt;chips must use special programming language "libraries" in order to&lt;br/&gt;specify how the program is to do two (or more) things at once. One&lt;br/&gt;popular such library is called OpenMP. These so-called parallel&lt;br/&gt;programs are notoriously difficult to get right, and many contain&lt;br/&gt;undetected defects ("bugs") that can cause the program to crash or&lt;br/&gt;produce incorrect results.&lt;br/&gt;&lt;br/&gt;The CIVL project has the potential to dramatically reduce the effort&lt;br/&gt;required to develop new static analysis tools. The key idea is a&lt;br/&gt;unified language for describing parallel programs, whether these use&lt;br/&gt;MPI, OpenMP, or both. One tool translates the original program into&lt;br/&gt;the new language, also called CIVL. Other tools perform static&lt;br/&gt;analysis on the CIVL program. Eventually, many other parallel&lt;br/&gt;libraries will be added to the new system. The advantage of this&lt;br/&gt;approach is that the designer of a new static analysis tool need only&lt;br/&gt;design the tool for a single language---CIVL---but then gets a tool&lt;br/&gt;that works on all the source libraries "for free". Similarly, when a&lt;br/&gt;new parallel library comes along, by developing a translator from it&lt;br/&gt;to CIVL, one can immeidately reap the benefits of all the static&lt;br/&gt;analysis tools. The researchers expect that the resulting platform&lt;br/&gt;will make it much easier to develop correct parallel programs, no&lt;br/&gt;matter how that parallelism is expressed.</AbstractNarration>
<MinAmdLetterDate>07/29/2013</MinAmdLetterDate>
<MaxAmdLetterDate>05/12/2014</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1346769</AwardID>
<Investigator>
<FirstName>Stephen</FirstName>
<LastName>Siegel</LastName>
<EmailAddress>siegel@udel.edu</EmailAddress>
<StartDate>07/29/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Dwyer</LastName>
<EmailAddress>md3cn@virginia.edu</EmailAddress>
<StartDate>07/29/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Delaware</Name>
<CityName>Newark</CityName>
<ZipCode>197160099</ZipCode>
<PhoneNumber>3028312136</PhoneNumber>
<StreetAddress>210 Hullihen Hall</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Delaware</StateName>
<StateCode>DE</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
</Award>
</rootTag>

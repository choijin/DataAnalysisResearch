<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: Theoretical Frameworks for Modern Parallel Computing Environments</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>A dominant feature of computing today is that parallelism is present in virtually all computing environments, from laptops and desktops to supercomputers. The proposed research will address foundational issues that explore the power of parallelism as well as methods to harness its potential with maximum efficiency. This research has two main components:&lt;br/&gt;&lt;br/&gt;(1) It will revisit classical complexity theory developed for parallel computing to address new issues of speed-up efficiency, communication costs, and the diversity of parallel architectures, especially the challenges present in moving between shared-memory and distributed-memory environments.&lt;br/&gt;&lt;br/&gt;(2) It will develop efficient and portable multicore algorithms for many fundamental graph-theoretic problems as well as efficient run-time schedulers, caching and cache replacement strategies, and strategies for dealing with false sharing, an inevitable consequence of the shared-memory environment in a parallel setting that is found in multicores. &lt;br/&gt;&lt;br/&gt;It will also investigate models and algorithms for supercomputing environments configured as networks of multicores, and for GPU (graphics processing unit) computing.&lt;br/&gt;&lt;br/&gt;Over the past several decades theoretical computer science has made many fundamental advances in our understanding of parallelism. The project aims to expand the scope of traditional complexity theory to bring communication costs and other key parameters in parallel computation into the fold of complexity theory. It proposes to develop new efficient and portable algorithms for multicores, which are of major importance in the current times, as parallelism enters mainstream computation.</AbstractNarration>
<MinAmdLetterDate>08/07/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/07/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1320675</AwardID>
<Investigator>
<FirstName>Vijaya</FirstName>
<LastName>Ramachandran</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Vijaya Ramachandran</PI_FULL_NAME>
<EmailAddress>vlr@cs.utexas.edu</EmailAddress>
<PI_PHON>5124719554</PI_PHON>
<NSF_ID>000189543</NSF_ID>
<StartDate>08/07/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>170230239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT AUSTIN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at Austin]]></Name>
<CityName/>
<StateCode>TX</StateCode>
<ZipCode>787121532</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>25</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX25</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~400000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;This research focussed on parallel models and algorithms, with particular reference to efficient algorithms for important problems on graphs.</p> <p>&nbsp;We introduced the notion of a resource oblivious multicore algorithm, which&nbsp;makes no mention of machine parameters within the algorithm, and yet can be analyzed forprovably efficiency across a wide range of machine parameters. We have developed a framework for &nbsp;resource oblivious multicore algorithms, called &nbsp;Hierarchical Balanced Parallel (or HBP) computation. &nbsp;We show that HBP algorithms execute efficiently on shared-memory parallel machines with private caches even though they make no mention of cache parameters or number of processors within the algorithm. Using HBP we have developed a suite of efficient highly parallel resource oblivious algorithms for sorting, list ranking, graph connected components, dynamic programming for edit distance and related problems, and matrix multiplication and related problems. These algorithms have additional features not present in standard cache-efficient parallel algorithms, such as low overhead for false sharing even without the knowledge of cache parameters. On the analysis side we have developed a general analysis of the caching overhead of multithreaded computations under an arbitrary scheduler, extending earlier work that held only for randomized work-stealing.</p> <p>&nbsp;We developed new algorithms for Betweenness Centrality (BC), &nbsp;an important graph-theoretic parameter widely used in massive graphs. We have developed the first nontrivial incremental, decremental and fully dynamic algorithms for BC that have provably improved bounds for a natural class of graphs. We have also developed the first O(n)-round distributed algorithm for directed unweighted BC. Most&nbsp;algorithms for BC, including ours, build on algorithms for all pairs shortest paths (APSP), and we have developed improved APSP algorithms in the Congest distributed model. &nbsp;&nbsp;</p> <p>&nbsp;In other research on graph algorithms, we have developed a suite of new sequential algorithms for computing k simple shortest paths and cycles. We have developed fine-grained reductions between several fundamental graph-theoretic problems related to shortest paths when considering sparse graphs, including minimum weight cycle, APSP, BC, k-simple shortest paths and cycles.&nbsp;</p> <p>&nbsp;This research is fundamental and theoretical. Since many of the problems and models considered, such as APSP, BC, and resource oblivious algorithms, have practical applications, it is likely to have impact on other disciplines as applications researchers implement the theoretical results we have obtained.</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/25/2018<br>      Modified by: Vijaya&nbsp;Ramachandran</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  This research focussed on parallel models and algorithms, with particular reference to efficient algorithms for important problems on graphs.   We introduced the notion of a resource oblivious multicore algorithm, which makes no mention of machine parameters within the algorithm, and yet can be analyzed forprovably efficiency across a wide range of machine parameters. We have developed a framework for  resource oblivious multicore algorithms, called  Hierarchical Balanced Parallel (or HBP) computation.  We show that HBP algorithms execute efficiently on shared-memory parallel machines with private caches even though they make no mention of cache parameters or number of processors within the algorithm. Using HBP we have developed a suite of efficient highly parallel resource oblivious algorithms for sorting, list ranking, graph connected components, dynamic programming for edit distance and related problems, and matrix multiplication and related problems. These algorithms have additional features not present in standard cache-efficient parallel algorithms, such as low overhead for false sharing even without the knowledge of cache parameters. On the analysis side we have developed a general analysis of the caching overhead of multithreaded computations under an arbitrary scheduler, extending earlier work that held only for randomized work-stealing.   We developed new algorithms for Betweenness Centrality (BC),  an important graph-theoretic parameter widely used in massive graphs. We have developed the first nontrivial incremental, decremental and fully dynamic algorithms for BC that have provably improved bounds for a natural class of graphs. We have also developed the first O(n)-round distributed algorithm for directed unweighted BC. Most algorithms for BC, including ours, build on algorithms for all pairs shortest paths (APSP), and we have developed improved APSP algorithms in the Congest distributed model.      In other research on graph algorithms, we have developed a suite of new sequential algorithms for computing k simple shortest paths and cycles. We have developed fine-grained reductions between several fundamental graph-theoretic problems related to shortest paths when considering sparse graphs, including minimum weight cycle, APSP, BC, k-simple shortest paths and cycles.    This research is fundamental and theoretical. Since many of the problems and models considered, such as APSP, BC, and resource oblivious algorithms, have practical applications, it is likely to have impact on other disciplines as applications researchers implement the theoretical results we have obtained.                Last Modified: 11/25/2018       Submitted by: Vijaya Ramachandran]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>FIA-NP: Collaborative Research: The  Next-Phase MobilityFirst Project - From Architecture and Protocol Design to Advanced Services and Trial Deployments</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/01/2014</AwardEffectiveDate>
<AwardExpirationDate>12/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>250000.00</AwardTotalIntnAmount>
<AwardAmount>250000</AwardAmount>
<AwardInstrument>
<Value>Cooperative Agreement</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The Next-Phase MobilityFirst (MF) project aims to have a major impact on the architecture of the future Internet by re-architecting it to address the needs of emerging mobile platforms and applications. Adoption of technologies arising from this project may be expected to provide improved efficiency, security and robustness that would benefit both network operators and end-users of the Internet. This project, originally funded as a collaborative research effort under the NSF Future Internet Architecture (FIA) program (2010-13) in which the MF architecture was designed over the past 3 years, is centered on a new name-based service layer which serves as the narrow-waist of the protocol; this name-based services layer makes it possible to build advanced mobility-centric services in a flexible manner while also improving security and privacy properties. The architecture incorporates novel storage-aware routing techniques which provide significant improvements in mobile network capacity and functionality. The next phase of the MobilityFirst project is aimed at making the transition from early-stage architecture and prototyping to advanced real-world services and trial network deployments. The research and experimental trials agenda is aimed at validating and refining the core name service, routing, security and management components of the MF architecture, while also responding to emerging trends in network technology and services such as the cellular mobile data explosion, the growth of content, the emergence of cloud computing, and software-defined network (SDN) technology.&lt;br/&gt; &lt;br/&gt;Intellectual Merit: This project includes several research thrusts aimed at transitioning the MobilityFirst architecture to advanced services and field deployable technology. These include: (1) advanced name-based network services and development of enhanced global name service (GNS) technology; (2) network security and privacy designs and enhancements; (3) design of advanced content services; (4) application of MobilityFirst protocols to next-generation mobile cloud computing; (5) design of advanced context-aware services; (6) technical and economic study of cellular-Internet convergence; (7) software-defined network (SDN) ready protocol design; and (8) technology platforms, router implementation and deployment strategies. These research thrusts will be informed by three distinct real-world network environment trials: a "mobile data services" trial with a wireless ISP (5Nines) in Madison; WI; a "content production and delivery network" trial involving several public broadcasting stations in Pennsylvania connected by a greenfield optical network called PennREN; and a "context-aware public service" weather emergency notification system (CASA) with end-users in the Dallas/Fort Worth area. These network environment trials are the centerpiece of the proposed project, and are expected to provide a firm basis for validation of the MobilityFirst protocol stack and its usefulness for developing advanced mobile, content, context and cloud applications, while also advancing the technology to the field-deployment stage. Expected outcomes from the project include research results on security, privacy, content/context/cloud services and SDN; MobilityFirst protocol stack software revisions; router technology implementations; multiple real-world trial deployments of the technology; and experimentally supported evaluations of the architecture. This project is a collaborative effort involving Rutgers, UMass, MIT, Duke, U Michigan, U Wisconsin, and U Nebraska with the participation of several industrial research and network environment trial partners.&lt;br/&gt;&lt;br/&gt;Broader Impacts:  The MobilityFirst project will have impact as a new approach to a future Internet that by design addresses mobility and mobile platforms, and as an enabler of new mobile Internet applications of social value such as context-aware emergency notification services. The release of open source protocol software may be expected to help to stimulate further experimental research on future Internet architectures across the networking community. The project also contributes to education and training in the key areas of Internet and mobile network technology.</AbstractNarration>
<MinAmdLetterDate>05/10/2014</MinAmdLetterDate>
<MaxAmdLetterDate>07/17/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>CoopAgrmnt</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1345283</AwardID>
<Investigator>
<FirstName>Xiaowei</FirstName>
<LastName>Yang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xiaowei Yang</PI_FULL_NAME>
<EmailAddress>xwy@cs.duke.edu</EmailAddress>
<PI_PHON>9196606531</PI_PHON>
<NSF_ID>000095256</NSF_ID>
<StartDate>05/10/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Duke University</Name>
<CityName>Durham</CityName>
<ZipCode>277054010</ZipCode>
<PhoneNumber>9196843030</PhoneNumber>
<StreetAddress>2200 W. Main St, Suite 710</StreetAddress>
<StreetAddress2><![CDATA[Erwin Square]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>044387793</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>DUKE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>044387793</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Duke University]]></Name>
<CityName>Durham</CityName>
<StateCode>NC</StateCode>
<ZipCode>277080129</ZipCode>
<StreetAddress><![CDATA[308 Research Dr]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramReference>
<Code>7363</Code>
<Text>RES IN NETWORKING TECH &amp; SYS</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~123000</FUND_OBLG>
<FUND_OBLG>2015~127000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project has four main outcomes: the design and implementation of PacketCloud, FOCUS, SwitchMan, and DynaShield.</p> <p>We started this project by exploring how to enhance the Internet architecture with an in-network compute layer to enable new services. The Internet was designed with the end-to-end principle where the network layer provided merely the best-effort forwarding service. However, as the Internet connectivity becomes a commodity, users and applications increasingly demand new in-network services. We designed and evaluated PacketCloud, a cloudlet-based open platform to host in-network services. In the PacketCloud architecture, ISPs choose suitable Point of Presences (PoPs) to deploy small computing clustersand host in-network services at those clusters. Emerging application/content providers deploy their services at strategic network locations.&nbsp; We implemented a proof-of-concept prototype of PacketCloud and evaluated its performance in both a fully functional&nbsp;emulated environment, and the real Internet.&nbsp; We show that PacketCloud introduces a small additional delay in packet forwarding, and can scale well to handle high-throughput data traffic. Figure 1 shows the PacketCloud architecture. The PacketCloud work was accepted by the journal IEEE Transactions on Parallel and Distributed Systems in April 2016.</p> <p><br />After the PacketCloud work, we turned our attention to the management aspect of PacketCloud. How does an ISP manage its cloudlets? We explored the Software Designed Networking (SDN) architecture as a&nbsp;suitable candidate for managing PacketCloud. However, the SDN architecture faces a scaling bottleneck as the logically centralized controller must process all events in a network. To address this problem, we propose the FOCUS (Function Offloading from a Controller to Utilize Switch Power) architecture where a controller can choose to delegate certain functions that only involve local state to a switch. As a proof of concept, we implemented and evaluated a controller's communication and computation workload with and without the FOCUS design, and discovered that FOCUS can reduce BOTH a&nbsp;controller's CPU utilization and the one of a switch, as well as the number of protocol messages. Figure 2 shows the FOCUS architecture. The FOCUS work appeared in the IEEE NFV-SDN conferencein 2016.</p> <p><br />The next problem we focused on is to make the PacketCloud architecture resilient to distributed Denial of Service (DDoS) attacks. Distributed Denial of Service (DDoS) attacks are a long time security threat. We explored how an organization or an individual user can protect themselves from DDoS attacks at a low cost using today's technologies.We proposed a solution, DynaShield, which provides on-demand and low-cost DDoS protection using cloud services. DynaShield uses common cloud services to build a protective shield for a DDoS victim.&nbsp; We are attracted to cloud services because 1) the current pricing for cloud services is more favorable than that of comparable DDoS protection services; and 2) most cloud providers already have large-scale distributed networks that are resilient to raw bandwidth flooding&nbsp;attacks, and they scrub off network layer and transport layer attack traffic for free. DynaShield uses three techniques to reduce its cost of using cloud services. First, it exploits the intermittent nature of DDoS attacks, and only uses cloud services on demand.&nbsp; A server redirects its traffic to DynaShield after it encounters an attack using dynamic DNS updates, eliminating the cloud service charges during peacetime.&nbsp; Second, DynaShield uses a combination of Function-as-a-Service (FaaS) and Infrastructure-as-a-Service (IaaS) to auto-scale to large attacks while keeping its cost low. Third, DynaShield uses cryptocurrency as Proof-of-Work to limit how fast malicious clients can send application-layer requests. The profit fromcoin mining further offsets its cloud service cost. Our evaluation suggests that DynaShield can be a low-cost DDoS solution. Figure 3 shows the DynaShield architecture. The DynaShield work is going to appear in USENIX HotCloud'19.</p> <p>While exploring solutions to the DDoS problem, we realized that the root cause to the DDoS problem is compromised computers and devices. We developed a solution to improve the security of user input/output data even if a user computer is compromised. We proposed the SwitchMan architecture in which a server can switch a user to a secure terminal for sensitive user input/output. At the heart of the SwitchMan architecture lies a protocol that enables a remote server (e.g. a web server) to embed a secure terminal switching request inside its traffic stream even if the client's software (e.g. abrowser) is untrusted. The Trusted Computing Base (TCB) running on the client will intercept the request and switch the user to a secure terminal.&nbsp; We have implemented the SwitchMan design using Linux and evaluated its performance. We have also conducted a preliminary analysis of its security and usability. Our performance evaluation shows that SwitchMan adds low overhead to the existing system.&nbsp; Our usability analysis suggests that it is easier to use than previous&nbsp;proposals. Figure 4 shows the SwitchMan architecture. The SwitchMan work appeared in the IWPE'19 co-located with IEEE S&amp;P'19.</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/24/2019<br>      Modified by: Xiaowei&nbsp;Yang</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558644972594_packetcloud-arch--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558644972594_packetcloud-arch--rgov-800width.jpg" title="The PacketCloud architecture."><img src="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558644972594_packetcloud-arch--rgov-66x44.jpg" alt="The PacketCloud architecture."></a> <div class="imageCaptionContainer"> <div class="imageCaption">ISPs host small clusters of computers at their Point of Presences (PoPs).</div> <div class="imageCredit">Yang Chen, Yu Chen, Qiang Cao, and Xiaowei Yang</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Xiaowei&nbsp;Yang</div> <div class="imageTitle">The PacketCloud architecture.</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558709707293_system_structure--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558709707293_system_structure--rgov-800width.jpg" title="The FOCUS architecture"><img src="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558709707293_system_structure--rgov-66x44.jpg" alt="The FOCUS architecture"></a> <div class="imageCaptionContainer"> <div class="imageCaption">FOCUS redesigns the traditional SDN architecture. With FOCUS, an SDN controller includes a FOCUS extension that allows SDN applications to use the FOCUS API. Each switch in the network runs a FOCUS agent. The FOCUS agent runs on the switch CPU and executes the controller off-loaded functions.</div> <div class="imageCredit">Ji Yang, Zhenyu Zhou, Theophilus Benson, Xiaowei Yang, Xin Wu, and Chengchen Hu</div> <div class="imageSubmitted">Xiaowei&nbsp;Yang</div> <div class="imageTitle">The FOCUS architecture</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558711715061_architecture-eps-converted-to--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558711715061_architecture-eps-converted-to--rgov-800width.jpg" title="The DynaShield architecture"><img src="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558711715061_architecture-eps-converted-to--rgov-66x44.jpg" alt="The DynaShield architecture"></a> <div class="imageCaptionContainer"> <div class="imageCaption">The DynaShield architecture has five participating components: aprotected server's DNS service, DynaShield's serverless functions and VM instances running on the cloud, existing cryptocurrency mining pools, an ISP?s filtering routers, and a protected server.</div> <div class="imageCredit">Shengbao Zheng and Xiaowei Yang</div> <div class="imageSubmitted">Xiaowei&nbsp;Yang</div> <div class="imageTitle">The DynaShield architecture</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558726789476_proposal_arch-eps-converted-to--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558726789476_proposal_arch-eps-converted-to--rgov-800width.jpg" title="The SwitchMan architecture"><img src="/por/images/Reports/POR/2019/1345283/1345283_10302531_1558726789476_proposal_arch-eps-converted-to--rgov-66x44.jpg" alt="The SwitchMan architecture"></a> <div class="imageCaptionContainer"> <div class="imageCaption">This figure shows the SwitchMan architecture. Each user has a protected account and a regular account. A user switches to his protected account and uses the trusted I/O proxy running under that account for sensitive input/output. SwitchMan can help secure both sensitive local and network input.</div> <div class="imageCredit">Shengbao Zheng, Zhengyu Zhou, Heyi Tang, and Xiaowei Yang</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Xiaowei&nbsp;Yang</div> <div class="imageTitle">The SwitchMan architecture</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project has four main outcomes: the design and implementation of PacketCloud, FOCUS, SwitchMan, and DynaShield.  We started this project by exploring how to enhance the Internet architecture with an in-network compute layer to enable new services. The Internet was designed with the end-to-end principle where the network layer provided merely the best-effort forwarding service. However, as the Internet connectivity becomes a commodity, users and applications increasingly demand new in-network services. We designed and evaluated PacketCloud, a cloudlet-based open platform to host in-network services. In the PacketCloud architecture, ISPs choose suitable Point of Presences (PoPs) to deploy small computing clustersand host in-network services at those clusters. Emerging application/content providers deploy their services at strategic network locations.  We implemented a proof-of-concept prototype of PacketCloud and evaluated its performance in both a fully functional emulated environment, and the real Internet.  We show that PacketCloud introduces a small additional delay in packet forwarding, and can scale well to handle high-throughput data traffic. Figure 1 shows the PacketCloud architecture. The PacketCloud work was accepted by the journal IEEE Transactions on Parallel and Distributed Systems in April 2016.   After the PacketCloud work, we turned our attention to the management aspect of PacketCloud. How does an ISP manage its cloudlets? We explored the Software Designed Networking (SDN) architecture as a suitable candidate for managing PacketCloud. However, the SDN architecture faces a scaling bottleneck as the logically centralized controller must process all events in a network. To address this problem, we propose the FOCUS (Function Offloading from a Controller to Utilize Switch Power) architecture where a controller can choose to delegate certain functions that only involve local state to a switch. As a proof of concept, we implemented and evaluated a controller's communication and computation workload with and without the FOCUS design, and discovered that FOCUS can reduce BOTH a controller's CPU utilization and the one of a switch, as well as the number of protocol messages. Figure 2 shows the FOCUS architecture. The FOCUS work appeared in the IEEE NFV-SDN conferencein 2016.   The next problem we focused on is to make the PacketCloud architecture resilient to distributed Denial of Service (DDoS) attacks. Distributed Denial of Service (DDoS) attacks are a long time security threat. We explored how an organization or an individual user can protect themselves from DDoS attacks at a low cost using today's technologies.We proposed a solution, DynaShield, which provides on-demand and low-cost DDoS protection using cloud services. DynaShield uses common cloud services to build a protective shield for a DDoS victim.  We are attracted to cloud services because 1) the current pricing for cloud services is more favorable than that of comparable DDoS protection services; and 2) most cloud providers already have large-scale distributed networks that are resilient to raw bandwidth flooding attacks, and they scrub off network layer and transport layer attack traffic for free. DynaShield uses three techniques to reduce its cost of using cloud services. First, it exploits the intermittent nature of DDoS attacks, and only uses cloud services on demand.  A server redirects its traffic to DynaShield after it encounters an attack using dynamic DNS updates, eliminating the cloud service charges during peacetime.  Second, DynaShield uses a combination of Function-as-a-Service (FaaS) and Infrastructure-as-a-Service (IaaS) to auto-scale to large attacks while keeping its cost low. Third, DynaShield uses cryptocurrency as Proof-of-Work to limit how fast malicious clients can send application-layer requests. The profit fromcoin mining further offsets its cloud service cost. Our evaluation suggests that DynaShield can be a low-cost DDoS solution. Figure 3 shows the DynaShield architecture. The DynaShield work is going to appear in USENIX HotCloud'19.  While exploring solutions to the DDoS problem, we realized that the root cause to the DDoS problem is compromised computers and devices. We developed a solution to improve the security of user input/output data even if a user computer is compromised. We proposed the SwitchMan architecture in which a server can switch a user to a secure terminal for sensitive user input/output. At the heart of the SwitchMan architecture lies a protocol that enables a remote server (e.g. a web server) to embed a secure terminal switching request inside its traffic stream even if the client's software (e.g. abrowser) is untrusted. The Trusted Computing Base (TCB) running on the client will intercept the request and switch the user to a secure terminal.  We have implemented the SwitchMan design using Linux and evaluated its performance. We have also conducted a preliminary analysis of its security and usability. Our performance evaluation shows that SwitchMan adds low overhead to the existing system.  Our usability analysis suggests that it is easier to use than previous proposals. Figure 4 shows the SwitchMan architecture. The SwitchMan work appeared in the IWPE'19 co-located with IEEE S&amp;P'19.          Last Modified: 05/24/2019       Submitted by: Xiaowei Yang]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

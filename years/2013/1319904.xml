<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Collaborative Research: Reliability Driven Resource Management of Multi-Core Real-Time Embedded Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2013</AwardEffectiveDate>
<AwardExpirationDate>09/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>166666.00</AwardTotalIntnAmount>
<AwardAmount>166666</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The project aims to improve the quality of service and lifetime of real-time&lt;br/&gt;embedded systems, particularly those implemented on multi-core platforms. In&lt;br/&gt;contrast with many other quality metrics, such as performance and power&lt;br/&gt;consumption, reliability is difficult to accurately estimate because it is&lt;br/&gt;influenced by design decisions, environmental conditions, and process variation&lt;br/&gt;during integrated circuit fabrication.&lt;br/&gt;&lt;br/&gt;This project consists of three main technical tasks.  (1) Develop a reliability&lt;br/&gt;modeling and analysis framework that can efficiently and accurately determine&lt;br/&gt;the impact of design and runtime management decisions on reliability.  (2)&lt;br/&gt;Develop a reliability-driven resource management framework, which includes&lt;br/&gt;runtime algorithms for assignment and scheduling of real-time tasks to maximize&lt;br/&gt;system lifetime while keeping soft error rates low, and a lightweight technique&lt;br/&gt;to adaptively adjust the activation frequency of the algorithms (i.e.,&lt;br/&gt;overhead).  (3) Develop wear state monitoring techniques and data collection&lt;br/&gt;infrastructure to enable the runtime refinement and validation of system-level&lt;br/&gt;reliability models that require long-term in-field system deployment.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;The techniques developed in this project will support the production of more&lt;br/&gt;reliable and/or less expensive electronic devices, enabling integrated&lt;br/&gt;circuits, which are susceptible to wear due to lifetime fault processes to be&lt;br/&gt;used in special-purpose computers with strict reliability and performance&lt;br/&gt;requirements.  In particular, this project aims to ease the use of multicore&lt;br/&gt;processors in high-reliability computing applications with deadlines, such as&lt;br/&gt;automotive, multimedia, and health care applications.  These applications have&lt;br/&gt;historically seen slow adoption of multicore processors, despite their price,&lt;br/&gt;performance, and power consumption benefits.  We believe this is partially due&lt;br/&gt;to gaps in knowledge of how to control and optimize reliability on such&lt;br/&gt;systems, some of which this project will fill. The involvement of both industry&lt;br/&gt;researchers and university students at the undergraduate and graduate level&lt;br/&gt;will result in a broad dissemination of the research results.</AbstractNarration>
<MinAmdLetterDate>09/12/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/12/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319904</AwardID>
<Investigator>
<FirstName>Xiaobo</FirstName>
<LastName>Hu</LastName>
<PI_MID_INIT>S</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xiaobo S Hu</PI_FULL_NAME>
<EmailAddress>shu@cse.nd.edu</EmailAddress>
<PI_PHON>5746316015</PI_PHON>
<NSF_ID>000166343</NSF_ID>
<StartDate>09/12/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Notre Dame</Name>
<CityName>NOTRE DAME</CityName>
<ZipCode>465565708</ZipCode>
<PhoneNumber>5746317432</PhoneNumber>
<StreetAddress>940 Grace Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>824910376</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NOTRE DAME DU LAC</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>048994727</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Notre Dame]]></Name>
<CityName>NOTRE DAME</CityName>
<StateCode>IN</StateCode>
<ZipCode>465565612</ZipCode>
<StreetAddress><![CDATA[940 Grace Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~166666</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The project aimed to improve system reliability without sacrificing quality of service for real-time embedded systems, particularly those implemented on multicore platforms. Both permanent failures and transient faults are considered in this project. Three main research tasks were undertaken during the course of the project and the associated most significant findings/outcomes are summarized below.</p> <p>&nbsp;</p> <p><strong>Task 1: </strong>Development of a reliability modeling and analysis tool that considers all major failure mechanisms and supports tradeoffs between accuracy and computation demands. Given two thermal profiles, we were able to derive efficient sufficient conditions to determine the thermal profile that maximizes lifetime reliability. Based on these conditions, we demonstrated that different task assignment and scheduling methods can lead to vastly different system wear states and consequently showed the importance of performing online resource management to improve system reliability.</p> <p>Since system-level mean-time-to-failure (MTTF) can be computationally expensive to estimate via Monte Carlo simulation, we introduced a method to determine the most appropriate number of Monte Carlo iterations for reducing analysis overhead while ensuring the established MTTF is sufficiently accurate. We also developed a rapid analytical approach to calculate the MTTF due to transient faults for a processor executing a given workload, and show that the MTTF expression indeed correctly represents MTTF. Based on our study, we conclude that without a uniform metric, it is difficult to gauge how tradeoffs should be made to achieve overall high system reliability. Our work has lead to an MTTF expression to evaluate soft-error reliability, which has never been done before.</p> <p>&nbsp;</p> <p><strong>Task 2:</strong> Design of an adaptive runtime resource management framework for reliability-driven assignment and scheduling of real-time tasks. Several new runtime resource management techniques have been introduced in this project for handling different types of systems and/or satisfying different objectives. We designed a global model predictive controller-based approach based on our observation that temperature can be reduced by maximizing utilization (see MPC-Image). This technique is extremely effective at minimizing the peak temperature of multicore systems under soft real-time constraints. A minimum improvement in lifetime reliability of 43% was observed using our approach. We also proposed an optimization framework to maximize the system availability for a system that must satisfy a given throughput constraint and suffer from both permanent and transient faults. Simulation results show that our algorithms can achieve up to 85% improvement in system availability compared to existing techniques.</p> <p>In the later stage of our project, we focused on studying reliability of real hardware platforms. In a hardware platform with heterogeneous cores, we noted that the cores are grouped into different clusters, e.g., the high-performance (HP) cores in a HP cluster and the low-power (LP) cores in a LP cluster. The execution model allows cores in different clusters to adopt different power management states, but cores in each cluster must run at the same core frequency. We observed that only when the workload is light and the core frequency is low do LP cores consume less power (see HP-LP-Image). Based on the observations, we developed an on-line heuristic to maximize soft-error reliability while satisfying a lifetime reliability constraint. Experimental results from both a hardware platform and a simulator show that the proposed algorithm reduces the probability of faults by at least 30% compared to existing approaches while satisfying the same lifetime reliability constraints. Considering improving soft-error reliability due to transient faults in the presence of permanent faults, we observed that reserving computational resources and only allocating recoveries to failed tasks is a more effective way to improve soft-error reliability. We then developed a novel dynamic recovery strategy together with an effective online scheduling algorithm that guarantees to recover more tasks than existing approaches. Simulation results show that the proposed framework reduces failure probability by at least 8% and by 73% on average compared to existing approaches.</p> <p>&nbsp;</p> <p><strong>Task 3:</strong> Implementation of an infrastructure for runtime monitoring of integrated circuit wear state to support long-term reliability model validation and in-field adaptation. A testbed consisting of off-the-shelf embedded processors confirmed that it is possible to induce timing violations and observe wear over time without additional circuitry, changes to the underlying hardware, or difficult-to-obtain design data such as threshold voltage or critical paths. Our methodology can in fact be implemented entirely in user space, making it possible for end users to monitor the wear progression on their systems in real time and to proactively avoid a voltage, frequency, and temperature combination that may result in timing violations. Such an online monitoring tool may be leveraged to predict the remaining lifetime of a system.</p> <p>The techniques developed in this project can support the design and development of more reliable and/or less expensive electronic devices, enabling integrated circuits used in processors with strict reliability and performance requirements, e.g., in automotive, multimedia, and health care applications.&nbsp;</p><br> <p>            Last Modified: 10/31/2017<br>      Modified by: Xiaobo&nbsp;S&nbsp;Hu</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2017/1319904/1319904_10278928_1509506031656_MPC-Image--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1319904/1319904_10278928_1509506031656_MPC-Image--rgov-800width.jpg" title="MPC-Image"><img src="/por/images/Reports/POR/2017/1319904/1319904_10278928_1509506031656_MPC-Image--rgov-66x44.jpg" alt="MPC-Image"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Overall structure of our proposed resource utilization controller (RUC).  RUC consists of two main components: a global utilization controller (GUC) and a sampling window controller (SWC). GUC reduces the peak temperature while SWC minimizes wear due to thermal cycling.</div> <div class="imageCredit">IEEE Transactions on VLSI Systems</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Xiaobo&nbsp;S&nbsp;Hu</div> <div class="imageTitle">MPC-Image</div> </div> </li> <li> <a href="/por/images/Reports/POR/2017/1319904/1319904_10278928_1509506270465_HP-LP-Image--rgov-214x142.jpg" original="/por/images/Reports/POR/2017/1319904/1319904_10278928_1509506270465_HP-LP-Image--rgov-800width.jpg" title="HP-LP-Image"><img src="/por/images/Reports/POR/2017/1319904/1319904_10278928_1509506270465_HP-LP-Image--rgov-66x44.jpg" alt="HP-LP-Image"></a> <div class="imageCaptionContainer"> <div class="imageCaption">The measured temperature profiles representing the power of an Nvidia?s TK1 board. They show the steady-state temperature of a HP core and a LP core under different utilization and frequency levels. All other cores are powered off.</div> <div class="imageCredit">Proceedings of Design And Test in Europe, 2017.</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Xiaobo&nbsp;S&nbsp;Hu</div> <div class="imageTitle">HP-LP-Image</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The project aimed to improve system reliability without sacrificing quality of service for real-time embedded systems, particularly those implemented on multicore platforms. Both permanent failures and transient faults are considered in this project. Three main research tasks were undertaken during the course of the project and the associated most significant findings/outcomes are summarized below.     Task 1: Development of a reliability modeling and analysis tool that considers all major failure mechanisms and supports tradeoffs between accuracy and computation demands. Given two thermal profiles, we were able to derive efficient sufficient conditions to determine the thermal profile that maximizes lifetime reliability. Based on these conditions, we demonstrated that different task assignment and scheduling methods can lead to vastly different system wear states and consequently showed the importance of performing online resource management to improve system reliability.  Since system-level mean-time-to-failure (MTTF) can be computationally expensive to estimate via Monte Carlo simulation, we introduced a method to determine the most appropriate number of Monte Carlo iterations for reducing analysis overhead while ensuring the established MTTF is sufficiently accurate. We also developed a rapid analytical approach to calculate the MTTF due to transient faults for a processor executing a given workload, and show that the MTTF expression indeed correctly represents MTTF. Based on our study, we conclude that without a uniform metric, it is difficult to gauge how tradeoffs should be made to achieve overall high system reliability. Our work has lead to an MTTF expression to evaluate soft-error reliability, which has never been done before.     Task 2: Design of an adaptive runtime resource management framework for reliability-driven assignment and scheduling of real-time tasks. Several new runtime resource management techniques have been introduced in this project for handling different types of systems and/or satisfying different objectives. We designed a global model predictive controller-based approach based on our observation that temperature can be reduced by maximizing utilization (see MPC-Image). This technique is extremely effective at minimizing the peak temperature of multicore systems under soft real-time constraints. A minimum improvement in lifetime reliability of 43% was observed using our approach. We also proposed an optimization framework to maximize the system availability for a system that must satisfy a given throughput constraint and suffer from both permanent and transient faults. Simulation results show that our algorithms can achieve up to 85% improvement in system availability compared to existing techniques.  In the later stage of our project, we focused on studying reliability of real hardware platforms. In a hardware platform with heterogeneous cores, we noted that the cores are grouped into different clusters, e.g., the high-performance (HP) cores in a HP cluster and the low-power (LP) cores in a LP cluster. The execution model allows cores in different clusters to adopt different power management states, but cores in each cluster must run at the same core frequency. We observed that only when the workload is light and the core frequency is low do LP cores consume less power (see HP-LP-Image). Based on the observations, we developed an on-line heuristic to maximize soft-error reliability while satisfying a lifetime reliability constraint. Experimental results from both a hardware platform and a simulator show that the proposed algorithm reduces the probability of faults by at least 30% compared to existing approaches while satisfying the same lifetime reliability constraints. Considering improving soft-error reliability due to transient faults in the presence of permanent faults, we observed that reserving computational resources and only allocating recoveries to failed tasks is a more effective way to improve soft-error reliability. We then developed a novel dynamic recovery strategy together with an effective online scheduling algorithm that guarantees to recover more tasks than existing approaches. Simulation results show that the proposed framework reduces failure probability by at least 8% and by 73% on average compared to existing approaches.     Task 3: Implementation of an infrastructure for runtime monitoring of integrated circuit wear state to support long-term reliability model validation and in-field adaptation. A testbed consisting of off-the-shelf embedded processors confirmed that it is possible to induce timing violations and observe wear over time without additional circuitry, changes to the underlying hardware, or difficult-to-obtain design data such as threshold voltage or critical paths. Our methodology can in fact be implemented entirely in user space, making it possible for end users to monitor the wear progression on their systems in real time and to proactively avoid a voltage, frequency, and temperature combination that may result in timing violations. Such an online monitoring tool may be leveraged to predict the remaining lifetime of a system.  The techniques developed in this project can support the design and development of more reliable and/or less expensive electronic devices, enabling integrated circuits used in processors with strict reliability and performance requirements, e.g., in automotive, multimedia, and health care applications.        Last Modified: 10/31/2017       Submitted by: Xiaobo S Hu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

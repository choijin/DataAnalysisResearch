<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CPS: Frontiers: Collaborative Research: ROSELINE: Enabling Robust, Secure and Efficient Knowledge of Time Across the System Stack</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/15/2014</AwardEffectiveDate>
<AwardExpirationDate>05/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>1050000.00</AwardTotalIntnAmount>
<AwardAmount>1050000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>David Corman</SignBlockName>
<PO_EMAI>dcorman@nsf.gov</PO_EMAI>
<PO_PHON>7032928754</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Accurate and reliable knowledge of time is fundamental to cyber-physical systems for sensing, control, performance, and energy efficient integration of computing and communications. This statement underlies the proposal. Emerging CPS applications depend on precise knowledge of time to infer location and control communication. There is a diversity of semantics used to describe time, and quality of time varies as we move up and down the system stack. System designs tend to overcompensate for these uncertainties and the result is systems that may be over designed, inefficient, and fragile.&lt;br/&gt;&lt;br/&gt;The intellectual merit derives from the new and fundamental concept of time and the holistic measure of quality of time (QoT) that captures metrics including resolution, accuracy, and stability. The proposal builds a system stack ("ROSELINE") that enables new ways for clock hardware, operating system, network services, and applications to learn, maintain and exchange information about time, influence component behavior, and robustly adapt to dynamic QoT requirements, as well as to benign and adversarial changes in operating conditions. Application areas that will benefit from Quality of Time will include: smart grad, networked and coordinated control of aerospace systems, underwater sensing, and industrial automation.&lt;br/&gt;&lt;br/&gt;The broader impact of the proposal is due to the foundational nature of the work which builds a robust and tunable quality of time that can be applied across a broad spectrum of applications that pervade modern life. The proposal will also provide valuable opportunities to integrate research and education in graduate, undergraduate, and K-12 classrooms. There will be extensive outreach through publications, open sourcing of software, and participation in activities such as the Los Angeles Computing Circle for pre-college students.</AbstractNarration>
<MinAmdLetterDate>06/13/2014</MinAmdLetterDate>
<MaxAmdLetterDate>09/19/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1329644</AwardID>
<Investigator>
<FirstName>Ragunathan</FirstName>
<LastName>Rajkumar</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ragunathan Rajkumar</PI_FULL_NAME>
<EmailAddress>rajkumar@cmu.edu</EmailAddress>
<PI_PHON>4123725732</PI_PHON>
<NSF_ID>000241708</NSF_ID>
<StartDate>06/13/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Anthony</FirstName>
<LastName>Rowe</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Anthony Rowe</PI_FULL_NAME>
<EmailAddress>agr@ece.cmu.edu</EmailAddress>
<PI_PHON>4122684856</PI_PHON>
<NSF_ID>000576177</NSF_ID>
<StartDate>06/13/2014</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie Mellon University]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133815</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7918</Code>
<Text>CPS-Cyber-Physical Systems</Text>
</ProgramElement>
<ProgramReference>
<Code>7918</Code>
<Text>CYBER-PHYSICAL SYSTEMS (CPS)</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~420000</FUND_OBLG>
<FUND_OBLG>2016~630000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Modern operating systems provide limited abstractions for specifying task-timing requirements. The most sophisticated examples are found in Real-Time Operating Systems where tasks are represented by periods, worst-case execution times and deadlines. These abstractions are currently disconnected from the underlying details of the clock. &nbsp;Many developers are unaware of the OS tick granularity and the impact that this might have on overall system performance. &nbsp;Smaller OS tick intervals tend to require higher frequency clocks that in turn can increase scheduler overhead and consume additional energy. &nbsp;We show how OS abstractions could be extended from the traditional real-time task model to include tolerances associated with timing requirements along with hooks for responding to potentially dynamic Quality-of-Time (QoT) parameters. &nbsp;QoT captures metrics such as resolution, accuracy, and stability of a clock. Building on this notion we propose an architecture in which the local perception of time is a controllable operating system primitive with observable uncertainty, and where time synchronization balances applications&rsquo; timing demands with system resources such as energy and bandwidth.</p> <p>&nbsp;</p> <p>Our architecture features an expressive application programming interface that is centered around the abstraction of a timeline&ndash; a virtual temporal coordinate frame that is defined by an application to provide its components with a shared sense of time, with a desired accuracy and resolution. The timeline abstraction enables developers to easily write applications whose activities are choreographed across time and space.&nbsp; Through the course of the project, we developed a number of prototype systems to study how these abstractions can be used to simplify the design of timing critical applications like smart grid, localization and mobile devices.</p><br> <p>            Last Modified: 08/04/2020<br>      Modified by: Anthony&nbsp;Rowe</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Modern operating systems provide limited abstractions for specifying task-timing requirements. The most sophisticated examples are found in Real-Time Operating Systems where tasks are represented by periods, worst-case execution times and deadlines. These abstractions are currently disconnected from the underlying details of the clock.  Many developers are unaware of the OS tick granularity and the impact that this might have on overall system performance.  Smaller OS tick intervals tend to require higher frequency clocks that in turn can increase scheduler overhead and consume additional energy.  We show how OS abstractions could be extended from the traditional real-time task model to include tolerances associated with timing requirements along with hooks for responding to potentially dynamic Quality-of-Time (QoT) parameters.  QoT captures metrics such as resolution, accuracy, and stability of a clock. Building on this notion we propose an architecture in which the local perception of time is a controllable operating system primitive with observable uncertainty, and where time synchronization balances applicationsâ€™ timing demands with system resources such as energy and bandwidth.     Our architecture features an expressive application programming interface that is centered around the abstraction of a timeline&ndash; a virtual temporal coordinate frame that is defined by an application to provide its components with a shared sense of time, with a desired accuracy and resolution. The timeline abstraction enables developers to easily write applications whose activities are choreographed across time and space.  Through the course of the project, we developed a number of prototype systems to study how these abstractions can be used to simplify the design of timing critical applications like smart grid, localization and mobile devices.       Last Modified: 08/04/2020       Submitted by: Anthony Rowe]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

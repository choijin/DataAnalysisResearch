<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Eager: Optimal Length Integer Resolution Refutation in UTVPI Constraints</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2013</AwardEffectiveDate>
<AwardExpirationDate>06/30/2016</AwardExpirationDate>
<AwardTotalIntnAmount>65665.00</AwardTotalIntnAmount>
<AwardAmount>73665</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Constraint solving is an integral part of program verification, in &lt;br/&gt;general and abstract interpretation in particular. This proposal explores&lt;br/&gt;some fundamental issues in integer feasibility checking and certification for &lt;br/&gt;a specialized class of constraints called Unit Two Variable Per Inequality &lt;br/&gt;(UTVPI) constraints. This approach is based on fundamentally new insights into &lt;br/&gt;the problem of integer feasibility checking, and will provide actual certificates &lt;br/&gt;of infeasibility. The ability to provide positive and negative certificates &lt;br/&gt;will impact program verification, and enhance the reliability of software.&lt;br/&gt;&lt;br/&gt;This project uses a proof system called FMR (Fourier-Motzkin with Rounding), which &lt;br/&gt;is a sound and complete system for establishing the lattice point infeasibility of &lt;br/&gt;a UTVPI system. This work will isolate the smallest-sized proof of infeasibility &lt;br/&gt;in the FMR proof system with an appropriately defined notion of size, and will explore &lt;br/&gt;the problem of certification by trying to identify the form of certificates and &lt;br/&gt;optimize the size of such certificates.</AbstractNarration>
<MinAmdLetterDate>06/27/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/04/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1305054</AwardID>
<Investigator>
<FirstName>K</FirstName>
<LastName>Subramani</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>K Subramani</PI_FULL_NAME>
<EmailAddress>ksmani@csee.wvu.edu</EmailAddress>
<PI_PHON>3042930405</PI_PHON>
<NSF_ID>000249390</NSF_ID>
<StartDate>06/27/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>West Virginia University Research Corporation</Name>
<CityName>Morgantown</CityName>
<ZipCode>265066845</ZipCode>
<PhoneNumber>3042933998</PhoneNumber>
<StreetAddress>P.O. Box 6845</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>West Virginia</StateName>
<StateCode>WV</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WV01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>191510239</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WEST VIRGINIA UNIVERSITY RESEARCH CORPORATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[West Virginia University]]></Name>
<CityName>Morgantown</CityName>
<StateCode>WV</StateCode>
<ZipCode>265066845</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>West Virginia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WV01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>8206</Code>
<Text>Formal Methods and Verification</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~65665</FUND_OBLG>
<FUND_OBLG>2015~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;</p> <p>&nbsp;In this proposal, we investigated several issues concerned with optimal length refutability of linear and integer feasibility in UTVPI constraints. Briefly, a UTVPI constraint is a constraint of the form ax+b y &lt;=c, where a, b belong to the set {0,1,-1}. These constraints arise in a number of applications, including but not limited to abstract interpretation, operations research and array bounds checking.</p> <p>&nbsp; &nbsp; As part of our investigations, we designed and developed combinatorial, certifying algorithms for both the linear and integer feasibility problems UTVPI constraints. These algorithms have been implemented and profiled against an existing algorithm for linear and integer feasibility in UTVPI constraints. Our results appear promising in that in most cases, our algorithms are superior to the current state of the art.</p> <p>&nbsp; &nbsp; Secondly, we showed that in case of linear infeasibility the optmal length tree-like refutations can be determined in polynomial time. Likewise, the problem fo checking if the system has a read-once refutation is also polynomial time. The latter problem was achieved through a reduction to weighted b-matching.</p> <p>We also showed that the problem of checking if a UTVPI constraint system has a read-once refutation of integer infeasibility is NP-complete.</p> <p>&nbsp;Finally, we investigated the computational complexity of Not-All-Equal refuations in 2CNF formulas and designed a polynomial time algorithm for the same.</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 07/07/2016<br>      Modified by: K&nbsp;Subramani</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[     In this proposal, we investigated several issues concerned with optimal length refutability of linear and integer feasibility in UTVPI constraints. Briefly, a UTVPI constraint is a constraint of the form ax+b y &lt;=c, where a, b belong to the set {0,1,-1}. These constraints arise in a number of applications, including but not limited to abstract interpretation, operations research and array bounds checking.      As part of our investigations, we designed and developed combinatorial, certifying algorithms for both the linear and integer feasibility problems UTVPI constraints. These algorithms have been implemented and profiled against an existing algorithm for linear and integer feasibility in UTVPI constraints. Our results appear promising in that in most cases, our algorithms are superior to the current state of the art.      Secondly, we showed that in case of linear infeasibility the optmal length tree-like refutations can be determined in polynomial time. Likewise, the problem fo checking if the system has a read-once refutation is also polynomial time. The latter problem was achieved through a reduction to weighted b-matching.  We also showed that the problem of checking if a UTVPI constraint system has a read-once refutation of integer infeasibility is NP-complete.   Finally, we investigated the computational complexity of Not-All-Equal refuations in 2CNF formulas and designed a polynomial time algorithm for the same.             Last Modified: 07/07/2016       Submitted by: K Subramani]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

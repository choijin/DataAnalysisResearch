<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>I-Corps:  Compiler Technology for Modern Many-core Architectures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2013</AwardEffectiveDate>
<AwardExpirationDate>06/30/2014</AwardExpirationDate>
<AwardTotalIntnAmount>50000.00</AwardTotalIntnAmount>
<AwardAmount>50000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rathindra DasGupta</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project focuses on the development of a complier that automatically performs correct and efficient memory management. The compiler automatically manages the data of the application on a multi-core architecture that does not provide any memory management in hardware. Such architectures are scalable (i.e., processors with hundreds and thousands of cores can be designed), and are more power-efficient.&lt;br/&gt;This compiler does this through application analysis. It analyzes each kind of code/data (i.e., code, stack data, heap data and global variables) and inserts data management instructions in the application, so that the application can execute correctly and efficiently on many-core processors that will not have any support for memory management in hardware. &lt;br/&gt;&lt;br/&gt;This compiler may be needed by system development companies that are developing relatively high-performance computing systems, for example, 3D scanner, high capacity 3D printers, TVs, audio video processing in cars etc. All these companies may want to use the processor with best performance and lowest power. However, top of the line processors will soon not have support for memory management in hardware, and the existing applications will not compile them. This compiler may have the ability to enable them to utilize the power and performance of the latest many-core processor for their systems. To the end user, they receive a power-efficient product with higher performance. Hand-held devices thus developed, while providing improved performance, will be lighter and will require fewer recharges.</AbstractNarration>
<MinAmdLetterDate>06/25/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/25/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1342156</AwardID>
<Investigator>
<FirstName>Aviral</FirstName>
<LastName>Shrivastava</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Aviral Shrivastava</PI_FULL_NAME>
<EmailAddress>aviral.shrivastava@asu.edu</EmailAddress>
<PI_PHON>4807276509</PI_PHON>
<NSF_ID>000490268</NSF_ID>
<StartDate>06/25/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Arizona State University</Name>
<CityName>TEMPE</CityName>
<ZipCode>852816011</ZipCode>
<PhoneNumber>4809655479</PhoneNumber>
<StreetAddress>ORSPA</StreetAddress>
<StreetAddress2><![CDATA[660 South Mill Avenue, Suite 310]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<StateCode>AZ</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>AZ09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>943360412</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>ARIZONA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>806345658</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Arizona State University]]></Name>
<CityName>Tempe</CityName>
<StateCode>AZ</StateCode>
<ZipCode>852876011</ZipCode>
<StreetAddress><![CDATA[PO BOX 876011]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>AZ09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8023</Code>
<Text>I-Corps</Text>
</ProgramElement>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~50000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Intellectual Merit: As the number of cores scale, scaling the memory architecture is a major challenge. Data and communication management functionality is expected to migrate from hardware (in existing technology) to software domain, as we manufacture processors with hundreds and thousands of cores. We have developed compiler technology that will enable simple multi-core processors without memory management in hardware to execute traditional applications that are will be (and are being) developed for processors with memory management in hardware.</p> <p>&nbsp;</p> <p>The goals of I-Corps proposal were to perform</p> <p>i) the marketing research required for the commercialization of the developed product, and</p> <p>ii) to translate our existing technology into a commercially viable compiler solution.</p> <p>&nbsp;</p> <p>Outcomes: During the project we talked to a lot of processor design companies, including, Intel, AMD, Oracle, Freescale, ARM, Qualcomm, Texas Instruments etc. and tried to figure out the challenges they are facing in scaling the processors. We have received mixed feedback. While some companies are not planning to scale as much, some other believe that traditional architectures will scale. However, some forward looking companies do realize the scaling challenge and were very interested in our approach. In fact some of the companies are making the kind of processors that we envision, and right now their plan is to generate code for the machine by themselves. One such company has asked us to develop a generic compiler for them as a prototype. Our proof-of-concept compiler was in GCC for the Cell processor. Since this is very specific, the company wanted us to develop the prototype compiler in LLVM for a SPM based processor modeled in gem5. This will be easily portable and usable. This is our plan after the I-Corps grant. We plan to apply for the AIR-TT grant to fund the prototype development.</p> <p>&nbsp;</p> <p>One of the major concerns in our technology is that, our solution is interesting only for companies that are planning to design many (more than 100s) of cores in a processor. Since there are not several companies in this domain, the market for our technology remains narrow. What we found out though, was that such processor will be very valuable as processor for real-time systems. This is because real-time systems want the execution to be time-predictable. Scratchpad memories make the execution time predictable, since there are no guesses about whether the data will hit the cache or not &ndash; it always hits the SPM. Therefore our next step is also to interview processor and compiler design companies in the real-time systems domain, to see, if there is a market for our product.</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/06/2015<br>      Modified by: Aviral&nbsp;Shrivastava</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2015/1342156/1342156_10254304_1433551586844_SMM-programming-model--rgov-214x142.jpg" original="/por/images/Reports/POR/2015/1342156/1342156_10254304_1433551586844_SMM-programming-model--rgov-800width.jpg" title="Software Managed Manycore processor"><img src="/por/images/Reports/POR/2015/1342156/1342156_10254304_1433551586844_SMM-programming-model--rgov-66x44.jpg" alt="Software Managed Manycore processor"></a> <div class="imageCaptionContainer"> <div class="imageCaption">When we scale the processors to manycores, we will have to fundamentally change the way we design them. They can no lon...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intellectual Merit: As the number of cores scale, scaling the memory architecture is a major challenge. Data and communication management functionality is expected to migrate from hardware (in existing technology) to software domain, as we manufacture processors with hundreds and thousands of cores. We have developed compiler technology that will enable simple multi-core processors without memory management in hardware to execute traditional applications that are will be (and are being) developed for processors with memory management in hardware.     The goals of I-Corps proposal were to perform  i) the marketing research required for the commercialization of the developed product, and  ii) to translate our existing technology into a commercially viable compiler solution.     Outcomes: During the project we talked to a lot of processor design companies, including, Intel, AMD, Oracle, Freescale, ARM, Qualcomm, Texas Instruments etc. and tried to figure out the challenges they are facing in scaling the processors. We have received mixed feedback. While some companies are not planning to scale as much, some other believe that traditional architectures will scale. However, some forward looking companies do realize the scaling challenge and were very interested in our approach. In fact some of the companies are making the kind of processors that we envision, and right now their plan is to generate code for the machine by themselves. One such company has asked us to develop a generic compiler for them as a prototype. Our proof-of-concept compiler was in GCC for the Cell processor. Since this is very specific, the company wanted us to develop the prototype compiler in LLVM for a SPM based processor modeled in gem5. This will be easily portable and usable. This is our plan after the I-Corps grant. We plan to apply for the AIR-TT grant to fund the prototype development.     One of the major concerns in our technology is that, our solution is interesting only for companies that are planning to design many (more than 100s) of cores in a processor. Since there are not several companies in this domain, the market for our technology remains narrow. What we found out though, was that such processor will be very valuable as processor for real-time systems. This is because real-time systems want the execution to be time-predictable. Scratchpad memories make the execution time predictable, since there are no guesses about whether the data will hit the cache or not &ndash; it always hits the SPM. Therefore our next step is also to interview processor and compiler design companies in the real-time systems domain, to see, if there is a market for our product.          Last Modified: 06/06/2015       Submitted by: Aviral Shrivastava]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Medium: Collaborative: Automated Formal Analysis of Security Protocols with Private Coin Tosses</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>244810.00</AwardTotalIntnAmount>
<AwardAmount>244810</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computerized systems are present in various aspects of modern society. These systems are used to access and share confidential information. Such sharing is achieved through cryptographic protocols which often employ randomization to introduce unpredictability in their behavior to achieve critical security objectives and make it difficult for the malicious adversaries to infer the underlying execution of the participants. It is imperative to ensure that these protocols meet their security objectives such as confidentiality, privacy, fair exchange, anonymity and availability, as serious flaws have often been discovered in widely used cryptographic protocols. Given the ubiquitous role played by these security protocols and the socio-economic-political consequences that incorrect designs of cryptographic protocols may have, reasoning about their correctness is an important social imperative. This task is challenging because of the presence of malicious adversaries on the Internet as well as the subtle interaction between the concurrent nature of Internet and the various features such as cryptography and randomization used by the protocols. Hence, the development of automated techniques to verify their correctness is needed to manage this complexity, and this is the focus of this project.&lt;br/&gt; &lt;br/&gt;The presence of randomization introduces subtle challenges in verifying the correctness of security protocols. In particular, when reasoning about adversarial behavior, one must only consider those behaviors in which the scheduling of actions of the adversary is independent of the private random choices of the individual participants.  This project aims to develop scalable techniques and tools that faithfully, and automatically verify randomized cryptographic protocols by considering only attacks (by an adversary) that are oblivious of the private data and private coin tosses of protocol participants.  There are primarily three research tasks identified in this project. First, theoretical completeness results will be established that will reduce the general security problem for unbounded protocol sessions, session identifiers, and messages to the finite bounded cases. The other two tasks will be devoted to making the finite bounded case more amenable to automation. In the second research task, we will develop automated techniques to verify safety properties of protocols based on new symmetry reduction techniques using SMT solvers. The third research task will develop automated techniques for verifying indistinguishability properties of protocols. We will investigate symmetry reduction techniques using SMT solvers for this task as well.</AbstractNarration>
<MinAmdLetterDate>08/16/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/16/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1314338</AwardID>
<Investigator>
<FirstName>Rohit</FirstName>
<LastName>Chadha</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rohit Chadha</PI_FULL_NAME>
<EmailAddress>chadhar@missouri.edu</EmailAddress>
<PI_PHON>5738824899</PI_PHON>
<NSF_ID>000629410</NSF_ID>
<StartDate>08/16/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Missouri-Columbia</Name>
<CityName>COLUMBIA</CityName>
<ZipCode>652110001</ZipCode>
<PhoneNumber>5738827560</PhoneNumber>
<StreetAddress>115 Business Loop 70 W</StreetAddress>
<StreetAddress2><![CDATA[Mizzou North, Room 501]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Missouri</StateName>
<StateCode>MO</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MO04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>153890272</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MISSOURI SYSTEM</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>006326904</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Missouri-Columbia]]></Name>
<CityName>Columbia</CityName>
<StateCode>MO</StateCode>
<ZipCode>652112060</ZipCode>
<StreetAddress><![CDATA[201 Engineering Building West]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Missouri</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MO04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~244810</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Computer security protocols are used&nbsp;in computerized systems to achieve data privacy and confidentiality of critical information. In order to achieve these security objectives, they often employ randomization to introduce unpredictability in their behavior, thus making it more difficult for malicious entities to infer the underlying private information. As a consequence of their intricate design and subtle interaction between the concurrent nature of Internet and cryptography and randomization used by the protocols, serious flaws have often been discovered in widely used cryptographic protocols. The aim of this project was to develop techniques to automatically reason about and verify correctness of such protocols.&nbsp; The presence of randomization makes the task of verifying correctness of protocols challenging. In particular, when reasoning about adversarial behavior, one must only consider those behaviors in which the scheduling of actions of the adversary is independent of the private random choices of the individual participants.</p> <p>The primary outcomes of the project&nbsp;were the development of&nbsp;theoretical&nbsp;techniques and software tools that faithfully, and automatically verify randomized security&nbsp;protocols by considering only attacks (by an adversary) that are oblivious of the private data and private coin tosses of protocol participants. As part of the project, graduate students were trained in cybersecurity, formal methods and logic.</p> <p><strong>Intellectual Merit:&nbsp;</strong>We investigated both theoretical foundations and practical algorithms for verifying the correctness of randomized security protocols.</p> <p>Our theoretical results allowed us to make the analysis to automation. In particular, we established sufficient conditions such that correctness of&nbsp;randomized protocols for a bounded number of sessions can be proved by only considering messages of a bounded size. The complexity of analysis of bounded number of&nbsp;protocol sessions was established as a consequence of these results. We also showed that under sufficient conditions, correctness of bounded number of sessions implied correctness of unbounded number of sessions if the protocol messages uniquely identify the session they belong to. These conditions also allow us to conclude that protocols proved correct in isolation continue to achieve their security goals when run concurrently.&nbsp;&nbsp;</p> <p>The theoretical results thus established that the verification of randomized security protocols can be carried out by showing no attacks existed in the finite case. Practical algorithms were then designed to efficiently search for attacks in the finite case. These algorithms were implemented in software and used to analyze published security protocols. The software was&nbsp;used to analyze several anonymity and Internet voting protocols that were out-of-scope of existing tools. The software was able to discover previously unknown flaws in Internet voting protocols published in literature.&nbsp;</p> <p><strong>Broader Impacts:&nbsp;</strong>The project significantly advanced the state-of-art in the automated verification of security protocols by providing the theoretical underpinnings of analysis of randomized security protocols and the application of these ideas have been validated by experimental evidence. Two software tools have been developed as part of this project and are publicly available:</p> <ol> <li>Stochastic Protocol Analyzer (SPAN): The software verifies security objectives of security protocols that can be expressed as safety and indistinguishability&nbsp;properties. The tool is available for download at&nbsp;https://github.com/bauer-matthews/SPAN.</li> <li>Moped-QLeak: The software computes the information leaked by randomized programs. The tool is available for download at&nbsp;https://github.com/umangm/mopedqleak.</li> </ol> <p>The PI mentored three graduate students (two Masters, one&nbsp;PhD), including a female Masters student, at the&nbsp;University of Missouri and co-mentored another graduate student (PhD) at the University of Illinois.&nbsp; The PI introduced two new courses at the University of Missouri in the area of&nbsp;cybersecurity and the research outcomes of the project were integrated in these courses. The PI also actively promoted formal verification research in the Midwest region by organizing the Midwest Verification Day in 2013 at the University of Missouri campus. The Midwest Verification Day is an annual meeting where faculty and students at mid-western universities gather to present work-in-progress and research overview talks in the area of formal verification.</p><br> <p>            Last Modified: 01/30/2019<br>      Modified by: Rohit&nbsp;Chadha</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Computer security protocols are used in computerized systems to achieve data privacy and confidentiality of critical information. In order to achieve these security objectives, they often employ randomization to introduce unpredictability in their behavior, thus making it more difficult for malicious entities to infer the underlying private information. As a consequence of their intricate design and subtle interaction between the concurrent nature of Internet and cryptography and randomization used by the protocols, serious flaws have often been discovered in widely used cryptographic protocols. The aim of this project was to develop techniques to automatically reason about and verify correctness of such protocols.  The presence of randomization makes the task of verifying correctness of protocols challenging. In particular, when reasoning about adversarial behavior, one must only consider those behaviors in which the scheduling of actions of the adversary is independent of the private random choices of the individual participants.  The primary outcomes of the project were the development of theoretical techniques and software tools that faithfully, and automatically verify randomized security protocols by considering only attacks (by an adversary) that are oblivious of the private data and private coin tosses of protocol participants. As part of the project, graduate students were trained in cybersecurity, formal methods and logic.  Intellectual Merit: We investigated both theoretical foundations and practical algorithms for verifying the correctness of randomized security protocols.  Our theoretical results allowed us to make the analysis to automation. In particular, we established sufficient conditions such that correctness of randomized protocols for a bounded number of sessions can be proved by only considering messages of a bounded size. The complexity of analysis of bounded number of protocol sessions was established as a consequence of these results. We also showed that under sufficient conditions, correctness of bounded number of sessions implied correctness of unbounded number of sessions if the protocol messages uniquely identify the session they belong to. These conditions also allow us to conclude that protocols proved correct in isolation continue to achieve their security goals when run concurrently.    The theoretical results thus established that the verification of randomized security protocols can be carried out by showing no attacks existed in the finite case. Practical algorithms were then designed to efficiently search for attacks in the finite case. These algorithms were implemented in software and used to analyze published security protocols. The software was used to analyze several anonymity and Internet voting protocols that were out-of-scope of existing tools. The software was able to discover previously unknown flaws in Internet voting protocols published in literature.   Broader Impacts: The project significantly advanced the state-of-art in the automated verification of security protocols by providing the theoretical underpinnings of analysis of randomized security protocols and the application of these ideas have been validated by experimental evidence. Two software tools have been developed as part of this project and are publicly available:  Stochastic Protocol Analyzer (SPAN): The software verifies security objectives of security protocols that can be expressed as safety and indistinguishability properties. The tool is available for download at https://github.com/bauer-matthews/SPAN. Moped-QLeak: The software computes the information leaked by randomized programs. The tool is available for download at https://github.com/umangm/mopedqleak.   The PI mentored three graduate students (two Masters, one PhD), including a female Masters student, at the University of Missouri and co-mentored another graduate student (PhD) at the University of Illinois.  The PI introduced two new courses at the University of Missouri in the area of cybersecurity and the research outcomes of the project were integrated in these courses. The PI also actively promoted formal verification research in the Midwest region by organizing the Midwest Verification Day in 2013 at the University of Missouri campus. The Midwest Verification Day is an annual meeting where faculty and students at mid-western universities gather to present work-in-progress and research overview talks in the area of formal verification.       Last Modified: 01/30/2019       Submitted by: Rohit Chadha]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

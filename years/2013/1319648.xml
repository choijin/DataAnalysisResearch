<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF:  SMALL:  Fundamental Data Structures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>515859.00</AwardTotalIntnAmount>
<AwardAmount>515859</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy Kimbrel</SignBlockName>
<PO_EMAI>tkimbrel@nsf.gov</PO_EMAI>
<PO_PHON>7032927924</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The need to efficiently store and access data is central to modern computing.  Speeding up the actual performance of fundamental problems is not limited to better experience for users; it is also about using computer resources more efficiently. Faster algorithms and data structures mean less energy consumption, and less physical computing resources needed. This project will investigate the discovery of provably best data structures for several fundamental problems.  The dictionary, priority queue and packed memory array are three abstract data structures considered in this project.  The dictionary supports the efficient insertion, deletion, and search of ordered data. The priority queue supports insertion and the removal of the minimum element. The packed-memory array keeps ordered data in sorted order in a limited amount of space.&lt;br/&gt;&lt;br/&gt;For binary search trees (BSTs), this research will make substantial progress on many fundamental problems that include finding a dynamically optimal search tree,  proving better explicit upper and lower bounds on BSTs, inventing  methods to combine BSTs,  and transforming amortized BSTs into ones with good worst-case runtimes. In the case of heaps, the project will analyze performance bounds for decrease-key operations in natural models, search for a geometric view of heaps, investigate dynamic optimality, and improve the analysis of pairing heaps. Cache-oblivious heaps with close to optimal decrease-key operations, and efficient packed memory array (PMA) structure are two fundamental building blocks of many cache-oblivious algorithms. This project will develop PMAs that perform well on sequences with certain types of order, and construct a randomized structure whose runtime beats the lower bound for deterministic structures. The project will also examine the role of in-degree in pointer-model persistence and develop general transformations for cache-oblivious persistence.  &lt;br/&gt;&lt;br/&gt;Data structures are foundational for algorithms.  Improving fundamental data structures will have profound broader impact on computing practice. Advances in data structures are accessible to undergraduates and the PI will engage under-represented  students in this research.</AbstractNarration>
<MinAmdLetterDate>06/25/2013</MinAmdLetterDate>
<MaxAmdLetterDate>06/25/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319648</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Iacono</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>John Iacono</PI_FULL_NAME>
<EmailAddress>iacono@nyu.edu</EmailAddress>
<PI_PHON>7182603949</PI_PHON>
<NSF_ID>000211077</NSF_ID>
<StartDate>06/25/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>New York University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100121019</ZipCode>
<PhoneNumber>2129982121</PhoneNumber>
<StreetAddress>70 WASHINGTON SQUARE S</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041968306</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NEW YORK UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041968306</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Polytechnic University of New York]]></Name>
<CityName>Brooklyn</CityName>
<StateCode>NY</StateCode>
<ZipCode>112013840</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>08</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY08</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~515859</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-20a754ef-7fff-f641-e75e-4894d731a6b8"> </span></p> <p dir="ltr"><span>This grant funded significant achievements in the field of fundamental data structures. Data structures are methods for organizing data so that queries to the data can be efficiently supported. This grant focused on several data structures, such as heaps and binary search trees, which are at the core of computational science. Some highlights of our research include:</span></p> <p>&nbsp;</p> <p dir="ltr"><span>Binary search trees are the main data structure for storing ordered one-dimensional data. For binary search trees (BST), we have shown some of the best known bounds to date. We have also shown how to use the bandits paradigm of machine learning and apply it to the BST problem, this theoretical result shows that if there is an online constant-factor optimal BST-model algorithm for every query sequence, then we already have one.&nbsp;</span></p> <p>&nbsp;</p> <p dir="ltr"><span>For data structures that work on external memory (such as disk), we have shown a general transform to be able to efficiently access any past state of the structure. We have also shown a general transform which can turn any BST structure into an external memory one. We have also created the fastest external memory heap, which allows the fastest known external memory route finding algorithm on a dense graph.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>We have also shown a number of results in data structures for computational geometry, including searching in the intersection of planar graphs. We have also shown how to maintain Voronoi diagrams (a Voronoi diagram of points is a key object in computational geometry which divides the plane into regions depending on which point is the set is closest) of a set of planar points in convex position under the insertion operation. We have also investigated structures for order type information of pointsin the plan (for every triple of points are they colinear, or in clockwise or counterclockwise position).</span></p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 09/17/2019<br>      Modified by: John&nbsp;Iacono</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   This grant funded significant achievements in the field of fundamental data structures. Data structures are methods for organizing data so that queries to the data can be efficiently supported. This grant focused on several data structures, such as heaps and binary search trees, which are at the core of computational science. Some highlights of our research include:    Binary search trees are the main data structure for storing ordered one-dimensional data. For binary search trees (BST), we have shown some of the best known bounds to date. We have also shown how to use the bandits paradigm of machine learning and apply it to the BST problem, this theoretical result shows that if there is an online constant-factor optimal BST-model algorithm for every query sequence, then we already have one.     For data structures that work on external memory (such as disk), we have shown a general transform to be able to efficiently access any past state of the structure. We have also shown a general transform which can turn any BST structure into an external memory one. We have also created the fastest external memory heap, which allows the fastest known external memory route finding algorithm on a dense graph.    We have also shown a number of results in data structures for computational geometry, including searching in the intersection of planar graphs. We have also shown how to maintain Voronoi diagrams (a Voronoi diagram of points is a key object in computational geometry which divides the plane into regions depending on which point is the set is closest) of a set of planar points in convex position under the insertion operation. We have also investigated structures for order type information of pointsin the plan (for every triple of points are they colinear, or in clockwise or counterclockwise position).                Last Modified: 09/17/2019       Submitted by: John Iacono]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

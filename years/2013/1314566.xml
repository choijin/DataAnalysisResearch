<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: High Performance Particle Simulations from Desktops to Exaflops</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>210000.00</AwardTotalIntnAmount>
<AwardAmount>210000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>03010000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>PHY</Abbreviation>
<LongName>Division Of Physics</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Krastan Blagoev</SignBlockName>
<PO_EMAI>kblagoev@nsf.gov</PO_EMAI>
<PO_PHON>7032924666</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Modern high-performance computer architectures highlight parallelism, heterogeneity, and re-configurability to provide both performance and power efficiency enhancements. These degrees of complexity present new challenges to computational physicists, who are required to remap existing software so that simulation tools run efficiently on novel computer architectures. In particular, plasma simulations using the particle-in-cell (PIC) method are widely used on a variety of topics including inertial fusion energy, plasma-based acceleration, space weather, and astrophysics. The goal of this project is to develop a set of general skeleton codes that can be used for experimentation, education, and for developing adaptable PIC software for next-generation many-core architectures. The activities supported here will focus on incorporating the best software practices into production codes for use on present and future high-performance computers, on experimenting with novel ideas for load balancing and tradeoffs in performance and accuracy, for analyzing and storing large data sets, and on developing "desktop" versions of PIC codes for use by a wide audience and broaden their impact. &lt;br/&gt; &lt;br/&gt;This project will provide scientists with powerful simulation tools by tapping into the vast computing power of graphic cards commonly used for video games. These tools will enable scientists to pursue research in plasma physics, to build compact particle accelerators, to understand cosmic rays, and to make fusion a practical clean energy source for mankind. The tools developed here will also serve as teaching tools for students to learn complex aspects of plasma physics. This project will provide unique training and research opportunities for students pursuing a career in physics and hands-on experience with state-of-the-art techniques suitable for modern high-performance computational platforms.</AbstractNarration>
<MinAmdLetterDate>08/22/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/22/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1314566</AwardID>
<Investigator>
<FirstName>Warren</FirstName>
<LastName>Mori</LastName>
<PI_MID_INIT>B</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Warren B Mori</PI_FULL_NAME>
<EmailAddress>mori@physics.ucla.edu</EmailAddress>
<PI_PHON>3102060372</PI_PHON>
<NSF_ID>000445735</NSF_ID>
<StartDate>08/22/2013</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Viktor</FirstName>
<LastName>Decyk</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Viktor K Decyk</PI_FULL_NAME>
<EmailAddress>decyk@physics.ucla.edu</EmailAddress>
<PI_PHON>3102060371</PI_PHON>
<NSF_ID>000104403</NSF_ID>
<StartDate>08/22/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Los Angeles</Name>
<CityName>LOS ANGELES</CityName>
<ZipCode>900951406</ZipCode>
<PhoneNumber>3107940102</PhoneNumber>
<StreetAddress>10889 Wilshire Boulevard</StreetAddress>
<StreetAddress2><![CDATA[Suite 700]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>33</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA33</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>092530369</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, LOS ANGELES</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Los Angeles]]></Name>
<CityName>Los Angeles</CityName>
<StateCode>CA</StateCode>
<ZipCode>900951547</ZipCode>
<StreetAddress><![CDATA[430 Portola Plaza]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>33</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA33</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>6892</Code>
<Text>CI REUSE</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8084</Code>
<Text>CDS&amp;E</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~210000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project describes software used by scientists to model plasmas. Plasmas are ionized gases that occur naturally in outer space, such as in the Sun or Earth&rsquo;s magnetosphere, and in new technologies, such as in plasma displays or plasma accelerators. In the codes describe here, plasmas are modeled by calculating the orbits of charged particles such as electrons and ions moving in the electric and magnetic fields they generate themselves. Such codes can require a great deal of computation and some of them need to run on the largest supercomputers in the world. These supercomputers are becoming very complex and make use of more than a million processing cores working together in parallel.<br />In this project we developed 46 simple example codes to teach students and researchers how to write such plasma codes so they can run in parallel. The parallelism is difficult because at least 3 different methods are used in the largest supercomputers. The codes are organized in increasing levels of difficulty. The first set does not run in parallel. The second set uses only one method of parallelism. Succeeding sets use 2 and 3 levels of parallelism simultaneously. Most of the examples codes are written in C and Fortran, the 2 most popular languages for high performance computing. Some examples are also written in Python, which is becoming popular in science. Some examples can execute on laptops, others on advanced computers such as NVIDIA Graphical Processing Units (GPUs) or Intel PHI processors used in Supercomputer centers.<br />The example codes are important because such plasma codes are not easy to program in parallel and scientists are more likely to efficiently use advanced programming technologies if they can study clear examples in their field of specialty. This work can advance knowledge by enhancing the ability of scientists to make effective use of a variety of parallel computers. The impact is most direct in plasma modeling, but also in computer design, by providing non-trivial, but simple, benchmarks for a variety of programming models.</p><br> <p>            Last Modified: 12/11/2017<br>      Modified by: Viktor&nbsp;K&nbsp;Decyk</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project describes software used by scientists to model plasmas. Plasmas are ionized gases that occur naturally in outer space, such as in the Sun or Earth?s magnetosphere, and in new technologies, such as in plasma displays or plasma accelerators. In the codes describe here, plasmas are modeled by calculating the orbits of charged particles such as electrons and ions moving in the electric and magnetic fields they generate themselves. Such codes can require a great deal of computation and some of them need to run on the largest supercomputers in the world. These supercomputers are becoming very complex and make use of more than a million processing cores working together in parallel. In this project we developed 46 simple example codes to teach students and researchers how to write such plasma codes so they can run in parallel. The parallelism is difficult because at least 3 different methods are used in the largest supercomputers. The codes are organized in increasing levels of difficulty. The first set does not run in parallel. The second set uses only one method of parallelism. Succeeding sets use 2 and 3 levels of parallelism simultaneously. Most of the examples codes are written in C and Fortran, the 2 most popular languages for high performance computing. Some examples are also written in Python, which is becoming popular in science. Some examples can execute on laptops, others on advanced computers such as NVIDIA Graphical Processing Units (GPUs) or Intel PHI processors used in Supercomputer centers. The example codes are important because such plasma codes are not easy to program in parallel and scientists are more likely to efficiently use advanced programming technologies if they can study clear examples in their field of specialty. This work can advance knowledge by enhancing the ability of scientists to make effective use of a variety of parallel computers. The impact is most direct in plasma modeling, but also in computer design, by providing non-trivial, but simple, benchmarks for a variety of programming models.       Last Modified: 12/11/2017       Submitted by: Viktor K Decyk]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EXP: Macro Data for Micro Learning: Developing FUN! for Automated Assessment of Computational Thinking in Scratch</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>549999.00</AwardTotalIntnAmount>
<AwardAmount>549999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tatiana Korelsky</SignBlockName>
<PO_EMAI>tkorelsk@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This Cyberlearning: Transforming Education Exploration Project is designed to advance understanding of how to personalize feedback and advice to learners as they engage in exploratory and creative activities in constructionist technology-enhanced learning environments.  During such activities, learners often engage in programming (using, e.g., Scratch, Alice) with the goal of creating a model or an animation of their own choosing. Assessment of learner capabilities and conceptions would allow automated personalization of advice to learners, facilitate self-reflection, and help teachers or mentors to know the range of capabilities and understanding across a classroom.  This project brings together a PI who is expert at promoting learning in the context of constructionist learning activities and another who is expert at educational data mining to identify indicators of young learners' (middle schoolers) conceptions of computational concepts and programming capabilities. The project uses a data analytic approach; data mining methods are used to mine the thousands of operations learners carry out to find patterns that might indicate understanding and capability, qualitative methods are used to analyze what learners were intending and thinking as they were carrying out those operations, patterns are identified in the observational data, and the two streams of data are matched to identify the ways conceptions and capabilities show themselves while learners are programming. The intellectual activity focuses both on the combination of data mining and ethnographic methods for such purposes and on the specifics of those indicators.&lt;br/&gt;&lt;br/&gt;Automating assessment is difficult in a project-based learning environment where learners are creating products of their own choosing. Because the activity is quite unconstrained, collecting and analyzing the data necessary for providing help and feedback to the learner is quite difficult. This project uses a combination data analytic and ethnographic approach to find indicators of the conceptions and capabilities of middle schoolers as they are using Scratch to create models and animations of their choosing. The results of this project will make contributions in several areas: (i) advancing methods for automating assessment for learners using the Scratch programming language, (ii) advancing methods for data collection and analysis for personalizing feedback in a relatively open-ended programming environment (iii) broadening understanding of how to assess computational thinking in the context of open-ended programming assignments, and (iv) advancing methodology for automatically assessing capabilities and understanding when learners are engaged in open-ended kinds of assignments.</AbstractNarration>
<MinAmdLetterDate>08/14/2013</MinAmdLetterDate>
<MaxAmdLetterDate>09/22/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319938</AwardID>
<Investigator>
<FirstName>Taylor</FirstName>
<LastName>Martin</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Taylor Martin</PI_FULL_NAME>
<EmailAddress>drtaylormartin@gmail.com</EmailAddress>
<PI_PHON>4357971226</PI_PHON>
<NSF_ID>000610290</NSF_ID>
<StartDate>08/14/2013</StartDate>
<EndDate>09/22/2014</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Deborah</FirstName>
<LastName>Fields</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Deborah Fields</PI_FULL_NAME>
<EmailAddress>deborah.fields@usu.edu</EmailAddress>
<PI_PHON>3106194894</PI_PHON>
<NSF_ID>000637155</NSF_ID>
<StartDate>08/14/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Sarah</FirstName>
<LastName>Brasiel</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sarah Brasiel</PI_FULL_NAME>
<EmailAddress>sarah.brasiel@usu.edu</EmailAddress>
<PI_PHON>4357971226</PI_PHON>
<NSF_ID>000668873</NSF_ID>
<StartDate>09/22/2014</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Utah State University</Name>
<CityName>Logan</CityName>
<ZipCode>843221415</ZipCode>
<PhoneNumber>4357971226</PhoneNumber>
<StreetAddress>Sponsored Programs Office</StreetAddress>
<StreetAddress2><![CDATA[1415 Old Main Hill ~ Room 64]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072983455</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UTAH STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072983455</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Utah State University]]></Name>
<CityName>Logan</CityName>
<StateCode>UT</StateCode>
<ZipCode>843222830</ZipCode>
<StreetAddress><![CDATA[2830 Old Main Hill~EDUC 215]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7645</Code>
<Text>Discovery Research K-12</Text>
</ProgramElement>
<ProgramElement>
<Code>8020</Code>
<Text>Cyberlearn &amp; Future Learn Tech</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>7645</Code>
<Text>DISCOVERY RESEARCH K-12</Text>
</ProgramReference>
<ProgramReference>
<Code>8045</Code>
<Text>Cyberlearn &amp; Future Learn Tech</Text>
</ProgramReference>
<ProgramReference>
<Code>8841</Code>
<Text>Exploration Projects</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0413</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~549999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This research grant focused on advancing understanding of personalized learning in constructionist technology-enhanced environments by capitalizing on the capability of analyzing backend data on student programming that could make that learning visible. While the majority of work on educational data mining and learning analytics has been conducted in relatively structured learning environments, our efforts focus on the areas where learners are constructing and creating open-ended projects through computer programming, engaging in complex thinking, debugging, and iteration while making in personalized projects.</p> <p>We took two parallel approaches to the challenge of studying and assessing novice learning in open-ended, constructionist computer science environments. First, we developed a set of exploratory quantitative measures of youths&rsquo; learning of computer science concepts that can be identified through backend saves (in this case from the popular Scratch.mit.edu website). To do this we designed and implemented a series of workshops for novice youth programmers (aged 10-13) to introduce them to programming with Scratch and to collect rich data in the form of minute-by-minute project saves alongside contextual information about the learning environment (e.g., observations). Then we conducted integrated, qualitative and quantitative analysis of changes in students&rsquo; projects over time, applying them across more than 32,400 project saves, across 67 students (collected roughly every 2 minutes). We subsequently evaluated the utility of this approach by comparing these analyses with knowledge from rich case studies of students&rsquo; changes to projects over time. By combining big data and deeply contextual qualitative analyses, our study highlights the insights&mdash;and blind spots&mdash;of each data source and method with regard to youths&rsquo; learning of various programming concepts, including initialization, events, parallelism, loops, variables, conditionals, and so forth.</p> <p>Alongside this analysis we developed the &ldquo;FUN! Tool&rdquo; (Functional Understanding Navigator!), a flexible open source data engine (github.com/ActiveLearningLab) where measures for Scratch or other languages (e.g., Python, iPro) can be input to automatically analyze findings across individual programmers. The FUN! Tool takes data from a raw form (JSON in the case of Scratch data) and then 1) adapts those data into a roughed form of data that can be used in the tool itself (this is equivalent to reading the data into memory), 2) measures those data (using any number of predefined or custom measures), and 3) reports those data (usually in the form of a spreadsheet file such as tsv or csv files). The tool is meant to help researchers write and share automated data extraction and manipulation techniques with Scratch and other types of programming language.</p> <p>In terms of intellectual merit, we found that (1) going beyond frequency counts as representative of learning in open-ended programming learning environments allowed us to document the iterative ways that users approached particular concepts (e.g., the way debugging initialization occurred frequently or slowly in simple versus more complex projects); (2) these analyses opened up the possibility of documenting changes in programming styles, for instance from bottom-up programming within a single object to bottom-up programming across several objects (using parallelism) to top-down programming across several objects; (3) we could use big data to conduct microgenetic analyses that could see within individual student trajectories of learning as well as across a classroom of students. In addition (4) we developed a tool that can be used by other researchers to analyze student learning based on changes in versions of their projects, applicable not just to Scratch but also to other programming languages.</p> <p>In terms of broadening participation our research illustrates the ways in which youth can go deep in programming while in semi-structured, open-ended learning environments using a constructionist approach. In designing our outreach to children and youth we developed a studio-design approach to learning programming that encourages for creativity within constraints, peer support, constructive criticism, and programming for an intended audience. While this open-ended approach to programming has previously been shown to be motivating to young people, we have added to this by documenting deep learning with this approach. Documenting deep learning alongside an interest-driven approach to teaching programming and providing tools with which to analyze it may help to further broaden participation in computer science, especially to underrepresented youth for whom a traditional approach has not been successful.</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/18/2016<br>      Modified by: Deborah&nbsp;Fields</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476814775127_first_time_measured_red3_edited--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476814775127_first_time_measured_red3_edited--rgov-800width.jpg" title="Learning Programming Concepts at Scratch Camp"><img src="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476814775127_first_time_measured_red3_edited--rgov-66x44.jpg" alt="Learning Programming Concepts at Scratch Camp"></a> <div class="imageCaptionContainer"> <div class="imageCaption">This figure shows the distribution of the first time campers used each programming concept measured in our project. Each coloured block represents one programming session (four sessions per day at Scratch Camp). This visualization allows us to see how learning was spread across students over time.</div> <div class="imageCredit">Deborah Fields</div> <div class="imagePermisssions">Creative Commons</div> <div class="imageSubmitted">Deborah&nbsp;Fields</div> <div class="imageTitle">Learning Programming Concepts at Scratch Camp</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476814971354_edited_ginger_genosaurus_missing_initialization2--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476814971354_edited_ginger_genosaurus_missing_initialization2--rgov-800width.jpg" title="One girls' learning trajectory with initialization"><img src="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476814971354_edited_ginger_genosaurus_missing_initialization2--rgov-66x44.jpg" alt="One girls' learning trajectory with initialization"></a> <div class="imageCaptionContainer"> <div class="imageCaption">This image shows one girl's learning through her use of initialization in Scratch projects over 5 days. With each new project she had to re-learn how to initialize her code, especially as projects became more complex.</div> <div class="imageCredit">Deborah Fields</div> <div class="imagePermisssions">Creative Commons</div> <div class="imageSubmitted">Deborah&nbsp;Fields</div> <div class="imageTitle">One girls' learning trajectory with initialization</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476815154280_Edited_ginger_event_driven--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476815154280_Edited_ginger_event_driven--rgov-800width.jpg" title="One girl's learning of event-driven programming at Scratch Camp"><img src="/por/images/Reports/POR/2016/1319938/1319938_10267246_1476815154280_Edited_ginger_event_driven--rgov-66x44.jpg" alt="One girl's learning of event-driven programming at Scratch Camp"></a> <div class="imageCaptionContainer"> <div class="imageCaption">This image shows the number of correctly programmed "broadcasts" in one girls' computer programs over a week at Scratch Camp. Broadcasts are one type of event-driven programming in Scratch. Her style began to incorporate parallelism and later a top-down approach as her learning progressed.</div> <div class="imageCredit">Deborah Fields</div> <div class="imageSubmitted">Deborah&nbsp;Fields</div> <div class="imageTitle">One girl's learning of event-driven programming at Scratch Camp</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This research grant focused on advancing understanding of personalized learning in constructionist technology-enhanced environments by capitalizing on the capability of analyzing backend data on student programming that could make that learning visible. While the majority of work on educational data mining and learning analytics has been conducted in relatively structured learning environments, our efforts focus on the areas where learners are constructing and creating open-ended projects through computer programming, engaging in complex thinking, debugging, and iteration while making in personalized projects.  We took two parallel approaches to the challenge of studying and assessing novice learning in open-ended, constructionist computer science environments. First, we developed a set of exploratory quantitative measures of youths? learning of computer science concepts that can be identified through backend saves (in this case from the popular Scratch.mit.edu website). To do this we designed and implemented a series of workshops for novice youth programmers (aged 10-13) to introduce them to programming with Scratch and to collect rich data in the form of minute-by-minute project saves alongside contextual information about the learning environment (e.g., observations). Then we conducted integrated, qualitative and quantitative analysis of changes in students? projects over time, applying them across more than 32,400 project saves, across 67 students (collected roughly every 2 minutes). We subsequently evaluated the utility of this approach by comparing these analyses with knowledge from rich case studies of students? changes to projects over time. By combining big data and deeply contextual qualitative analyses, our study highlights the insights&mdash;and blind spots&mdash;of each data source and method with regard to youths? learning of various programming concepts, including initialization, events, parallelism, loops, variables, conditionals, and so forth.  Alongside this analysis we developed the "FUN! Tool" (Functional Understanding Navigator!), a flexible open source data engine (github.com/ActiveLearningLab) where measures for Scratch or other languages (e.g., Python, iPro) can be input to automatically analyze findings across individual programmers. The FUN! Tool takes data from a raw form (JSON in the case of Scratch data) and then 1) adapts those data into a roughed form of data that can be used in the tool itself (this is equivalent to reading the data into memory), 2) measures those data (using any number of predefined or custom measures), and 3) reports those data (usually in the form of a spreadsheet file such as tsv or csv files). The tool is meant to help researchers write and share automated data extraction and manipulation techniques with Scratch and other types of programming language.  In terms of intellectual merit, we found that (1) going beyond frequency counts as representative of learning in open-ended programming learning environments allowed us to document the iterative ways that users approached particular concepts (e.g., the way debugging initialization occurred frequently or slowly in simple versus more complex projects); (2) these analyses opened up the possibility of documenting changes in programming styles, for instance from bottom-up programming within a single object to bottom-up programming across several objects (using parallelism) to top-down programming across several objects; (3) we could use big data to conduct microgenetic analyses that could see within individual student trajectories of learning as well as across a classroom of students. In addition (4) we developed a tool that can be used by other researchers to analyze student learning based on changes in versions of their projects, applicable not just to Scratch but also to other programming languages.  In terms of broadening participation our research illustrates the ways in which youth can go deep in programming while in semi-structured, open-ended learning environments using a constructionist approach. In designing our outreach to children and youth we developed a studio-design approach to learning programming that encourages for creativity within constraints, peer support, constructive criticism, and programming for an intended audience. While this open-ended approach to programming has previously been shown to be motivating to young people, we have added to this by documenting deep learning with this approach. Documenting deep learning alongside an interest-driven approach to teaching programming and providing tools with which to analyze it may help to further broaden participation in computer science, especially to underrepresented youth for whom a traditional approach has not been successful.          Last Modified: 10/18/2016       Submitted by: Deborah Fields]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

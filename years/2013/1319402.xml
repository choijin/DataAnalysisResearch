<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF:III:Small:Collaborative Research: New Frontiers in Join Algorithms: Optimality, Noise, and Richer Languages</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>326101.00</AwardTotalIntnAmount>
<AwardAmount>326101</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The relational join is central to relational database processing, which is the dominant way data is processed today. The join also models problems in biological and social networks, coding theory, compressed sensing, machine learning, and constraint satisfaction. Recently,  the investigators described the first ever worst-case optimal algorithm (the NPRR algorithm) for join queries.  These new results open a line of new tools to attack a diverse set of fundamental problems related to the join. This project aims to further exploit the new algorithmic techniques developed for NPRR to address the following three classes of problems:&lt;br/&gt;&lt;br/&gt;(1) Optimal Join algorithms. Developing algorithms that are instance optimal when the data are stored in either traditional database indexes or new indexing structures is a goal of this project. (2) Coping with and Leveraging Noise. This project will extend the latest work to handle and leverage both worst-case and statistical noise models, bridging to coding theory and compressed sensing.  (3) Expressive Query Languages. The project will explore a series of extensions to join queries that will pave the way to overcome challenges in motif finding, search, databases with functional dependencies, and more powerful classes of queries and join operations.&lt;br/&gt;&lt;br/&gt;If successful, the results of this grant will apply to a variety of pattern extraction problems in modern massive, dynamic, and noisy data sets, which have a wide range of applications in complex network analysis, coding theory, and compressive sensing.</AbstractNarration>
<MinAmdLetterDate>08/07/2013</MinAmdLetterDate>
<MaxAmdLetterDate>07/08/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1319402</AwardID>
<Investigator>
<FirstName>Hung</FirstName>
<LastName>Ngo</LastName>
<PI_MID_INIT>Q</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Hung Q Ngo</PI_FULL_NAME>
<EmailAddress>hungngo@buffalo.edu</EmailAddress>
<PI_PHON>7166454750</PI_PHON>
<NSF_ID>000108711</NSF_ID>
<StartDate>08/07/2013</StartDate>
<EndDate>07/08/2016</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Atri</FirstName>
<LastName>Rudra</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Atri Rudra</PI_FULL_NAME>
<EmailAddress>atri@buffalo.edu</EmailAddress>
<PI_PHON>7166455000</PI_PHON>
<NSF_ID>000505466</NSF_ID>
<StartDate>07/08/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Atri</FirstName>
<LastName>Rudra</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Atri Rudra</PI_FULL_NAME>
<EmailAddress>atri@buffalo.edu</EmailAddress>
<PI_PHON>7166455000</PI_PHON>
<NSF_ID>000505466</NSF_ID>
<StartDate>08/07/2013</StartDate>
<EndDate>07/08/2016</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Buffalo</Name>
<CityName>Buffalo</CityName>
<ZipCode>142282567</ZipCode>
<PhoneNumber>7166452634</PhoneNumber>
<StreetAddress>520 Lee Entrance</StreetAddress>
<StreetAddress2><![CDATA[Suite 211]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>038633251</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Buffalo]]></Name>
<CityName/>
<StateCode>NY</StateCode>
<ZipCode>142602500</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~326101</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The relational join is a fundamental operation in database systems and as such is used by pretty much anyone who works with a (relational) database management system. From a theoretical point of view, the join operator is incredibly powerful and is closely related to many other operations that are useful in diverse applications from artificial intelligence to error-correcting codes.<br /><br />The main result of this award was to extend our previous theoretical results to other related operations. In particular, we were able to extend our algorithm for the join operator (which in a very concrete way is the best possible) to work for many other problems, all of which can be represented as sums of products of various functions. This resulted in a one single, simple algorithm that can solve problems in diverse application areas such as artificial intelligence and error-correcting codes. This algorithm has been shown to be practically useful and has been implemented in a commercial database engine that showed speedups of up to 1000 times over existing comparable engines for certain machine learning tasks.<br /><br />The award also resulted in better algorithms for a fundamental linear algebra operation that is at the heart of the recent resurgence in "deep learning"-- our work shows the theoretical possibilities on how much our results can improve existing deep learning engines.<br /><br />This award support three Ph.D. student. One of them is working for a startup company (related to the work above on join algorithms) while the second Ph.D. student is about to graduate. The third Ph.D. is now well on his way to finishing up his training.</p><br> <p>            Last Modified: 11/09/2017<br>      Modified by: Atri&nbsp;Rudra</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The relational join is a fundamental operation in database systems and as such is used by pretty much anyone who works with a (relational) database management system. From a theoretical point of view, the join operator is incredibly powerful and is closely related to many other operations that are useful in diverse applications from artificial intelligence to error-correcting codes.  The main result of this award was to extend our previous theoretical results to other related operations. In particular, we were able to extend our algorithm for the join operator (which in a very concrete way is the best possible) to work for many other problems, all of which can be represented as sums of products of various functions. This resulted in a one single, simple algorithm that can solve problems in diverse application areas such as artificial intelligence and error-correcting codes. This algorithm has been shown to be practically useful and has been implemented in a commercial database engine that showed speedups of up to 1000 times over existing comparable engines for certain machine learning tasks.  The award also resulted in better algorithms for a fundamental linear algebra operation that is at the heart of the recent resurgence in "deep learning"-- our work shows the theoretical possibilities on how much our results can improve existing deep learning engines.  This award support three Ph.D. student. One of them is working for a startup company (related to the work above on join algorithms) while the second Ph.D. student is about to graduate. The third Ph.D. is now well on his way to finishing up his training.       Last Modified: 11/09/2017       Submitted by: Atri Rudra]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

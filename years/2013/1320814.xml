<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: Algorithms Based on Discrete and Algebraic Methods</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>399367.00</AwardTotalIntnAmount>
<AwardAmount>399367</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy Kimbrel</SignBlockName>
<PO_EMAI>tkimbrel@nsf.gov</PO_EMAI>
<PO_PHON>7032927924</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This research is concerned with discrete computational tasks, mainly mathematical decision and optimization problems. Often such problems can be attacked directly by discrete methods. The focus of this research is to study situations where algebraic approaches produce better solutions. Even though the problem formulation can be entirely discrete, significant insight and efficient algorithms might be obtained by applying sophisticated algebraic methods. It is not uncommon that combinatorial problems have simple and elegant formulations, yet the obvious algorithms are too slow for their solutions except for very small instances. In such situation, algebraic methods might provide the decisive insights.&lt;br/&gt; &lt;br/&gt;The graph isomorphism problem exemplifies a combinatorial problem where algebraic methods have successfully produced efficient algorithms. This research also deals with other foundational mathematical problems having these characteristics, like efficient multiplication of long integers and the monomer dimer problem, and the counting of matchings in grid graphs. Typical algebraic tools used are group theory, the discrete Fourier transform, as well as the zeta transform and its inverse, the Mobius transform. Usually, there is no obvious way of how to apply these tools most effectively. For example, the fastest integer multiplication algorithms are all based on Fourier transforms, but the efficiency heavily depends on the type of Fourier transform applied. &lt;br/&gt;&lt;br/&gt;This project deals with fundamental combinatorial and algebraic tasks for which efficient algorithms are desirable. This research is significant, because it contributes to a better understanding of the mathematical structures behind these problems and leads to the discovery of more efficient algorithms.&lt;br/&gt;&lt;br/&gt;An important goal of this project is to contribute to the development of a new generation of graduate students, who appreciate the development of mathematical insight into difficult combinatorial and algebraic problems with the goal of producing efficient algorithms. In particular, integer multiplication is such a fundamental arithmetic task that understanding and improving it is an obvious basic intellectual challenge. Such theoretical goals are foremost in this project. But there is a potential for an impact on the search for Mersenne primes and on general purpose computations with high degree polynomials. Other aspects of this research involve topics with applications in Physics and Chemistry.</AbstractNarration>
<MinAmdLetterDate>08/06/2013</MinAmdLetterDate>
<MaxAmdLetterDate>08/06/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1320814</AwardID>
<Investigator>
<FirstName>Martin</FirstName>
<LastName>Furer</LastName>
<PI_MID_INIT>P</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Martin P Furer</PI_FULL_NAME>
<EmailAddress>furer@cse.psu.edu</EmailAddress>
<PI_PHON>8148631857</PI_PHON>
<NSF_ID>000428276</NSF_ID>
<StartDate>08/06/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Pennsylvania State Univ University Park</Name>
<CityName>University Park</CityName>
<ZipCode>168021503</ZipCode>
<PhoneNumber>8148651372</PhoneNumber>
<StreetAddress>201 Old Main</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>003403953</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PENNSYLVANIA STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003403953</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Pennsylvania State Univ University Park]]></Name>
<CityName>University Park</CityName>
<StateCode>PA</StateCode>
<ZipCode>168021503</ZipCode>
<StreetAddress><![CDATA[201 Old Main]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~399367</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This research has shown the applicability of algebraic transformations to achieve polynomial space algorithms in a dynamic setting. Such transformations (zeta transform and M&ouml;bius transform) have been used in a static setting before, where there are two fixed domains, the original domain and the transformed domain. The computation in the transformed domain is much more storage efficient. Many efficient algorithms are based on dynamic programming on tree decompositions, where the original domain constantly changes. Our results show that it is nevertheless possible to find a matching dynamically changing transformed domain, where the computations can be executed in a storage space saving manner. This is significant, because for difficult combinatorial problems very long computation times can be tolerated, while a need for exponential space often makes a task infeasible. Furthermore, many hard combinatorial problems are still doable when restricted to instances of small tree-width, which are often encountered in practice.</p> <p>Much of this research is concerned with width parameters. Multi-clique-width is proposed as a viable alternative to clique-width in many situations. Large classes of graphs have a multi-clique-width that is exponentially smaller than their clique-width. In addition, this research has shown that some relevant problems can be solved as efficiently in terms of the multi-clique-width as in terms of clique-width with the best known algorithms. Together, this means that we have exponentially faster algorithms for interesting tasks on practically relevant classes of graphs. Currently, efficient graph algorithms are mainly based on small tree-width, because the tree-width can be approximated efficiently. If in the future, clique-width and multi-clique-width can be approximated efficiently, then algorithms based on these parameters will be able to handle much larger classes of graphs.</p> <p>Locating the eigenvalues of graphs is an important task in spectral graph theory. For any given interval, the number of eigenvalues in this interval can be determined in cubic time as a function of the number of vertices n of a graph. This research has shown that for graphs of clique-width k, this task can be accomplished in time quadratic in k and linear in n. This is a significant speed-up, because for many interesting classes of graphs, the clique-width k is bounded by a small constant.</p> <p>Graph isomorphism tests are important in chemistry for molecule descriptions. The Weisfeiler-Lehman algorithm WL[2] is the central building block of any practical graph isomorphism test. It is often combined with testing further invariants. This research has investigated the relative strength of WL[2] and popular invariants defined by numbers of cycles and cliques.</p> <p>This project has contributed to the education of graduate students who appreciate the development of mathematical insight into difficult combinatorial and algebraic problems with the goal of producing efficient algorithms.&nbsp;</p><br> <p>            Last Modified: 01/12/2018<br>      Modified by: Martin&nbsp;P&nbsp;Furer</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This research has shown the applicability of algebraic transformations to achieve polynomial space algorithms in a dynamic setting. Such transformations (zeta transform and M&ouml;bius transform) have been used in a static setting before, where there are two fixed domains, the original domain and the transformed domain. The computation in the transformed domain is much more storage efficient. Many efficient algorithms are based on dynamic programming on tree decompositions, where the original domain constantly changes. Our results show that it is nevertheless possible to find a matching dynamically changing transformed domain, where the computations can be executed in a storage space saving manner. This is significant, because for difficult combinatorial problems very long computation times can be tolerated, while a need for exponential space often makes a task infeasible. Furthermore, many hard combinatorial problems are still doable when restricted to instances of small tree-width, which are often encountered in practice.  Much of this research is concerned with width parameters. Multi-clique-width is proposed as a viable alternative to clique-width in many situations. Large classes of graphs have a multi-clique-width that is exponentially smaller than their clique-width. In addition, this research has shown that some relevant problems can be solved as efficiently in terms of the multi-clique-width as in terms of clique-width with the best known algorithms. Together, this means that we have exponentially faster algorithms for interesting tasks on practically relevant classes of graphs. Currently, efficient graph algorithms are mainly based on small tree-width, because the tree-width can be approximated efficiently. If in the future, clique-width and multi-clique-width can be approximated efficiently, then algorithms based on these parameters will be able to handle much larger classes of graphs.  Locating the eigenvalues of graphs is an important task in spectral graph theory. For any given interval, the number of eigenvalues in this interval can be determined in cubic time as a function of the number of vertices n of a graph. This research has shown that for graphs of clique-width k, this task can be accomplished in time quadratic in k and linear in n. This is a significant speed-up, because for many interesting classes of graphs, the clique-width k is bounded by a small constant.  Graph isomorphism tests are important in chemistry for molecule descriptions. The Weisfeiler-Lehman algorithm WL[2] is the central building block of any practical graph isomorphism test. It is often combined with testing further invariants. This research has investigated the relative strength of WL[2] and popular invariants defined by numbers of cycles and cliques.  This project has contributed to the education of graduate students who appreciate the development of mathematical insight into difficult combinatorial and algebraic problems with the goal of producing efficient algorithms.        Last Modified: 01/12/2018       Submitted by: Martin P Furer]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Mapping Fragmentation and Topology Optimization Concepts to GPUs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2013</AwardEffectiveDate>
<AwardExpirationDate>05/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07030000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>CMMI</Abbreviation>
<LongName>Div Of Civil, Mechanical, &amp; Manufact Inn</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>David Fyhrie</SignBlockName>
<PO_EMAI>dfyhrie@nsf.gov</PO_EMAI>
<PO_PHON>7032920000</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The objective of this Early-concept Grant for Exploratory Research (EAGER) is to create an effective algorithmic mapping of extrinsic cohesive fragmentation and topology optimization concepts to GPUs. The extrinsic cohesive fracture framework will be used for detailed investigation of dynamic fracture instability of brittle and quasi-brittle materials to properly explain the limiting crack speed in these materials as well as increased fracture resistance with crack speed. This framework will also allow multiscale investigations of heterogeneous materials at the mesoscale, accounting for large deformation behavior of a soft matrix with hard particles, including details of the graded interphasial zones with interfacial cracking. The GPU framework for topology optimization will consider realistic ground structures that can impact material design, such as the design of extreme materials (e.g. auxetic), which are globally homogenized but may locally (microstructurally) display a functionally graded material architecture. The mapping and parallelization techniques will be performed using NVIDIA's CUDA (Computer Unified Device Architecture) framework, however, other emerging architectures such as the Intel's MIC (many-integrated-core) can also be used and/or explored. To be able to fully utilize GPU hardware is an art that relies on the effectiveness of the algorithmic mapping associating software and hardware at various levels. To this effect, a tailored topological data structure will be created to support mesh modification and adjacency searches on the GPU. To circumvent race conditions, proper algorithms (e.g. mesh coloring) will be investigated together their impact on parallelization performance and concurrency issues. The research will make use of the National Center for Supercomputing Applications (NCSA) through collaboration with Dr. Volodymyr Kindratenko (Research Scientist, NCSA).&lt;br/&gt; &lt;br/&gt;The broader outcomes of this interdisciplinary research derive from the fact that GPUs have been a disruptive technology with great potential for non-graphics applications, such as in computational mechanics. This investigation will contribute to the understanding of both explicit and implicit algorithms by adopting surrogate problems for each case, namely, fragmentation and topology optimization, respectively. The scale of the problems to be addressed has the potential to lead to computational discovery through new physical understanding and insight.  Concepts developed from this research will be adapted into the curriculum at the University of Illinois at Urbana-Champaign (UIUC). Educational and research findings will be disseminated broadly through the internet. Moreover, outreach activities will be conducted to motivate high-school students to pursue careers in engineering research and education.</AbstractNarration>
<MinAmdLetterDate>02/19/2013</MinAmdLetterDate>
<MaxAmdLetterDate>02/19/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1321661</AwardID>
<Investigator>
<FirstName>Glaucio</FirstName>
<LastName>Paulino</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Glaucio Paulino</PI_FULL_NAME>
<EmailAddress>gp1863@princeton.edu</EmailAddress>
<PI_PHON>2174937843</PI_PHON>
<NSF_ID>000149408</NSF_ID>
<StartDate>02/19/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>Champaign</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207406</ZipCode>
<StreetAddress><![CDATA[1901 Sourth First Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1464</Code>
<Text>ESD-Eng &amp; Systems Design</Text>
</ProgramElement>
<ProgramElement>
<Code>1630</Code>
<Text>Mechanics of Materials and Str</Text>
</ProgramElement>
<ProgramReference>
<Code>022E</Code>
<Text>SOLID MECHANICS</Text>
</ProgramReference>
<ProgramReference>
<Code>024E</Code>
<Text>MATERIALS DESIGN</Text>
</ProgramReference>
<ProgramReference>
<Code>067E</Code>
<Text>DESIGN TOOLS</Text>
</ProgramReference>
<ProgramReference>
<Code>068E</Code>
<Text>DESIGN THEORY</Text>
</ProgramReference>
<ProgramReference>
<Code>073E</Code>
<Text>OPTIMIZATION &amp; DECISION MAKING</Text>
</ProgramReference>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>9161</Code>
<Text>SINGLE DIVISION/UNIVERSITY</Text>
</ProgramReference>
<ProgramReference>
<Code>AMPP</Code>
<Text>ADVANCED MATERIALS &amp; PROCESSING PROGRAM</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~300000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Graphical Processing Units (GPUs) have been a disruptive technology and, over the last decade, there has been a growing interest in the use of GPUs for non-graphical applications, which is the main topic of this research. This project investigates scientific computing methods by means of both explicit and implicit algorithms by adopting representative problems for each case, namely, fragmentation and topology optimization, respectively. The intellectual merit of the research consists of establishing a conceptual framework to map fragmentation and topology optimization simulations to GPUs, creating a novel special-purpose topological data structure tailored for adaptive finite element meshes on GPU platforms with fast global-memory access.</p> <p>In terms of fragmentation, we created a framework for dynamic adaptation of the mesh in the GPU, in a consistent fashion, by inserting cohesive elements on fractured facets (duplicating nodes and updating connectivity &lsquo;on the fly&rsquo;). We developed an effective nodal update scheme using gather and scatter techniques necessary for GPU parallelization. Gather techniques were employed to insert cohesive elements while scattering techniques, based on coloring, were employed to compute nodal stress, nodal mass, internal forces, and cohesive forces. We developed parallel techniques to map fragmentation algorithms to GPUs, such as splitting of kernels into simpler ones, distributing jobs among threads, taking advantage of memory coalescence (consecutive threads reading consecutive memory addresses), and using texture memory to increase kernel performance. For instance, the computation of the cohesive forces kernel uses one thread per element for <em>n </em>colors. It is decomposed as follows: (1) computation of cohesive separation kernel (one thread per cohesive element); (2) computation of cohesive traction kernel (three threads per cohesive element); and (3) computation of cohesive force kernel (one thread per element for <em>n </em>colors).</p> <p>In terms of topology optimization, we have presented a topology optimization implementation that uses polygonal finite elements implemented in C++ language and in CUDA. It provides several features to handle the computational cost associated with the use of large-scale polygonal meshes. The modular feature provides an easy way to modify and extend the code to use different analysis routines without changing the topology optimization formulation. We presented different types of linear solvers that can be used in the finite element analysis.</p> <p>In terms of broader impacts, the scale of the problems addressed in this research lead to new insights into topology optimization and fragmentation, as documented in archival publications. Moreover, concepts developed from this research were adopted into the curriculum at UIUC, GATech and Stanford Universities. Educational and research findings were disseminated on the PI&rsquo;s website and by means of other dissemination venues (conferences, seminars, lectures, journal papers, etc).</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/05/2017<br>      Modified by: Glaucio&nbsp;Paulino</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Graphical Processing Units (GPUs) have been a disruptive technology and, over the last decade, there has been a growing interest in the use of GPUs for non-graphical applications, which is the main topic of this research. This project investigates scientific computing methods by means of both explicit and implicit algorithms by adopting representative problems for each case, namely, fragmentation and topology optimization, respectively. The intellectual merit of the research consists of establishing a conceptual framework to map fragmentation and topology optimization simulations to GPUs, creating a novel special-purpose topological data structure tailored for adaptive finite element meshes on GPU platforms with fast global-memory access.  In terms of fragmentation, we created a framework for dynamic adaptation of the mesh in the GPU, in a consistent fashion, by inserting cohesive elements on fractured facets (duplicating nodes and updating connectivity ?on the fly?). We developed an effective nodal update scheme using gather and scatter techniques necessary for GPU parallelization. Gather techniques were employed to insert cohesive elements while scattering techniques, based on coloring, were employed to compute nodal stress, nodal mass, internal forces, and cohesive forces. We developed parallel techniques to map fragmentation algorithms to GPUs, such as splitting of kernels into simpler ones, distributing jobs among threads, taking advantage of memory coalescence (consecutive threads reading consecutive memory addresses), and using texture memory to increase kernel performance. For instance, the computation of the cohesive forces kernel uses one thread per element for n colors. It is decomposed as follows: (1) computation of cohesive separation kernel (one thread per cohesive element); (2) computation of cohesive traction kernel (three threads per cohesive element); and (3) computation of cohesive force kernel (one thread per element for n colors).  In terms of topology optimization, we have presented a topology optimization implementation that uses polygonal finite elements implemented in C++ language and in CUDA. It provides several features to handle the computational cost associated with the use of large-scale polygonal meshes. The modular feature provides an easy way to modify and extend the code to use different analysis routines without changing the topology optimization formulation. We presented different types of linear solvers that can be used in the finite element analysis.  In terms of broader impacts, the scale of the problems addressed in this research lead to new insights into topology optimization and fragmentation, as documented in archival publications. Moreover, concepts developed from this research were adopted into the curriculum at UIUC, GATech and Stanford Universities. Educational and research findings were disseminated on the PI?s website and by means of other dissemination venues (conferences, seminars, lectures, journal papers, etc).             Last Modified: 06/05/2017       Submitted by: Glaucio Paulino]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative Research: Delay Signatures: Blurring the Boundary between the Network and the Processor</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
<AwardExpirationDate>07/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>250000.00</AwardTotalIntnAmount>
<AwardAmount>250000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>tao li</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The distinction between computing and communication has blurred with the improvements in semiconductor technology as well as the speed and reliability of computer networks. At a macroscopic level, individuals increasingly rely upon smart phones, cloud computing, and similar infrastructure that combines computing systems with networking to accomplish their daily tasks. Many end-users even consider the client device, the server, and the network as one blended unit that is used for productivity and/or entertainment. At the microscopic level, the linkage between the two areas ideally should not require the use of special-purpose software, because installing software on a network node to enable this blending can potentially cause the node to be unstable or more complex, and potentially introduce security flaws. However, linking the two domains without the use of additional software remains a significant challenge. This research focuses on understanding and characterizing the connection between the computing node and the network to meet that challenge. For example, by simply probing a node's network traffic and collecting its responses, it can be determined that the internal components (e.g., microprocessor) are heavily utilized. If the node is expected to be idle, then this indicator could signal that the node has been compromised and is running unauthorized software.&lt;br/&gt;Â &lt;br/&gt;This project uses a holistic approach that combines computer architecture and computer networking to investigate and characterize how the microarchitecture affects the network packet generation process. Since the internal components of a node are shared resources among all processes, including those that require network-based I/O, it is possible to infer the load on the internal components by observing variations in delay between successive network packets that are generated by the node. This inference materializes as a "delay signature," and can be used to blend the areas of architecture and networking. The delay signature provides information that can be attributed to the internal state and settings of the microarchitecture. Architectural settings, such as processor affinity, multi-threading, and power-saving modes, affect the delay signature. The PIs use a hardware testbed and a system simulator to characterize and model the basic system components that can have a significant (direct or indirect) impact on packet generation. The project culminates with the creation of a general-purpose engine that automates the detection of utilization signatures and uses those signatures to predict node utilization remotely. The PIs incorporate team-based laboratory projects within their computer architecture and computer networking courses to demonstrate the relationship between the two domains and to promote integrated learning by students in both areas. Further, the investigators employ an outreach plan with complementary components to: (1) encourage students to enter the science and engineering fields and (2) mentor potential faculty members to serve as educators and role models. Potential applications of the delay signature include: (1) providing security for networked nodes by monitoring unauthorized utilization and (2) providing efficient scheduling in cluster grids.</AbstractNarration>
<MinAmdLetterDate>07/31/2013</MinAmdLetterDate>
<MaxAmdLetterDate>07/31/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1318571</AwardID>
<Investigator>
<FirstName>William</FirstName>
<LastName>Robinson</LastName>
<PI_MID_INIT>H</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William H Robinson</PI_FULL_NAME>
<EmailAddress>william.h.robinson@vanderbilt.edu</EmailAddress>
<PI_PHON>6153221507</PI_PHON>
<NSF_ID>000263050</NSF_ID>
<StartDate>07/31/2013</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Vanderbilt University</Name>
<CityName>Nashville</CityName>
<ZipCode>372350002</ZipCode>
<PhoneNumber>6153222631</PhoneNumber>
<StreetAddress>Sponsored Programs Administratio</StreetAddress>
<StreetAddress2><![CDATA[PMB 407749 2301 Vanderbilt Place]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<StateCode>TN</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TN05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>965717143</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>VANDERBILT UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004413456</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Vanderbilt University]]></Name>
<CityName>Nashville</CityName>
<StateCode>TN</StateCode>
<ZipCode>372350002</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TN05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~250000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>With modern computing systems, the boundary between computation and communication has become less distinct. For example, as the Internet (in particular, the wide area networks that comprise the Internet) becomes faster and more reliable, more applications that traditionally reside on a local compute node are pushed into the cloud. However, many end-users abstractly think of the network, the server, and the client device as one unit that is used for entertainment and/or productivity. Further, as a result of the seamless interconnection of computing systems and the network, many advantages can be realized (e.g., lower storage requirement on client devices). Instead of separating the domains of computer architecture and computer networking, an integrated, holistic approach can yield tremendous benefits in many areas (e.g., network security and management). This integration is a result of delay signatures in the network traffic that are composed of information leaked from internal organization of a node (e.g., processor configurations, affinity, multi-threading, power save, L1/L2 cache size and location). This project investigated the connection between the computer network and the node&rsquo;s internal architecture. A hardware testbed was used to characterize how the various architectural components contributed to the delay signature. A general-purpose engine was created that can extract the utilization of devices from the network traffic. Several applications were developed to test the technique, with the most notable being network-based detection of counterfeit processors.</p> <p><strong>Intellectual Merit:</strong></p> <p>This project used a holistic, cross-layered approach that combined computer architecture and computer networking to investigate how the microarchitecture affects the network packet generation process, thereby providing a fundamental link between the computing system and network to which the system is connected. We showed that the characterization of network traffic can be used as a distinguishing feature to identify changes in hardware components. Using a statistical analysis performed on the packet inter-arrival times (IATs), our technique can fingerprint and identify components based upon the way in which they send and process ICMP (Internet control message protocol), UDP (user datagram protocol), and TCP (transmission control protocol) network packets. These network fingerprints are then processed by an artificial neural network in order to categorize and classify individual processors. We demonstrated the technique with hardware testbeds that emulated different configurations of a Linux-based networked system on different field-programmable gate array (FPGA) boards. We also demonstrated our approach with a desktop computing system.</p> <p><strong>Broader impacts:</strong></p> <p>This project connected the research communities of computer architecture and computer networking to provide cross-domain benefits for cloud services. In the context of network security and management, the primary benefit of our technique over traditional approaches is that the system does not have to rely on software residing on a node, which could be flawed or may not be available. In the context of cluster grid scheduling, the primary benefit of our technique over traditional approaches is that it provides tremendous scalability. The technique reduces the job-scheduling message complexity from O(number of nodes) to O(number of switches). In the context of hardware security, the primary benefit of our technique over traditional approaches is a non-destructive method that utilizes information leakage to identify and classify microprocessors. As part of the collaborative research, the PIs have engaged in activities to mentor future engineering faculty from traditionally underrepresented groups, including the development of an annual symposium that discusses strategies to complete the tenure-track process successfully.</p> <p>&nbsp;</p><br> <p>            Last Modified: 01/25/2017<br>      Modified by: William&nbsp;H&nbsp;Robinson</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ With modern computing systems, the boundary between computation and communication has become less distinct. For example, as the Internet (in particular, the wide area networks that comprise the Internet) becomes faster and more reliable, more applications that traditionally reside on a local compute node are pushed into the cloud. However, many end-users abstractly think of the network, the server, and the client device as one unit that is used for entertainment and/or productivity. Further, as a result of the seamless interconnection of computing systems and the network, many advantages can be realized (e.g., lower storage requirement on client devices). Instead of separating the domains of computer architecture and computer networking, an integrated, holistic approach can yield tremendous benefits in many areas (e.g., network security and management). This integration is a result of delay signatures in the network traffic that are composed of information leaked from internal organization of a node (e.g., processor configurations, affinity, multi-threading, power save, L1/L2 cache size and location). This project investigated the connection between the computer network and the node?s internal architecture. A hardware testbed was used to characterize how the various architectural components contributed to the delay signature. A general-purpose engine was created that can extract the utilization of devices from the network traffic. Several applications were developed to test the technique, with the most notable being network-based detection of counterfeit processors.  Intellectual Merit:  This project used a holistic, cross-layered approach that combined computer architecture and computer networking to investigate how the microarchitecture affects the network packet generation process, thereby providing a fundamental link between the computing system and network to which the system is connected. We showed that the characterization of network traffic can be used as a distinguishing feature to identify changes in hardware components. Using a statistical analysis performed on the packet inter-arrival times (IATs), our technique can fingerprint and identify components based upon the way in which they send and process ICMP (Internet control message protocol), UDP (user datagram protocol), and TCP (transmission control protocol) network packets. These network fingerprints are then processed by an artificial neural network in order to categorize and classify individual processors. We demonstrated the technique with hardware testbeds that emulated different configurations of a Linux-based networked system on different field-programmable gate array (FPGA) boards. We also demonstrated our approach with a desktop computing system.  Broader impacts:  This project connected the research communities of computer architecture and computer networking to provide cross-domain benefits for cloud services. In the context of network security and management, the primary benefit of our technique over traditional approaches is that the system does not have to rely on software residing on a node, which could be flawed or may not be available. In the context of cluster grid scheduling, the primary benefit of our technique over traditional approaches is that it provides tremendous scalability. The technique reduces the job-scheduling message complexity from O(number of nodes) to O(number of switches). In the context of hardware security, the primary benefit of our technique over traditional approaches is a non-destructive method that utilizes information leakage to identify and classify microprocessors. As part of the collaborative research, the PIs have engaged in activities to mentor future engineering faculty from traditionally underrepresented groups, including the development of an annual symposium that discusses strategies to complete the tenure-track process successfully.          Last Modified: 01/25/2017       Submitted by: William H Robinson]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

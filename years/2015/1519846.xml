<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase I:  Runtime Verification for Automobiles</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2015</AwardEffectiveDate>
<AwardExpirationDate>06/30/2016</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>179999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Peter Atherton</SignBlockName>
<PO_EMAI>patherto@nsf.gov</PO_EMAI>
<PO_PHON>7032928772</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase I project is that it will offer the automotive industry higher reliability from the software systems powering automobiles, by enabling runtime monitoring while providing the maximum possible correctness guarantees for the generated monitors.  Cars will be safer and more rigorously assured.  This project will address a slew of recent problems with software failures, security compromises, and other unintentional software behaviors that occur inevitably as systems become more complex, potentially saving lives and making millions of vehicles safer, easier to upgrade, and better tested.  The commercial value follows the need of manufacturers to retain the basic vehicle safety guarantees while pursuing the commercial necessities of competing on complex software-driven features, ultimately minimizing software development costs and expensive car recalls.  The enhanced scientific and technological understanding from this technology will come as it is deployed in the field, giving manufacturers an impetus to formalize and standardize existing requirements, bolstering their understanding of the software systems in the car.  The technology will also foster the formalization of both open and proprietary specifications, further increasing the understanding of complex automotive systems by facilitating complete analysis.&lt;br/&gt;&lt;br/&gt;This Small Business Innovation Research (SBIR) Phase I project will for the first time explore the application of provably correct runtime verification software to real-time systems.  An efficient and certifying framework allowing for the expression of a diverse range of specifications will enable applications of runtime verification in automobiles, aeronautics, and beyond.  One research objective is to develop a system that can monitor any safety property, generating high-performance C code capable of running on virtually any hardware.  This will combine efficient monitoring with maximal formal guarantees in terms of correctness.  Formal verification was previously realized only for mathematical models of monitors, or in systems with very low expressiveness.  A second research objective is to study the applicability of runtime verification by collecting properties from automotive industry standards, evaluating the complexity of specifying the properties, the possibility of recovering from detected violations, and the performance requirements of the resulting monitors. It is anticipated that hundreds or even thousands of such properties will be monitored simultaneously.</AbstractNarration>
<MinAmdLetterDate>06/26/2015</MinAmdLetterDate>
<MaxAmdLetterDate>12/30/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1519846</AwardID>
<Investigator>
<FirstName>Grigore</FirstName>
<LastName>Rosu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Grigore Rosu</PI_FULL_NAME>
<EmailAddress>grigore.rosu@runtimeverification.com</EmailAddress>
<PI_PHON>2176498738</PI_PHON>
<NSF_ID>000686339</NSF_ID>
<StartDate>06/26/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Runtime Verification, Inc.</Name>
<CityName>Urbana</CityName>
<ZipCode>618012744</ZipCode>
<PhoneNumber>2176498738</PhoneNumber>
<StreetAddress>102 E. Main Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 207]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>833206795</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RUNTIME VERIFICATION, INC.</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[Runtime Verification, Inc.]]></Name>
<CityName/>
<StateCode>IL</StateCode>
<ZipCode>618012744</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5371</Code>
<Text>SBIR Phase I</Text>
</ProgramElement>
<ProgramReference>
<Code>163E</Code>
<Text>SBIR Phase IB</Text>
</ProgramReference>
<ProgramReference>
<Code>5371</Code>
<Text>SMALL BUSINESS PHASE I</Text>
</ProgramReference>
<ProgramReference>
<Code>8032</Code>
<Text>Software Services and Applications</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~150000</FUND_OBLG>
<FUND_OBLG>2016~29999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The first major outcome of this project was the creation and development of an electronic control unit (ECU) based on runtime verification principles and technology, called RV-ECU, for use in vehicles to monitor and enforce safety on the global communications (CAN) bus of the vehicle. &nbsp;A secondary major outcome was the rigorous formalization of various recent hazards in the automobile industry which led to expensive recalls, cyberattacks, or even human life loss, as safety properties and demonstrated that these hazards could have been prevented if a technology like RV-ECU were available. &nbsp;Finally, two papers have been published, and the three undergraduate students who were involved with the project applied or decided to apply for a PhD in the overall project area of safety and security.</p> <p>Outcome 1:&nbsp;The primary image shows the overall architecture of RV-ECU: monitoring code is automatically generated from formal safety specifications, and is then deployed both in existing ECUs as local monitors and in a global safety monitoring unit, RV-ECU. &nbsp;The secondary image shows the current RV-ECU prototype connected to the CAN bus. The main idea is that the local monitors and the global monitor, whose code is automatically generated and provably correct, communicate with each other the status of the global safety property and can take action to steer the overall system to avoid catastrophic safety violations. &nbsp;For example, a "close door" message can be generated by RV-ECU whenever a violation of the safety property "door must be closed if locked" is observed, regardless of whether the property is violated due to a cyberattack or due to a malfunctioning ECU; the local monitor of the open door will then act to that message by closing the door and sending an acknowledgement to the the global RV-ECU. &nbsp;This way, safety is enforced regardless of how the functionality on the CAN bus has been implemented and regardless of mallicious attackers attempting to interfere.</p> <p>Outcome 2: To demonstrate the practicality of RV-ECU, &nbsp;<span>recalls with more than 10,000 cars&nbsp;recalled due to software-related faults were carefully analyzed. &nbsp;The main safety requirements that were violated in 10 of the major recalls were formalized as safety properties in the language used by RV-ECU. &nbsp;Then RV-ECU was used to monitor and enforce these properties, showing that these expensive recalls, costing car manufacturers billions of dollars annually, could have been all avoided with a technology like RV-ECU. &nbsp;Discussions with current collaborators at Toyota and Denso confirm that such demonstrations making a&nbsp;</span>strong case for the novel runtime verification technology are crucial for forming relationships with automotive manufacturers going forward.</p> <p><span>Outcome 3: A paper describing RV-ECU has been published in&nbsp;</span>the Safety Critical Systems section at the&nbsp;Society of Automotive Engineers (SAE'16) World Congress, one of the largest automotive conferences in the world. &nbsp;Another paper describing safety of low-level C code has also been published in the top-tier Computer Aided Verification (CAV'16) conference.&nbsp;</p><br> <p>            Last Modified: 09/19/2016<br>      Modified by: Grigore&nbsp;Rosu</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2016/1519846/1519846_10372532_1474291547740_fullcar--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1519846/1519846_10372532_1474291547740_fullcar--rgov-800width.jpg" title="RV-ECU"><img src="/por/images/Reports/POR/2016/1519846/1519846_10372532_1474291547740_fullcar--rgov-66x44.jpg" alt="RV-ECU"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Overview of the RV-ECU technology.  Monitoring code is automatically generated from safety specifications and deployed in ECUs.  One global ECU, called RV-ECU, is in charge of global safety monitoring.</div> <div class="imageCredit">RV, Inc</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Grigore&nbsp;Rosu</div> <div class="imageTitle">RV-ECU</div> </div> </li> <li> <a href="/por/images/Reports/POR/2016/1519846/1519846_10372532_1474291670542_rvecuconnected--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1519846/1519846_10372532_1474291670542_rvecuconnected--rgov-800width.jpg" title="RV-ECU connected"><img src="/por/images/Reports/POR/2016/1519846/1519846_10372532_1474291670542_rvecuconnected--rgov-66x44.jpg" alt="RV-ECU connected"></a> <div class="imageCaptionContainer"> <div class="imageCaption">RV-ECU connected to the CAN bus (via a door access).  Once connected to the CAN bus, RV-ECU can monitor all the traffic and check and enforce safety properties.</div> <div class="imageCredit">RV, Inc,</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Grigore&nbsp;Rosu</div> <div class="imageTitle">RV-ECU connected</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The first major outcome of this project was the creation and development of an electronic control unit (ECU) based on runtime verification principles and technology, called RV-ECU, for use in vehicles to monitor and enforce safety on the global communications (CAN) bus of the vehicle.  A secondary major outcome was the rigorous formalization of various recent hazards in the automobile industry which led to expensive recalls, cyberattacks, or even human life loss, as safety properties and demonstrated that these hazards could have been prevented if a technology like RV-ECU were available.  Finally, two papers have been published, and the three undergraduate students who were involved with the project applied or decided to apply for a PhD in the overall project area of safety and security.  Outcome 1: The primary image shows the overall architecture of RV-ECU: monitoring code is automatically generated from formal safety specifications, and is then deployed both in existing ECUs as local monitors and in a global safety monitoring unit, RV-ECU.  The secondary image shows the current RV-ECU prototype connected to the CAN bus. The main idea is that the local monitors and the global monitor, whose code is automatically generated and provably correct, communicate with each other the status of the global safety property and can take action to steer the overall system to avoid catastrophic safety violations.  For example, a "close door" message can be generated by RV-ECU whenever a violation of the safety property "door must be closed if locked" is observed, regardless of whether the property is violated due to a cyberattack or due to a malfunctioning ECU; the local monitor of the open door will then act to that message by closing the door and sending an acknowledgement to the the global RV-ECU.  This way, safety is enforced regardless of how the functionality on the CAN bus has been implemented and regardless of mallicious attackers attempting to interfere.  Outcome 2: To demonstrate the practicality of RV-ECU,  recalls with more than 10,000 cars recalled due to software-related faults were carefully analyzed.  The main safety requirements that were violated in 10 of the major recalls were formalized as safety properties in the language used by RV-ECU.  Then RV-ECU was used to monitor and enforce these properties, showing that these expensive recalls, costing car manufacturers billions of dollars annually, could have been all avoided with a technology like RV-ECU.  Discussions with current collaborators at Toyota and Denso confirm that such demonstrations making a strong case for the novel runtime verification technology are crucial for forming relationships with automotive manufacturers going forward.  Outcome 3: A paper describing RV-ECU has been published in the Safety Critical Systems section at the Society of Automotive Engineers (SAE'16) World Congress, one of the largest automotive conferences in the world.  Another paper describing safety of low-level C code has also been published in the top-tier Computer Aided Verification (CAV'16) conference.        Last Modified: 09/19/2016       Submitted by: Grigore Rosu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

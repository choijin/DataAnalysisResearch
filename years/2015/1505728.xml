<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Synergy: Collaborative: CPS-Security: End-to-End Security for the Internet of Things</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>600000.00</AwardTotalIntnAmount>
<AwardAmount>600000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>David Corman</SignBlockName>
<PO_EMAI>dcorman@nsf.gov</PO_EMAI>
<PO_PHON>7032928754</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computation is everywhere. Greeting cards have processors that play songs. Fireworks have processors for precisely timing their detonation. Computers are in engines, monitoring combustion and performance. They are in our homes, hospitals, offices, ovens, planes, trains, and automobiles. These computers, when networked, will form the Internet of Things (IoT). The resulting applications and services have the potential to be even more transformative than the World Wide Web. The security implications are enormous. Internet threats today steal credit cards. Internet threats tomorrow will disable home security systems, flood fields, and disrupt hospitals. The root problem is that these applications consist of software on tiny low-power devices and cloud servers, have difficult networking, and collect sensitive data that deserves strong cryptography, but usually written by developers who have expertise in none of these areas. The goal of the research is to make it possible for two developers to build a complete, secure, Internet of Things applications in three months.&lt;br/&gt;&lt;br/&gt;The research focuses on four important principles. The first is "distributed model view controller." A developer writes an application as a distributed pipeline of model-view-controller systems. A model specifies what data the application generates and stores, while a new abstraction called a transform specifies how data moves from one model to another. The second is "embedded-gateway-cloud." A common architecture dominates Internet of Things applications. Embedded devices communicate with a gateway over low-power wireless. The gateway processes data and communicates with cloud systems in the broader Internet. Focusing distributed model view controller on this dominant architecture constrains the problem sufficiently to make problems, such as system security, tractable. The third is "end-to-end security." Data emerges encrypted from embedded devices and can only be decrypted by end user applications. Servers can compute on encrypted data, and many parties can collaboratively compute results without learning the input. Analysis of the data processing pipeline allows the system and runtime to assert and verify security properties of the whole application. The final principle is "software-defined hardware." Because designing new embedded device hardware is time consuming, developers rely on general, overkill solutions and ignore the resulting security implications. The data processing pipeline can be compiled into a prototype hardware design and supporting software as well as test cases, diagnostics, and a debugging methodology for a developer to bring up the new device. These principles are grounded in Ravel, a software framework that the team collaborates on, jointly contributes to, and integrates into their courses and curricula on cyberphysical systems.</AbstractNarration>
<MinAmdLetterDate>08/17/2015</MinAmdLetterDate>
<MaxAmdLetterDate>09/15/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1505728</AwardID>
<Investigator>
<FirstName>Mark</FirstName>
<LastName>Horowitz</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mark A Horowitz</PI_FULL_NAME>
<EmailAddress>horowitz@stanford.edu</EmailAddress>
<PI_PHON>6507253707</PI_PHON>
<NSF_ID>000235625</NSF_ID>
<StartDate>08/17/2015</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Dan</FirstName>
<LastName>Boneh</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dan Boneh</PI_FULL_NAME>
<EmailAddress>dabo@cs.stanford.edu</EmailAddress>
<PI_PHON>6507253897</PI_PHON>
<NSF_ID>000202506</NSF_ID>
<StartDate>08/17/2015</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Dawson</FirstName>
<LastName>Engler</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dawson R Engler</PI_FULL_NAME>
<EmailAddress>engler@csl.stanford.edu</EmailAddress>
<PI_PHON>6507230762</PI_PHON>
<NSF_ID>000485661</NSF_ID>
<StartDate>08/17/2015</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Philip</FirstName>
<LastName>Levis</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Philip A Levis</PI_FULL_NAME>
<EmailAddress>pal@cs.stanford.edu</EmailAddress>
<PI_PHON>6507232300</PI_PHON>
<NSF_ID>000092250</NSF_ID>
<StartDate>08/17/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Keith</FirstName>
<LastName>Winstein</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Keith Winstein</PI_FULL_NAME>
<EmailAddress>keithw@cs.stanford.edu</EmailAddress>
<PI_PHON>6173882138</PI_PHON>
<NSF_ID>000682184</NSF_ID>
<StartDate>08/17/2015</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Stanford University</Name>
<CityName>Stanford</CityName>
<ZipCode>943052004</ZipCode>
<PhoneNumber>6507232300</PhoneNumber>
<StreetAddress>450 Jane Stanford Way</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009214214</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>LELAND STANFORD JUNIOR UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009214214</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Stanford University]]></Name>
<CityName/>
<StateCode>CA</StateCode>
<ZipCode>943054100</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramReference>
<Code>8225</Code>
<Text>SaTC Special Projects</Text>
</ProgramReference>
<ProgramReference>
<Code>8235</Code>
<Text>CPS-Synergy</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~400000</FUND_OBLG>
<FUND_OBLG>2016~200000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The major goal of this project was to show that, with the help of new cryptography, software, user interfaces, and network technologies, developing secure Internet of Things applications can be easy.</p> <p>One principal findng of the project was that many especially dangerous attacks on Internet of Things applications target the weak link: the tiny, low-power devices "Things". The past 20 years have seen tremendous advances in software security for servers, personal computers, and mobile devices, but the software used in low-power embedded devices had changed very little. To address this, the project developed the Tock operating system, the first open-source secure operating system for embedded systems. Tock uses recent advances in programming languages to be safe from many common attacks, such as buffer overflows. Tock has been adopted by several startup companies and we are working with Google to port it to their Titan chip that provides the root-of-trust for all of their computing systems.</p> <p>A second principal finding of the project is that it is possible to build software services that process encrypted user data. The services cannot decrypt the data: to them, it is a black box. Nonetheless, using new cryptography, these services can compute useful things about the data. For example, a service can store user data and respond to queries about it (e.g., show me the records in the first week of August) without actually knowing what the query or the answer is. One system in particular, called Prio, has been adopted&nbsp; by Mozilla and is used to collect aggregate peformance statistics on its software in a way that exposes no information about individual users. Mozilla can learn that certain web pages are slow for its browser without being able to determine who accessed those web pages.</p> <p>The third principal finding of the project is that the lack of interoperability between many Internet of Things devices today is a networking problem. The "Internet of Things" evokes an idea of many smart devices working together to form larger, more sophisticated applications, much as many web applications build on Google Maps or other services. But today, applications are vertical stovepipe designs, where a device talks only to its mobile app, which talks only its own cloud service. This is an unforeseen implication of some low-level decisions in mobile operating system design, and the project devised new protocols that enable new applications. Furthermore, because applications are vertical stovepipes, we are forced to trust that devices only collect the data they say they do: we cannot see what our devices are sending in the same way we can with web browsers. The project developed a new approach to network security that&nbsp; allows users to inspect what devices are sending while fully protecting that data, something which was previously impossible.</p> <p>The final princpal finding of the project is that developing IoT applications is especially difficult because their devices are truly cyber-physical: they involve a tight coupling between hardware, sensing, software, and physical design. As a result, many things can go wrong, and debugging these systems is especially difficutl. The project devised techniques new "smart" maker tools, such as drill that projects a dot where you should drill and tells you when you've drilled deep enough, or a saw that shows you where to cut.</p> <p>Intellectual Merit: The project researched how Internet of Things applications differ from standard Internet applications, finding new principles for the design and implementation of these systems. This involved an exploration of cryptography, human-computer interaction, networking, hardware, and software. It demonstrated that new techniques, such as lightweight multi-party computation, secure embedded operating systems, auditable networking, and smart tools, make developing secure Internet of Things applications much easier.</p> <p>Broader Impact: Research performed under the grant has seen signfiicant commercial adoption. It has helped pave the way for a next generation of Internet of Things systems and applications. It has established key principles for developing secure Internet of Things applications and demonstrated how to apply those principles in practice.</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/02/2018<br>      Modified by: Philip&nbsp;A&nbsp;Levis</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The major goal of this project was to show that, with the help of new cryptography, software, user interfaces, and network technologies, developing secure Internet of Things applications can be easy.  One principal findng of the project was that many especially dangerous attacks on Internet of Things applications target the weak link: the tiny, low-power devices "Things". The past 20 years have seen tremendous advances in software security for servers, personal computers, and mobile devices, but the software used in low-power embedded devices had changed very little. To address this, the project developed the Tock operating system, the first open-source secure operating system for embedded systems. Tock uses recent advances in programming languages to be safe from many common attacks, such as buffer overflows. Tock has been adopted by several startup companies and we are working with Google to port it to their Titan chip that provides the root-of-trust for all of their computing systems.  A second principal finding of the project is that it is possible to build software services that process encrypted user data. The services cannot decrypt the data: to them, it is a black box. Nonetheless, using new cryptography, these services can compute useful things about the data. For example, a service can store user data and respond to queries about it (e.g., show me the records in the first week of August) without actually knowing what the query or the answer is. One system in particular, called Prio, has been adopted  by Mozilla and is used to collect aggregate peformance statistics on its software in a way that exposes no information about individual users. Mozilla can learn that certain web pages are slow for its browser without being able to determine who accessed those web pages.  The third principal finding of the project is that the lack of interoperability between many Internet of Things devices today is a networking problem. The "Internet of Things" evokes an idea of many smart devices working together to form larger, more sophisticated applications, much as many web applications build on Google Maps or other services. But today, applications are vertical stovepipe designs, where a device talks only to its mobile app, which talks only its own cloud service. This is an unforeseen implication of some low-level decisions in mobile operating system design, and the project devised new protocols that enable new applications. Furthermore, because applications are vertical stovepipes, we are forced to trust that devices only collect the data they say they do: we cannot see what our devices are sending in the same way we can with web browsers. The project developed a new approach to network security that  allows users to inspect what devices are sending while fully protecting that data, something which was previously impossible.  The final princpal finding of the project is that developing IoT applications is especially difficult because their devices are truly cyber-physical: they involve a tight coupling between hardware, sensing, software, and physical design. As a result, many things can go wrong, and debugging these systems is especially difficutl. The project devised techniques new "smart" maker tools, such as drill that projects a dot where you should drill and tells you when you've drilled deep enough, or a saw that shows you where to cut.  Intellectual Merit: The project researched how Internet of Things applications differ from standard Internet applications, finding new principles for the design and implementation of these systems. This involved an exploration of cryptography, human-computer interaction, networking, hardware, and software. It demonstrated that new techniques, such as lightweight multi-party computation, secure embedded operating systems, auditable networking, and smart tools, make developing secure Internet of Things applications much easier.  Broader Impact: Research performed under the grant has seen signfiicant commercial adoption. It has helped pave the way for a next generation of Internet of Things systems and applications. It has established key principles for developing secure Internet of Things applications and demonstrated how to apply those principles in practice.          Last Modified: 11/02/2018       Submitted by: Philip A Levis]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

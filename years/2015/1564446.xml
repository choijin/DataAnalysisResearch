<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Theory and Practice of Tweakable-Blockcipher-Based Cryptography</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2015</AwardEffectiveDate>
<AwardExpirationDate>06/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>212568.00</AwardTotalIntnAmount>
<AwardAmount>212568</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Susanne Wetzel</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Blockciphers are the basic building block of shared-key cryptography. However, for certain important cryptographic goals, like building encryption schemes, the interface presented by blockciphers is limiting. A more modern primitive, the tweakable blockcipher (TBC), is often a better fit.  Like a blockcipher, a TBC takes as input a secret key, a block of data and the tweak which is an additional input which provides variability to the TBC's input-output behavior without having to change the secret key.  TBC-based cryptography has the potential to deliver efficient constructions with better security than analogous blockcipher-based designs, as well natural support for associated data inputs, key reuse, and other practical considerations.&lt;br/&gt;&lt;br/&gt;Despite its clear promise, TBC-based cryptography has not received a sustained and coherent examination.  This project provides such an examination, in an effort to better understand the potential of TBCs to impact future cryptographic practice.  It explores the construction of TBCs, both from scratch and leveraging off-the-shelf primitives.  It reconsiders existing blockcipher-based constructions starting from the question, "what happens if we replace the blockcipher with a TBC?", and leading to new designs with increased security, and greater resilience to certain implementation and usage mistakes.  It also considers foundational matters concerning definitions of security for TBCs, and connections to idealized models of ciphers.</AbstractNarration>
<MinAmdLetterDate>11/16/2015</MinAmdLetterDate>
<MaxAmdLetterDate>11/16/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1564446</AwardID>
<Investigator>
<FirstName>Thomas</FirstName>
<LastName>Shrimpton</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Thomas Shrimpton</PI_FULL_NAME>
<EmailAddress>teshrim@cise.ufl.edu</EmailAddress>
<PI_PHON>5037253423</PI_PHON>
<NSF_ID>000232896</NSF_ID>
<StartDate>11/16/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Florida</Name>
<CityName>GAINESVILLE</CityName>
<ZipCode>326112002</ZipCode>
<PhoneNumber>3523923516</PhoneNumber>
<StreetAddress>1 UNIVERSITY OF FLORIDA</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<StateCode>FL</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>FL03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>969663814</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF FLORIDA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>159621697</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Florida]]></Name>
<CityName>GAINESVILLE</CityName>
<StateCode>FL</StateCode>
<ZipCode>326112002</ZipCode>
<StreetAddress><![CDATA[1 UNIVERSITY OF FLORIDA]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>FL03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~212568</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project is about a type of cryptographic algorithm known as a "tweakable blockcipher".&nbsp; One can think of a blockcipher as algorithm that takes in a small, fixed-size block of data and, under the control of a secret key, turns that data into a same-sized block of encrypted data.&nbsp; DES and AES are examples of blockciphers that are in everyday use, as part of encryption schemes that protect data as it traverses the Internet, digitized voice and data on mobile networks, computer filesystems, etc.&nbsp; While incredibly useful and widely deployed, one drawback to a traditional blockcipher is that the secret mapping between a data block and its encrypted form is completely determined and fixed once the secret key is in place.&nbsp; This is potentially problematic because it means that the same block of data will be turned into the same block of encrypted data every time it is processed.&nbsp; (Imagine that the data blocks are the text "Launch" or "Hold", or votes, or pixels in an image.)&nbsp; Most applications would like to avoid this behavior, so that one cannot infer the underlying data using simple techniques like frequency analysis.&nbsp; Real encryption schemes provide this per-use variability by including a random (or, at least, non-repeating) value in each computation.&nbsp; But this extra random value has to be transmitted along with the encrypted data, so that it can be decrypted and the underlying data recovered.&nbsp; Transmitting these extra bits costs bandwidth and power in applications where data is communicated over a network; in encrypted storage applications (e.g. all modern hard-drives and mobile devices) one often requires that the encrypted data and the original data are the same size, so there is just no room for the extra random bits.&nbsp; Encryption schemes built from <em>tweakable</em> blockciphers, however, can avoid these problems.&nbsp; As such, they are the foundation for most encrypted storage systems.</p> <p>This work advanced the state of the art in the theory and practice of cryptography that uses tweakable blockciphers.&nbsp; It developed new kinds of tweakable-blockcipher-based cryptography, leading to cryptographic algorithms that are more efficient and more secure than would have been possible using traditional blockciphers.&nbsp; It produced new mathematical techniques for analyzing cryptographic algorithms.&nbsp; Some of the algorithms developed under this grant have been transitioned to industry.&nbsp; In addition, the grant supported multiple graduate students at two universities.&nbsp; These students were integral in the research, developement, testing and presentation of the results, and they have taken positions at major companies, e.g. Google and Tesla.</p> <p>Finally, the work uncovered new research directions, and set the stage for future students and industrial researchers to develop new cryptographic algorithms and security mechanisms.</p><br> <p>            Last Modified: 10/01/2018<br>      Modified by: Thomas&nbsp;Shrimpton</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project is about a type of cryptographic algorithm known as a "tweakable blockcipher".  One can think of a blockcipher as algorithm that takes in a small, fixed-size block of data and, under the control of a secret key, turns that data into a same-sized block of encrypted data.  DES and AES are examples of blockciphers that are in everyday use, as part of encryption schemes that protect data as it traverses the Internet, digitized voice and data on mobile networks, computer filesystems, etc.  While incredibly useful and widely deployed, one drawback to a traditional blockcipher is that the secret mapping between a data block and its encrypted form is completely determined and fixed once the secret key is in place.  This is potentially problematic because it means that the same block of data will be turned into the same block of encrypted data every time it is processed.  (Imagine that the data blocks are the text "Launch" or "Hold", or votes, or pixels in an image.)  Most applications would like to avoid this behavior, so that one cannot infer the underlying data using simple techniques like frequency analysis.  Real encryption schemes provide this per-use variability by including a random (or, at least, non-repeating) value in each computation.  But this extra random value has to be transmitted along with the encrypted data, so that it can be decrypted and the underlying data recovered.  Transmitting these extra bits costs bandwidth and power in applications where data is communicated over a network; in encrypted storage applications (e.g. all modern hard-drives and mobile devices) one often requires that the encrypted data and the original data are the same size, so there is just no room for the extra random bits.  Encryption schemes built from tweakable blockciphers, however, can avoid these problems.  As such, they are the foundation for most encrypted storage systems.  This work advanced the state of the art in the theory and practice of cryptography that uses tweakable blockciphers.  It developed new kinds of tweakable-blockcipher-based cryptography, leading to cryptographic algorithms that are more efficient and more secure than would have been possible using traditional blockciphers.  It produced new mathematical techniques for analyzing cryptographic algorithms.  Some of the algorithms developed under this grant have been transitioned to industry.  In addition, the grant supported multiple graduate students at two universities.  These students were integral in the research, developement, testing and presentation of the results, and they have taken positions at major companies, e.g. Google and Tesla.  Finally, the work uncovered new research directions, and set the stage for future students and industrial researchers to develop new cryptographic algorithms and security mechanisms.       Last Modified: 10/01/2018       Submitted by: Thomas Shrimpton]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

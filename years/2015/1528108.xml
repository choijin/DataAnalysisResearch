<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>STARSS: Small: Collaborative: Specification and Verification for Secure Hardware</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2015</AwardEffectiveDate>
<AwardExpirationDate>07/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>146667.00</AwardTotalIntnAmount>
<AwardAmount>146667</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>There is a growing need for techniques to detect security vulnerabilities in hardware and at the hardware-software interface. Such vulnerabilities arise from the use of untrusted supply chains for processors and system-on-chip components and from the scope for malicious agents to subvert a system by exploiting hardware defects arising from design errors, incomplete specifications, or maliciously inserted blocks. This project addresses the problem by developing foundational techniques and tools for formal and semi-formal specification and verification of security properties of hardware. &lt;br/&gt;&lt;br/&gt;This project addresses gaps in the current specification and verification processes for hardware designs. Given a design and a (possibly informal) specification, the approach first identifies signals that correspond to high-integrity or confidential parts of the design, such as privileged mode flags or secret keys. The approach uses this information to perform critical signal analysis, specification generation, security-aware specification analysis, and test characterization and augmentation. These steps are iterated  until a suitable level of security assurance is attained. The methods build upon formal computational engines for Boolean reasoning, symbolic simulation, and model checking. The project is evaluated using case studies based on processor cores and non-processor blocks, where each case study includes both offensive and defensive components. Tangible results will include theories, threat models, software tools, benchmarks, and case studies. Results from the project are incorporated into courses and textbooks written by the PIs to teach students how to design systems with a security mindset.</AbstractNarration>
<MinAmdLetterDate>08/11/2015</MinAmdLetterDate>
<MaxAmdLetterDate>08/11/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1528108</AwardID>
<Investigator>
<FirstName>Sanjit</FirstName>
<LastName>Seshia</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sanjit Seshia</PI_FULL_NAME>
<EmailAddress>sseshia@eecs.berkeley.edu</EmailAddress>
<PI_PHON>5106436968</PI_PHON>
<NSF_ID>000447335</NSF_ID>
<StartDate>08/11/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Berkeley</Name>
<CityName>BERKELEY</CityName>
<ZipCode>947101749</ZipCode>
<PhoneNumber>5106433891</PhoneNumber>
<StreetAddress>Sponsored Projects Office</StreetAddress>
<StreetAddress2><![CDATA[1608 Fourth Street, Suite 220]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>124726725</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF CALIFORNIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California - Berkeley]]></Name>
<CityName>Berkeley</CityName>
<StateCode>CA</StateCode>
<ZipCode>947201770</ZipCode>
<StreetAddress><![CDATA[568 Cory Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8225</Code>
<Text>SaTC Special Projects</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~146667</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>As computing moves to the cloud, there is a pressing need to provide users with strong guarantees of security and privacy. Such guarantees are difficult to provide for standard computing platforms that have a large software trusted computing base. While trusted platforms based on hardware security primitives offer the promise of a smaller trusted computing base, the challenge of guaranteeing security remains. The goal of this project was to develop novel formal techniques for modeling, specification, and verification of security properties of trusted hardware platforms and the software executing on these platforms.</p> <p>To this end, the project included the following major accomplishments:</p> <p>(i) Intellectual Merit: The project developed new techniques and tools for the verification of confidentiality properties of software executing on Intel SGX trusted enclave platforms. Results include the creation of models of relevant aspects of SGX, the development of several models of privileged software adversaries who have access to non-enclave memory and CPU state, a verification methodology for proving that an application running on SGX does not contain a vulnerability that causes it to reveal secrets to the adversary, and an extension to handle side channels such as page access patterns.&nbsp; In addition, the project developed a formal foundation for trusted enclave platforms with three key contributions: formalizing the notion of secure remote execution; formalizing a class of trusted platforms by developing a specification called the trusted abstract platform (TAP), and proving that formal models of Intel SGX and the MIT RISC-V Sanctum processor refine the TAP, albeit under different attacker models. The project also contributed to new computational tools for formal verification and synthesis, including the UCLID5 toolkit for modeling and verification of computational systems, and the CADET solver for quantified Boolean formulas with one quantifier alternation.</p> <p>(ii) Broader Impact: The project has been instrumental in training both graduate students and postdoctoral researchers, and has also involved undergraduate students in research projects. The PI has also disseminated results obtained in the project to a broader audience through courses, tutorials and invited talks. Software developed in this project has been released publicly as open source.&nbsp; This work has also had industry impact by influencing the design of Microsoft's Azure Confidential Computing services.</p> <p>In summary, this project developed theory, techniques, and tools that provide a foundation for developing secure cloud computing platforms, has influenced the design of industry cloud computing systems, and has trained students and postdoctoral researchers to be leaders in the design and verification of secure computing platforms.<br /><br /></p><br> <p>            Last Modified: 11/18/2018<br>      Modified by: Sanjit&nbsp;Seshia</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ As computing moves to the cloud, there is a pressing need to provide users with strong guarantees of security and privacy. Such guarantees are difficult to provide for standard computing platforms that have a large software trusted computing base. While trusted platforms based on hardware security primitives offer the promise of a smaller trusted computing base, the challenge of guaranteeing security remains. The goal of this project was to develop novel formal techniques for modeling, specification, and verification of security properties of trusted hardware platforms and the software executing on these platforms.  To this end, the project included the following major accomplishments:  (i) Intellectual Merit: The project developed new techniques and tools for the verification of confidentiality properties of software executing on Intel SGX trusted enclave platforms. Results include the creation of models of relevant aspects of SGX, the development of several models of privileged software adversaries who have access to non-enclave memory and CPU state, a verification methodology for proving that an application running on SGX does not contain a vulnerability that causes it to reveal secrets to the adversary, and an extension to handle side channels such as page access patterns.  In addition, the project developed a formal foundation for trusted enclave platforms with three key contributions: formalizing the notion of secure remote execution; formalizing a class of trusted platforms by developing a specification called the trusted abstract platform (TAP), and proving that formal models of Intel SGX and the MIT RISC-V Sanctum processor refine the TAP, albeit under different attacker models. The project also contributed to new computational tools for formal verification and synthesis, including the UCLID5 toolkit for modeling and verification of computational systems, and the CADET solver for quantified Boolean formulas with one quantifier alternation.  (ii) Broader Impact: The project has been instrumental in training both graduate students and postdoctoral researchers, and has also involved undergraduate students in research projects. The PI has also disseminated results obtained in the project to a broader audience through courses, tutorials and invited talks. Software developed in this project has been released publicly as open source.  This work has also had industry impact by influencing the design of Microsoft's Azure Confidential Computing services.  In summary, this project developed theory, techniques, and tools that provide a foundation for developing secure cloud computing platforms, has influenced the design of industry cloud computing systems, and has trained students and postdoctoral researchers to be leaders in the design and verification of secure computing platforms.         Last Modified: 11/18/2018       Submitted by: Sanjit Seshia]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

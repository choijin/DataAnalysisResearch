<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Context-aware Regression Testing Techniques and Empirical Evaluations of Their Economic Impact</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/16/2015</AwardEffectiveDate>
<AwardExpirationDate>03/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>202213.00</AwardTotalIntnAmount>
<AwardAmount>202213</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Successful software systems evolve: they are enhanced, corrected, and ported to new platforms. To ensure the quality of modified systems, software engineers perform regression testing, but this can be expensive depending on the size of the systems and their complexity and is responsible for a significant percentage of the cost of software. For reasons such as this, researchers have spent a great deal of time creating and empirically studying various techniques for improving the cost-effectiveness of regression testing. Despite the progress, three important aspects of the regression testing problem have not been considered: (1) factors involving the context in which testing occurs; (2) assessment of regression techniques across entire system lifetimes; (3) proper economic models that capture important cost factors and quantify benefits of regression testing techniques and strategies. &lt;br/&gt;&lt;br/&gt;This work will lay a foundation for evaluating the cost-effectiveness of various regression testing techniques and strategies in practical ways.  Further, the discoveries made by this work will promote software dependability, with potential benefits to all organizations and people who depend on that software.&lt;br/&gt;This project addresses these issues by performing the following activities:&lt;br/&gt;(1) Creating cost-effective regression testing techniques that address the testing process and domain contexts,&lt;br/&gt;(2) Creating regression testing strategies that address system lifetimes, &lt;br/&gt;(3) Creating economic models that enable the adequate assessment of techniques and strategies, and&lt;br/&gt;(4) Evaluating and refining these techniques and strategies through rigorous empirical approaches.</AbstractNarration>
<MinAmdLetterDate>01/11/2016</MinAmdLetterDate>
<MaxAmdLetterDate>06/23/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1564238</AwardID>
<Investigator>
<FirstName>Hyunsook</FirstName>
<LastName>Do</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Hyunsook Do</PI_FULL_NAME>
<EmailAddress>hyunsook.do@unt.edu</EmailAddress>
<PI_PHON>9405654864</PI_PHON>
<NSF_ID>000081253</NSF_ID>
<StartDate>01/11/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of North Texas</Name>
<CityName>Denton</CityName>
<ZipCode>762035017</ZipCode>
<PhoneNumber>9405653940</PhoneNumber>
<StreetAddress>1155 Union Circle #305250</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>614168995</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NORTH TEXAS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>064117963</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of North Texas]]></Name>
<CityName/>
<StateCode>TX</StateCode>
<ZipCode>762035017</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~97193</FUND_OBLG>
<FUND_OBLG>2016~105020</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>As software evolves and is maintained, software engineers perform regression testing on it to validate new features and to detect whether corrections and enhancements have introduced new faults into previously tested code. Regression testing plays an integral role in maintaining the quality of subsequent releases of software, but it is also expensive. The major goal of the project is to improve the cost-effectiveness of regression testing by providing appropriate regression testing approaches for software organizations that face various limits and constraints. In particular, the specific goals of the project is to create cost-effective regression testing techniques that address the testing process and domain contexts, create regression testing strategies that address system lifetimes, and evaluate/refine these techniques and strategies through rigorous empirical approaches.<br /><br />Under support of this grant, we engaged in several activities directed at the grant's objectives and produced the following outcomes.<br /><br />o Intellectual Merit</p> <p>&nbsp; * We developed various regression testing tools and techniques that support cost-effective regression testing as follows:</p> <ul> <li>&nbsp;A regression testing framework for PHP web applications (PARTE) that supports cost reduction when testing a new version of the application. This framework includes algorithms for generating regression test paths for the new version and for identifying reusable constraint values from the previous version to save regression testing cost. The framework also includes an approach to repairing obsolete test cases to reduce regression testing costs further.</li> </ul> <ul> <li>Various adaptive regression testing strategies that can select the most cost-effective alternative among regression testing techniques for a specific version considering software companies' situations and feedback from prior regression testing sessions using fuzzy theory and an expert system.</li> </ul> <ul> <li>A model-based exploratory testing technique that saves time and resources.</li> </ul> <ul> <li>Test case prioritization techniques that use requirements clusters and risk information from requirements specifications. The risk estimation is performed using a fuzzy expert system.</li> </ul> <ul> <li>Regression testing techniques that use software repository mining approaches, such as using information about top failures, association rule mining algorithm, and repository history.</li> </ul> <ul> <li>Regression testing approaches that utilize telemetry data and machine learning techniques to improve test case prioritization in the context of industrial applications.</li> </ul> <ul> <li>Graph-based multi-objective test case prioritization techniques that attempt to achieve two goals simultaneously. The approach uses code coverage, test dissimilarity, and test execution time, and provides an efficient search algorithm to find more important tests through the generated graph to achieve two goals of regression testing.</li> </ul> <ul> <li>The enhanced economic model (EVOMO) that incorporates the cost of applying the adaptive regression testing strategies.</li> </ul> <ul> <li>A framework for a model-based requirements verification technique that can help address software problems (e.g., off-nominal behaviors) at an early software development stage. This frame includes several components, such as natural language processing, model element analysis/verification, and off-nominal behavior analysis. The constructed model can be applied to the modified version of the system to identify regression defects.</li> </ul> <p>&nbsp; * Using the techniques and strategies we developed, we performed several empirical studies to evaluate the proposed approaches, and the empirical studies showed the following results:</p> <ul> <li>PARTE approach can generate significantly fewer test cases needed to test the modified version of the program compared to the control technique. Also, by reusing input values across versions, we were able to reduce the significant amount time that is required for resolving input constraints. In particular, we were able to produce big savings for the versions that went through frequent patches.</li> </ul> <ul> <li>The results from the experiments with adaptive regression testing strategies show that there is potential for large cost-savings in regression testing by choosing a prioritization technique based on criteria related to a specific software version. Thus, we believe that our strategy can assist researchers and practitioners in choosing cost-effective techniques across system lifetime.</li> </ul> <ul> <li>The requirements-based clustering approach which incorporates traditional code analysis information can improve the effectiveness of test case prioritization techniques, but the results vary by the cluster sizes.</li> </ul> <ul> <li>The empirical results of the classification-based failure prediction technique indicate that, while each attribute can help improve failure prediction as shown by other research, some attributes, such as historical failure information, have much stronger prediction power. Other attributes, such as churn information, which are usually considered good predictors of test failure were not as effective for this project.</li> </ul> <ul> <li>The results from model-based requirements verification showed that this approach was able to expose undesired system behaviors that would cause a safety hazard.</li> </ul> <p><br />o Broader Impacts</p> <ul> <li>Contributions to human resource development: Primary contributions involved training of graduate students. 5 Ph.D. and 4 M.S. students, and several undergraduate students had been supported by this grant.</li> </ul> <ul> <li>We produced 33 IEEE/ACM conference and journal papers under this grant.</li> </ul> <ul> <li>&nbsp;We produced the following software tools and artifacts:</li> </ul> <p style="padding-left: 90px;">- PHP web application regression testing engine<br />- Various test case prioritization tools<br />- A framework for causal component model that supports requirements analysis/verification<br />- Applications under test, and their associated artifacts (e.g., test cases, defects, and code coverage)</p><br> <p>            Last Modified: 04/22/2019<br>      Modified by: Hyunsook&nbsp;Do</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ As software evolves and is maintained, software engineers perform regression testing on it to validate new features and to detect whether corrections and enhancements have introduced new faults into previously tested code. Regression testing plays an integral role in maintaining the quality of subsequent releases of software, but it is also expensive. The major goal of the project is to improve the cost-effectiveness of regression testing by providing appropriate regression testing approaches for software organizations that face various limits and constraints. In particular, the specific goals of the project is to create cost-effective regression testing techniques that address the testing process and domain contexts, create regression testing strategies that address system lifetimes, and evaluate/refine these techniques and strategies through rigorous empirical approaches.  Under support of this grant, we engaged in several activities directed at the grant's objectives and produced the following outcomes.  o Intellectual Merit    * We developed various regression testing tools and techniques that support cost-effective regression testing as follows:   A regression testing framework for PHP web applications (PARTE) that supports cost reduction when testing a new version of the application. This framework includes algorithms for generating regression test paths for the new version and for identifying reusable constraint values from the previous version to save regression testing cost. The framework also includes an approach to repairing obsolete test cases to reduce regression testing costs further.   Various adaptive regression testing strategies that can select the most cost-effective alternative among regression testing techniques for a specific version considering software companies' situations and feedback from prior regression testing sessions using fuzzy theory and an expert system.   A model-based exploratory testing technique that saves time and resources.   Test case prioritization techniques that use requirements clusters and risk information from requirements specifications. The risk estimation is performed using a fuzzy expert system.   Regression testing techniques that use software repository mining approaches, such as using information about top failures, association rule mining algorithm, and repository history.   Regression testing approaches that utilize telemetry data and machine learning techniques to improve test case prioritization in the context of industrial applications.   Graph-based multi-objective test case prioritization techniques that attempt to achieve two goals simultaneously. The approach uses code coverage, test dissimilarity, and test execution time, and provides an efficient search algorithm to find more important tests through the generated graph to achieve two goals of regression testing.   The enhanced economic model (EVOMO) that incorporates the cost of applying the adaptive regression testing strategies.   A framework for a model-based requirements verification technique that can help address software problems (e.g., off-nominal behaviors) at an early software development stage. This frame includes several components, such as natural language processing, model element analysis/verification, and off-nominal behavior analysis. The constructed model can be applied to the modified version of the system to identify regression defects.     * Using the techniques and strategies we developed, we performed several empirical studies to evaluate the proposed approaches, and the empirical studies showed the following results:  PARTE approach can generate significantly fewer test cases needed to test the modified version of the program compared to the control technique. Also, by reusing input values across versions, we were able to reduce the significant amount time that is required for resolving input constraints. In particular, we were able to produce big savings for the versions that went through frequent patches.   The results from the experiments with adaptive regression testing strategies show that there is potential for large cost-savings in regression testing by choosing a prioritization technique based on criteria related to a specific software version. Thus, we believe that our strategy can assist researchers and practitioners in choosing cost-effective techniques across system lifetime.   The requirements-based clustering approach which incorporates traditional code analysis information can improve the effectiveness of test case prioritization techniques, but the results vary by the cluster sizes.   The empirical results of the classification-based failure prediction technique indicate that, while each attribute can help improve failure prediction as shown by other research, some attributes, such as historical failure information, have much stronger prediction power. Other attributes, such as churn information, which are usually considered good predictors of test failure were not as effective for this project.   The results from model-based requirements verification showed that this approach was able to expose undesired system behaviors that would cause a safety hazard.    o Broader Impacts  Contributions to human resource development: Primary contributions involved training of graduate students. 5 Ph.D. and 4 M.S. students, and several undergraduate students had been supported by this grant.   We produced 33 IEEE/ACM conference and journal papers under this grant.    We produced the following software tools and artifacts:  - PHP web application regression testing engine - Various test case prioritization tools - A framework for causal component model that supports requirements analysis/verification - Applications under test, and their associated artifacts (e.g., test cases, defects, and code coverage)       Last Modified: 04/22/2019       Submitted by: Hyunsook Do]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>STARSS: Small: Collaborative: Practical and Scalable Security Verification of Security-Aware Hardware Architectures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2015</AwardEffectiveDate>
<AwardExpirationDate>09/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>133333.00</AwardTotalIntnAmount>
<AwardAmount>133333</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Computers form the backbone of any modern society, and often process large amounts of sensitive and private information.  To help secure the software, and the sensitive data, a number of secure hardware-software and processor architectures have been proposed.  These architectures incorporate novel protection and defense mechanisms directly in the hardware where they cannot be modified or bypassed, unlike software protections.  However, due to lack of practical and scalable security verification tools and methodologies, very few of the proposed hardware security architectures have been commercially deployed.  This project develops a security verification methodology that is applicable to different hardware-software security architectures. &lt;br/&gt;&lt;br/&gt;This project develops security invariants and methodology that hardware architects can deploy to check the security properties of their architectures in a scalable and semi-automated manner. The methodology is applied to verify hardware-enhanced isolation architectures and architectures that minimize the attack surface in cloud computing.  Verification of a secure cache's resistance to cache side channel attacks is also investigated. Researchers and designers will have a new method to systematically check their designs, and show to others the conditions under which they work.  Hardware manufacturers will gain assurance to actually implement these security architectures in real products.  In turn, customers will gain assurance about the secure hardware that protects their computations running on their devices or virtual machines running on remote cloud servers. Security architectures are important to customers and hardware manufacturers, however, security verification is needed to make them a reality.</AbstractNarration>
<MinAmdLetterDate>08/20/2015</MinAmdLetterDate>
<MaxAmdLetterDate>08/20/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1526493</AwardID>
<Investigator>
<FirstName>Ruby</FirstName>
<LastName>Lee</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ruby Lee</PI_FULL_NAME>
<EmailAddress>rblee@princeton.edu</EmailAddress>
<PI_PHON>6092581426</PI_PHON>
<NSF_ID>000147210</NSF_ID>
<StartDate>08/20/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<StreetAddress2><![CDATA[P.O. Box 36]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NJ12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>002484665</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF PRINCETON UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002484665</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Princeton University]]></Name>
<CityName>Princeton</CityName>
<StateCode>NJ</StateCode>
<ZipCode>085442020</ZipCode>
<StreetAddress><![CDATA[87 Prospect Avenue, 2nd floor]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NJ12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8226</Code>
<Text>SaTC: STARSS</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~133333</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span style="white-space: pre;"> </span>Computers depend on cache memories for performance, but caches are susceptible to information leaks through side-channel attacks.&nbsp;&nbsp;While secure cache architectures have been proposed, there was no systematic way to evaluate their resilience to these side-channel attacks.&nbsp;&nbsp;We developed two methodologies for the security verification of cache architectures against cache timing side-channel attacks.&nbsp;&nbsp;In the first empirical approach, we developed a suite of cache timing attacks, and used these to test whether each type of attack succeeds or fails on different secure cache architectures.&nbsp;</p> <p>&nbsp;<span style="white-space: pre;"> </span>In the second mathematical approach, we modelled the attack, the victim process and the cache architecture simultaneously, using a Probabilistic Information Flow Graph (PIFG).&nbsp;&nbsp;This enabled us to quantitatively evaluate a secure cache''s resilience to a class of cache attacks. We accomplished the modelling and quantitative evaluation of all the nine secure cache architectures proposed by researchers against all the known classes of cache timing attacks. This included partition-based secure caches like the Partition-Locked cache and Nomo cache, as well as randomization-based secure caches like Newcache, Random Permutation cache and Random Fill cache.</p> <p><span style="white-space: pre;"> </span>Beyond cache architectures, we developed a practical and scalable methodology to do security verification of a hardware-software security architecture.&nbsp;&nbsp;As a concrete example, we applied our methodology to the security&nbsp;verification of CloudMonatt, a hardware-software security architecture for monitoring and attesting to the security health of virtual machines in clouds. A prototype of CloudMonatt was implemented in the OpenStack open-source cloud computing framework.</p> <p><span style="white-space: pre;"> </span>We also designed a general security framework, using Record-and-Replay mechanisms, for refining attack detection.&nbsp;&nbsp;This allows more efficient attack detection mechanisms which may generate false alarms, since our Record-and-Replay architecture would enable on-the-fly replay to help distinguish real attacks from false alarms. &nbsp;We showed an application to ROP (Return-Oriented Programming) attacks.</p> <p>Our security verification methodologies enable security verification at the design stage, making it much easier for designers to catch security vulnerabilities and verify their design's security properties.&nbsp;&nbsp;This can lead to more secure designs being implemented and deployed, and thus to an improvement in cyber security.</p> <p>Selected Publications:</p> <p><strong>How secure is your cache against side-channel attacks? &nbsp;</strong>IEEE/ACM International Symposium on Microarchitecture (MICRO), October 2017.&nbsp;&nbsp;<a href="https://doi.org/10.1145/3123939.3124546">DOI: 10.1145/3123939.3124546</a></p> <p><strong>Design, Implementation and Verification of Cloud Architecture for Monitoring a Virtual Machine's Security Health.&nbsp;</strong>IEEE Transactions on Computers, 67:6. December 2017.&nbsp;DOI:<strong>&nbsp;</strong><a href="https://doi.org/10.1109/TC.2017.2780823" target="_blank">10.1109/TC.2017.2780823</a></p> <p><strong>Practical and Scalable Security Verification of Secure Architectures.&nbsp;&nbsp;</strong>July&nbsp;&nbsp;2018.&nbsp;<a href="https://arxiv.org/abs/1807.01854">arXiv:1807.01854</a>&nbsp;.&nbsp;</p> <p><strong>Record-Replay Architecture as a General Security Framework.&nbsp;</strong>IEEE International&nbsp;Symposium on High Performance Computer Architecture (HPCA), February 2018.<strong>&nbsp;&nbsp;</strong>DOI:<strong>&nbsp;</strong><a href="https://doi.org/10.1109/HPCA.2018.00025" target="_blank">10.1109/HPCA.2018.00025</a><strong>&nbsp;</strong></p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/30/2020<br>      Modified by: Ruby&nbsp;Lee</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Computers depend on cache memories for performance, but caches are susceptible to information leaks through side-channel attacks.  While secure cache architectures have been proposed, there was no systematic way to evaluate their resilience to these side-channel attacks.  We developed two methodologies for the security verification of cache architectures against cache timing side-channel attacks.  In the first empirical approach, we developed a suite of cache timing attacks, and used these to test whether each type of attack succeeds or fails on different secure cache architectures.     In the second mathematical approach, we modelled the attack, the victim process and the cache architecture simultaneously, using a Probabilistic Information Flow Graph (PIFG).  This enabled us to quantitatively evaluate a secure cache''s resilience to a class of cache attacks. We accomplished the modelling and quantitative evaluation of all the nine secure cache architectures proposed by researchers against all the known classes of cache timing attacks. This included partition-based secure caches like the Partition-Locked cache and Nomo cache, as well as randomization-based secure caches like Newcache, Random Permutation cache and Random Fill cache.   Beyond cache architectures, we developed a practical and scalable methodology to do security verification of a hardware-software security architecture.  As a concrete example, we applied our methodology to the security verification of CloudMonatt, a hardware-software security architecture for monitoring and attesting to the security health of virtual machines in clouds. A prototype of CloudMonatt was implemented in the OpenStack open-source cloud computing framework.   We also designed a general security framework, using Record-and-Replay mechanisms, for refining attack detection.  This allows more efficient attack detection mechanisms which may generate false alarms, since our Record-and-Replay architecture would enable on-the-fly replay to help distinguish real attacks from false alarms.  We showed an application to ROP (Return-Oriented Programming) attacks.  Our security verification methodologies enable security verification at the design stage, making it much easier for designers to catch security vulnerabilities and verify their design's security properties.  This can lead to more secure designs being implemented and deployed, and thus to an improvement in cyber security.  Selected Publications:  How secure is your cache against side-channel attacks?  IEEE/ACM International Symposium on Microarchitecture (MICRO), October 2017.  DOI: 10.1145/3123939.3124546  Design, Implementation and Verification of Cloud Architecture for Monitoring a Virtual Machine's Security Health. IEEE Transactions on Computers, 67:6. December 2017. DOI: 10.1109/TC.2017.2780823  Practical and Scalable Security Verification of Secure Architectures.  July  2018. arXiv:1807.01854 .   Record-Replay Architecture as a General Security Framework. IEEE International Symposium on High Performance Computer Architecture (HPCA), February 2018.  DOI: 10.1109/HPCA.2018.00025                 Last Modified: 12/30/2020       Submitted by: Ruby Lee]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

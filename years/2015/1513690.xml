<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Medium: Collaborative: Improving Mobile-Application Security via Text Analytics</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2015</AwardEffectiveDate>
<AwardExpirationDate>06/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>308000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Security policies often base access decisions on temporal context (e.g., time of day) and environmental context (e.g., geographic location). Access control policies for operating systems frequently consider execution context (e.g., user ID, program arguments). However, little has been done to incorporate user expectation context into security decision mechanisms. Text artifacts provide a source of user expectation context. When finding, installing, and running software, users are shown natural language text, e.g., textual functionality descriptions, permission requests, privacy notices, and user interface text. This research aims to improve security decisions using expectation context, by relating user-facing natural language text with security operations.&lt;br/&gt;&lt;br/&gt;This research focuses specifically on mobile applications by incorporating expectation context when making security decisions. Mobile applications provide specific forms of user text and security operations. This research considers the relationship between an application's description or user interface text and different granularities of security operations. The research forms the foundation for techniques and tools that inform mobile-device users of the security and privacy implications of installing mobile applications. As broader impacts, this research enables developers to produce more secure mobile applications and enables users to use more secure mobile applications.</AbstractNarration>
<MinAmdLetterDate>06/09/2015</MinAmdLetterDate>
<MaxAmdLetterDate>05/03/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1513690</AwardID>
<Investigator>
<FirstName>William</FirstName>
<LastName>Enck</LastName>
<PI_MID_INIT>H</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William H Enck</PI_FULL_NAME>
<EmailAddress>whenck@ncsu.edu</EmailAddress>
<PI_PHON>9195137905</PI_PHON>
<NSF_ID>000593699</NSF_ID>
<StartDate>06/09/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Carolina State University</Name>
<CityName>Raleigh</CityName>
<ZipCode>276957514</ZipCode>
<PhoneNumber>9195152444</PhoneNumber>
<StreetAddress>2601 Wolf Village Way</StreetAddress>
<StreetAddress2><![CDATA[Admin. III, STE 240]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042092122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTH CAROLINA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>142363428</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[North Carolina State University]]></Name>
<CityName>Raleigh</CityName>
<StateCode>NC</StateCode>
<ZipCode>276958206</ZipCode>
<StreetAddress><![CDATA[890 Oval Dr]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~300000</FUND_OBLG>
<FUND_OBLG>2016~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-cbd86b9d-7fff-ade0-f903-bb41d587e896"> </span></p> <p dir="ltr"><span>For the duration of this NSF project, we, the principal investigators and students, have introduced and developed practical techniques to improve security decisions using expectation context, by relating user-facing natural language text with security operations</span><span>. </span><span>This project has helped discover new security analysis techniques for mobile applications, and helped gain better understanding of the fundamental and practical challenges for enabling developers to produce more secure mobile applications and enabling users to use more secure mobile applications. More specifically,</span></p> <p dir="ltr"><span>- We have conducted text analytics to study grayware on the Google Play store. Grayware is an interesting topic, because the undesirability of a given application is largely determined by the expectation of the user running it. To understand the types of grayware in mobile platforms, we performed an informal survey of the Google Play Store and defined 11 categories of mobile grayware. With this mobile grayware classification, we investigated the ability for text analytics to identify questionable applications based on app store metadata.&nbsp;</span></p> <p dir="ltr"><span>- We have developed analysis techniques and conducted empirical studies of sensitive user inputs in Android applications. In particular, we have developed the UiRef (User Input REsolution Framework) technique for resolving the semantics of user inputs requested by Android applications. The core task of UiRef is to identify and disambiguate the textual labels that describe the information the user enters into input widgets. These labels are often beside or above the widget itself.&nbsp;</span></p> <p dir="ltr"><span>- We have developed the PolicyLint technique for privacy policy analysis that identifies contradictions that may occur within an individual policy by simultaneously considering negation and varying semantic levels of data objects and entities. To do so, PolicyLint automatically generates ontologies from a large corpus of privacy policies and uses sentence-level natural language processing to capture both positive and negative statements of data collection and sharing.</span></p> <p dir="ltr"><span>- We have conducted </span><span>a large-scale measurement study on five aspects of runtime rationales for mobile-application users to better understand the permissions requested by the </span><span>applications</span><span>. Our study aims to understand the patterns of rationales and to what extent the rationales can improve the users? understanding of the purposes of requesting permission groups. In particular, our study seeks to answer the following questions: (1) what are the common decisions made by </span><span>applications</span><span>? (2) how are such decisions aligned with the goal of improving the users? understanding of permission-group purposes?&nbsp;</span></p> <p dir="ltr"><span>- We have developed the CLAP (abbreviated from CoLlaborative App Permission recommendation) technique to assist the creation of permission-usage explanation for an </span><span>application </span><span>by mining potential explanations from the </span><span>application </span><span>descriptions of </span><span>applications </span><span>similar to the </span><span>application</span><span>. We developed a recommendation system based on information retrieval and text summarization techniques to find frequent permission usages among similar </span><span>applications</span><span>. In particular, our CLAP technique uses the following four-step process to recommend a list of candidate sentences: searching in </span><span>application </span><span>descriptions for candidate sentences that explain the permission, finding similar </span><span>applications</span><span>, re-ranking the list of candidate sentences to improve relevance of top-ranked sentences, and performing a list of post-processing techniques.&nbsp;</span></p> <p dir="ltr"><span>- </span><span>We have developed the ACMiner technique that discovers previously unknown access control checks by considering the names of methods and variables, as well as the contents of constant strings. ACMiner discovers missing access control checks by identifying all conditional checks between thrown SecurityExceptions and a service entrypoint, refining this set into probably access control checks using the text values, and using association rule mining to not only identify inconsistencies, but also suggest which checks should be added.&nbsp;</span></p> <p dir="ltr"><span>- We have developed the </span><span>EnMobile technique including a new entity-based characterization of mobile-</span><span>application</span><span> behaviors, and corresponding static analyses, to accurately characterize an </span><span>application</span><span>?s interactions with entities. Our development of the technique is based on the insight of recognizing entities in the environment of a mobile </span><span>application</span><span>, the </span><span>application</span><span>?s interactions with such entities, and the provenance of these interactions, i.e., the intent and ownership of each interaction, as the key to comprehensively characterizing modern mobile </span><span>applications</span><span>, and mobile malware in particular.&nbsp;</span></p> <p dir="ltr"><span>- We have developed the Malware Recomposition Variation (MRV) technique that conducts semantic analysis of existing malware to systematically construct new malware variants for malware detectors to test and strengthen their detection signatures/models. In particular, we used two variation strategies that follow structures of existing malware to enhance feasibility of the attacks, and performed program transplantation to automatically mutate malware bytecode to generate new malware variants.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>The broader impacts also include that </span><span>the conducted research and educational activities have advanced the state-of-the-art in improving mobile security, and helped train next generation researchers and engineers. More specifically,&nbsp;</span></p> <p dir="ltr"><span>- We have disseminated our research results through publications in top outlets such as highly-competitive conferences, tool distributions and research exchanges.</span></p> <p dir="ltr"><span>- We have successfully trained the next generation computer scientists through graduate/undergraduate student advising, and engineers through undergraduate and graduate level education.</span></p> <p>&nbsp;</p><br> <p>            Last Modified: 10/07/2019<br>      Modified by: William&nbsp;H&nbsp;Enck</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   For the duration of this NSF project, we, the principal investigators and students, have introduced and developed practical techniques to improve security decisions using expectation context, by relating user-facing natural language text with security operations. This project has helped discover new security analysis techniques for mobile applications, and helped gain better understanding of the fundamental and practical challenges for enabling developers to produce more secure mobile applications and enabling users to use more secure mobile applications. More specifically, - We have conducted text analytics to study grayware on the Google Play store. Grayware is an interesting topic, because the undesirability of a given application is largely determined by the expectation of the user running it. To understand the types of grayware in mobile platforms, we performed an informal survey of the Google Play Store and defined 11 categories of mobile grayware. With this mobile grayware classification, we investigated the ability for text analytics to identify questionable applications based on app store metadata.  - We have developed analysis techniques and conducted empirical studies of sensitive user inputs in Android applications. In particular, we have developed the UiRef (User Input REsolution Framework) technique for resolving the semantics of user inputs requested by Android applications. The core task of UiRef is to identify and disambiguate the textual labels that describe the information the user enters into input widgets. These labels are often beside or above the widget itself.  - We have developed the PolicyLint technique for privacy policy analysis that identifies contradictions that may occur within an individual policy by simultaneously considering negation and varying semantic levels of data objects and entities. To do so, PolicyLint automatically generates ontologies from a large corpus of privacy policies and uses sentence-level natural language processing to capture both positive and negative statements of data collection and sharing. - We have conducted a large-scale measurement study on five aspects of runtime rationales for mobile-application users to better understand the permissions requested by the applications. Our study aims to understand the patterns of rationales and to what extent the rationales can improve the users? understanding of the purposes of requesting permission groups. In particular, our study seeks to answer the following questions: (1) what are the common decisions made by applications? (2) how are such decisions aligned with the goal of improving the users? understanding of permission-group purposes?  - We have developed the CLAP (abbreviated from CoLlaborative App Permission recommendation) technique to assist the creation of permission-usage explanation for an application by mining potential explanations from the application descriptions of applications similar to the application. We developed a recommendation system based on information retrieval and text summarization techniques to find frequent permission usages among similar applications. In particular, our CLAP technique uses the following four-step process to recommend a list of candidate sentences: searching in application descriptions for candidate sentences that explain the permission, finding similar applications, re-ranking the list of candidate sentences to improve relevance of top-ranked sentences, and performing a list of post-processing techniques.  - We have developed the ACMiner technique that discovers previously unknown access control checks by considering the names of methods and variables, as well as the contents of constant strings. ACMiner discovers missing access control checks by identifying all conditional checks between thrown SecurityExceptions and a service entrypoint, refining this set into probably access control checks using the text values, and using association rule mining to not only identify inconsistencies, but also suggest which checks should be added.  - We have developed the EnMobile technique including a new entity-based characterization of mobile-application behaviors, and corresponding static analyses, to accurately characterize an application?s interactions with entities. Our development of the technique is based on the insight of recognizing entities in the environment of a mobile application, the application?s interactions with such entities, and the provenance of these interactions, i.e., the intent and ownership of each interaction, as the key to comprehensively characterizing modern mobile applications, and mobile malware in particular.  - We have developed the Malware Recomposition Variation (MRV) technique that conducts semantic analysis of existing malware to systematically construct new malware variants for malware detectors to test and strengthen their detection signatures/models. In particular, we used two variation strategies that follow structures of existing malware to enhance feasibility of the attacks, and performed program transplantation to automatically mutate malware bytecode to generate new malware variants.    The broader impacts also include that the conducted research and educational activities have advanced the state-of-the-art in improving mobile security, and helped train next generation researchers and engineers. More specifically,  - We have disseminated our research results through publications in top outlets such as highly-competitive conferences, tool distributions and research exchanges. - We have successfully trained the next generation computer scientists through graduate/undergraduate student advising, and engineers through undergraduate and graduate level education.          Last Modified: 10/07/2019       Submitted by: William H Enck]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>REU Site: CAAR: Combinatorics and Algorithms Applied to Real Problems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2016</AwardEffectiveDate>
<AwardExpirationDate>02/28/2019</AwardExpirationDate>
<AwardTotalIntnAmount>375000.00</AwardTotalIntnAmount>
<AwardAmount>375000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This REU site project to be hosted at University of Maryland College Park emphasizes combining theory with practice. The students will benefit from a strong faculty team. Building on the past experience, the project is expected to result in strong undergraduate research leading to successful research/industry careers for the students in the future. Outreach activities with high schools will attract high school students to this research. The site plans to recruit under-represented groups and also students from non-research universities and HBCUs. &lt;br/&gt; &lt;br/&gt;The projects proposed not only form cutting-edge theory research but are also relevant to practice and have high impact applications. The projects considered are in applied area of Big Data Analytics, Information Extraction in Natural Language Processing, Fair Division, Pricing over Social Networks, Secure Communication and Public Health. The approach of getting students interested in theory, starting from applied implementation has an added side benefit that it would train students in sharp algorithmic implementation and experimentation skills, which are deemed in high regard by leading Computer Science companies.</AbstractNarration>
<MinAmdLetterDate>01/27/2016</MinAmdLetterDate>
<MaxAmdLetterDate>01/27/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1560193</AwardID>
<Investigator>
<FirstName>William</FirstName>
<LastName>Gasarch</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>William Gasarch</PI_FULL_NAME>
<EmailAddress>gasarch@cs.umd.edu</EmailAddress>
<PI_PHON>3014052698</PI_PHON>
<NSF_ID>000147394</NSF_ID>
<StartDate>01/27/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Samir</FirstName>
<LastName>Khuller</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Samir Khuller</PI_FULL_NAME>
<EmailAddress>samir.khuller@northwestern.edu</EmailAddress>
<PI_PHON>8474912748</PI_PHON>
<NSF_ID>000177377</NSF_ID>
<StartDate>01/27/2016</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MD05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>790934285</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MARYLAND, COLLEGE PARK</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003256088</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Maryland, College Park]]></Name>
<CityName>College Park</CityName>
<StateCode>MD</StateCode>
<ZipCode>207425141</ZipCode>
<StreetAddress><![CDATA[3112 LEE BLDG 7809 Regents Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MD05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1139</Code>
<Text>RSCH EXPER FOR UNDERGRAD SITES</Text>
</ProgramElement>
<ProgramReference>
<Code>9250</Code>
<Text>REU SITE-Res Exp for Ugrd Site</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~375000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><pre><br /> This is a report on REU-CAAR  REU = Research Experience for Undergraduates.  There are many REU programs across the country.  Our topic was  CAAR = Combinatorics and Algorithms for Real Problems  The program ran in the summers of 2016,2017,2018.  Each year students from  across the country applied (about 180 a year) and we took 20 (10 funded by  NSF, 10 funded by other sources).  We had very high standards.  Within the  excellent students who applied we had some other criteria as you will see  below. Our goals were:  1) Give students who normally would not have a chance to research (e.g.,  from non-research schools) a chance to do research. This will help inform  them if they want to do research as a career.  Around 60% of the students  were from non-research schools.  2) Give students who are from underrepresented groups a chance to do research.  This will help broaden the community of researchers in the country.  Around  60% of the students were female. About 13% were African-American or Hispanic.  3) Give the students a grad-school-like experience and tell them PROS and CONS  of going to grad school.  80% of the students in our program who have graduated  are now in grad school in computer science.  4) Actually do research! Our projects were a combination of theory and practice.  Some took theory (that is, math) and applied it to very practical problems that  are important today.  Others did mathematics or related computer science that may  be important tomorrow.  We give some examples of our projects:  a) Security: The more computers are in our society the more chance there is that  someone will break a system and steal data. The Security projects were about  exposing security flaws and fixing them. Some of the projects focused on the cloud.  b) Kidney Exchange: It is hard to find a good match for a kidney.  So the medical  profession often does the following: A1 gives A2 a kidney, A2's friend gives A3 a  kidney, etc until you get a cycle. To really pull this off involves rather complex  mathematical problems. The field of Kidney exchange has lead to many optimization  problems.  To solve them requires a combination of computer science and mathematics.  This project involved defining such problems, solving them, and seeing how they can  apply to the real world.</pre> <pre><br /></pre> <pre><pre>c) Automated Hiring and Bias: Companies are more and more using software to evaluate  people to hire.  In theory this should eliminate bias. In practice it may re-inforce  bias. For example, if one of the parameters is that the company never hired people  from a certain region, the program may learn that incorrect behavior. This project  was on how to keep the benefits of automated hiring (and other similar problems)  while eliminating the bias. Some of what was learned in this project may be used  at the University of Maryland for graduate student selection.    d) The Can't Stop Game: Can't Stop is a real game with four dice that is fun. We  had a project where a computer was trained to play it very well. Its hard to play  perfectly since there are many random elements. It is hard to judge how well the  computer played since, unlike Chess, there are no world champions to play against.   However, it did beat everyone in the program including the mentor who considers  himself and expert. The techniques used may in the future be used to train computers  on more serious tasks.    e) Natural Language Processing: Programs that translate (say) English to Spanish  usually do a very good job; however, one issue is context. Many sentences have  implicit meanings that the speaker and listener understand but a machine does not.   The NLP project was about how to train a machine translator not just on words and  phrases but also context.    f) Phase Retrieval: Often a computer program takes data and makes an image out of it.  This may involve some very complex calculations that have to be approximated. The more  you approximate (1) the easier the calculation, but (2) the worse the result. There  had been some theoretical work on this to balance out qualify and time. This project  took the ideas and made a package out of them that is currently being used.  </pre> <br /></pre><br> <p>            Last Modified: 03/11/2019<br>      Modified by: William&nbsp;Gasarch</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  This is a report on REU-CAAR  REU = Research Experience for Undergraduates.  There are many REU programs across the country.  Our topic was  CAAR = Combinatorics and Algorithms for Real Problems  The program ran in the summers of 2016,2017,2018.  Each year students from  across the country applied (about 180 a year) and we took 20 (10 funded by  NSF, 10 funded by other sources).  We had very high standards.  Within the  excellent students who applied we had some other criteria as you will see  below. Our goals were:  1) Give students who normally would not have a chance to research (e.g.,  from non-research schools) a chance to do research. This will help inform  them if they want to do research as a career.  Around 60% of the students  were from non-research schools.  2) Give students who are from underrepresented groups a chance to do research.  This will help broaden the community of researchers in the country.  Around  60% of the students were female. About 13% were African-American or Hispanic.  3) Give the students a grad-school-like experience and tell them PROS and CONS  of going to grad school.  80% of the students in our program who have graduated  are now in grad school in computer science.  4) Actually do research! Our projects were a combination of theory and practice.  Some took theory (that is, math) and applied it to very practical problems that  are important today.  Others did mathematics or related computer science that may  be important tomorrow.  We give some examples of our projects:  a) Security: The more computers are in our society the more chance there is that  someone will break a system and steal data. The Security projects were about  exposing security flaws and fixing them. Some of the projects focused on the cloud.  b) Kidney Exchange: It is hard to find a good match for a kidney.  So the medical  profession often does the following: A1 gives A2 a kidney, A2's friend gives A3 a  kidney, etc until you get a cycle. To really pull this off involves rather complex  mathematical problems. The field of Kidney exchange has lead to many optimization  problems.  To solve them requires a combination of computer science and mathematics.  This project involved defining such problems, solving them, and seeing how they can  apply to the real world.   c) Automated Hiring and Bias: Companies are more and more using software to evaluate  people to hire.  In theory this should eliminate bias. In practice it may re-inforce  bias. For example, if one of the parameters is that the company never hired people  from a certain region, the program may learn that incorrect behavior. This project  was on how to keep the benefits of automated hiring (and other similar problems)  while eliminating the bias. Some of what was learned in this project may be used  at the University of Maryland for graduate student selection.    d) The Can't Stop Game: Can't Stop is a real game with four dice that is fun. We  had a project where a computer was trained to play it very well. Its hard to play  perfectly since there are many random elements. It is hard to judge how well the  computer played since, unlike Chess, there are no world champions to play against.   However, it did beat everyone in the program including the mentor who considers  himself and expert. The techniques used may in the future be used to train computers  on more serious tasks.    e) Natural Language Processing: Programs that translate (say) English to Spanish  usually do a very good job; however, one issue is context. Many sentences have  implicit meanings that the speaker and listener understand but a machine does not.   The NLP project was about how to train a machine translator not just on words and  phrases but also context.    f) Phase Retrieval: Often a computer program takes data and makes an image out of it.  This may involve some very complex calculations that have to be approximated. The more  you approximate (1) the easier the calculation, but (2) the worse the result. There  had been some theoretical work on this to balance out qualify and time. This project  took the ideas and made a package out of them that is currently being used.           Last Modified: 03/11/2019       Submitted by: William Gasarch]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

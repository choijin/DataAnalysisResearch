<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Approximation Algorithms for b-Matching and b-Edge Covers</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>12/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>99049.00</AwardTotalIntnAmount>
<AwardAmount>99049</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Jack S. Snoeyink</SignBlockName>
<PO_EMAI>jsnoeyin@nsf.gov</PO_EMAI>
<PO_PHON>7032920000</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Here is a puzzle: a group of people is told to each shake the hand of someone they like; how can they quickly have many simultaneous handshakes?  And what if some can use both hands, others are chimps that can use their feet, or even octopi that can shake with 8 others?  This silly puzzle (b-Matching) has a serious purpose, since this type of decision is often faced in computer systems where entities can interact or communicate with a limited number of other entities, and they need to negotiate quickly to maximize interaction. A related puzzle (b-Edge cover), of having every hand holding another, arises in the data privacy concept of b-Anonymity. In this project, the PI will work with a PhD student to design and implement fast approximation algorithms for b-Matchings and b-Edge Covers, and apply them k-Anonymity. &lt;br/&gt;&lt;br/&gt;A b-Matching M is a set of edges in a weighted graph such that at most b(v) edges in M  are incident on each vertex v; the  weight of a b-Matching is the sum of the weights of the matched edges. This project aims to design a fast approximation algorithm that achieves at least half the weight of the maximum weighted matching. A b-Edge Cover is a subset of edges C such that at least b(v) edges in C are incident on each vertex v in the graph; this project aims to design a 3/2-approximation algorithm for the b-Edge Cover problem. These algorithms will be implemented on multicore architectures that support multiple threads of concurrency. The impact of the algorithms in application areas such as data privacy (k-Anonymity) and preconditioning will be evaluated. &lt;br/&gt;&lt;br/&gt;To ensure broad applicability, the PI and PhD student will work also with collaborators from industry and national laboratories, and will produce modules for a graduate course in advanced graph algorithms. The PI will also present matching algorithms applied to the medical resident matching problem to students at the West Lafayette Jr/Sr High School and Harrison High School with the assistance of the Purdue Computer Science department's K-12 outreach program.</AbstractNarration>
<MinAmdLetterDate>08/13/2015</MinAmdLetterDate>
<MaxAmdLetterDate>08/13/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1552323</AwardID>
<Investigator>
<FirstName>Alex</FirstName>
<LastName>Pothen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Alex Pothen</PI_FULL_NAME>
<EmailAddress>apothen@purdue.edu</EmailAddress>
<PI_PHON>7654969376</PI_PHON>
<NSF_ID>000155192</NSF_ID>
<StartDate>08/13/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName>West Lafayette</CityName>
<StateCode>IN</StateCode>
<ZipCode>479072107</ZipCode>
<StreetAddress><![CDATA[305 N University St]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7933</Code>
<Text>NUM, SYMBOL, &amp; ALGEBRA COMPUT</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~99049</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Combinatorial graphs or networks model &nbsp;relationships in&nbsp; several real-life&nbsp; contexts by joining pairs of nodes by an edge (an example is a flight&nbsp; network joining cities, found at the back of&nbsp; Airline magazines). Community networks model friendships among a group of people in which the spread of information or the flu through contact can be represented. Another example is a biological network of genes that regulate one another, or proteins that interact with each other to accomplish a biological process.</p> <p>&nbsp;This research considered the design of algorithms to compute b-Matchings in graphs, wherein we choose a subset of the heaviest weight edges satisfying the constraint that we choose at most a specified number b(v) for each node v in the graph. This problem can take more than hundreds of hours when the graph has ten-millions of nodes or more, and hence we design algorithms to solve this problem approximately. We have designed approximation algorithms that are guaranteed to find a matching of at least half the optimal weight for all graphs. These algorithms are further improved so that they run efficiently on modern computer processors that have hundreds of processing elements called cores. The resulting algorithm is called bSuitor, and it is based on an idea in which nodes make bids to match to their heaviest neighbors. Such bids might be accepted, rejected, or annulled. This proposal-based methodology leads to fast algorithms that can run in seconds on the massive graphs of the sizes mentioned earlier. The bSuitor algorithm is currently the fastest known approximation algorithm for the b-Matching problem. It also computes matchings that have more than 95% of the weight of the optimal matching, when the latter can be computed for smaller problems.</p> <p>&nbsp;This work was performed by a graduate student who is completing his PhD and is expected to join a&nbsp; U.S. Department of Energy&rsquo;s National Lab, responsible for working on the nation&rsquo;s energy future and nuclear safety. He has been awarded the John R. Rice fellowship in recognition of the high quality of his work, and he also won a prize at the Student Research competition in high performance computing.</p> <p>&nbsp;This work was published in highly ranked journals such as the SIAM Journal on Scientific Computing, and in conferences such as the ACM/IEEE Supercomputing conference. The software we have created is freely available, and it is being used by companies such as Intel, Netflix and Google, and at several U.S. National Labs.</p><br> <p>            Last Modified: 03/17/2017<br>      Modified by: Alex&nbsp;Pothen</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Combinatorial graphs or networks model  relationships in  several real-life  contexts by joining pairs of nodes by an edge (an example is a flight  network joining cities, found at the back of  Airline magazines). Community networks model friendships among a group of people in which the spread of information or the flu through contact can be represented. Another example is a biological network of genes that regulate one another, or proteins that interact with each other to accomplish a biological process.   This research considered the design of algorithms to compute b-Matchings in graphs, wherein we choose a subset of the heaviest weight edges satisfying the constraint that we choose at most a specified number b(v) for each node v in the graph. This problem can take more than hundreds of hours when the graph has ten-millions of nodes or more, and hence we design algorithms to solve this problem approximately. We have designed approximation algorithms that are guaranteed to find a matching of at least half the optimal weight for all graphs. These algorithms are further improved so that they run efficiently on modern computer processors that have hundreds of processing elements called cores. The resulting algorithm is called bSuitor, and it is based on an idea in which nodes make bids to match to their heaviest neighbors. Such bids might be accepted, rejected, or annulled. This proposal-based methodology leads to fast algorithms that can run in seconds on the massive graphs of the sizes mentioned earlier. The bSuitor algorithm is currently the fastest known approximation algorithm for the b-Matching problem. It also computes matchings that have more than 95% of the weight of the optimal matching, when the latter can be computed for smaller problems.   This work was performed by a graduate student who is completing his PhD and is expected to join a  U.S. Department of Energy?s National Lab, responsible for working on the nation?s energy future and nuclear safety. He has been awarded the John R. Rice fellowship in recognition of the high quality of his work, and he also won a prize at the Student Research competition in high performance computing.   This work was published in highly ranked journals such as the SIAM Journal on Scientific Computing, and in conferences such as the ACM/IEEE Supercomputing conference. The software we have created is freely available, and it is being used by companies such as Intel, Netflix and Google, and at several U.S. National Labs.       Last Modified: 03/17/2017       Submitted by: Alex Pothen]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

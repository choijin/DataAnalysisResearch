<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EDU: Developing a Software Artifact Repository for Software Assurance Education</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11010001</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DGE</Abbreviation>
<LongName>Division Of Graduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Victor Piotrowski</SignBlockName>
<PO_EMAI>vpiotrow@nsf.gov</PO_EMAI>
<PO_PHON>7032925141</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project will develop a software assurance education artifact repository, designed for use across numerous computer science programs and institutions. The repository will help students to obtain a firm understanding of the software assurance process and necessary skills to develop highly assured software. The team will also create instructional materials for effective software artifact use.&lt;br/&gt;&lt;br/&gt;The project transitions recent software assurance research to education domain including highly effective techniques for finding security defects. Artifacts will represent typical interdependent software assurance activity results in areas such as security requirements analysis, access control policy analysis, threat modeling and verification, and security testing and assessment. Specifically, the proposed repository will include seven types of software artifacts for several carefully selected and widely used open source security-critical software applications: security requirement specifications, security policies, threat models, security test models, security test cases, vulnerability models, and security mutants. &lt;br/&gt;&lt;br/&gt;The proposed efforts will help with a critical shortage of software assurance workforce and will also raise software security awareness among a broad audience by introducing the topic to high school computer teachers. This will be done in collaboration with an NSF CS10K project preparing 30-40 high school teachers to teach Computer Science Principles courses at regional high schools. The project will collaborate with Florida A&amp;M, Monmouth University and Gannon University. The project will develop a web application enabling public access to artifacts and instructional materials.</AbstractNarration>
<MinAmdLetterDate>09/16/2015</MinAmdLetterDate>
<MaxAmdLetterDate>03/06/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1522847</AwardID>
<Investigator>
<FirstName>Dianxiang</FirstName>
<LastName>Xu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dianxiang Xu</PI_FULL_NAME>
<EmailAddress>dxu@umkc.edu</EmailAddress>
<PI_PHON>8162351193</PI_PHON>
<NSF_ID>000483704</NSF_ID>
<StartDate>09/16/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Izzat</FirstName>
<LastName>Alsmadi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Izzat Alsmadi</PI_FULL_NAME>
<EmailAddress>alsmadi@gmail.com</EmailAddress>
<PI_PHON>2089726299</PI_PHON>
<NSF_ID>000674963</NSF_ID>
<StartDate>09/16/2015</StartDate>
<EndDate>03/06/2017</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Boise State University</Name>
<CityName>Boise</CityName>
<ZipCode>837250001</ZipCode>
<PhoneNumber>2084261574</PhoneNumber>
<StreetAddress>1910 University Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Idaho</StateName>
<StateCode>ID</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>ID02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072995848</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>BOISE STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072995848</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Boise State University]]></Name>
<CityName>Boise</CityName>
<StateCode>ID</StateCode>
<ZipCode>837251135</ZipCode>
<StreetAddress><![CDATA[1910 University Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Idaho</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>ID02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9179</Code>
<Text>GRADUATE INVOLVEMENT</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0415</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~300000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Software vulnerabilities are a major source of cyber-attacks against national infrastructure, individuals, corporations, and agencies. Vulnerabilities get into software code for various reasons such as poor security requirement specification, insecure software design, and inadequate assurance process. To deal with software vulnerabilities, software assurance has emerged as an important multidisciplinary body of knowledge. Software assurance curriculum have been proposed for community college, undergraduate, and graduate programs. Nevertheless, instructional materials are quite rare because a systematic coverage of software assurance topics requires extensive expertise across various subfields of software engineering and computer security. To address this issue, this project has developed a repository of software artifacts for software assurance education. The artifacts represent typical results from the development and assurance activities of security-critical software. Specifically, this project has created the following artifacts of three open source software applications: (1) Security requirement specifications represented by use cases, misuse cases, and mitigation use cases. They result from the elicitation and analysis of security requirements. (2) Access control policies in the standard language XACML (eXtensible Access Control Markup Language). They result from the analysis and specification of access control policies. (3) Threat models represented by attack trees and threat nets. They result from security risk assessment. (4) Security test models represented by functional modes, threat models, and access control policies: They result from the analysis of security test requirements. (5) Vulnerability models that represent the common software vulnerabilities in a particular type of software applications. (6) Security test cases, which is a sequence of test inputs and an expected result. The security tests cases are generated from the security test models by the open source test generation tool MISTA. (6) Security mutants where vulnerabilities are injected into an original program to simulate real-world software vulnerabilities. The three open source software applications are FileZilla FTP Server, GPMS, and Magento. &nbsp;FileZilla FTP Server, coded in C++, is one of the most downloaded open source projects. GPMS (Grant Proposal Management System), coded in Java, is an exemplar open source web application of XACML, which is a standard language for attribute-based access control (ABAC) policies. ABAC is a new generation access control model. Magento is a widely applied open source online shopping system written in PHP. The artifacts of FileZilla FTP Server include 11 use cases, 22 misuse cases, and 4 mitigation use cases, 11 threat models, 13 security test models, 22 executable security tests, and 38 security mutants. The artifacts of GPMS include two implementation versions (secure version and insecure version), 19 use cases, 30 misuse cases, 14 security test models, two XACML policies and their mutants, and 21 mutants of the PEP (Policy Enforcement Point) code. The artifacts of Magento include 8 use cases, 7 misuse cases, 7 test models, and 5 security mutants. The artifacts have been used as lecture notes and lab exercises in both undergraduate and graduate courses. The results of this project have also been disseminated through two peer-reviewed conferences papers and one MS thesis. In addition, this project has involved two research associates and two MS students. All of them have started or planned to pursue an academic career in cybersecurity. One of the MS students is currently a PhD candidate and the other is applying for admission to a PhD program.</p><br> <p>            Last Modified: 11/26/2018<br>      Modified by: Dianxiang&nbsp;Xu</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Software vulnerabilities are a major source of cyber-attacks against national infrastructure, individuals, corporations, and agencies. Vulnerabilities get into software code for various reasons such as poor security requirement specification, insecure software design, and inadequate assurance process. To deal with software vulnerabilities, software assurance has emerged as an important multidisciplinary body of knowledge. Software assurance curriculum have been proposed for community college, undergraduate, and graduate programs. Nevertheless, instructional materials are quite rare because a systematic coverage of software assurance topics requires extensive expertise across various subfields of software engineering and computer security. To address this issue, this project has developed a repository of software artifacts for software assurance education. The artifacts represent typical results from the development and assurance activities of security-critical software. Specifically, this project has created the following artifacts of three open source software applications: (1) Security requirement specifications represented by use cases, misuse cases, and mitigation use cases. They result from the elicitation and analysis of security requirements. (2) Access control policies in the standard language XACML (eXtensible Access Control Markup Language). They result from the analysis and specification of access control policies. (3) Threat models represented by attack trees and threat nets. They result from security risk assessment. (4) Security test models represented by functional modes, threat models, and access control policies: They result from the analysis of security test requirements. (5) Vulnerability models that represent the common software vulnerabilities in a particular type of software applications. (6) Security test cases, which is a sequence of test inputs and an expected result. The security tests cases are generated from the security test models by the open source test generation tool MISTA. (6) Security mutants where vulnerabilities are injected into an original program to simulate real-world software vulnerabilities. The three open source software applications are FileZilla FTP Server, GPMS, and Magento.  FileZilla FTP Server, coded in C++, is one of the most downloaded open source projects. GPMS (Grant Proposal Management System), coded in Java, is an exemplar open source web application of XACML, which is a standard language for attribute-based access control (ABAC) policies. ABAC is a new generation access control model. Magento is a widely applied open source online shopping system written in PHP. The artifacts of FileZilla FTP Server include 11 use cases, 22 misuse cases, and 4 mitigation use cases, 11 threat models, 13 security test models, 22 executable security tests, and 38 security mutants. The artifacts of GPMS include two implementation versions (secure version and insecure version), 19 use cases, 30 misuse cases, 14 security test models, two XACML policies and their mutants, and 21 mutants of the PEP (Policy Enforcement Point) code. The artifacts of Magento include 8 use cases, 7 misuse cases, 7 test models, and 5 security mutants. The artifacts have been used as lecture notes and lab exercises in both undergraduate and graduate courses. The results of this project have also been disseminated through two peer-reviewed conferences papers and one MS thesis. In addition, this project has involved two research associates and two MS students. All of them have started or planned to pursue an academic career in cybersecurity. One of the MS students is currently a PhD candidate and the other is applying for admission to a PhD program.       Last Modified: 11/26/2018       Submitted by: Dianxiang Xu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CICI: Secure Data Architecture: CapNet: Secure Scientific Workloads with Capability Enabled Networks</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2015</AwardEffectiveDate>
<AwardExpirationDate>03/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>499999.00</AwardTotalIntnAmount>
<AwardAmount>499999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Kevin Thompson</SignBlockName>
<PO_EMAI>kthompso@nsf.gov</PO_EMAI>
<PO_PHON>7032924220</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Modern scientific experiments have outgrown the capacity of a single lab.  &lt;br/&gt;They require the storage and processing power of a datacenter, involve &lt;br/&gt;cross-institutional access to sensitive data, and span multiple domains of &lt;br/&gt;administrative trust. In such a setting, security is fragile. In the face of &lt;br/&gt;steady growth of sophisticated cyber-attack tools, modern server and desktop &lt;br/&gt;machines are fundamentally insecure. Over a hundred critical &lt;br/&gt;vulnerabilities that allow unrestricted access to the entire system are &lt;br/&gt;discovered in the Linux kernel each year. Lacking flexibility to express &lt;br/&gt;fine-grained access control policies, modern networks often give vulnerable &lt;br/&gt;hosts excessive or even unrestricted connectivity to the rest of the network.  &lt;br/&gt;An exploit of any host enables attackers to explore, exploit and take control &lt;br/&gt;over an entire cyber facility. Without support from the network, scientific &lt;br/&gt;facilities will remain vulnerable. &lt;br/&gt;&lt;br/&gt;CapNet is a network architecture that enables secure, least privilege &lt;br/&gt;collaboration in the cross-institutional environment of a modern research &lt;br/&gt;facility. Building on the principles of capability access control, this &lt;br/&gt;research develops key elements needed to secure a network of a modern &lt;br/&gt;scientific infrastructure: 1) "off by default" behavior, with connectivity &lt;br/&gt;granted on as-needed basis; 2) mechanisms for decentralized, &lt;br/&gt;application-driven dynamic management of connectivity; and 3) a formal &lt;br/&gt;foundation enabling secure collaboration of fine-grained, dynamic, &lt;br/&gt;multi-institutional principals. The basis for CapNet's design is strong &lt;br/&gt;isolation of network activities with the mechanisms of software defined &lt;br/&gt;networks (SDN) and mediation of all communication between network hosts by &lt;br/&gt;a capability access control model. CapNet represents the network as an access &lt;br/&gt;control graph. Nodes are network hosts, edges (or "capabilities") are &lt;br/&gt;pointers to other hosts allowing communication and further exchange of rights.  &lt;br/&gt;By controlling the initial distribution of capabilities and their flow, CapNet &lt;br/&gt;governs network interactions through fine-grained, application-driven policies &lt;br/&gt;that enable safe collaboration among multiple institutions and third-party &lt;br/&gt;services. Finally, while taking a holistic approach to network access control, &lt;br/&gt;CapNet remains practical: it retains compatibility with unmodified network &lt;br/&gt;network stacks, integrates with existing datacenter and cloud management &lt;br/&gt;stacks, enables incremental adoption, and is fast and scalable.</AbstractNarration>
<MinAmdLetterDate>09/08/2015</MinAmdLetterDate>
<MaxAmdLetterDate>07/19/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1547457</AwardID>
<Investigator>
<FirstName>Jacobus</FirstName>
<LastName>VAN DER MERWE</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jacobus VAN DER MERWE</PI_FULL_NAME>
<EmailAddress>kobus@cs.utah.edu</EmailAddress>
<PI_PHON>8015813012</PI_PHON>
<NSF_ID>000540324</NSF_ID>
<StartDate>07/19/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jacobus</FirstName>
<LastName>VAN DER MERWE</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jacobus VAN DER MERWE</PI_FULL_NAME>
<EmailAddress>kobus@cs.utah.edu</EmailAddress>
<PI_PHON>8015813012</PI_PHON>
<NSF_ID>000540324</NSF_ID>
<StartDate>09/08/2015</StartDate>
<EndDate>07/19/2016</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Anton</FirstName>
<LastName>Burtsev</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Anton Burtsev</PI_FULL_NAME>
<EmailAddress>aburtsev@uci.edu</EmailAddress>
<PI_PHON>5016810819</PI_PHON>
<NSF_ID>000637182</NSF_ID>
<StartDate>07/19/2016</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Anton</FirstName>
<LastName>Burtsev</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Anton Burtsev</PI_FULL_NAME>
<EmailAddress>aburtsev@uci.edu</EmailAddress>
<PI_PHON>5016810819</PI_PHON>
<NSF_ID>000637182</NSF_ID>
<StartDate>09/08/2015</StartDate>
<EndDate>07/19/2016</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<StreetAddress2><![CDATA[Second Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>UT02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>009095365</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF UTAH, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>009095365</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Utah]]></Name>
<CityName>Salt Lake City</CityName>
<StateCode>UT</StateCode>
<ZipCode>841129249</ZipCode>
<StreetAddress><![CDATA[50 S.Central Campus Drive #3190]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>UT02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8027</Code>
<Text>Cybersecurity Innovation</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~499999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>A wide range of modern scientific experiments have outgrown the capacity of a single lab. Today, such experiments require the storage capacity and processing power of a datacenter. Moreover, they involve cross-institutional access to sensitive data, and span multiple domains of administrative trust. Despite numerous advances in datacenter and cloud security, modern datacenters remain vulnerable to targeted attacks. Traditionally, cloud security concentrates on perimeter protection. Network firewalls and advanced intrusion-detection systems are designed to keep attacks outside of the datacenter network. Today, however, well-sponsored, coordinated, targeted attacks continue to penetrate the cloud perimeter. &nbsp;<br />This project developed a new network architecture, CapNet, aimed at implementing least authority and secure collaboration in the cloud and datacenter network. At its core, CapNet is an object capability system that represents the resources of a traditional network as a graph of objects that have unforgeable pointers (or capabilities) to other objects. In CapNet, objects represent two kinds of resources: (1) resources of the cloud network itself (hosts, network flows, etc.) and (2) primitives that control mutation of the object graph. &nbsp;Capabilities in CapNet allow principals to perform operations on objects: e.g., a capability to a &ldquo;flow object&rdquo; allows packets to be sent along the flow, and a capability to a &ldquo;node object&rdquo; can control a virtual or physical device in the cloud. Principals have no authority beyond capabilities: all network operations are accessible only through capability invocations.&nbsp;<br />Over the course of the project CapNet developed mechanisms and abstractions that enable the following security constructs in the datacenter network:<br />(1) Least authority. The key principle enabling security in CapNet is the ability to construct small, isolated cloud subsystems that operate on a minimal number of isolated resources. By minimizing the authority of individual subsystems, CapNet guarantees that even if a part of a computation is compromised, the possible effect of the attack is minimal and limited to a set of objects reachable through capabilities.<br />(2) Mutual isolation. CapNet developed mechanisms enabling mutual isolation of principals irrespective of the ownership of the network nodes and their past. In CapNet, the providers and consumers of third-party cloud services can interact without requiring trust. For example, even if a service is configured by a third-party provider, the consumer of the service has guarantees that the service is completely isolated from the provider after deployment. On the other hand, the provider can protect its proprietary service from the consumer by isolating the service from the consumer itself, inside the consumer&rsquo;s network.<br />(3) Decentralized access control. CapNet developed primitives that enable decentralized access control in the datacenter network. Datacenter workloads that involve multiple parties combining their sensitive datasets for joint processing require isolation for each dataset and the ability to reason about information flow across the joint computation. CapNet allows mistrusting tenants to assemble tightly controlled cloud networks in a decentralized manner, i.e., without trusting each other, yet enforcing their own network-wide isolation and information-flow properties.<br />By providing a foundation for secure scientific collaboration, CapNet is a step towards mitigating the potential for damage (including cyber-attacks, data loss, and data exfiltration) present in current scientific infrastructure. CapNet is open-source software and is available for download at https://gitlab.flux.utah.edu/tcloud/capnet. It can be test-driven via a CloudLab profile (https://www.cloudlab.us/p/TCloud/OpenStack-Capnet) that automatically instantiates a private Open-Stack cloud for the user, preconfigured with CapNet.</p><br> <p>            Last Modified: 07/03/2019<br>      Modified by: Jacobus&nbsp;Van Der Merwe</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ A wide range of modern scientific experiments have outgrown the capacity of a single lab. Today, such experiments require the storage capacity and processing power of a datacenter. Moreover, they involve cross-institutional access to sensitive data, and span multiple domains of administrative trust. Despite numerous advances in datacenter and cloud security, modern datacenters remain vulnerable to targeted attacks. Traditionally, cloud security concentrates on perimeter protection. Network firewalls and advanced intrusion-detection systems are designed to keep attacks outside of the datacenter network. Today, however, well-sponsored, coordinated, targeted attacks continue to penetrate the cloud perimeter.   This project developed a new network architecture, CapNet, aimed at implementing least authority and secure collaboration in the cloud and datacenter network. At its core, CapNet is an object capability system that represents the resources of a traditional network as a graph of objects that have unforgeable pointers (or capabilities) to other objects. In CapNet, objects represent two kinds of resources: (1) resources of the cloud network itself (hosts, network flows, etc.) and (2) primitives that control mutation of the object graph.  Capabilities in CapNet allow principals to perform operations on objects: e.g., a capability to a "flow object" allows packets to be sent along the flow, and a capability to a "node object" can control a virtual or physical device in the cloud. Principals have no authority beyond capabilities: all network operations are accessible only through capability invocations.  Over the course of the project CapNet developed mechanisms and abstractions that enable the following security constructs in the datacenter network: (1) Least authority. The key principle enabling security in CapNet is the ability to construct small, isolated cloud subsystems that operate on a minimal number of isolated resources. By minimizing the authority of individual subsystems, CapNet guarantees that even if a part of a computation is compromised, the possible effect of the attack is minimal and limited to a set of objects reachable through capabilities. (2) Mutual isolation. CapNet developed mechanisms enabling mutual isolation of principals irrespective of the ownership of the network nodes and their past. In CapNet, the providers and consumers of third-party cloud services can interact without requiring trust. For example, even if a service is configured by a third-party provider, the consumer of the service has guarantees that the service is completely isolated from the provider after deployment. On the other hand, the provider can protect its proprietary service from the consumer by isolating the service from the consumer itself, inside the consumer?s network. (3) Decentralized access control. CapNet developed primitives that enable decentralized access control in the datacenter network. Datacenter workloads that involve multiple parties combining their sensitive datasets for joint processing require isolation for each dataset and the ability to reason about information flow across the joint computation. CapNet allows mistrusting tenants to assemble tightly controlled cloud networks in a decentralized manner, i.e., without trusting each other, yet enforcing their own network-wide isolation and information-flow properties. By providing a foundation for secure scientific collaboration, CapNet is a step towards mitigating the potential for damage (including cyber-attacks, data loss, and data exfiltration) present in current scientific infrastructure. CapNet is open-source software and is available for download at https://gitlab.flux.utah.edu/tcloud/capnet. It can be test-driven via a CloudLab profile (https://www.cloudlab.us/p/TCloud/OpenStack-Capnet) that automatically instantiates a private Open-Stack cloud for the user, preconfigured with CapNet.       Last Modified: 07/03/2019       Submitted by: Jacobus Van Der Merwe]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

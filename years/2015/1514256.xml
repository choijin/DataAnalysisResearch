<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Medium:Collaborative Research:Holistic, Cross-Site, Hybrid System Anomaly Debugging for Large Scale Hosting Infrastructures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2015</AwardEffectiveDate>
<AwardExpirationDate>07/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>282000.00</AwardTotalIntnAmount>
<AwardAmount>282000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Large-scale shared hosting infrastructures such as multi-tenant cloud computing systems have become increasingly popular by allowing users to lease resources on-demand in a cost-effective way. As multiple tenants may share computing resources, hosting infrastructures are complex systems and prone to various system anomalies. Although software developers often perform rigorous offline testing, many subtle bugs only manifest themselves during large-scale production run. Many anomalies such as those where the system does not crash but fails to behave as expected are hard to reproduce and diagnose using existing techniques. Existing system anomaly diagnosis work can be broadly classified into two categories: 1) the black-box schemes which do not require source code and are suitable for online production-site diagnosis, and 2) the white-box schemes which require source code and expensive code instrumentation and are suitable for development site, offline diagnosis. Although white-box schemes provide fine-grained diagnosis, large-scale production hosting infrastructures are reluctant to adopt them due to their high-overhead and intrusive system recording approaches.&lt;br/&gt;&lt;br/&gt;The overarching objective of this project is to explore an innovative cross-site system anomaly debugging approach that intelligently integrates production-site black-box diagnosis with development-site white-box debugging into a more powerful hosting infrastructure debugging framework. This project will develop techniques for development-site, offline white-box debugging that takes the production-site fault inference results as guidance to find the exact anomaly causes. The project will focus on diagnosing non-crashing system anomalies (e.g., performance degradation, service outage, software hang, unexpected halt) that are common in real world hosting infrastructures but are difficult to debug using existing techniques. &lt;br/&gt;&lt;br/&gt;Techniques developed in this project will generate significant impact on improving the robustness of real world hosting infrastructures. The PIs will develop new course modules on the hosting infrastructure debugging for both graduate and undergraduate classes they regularly teaches. This project will develop programming courseware based on the research prototypes developed in this project. The PIs will use their power of role model and a set of outreach activities to recruit more female students to pursue systems research. The PIs will disseminate their results and collected data broadly through publication and technology transfer. Developed software artifacts and experimental datasets will be released for public use.</AbstractNarration>
<MinAmdLetterDate>07/29/2015</MinAmdLetterDate>
<MaxAmdLetterDate>05/10/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1514256</AwardID>
<Investigator>
<FirstName>Shan</FirstName>
<LastName>Lu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shan Lu</PI_FULL_NAME>
<EmailAddress>shanlu@cs.uchicago.edu</EmailAddress>
<PI_PHON>7737023184</PI_PHON>
<NSF_ID>000552962</NSF_ID>
<StartDate>07/29/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Chicago</Name>
<CityName>Chicago</CityName>
<ZipCode>606372612</ZipCode>
<PhoneNumber>7737028669</PhoneNumber>
<StreetAddress>6054 South Drexel Avenue</StreetAddress>
<StreetAddress2><![CDATA[Suite 300]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>005421136</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CHICAGO, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>005421136</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Chicago]]></Name>
<CityName>Chicago</CityName>
<StateCode>IL</StateCode>
<ZipCode>606375418</ZipCode>
<StreetAddress><![CDATA[1100 East 58th Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~138095</FUND_OBLG>
<FUND_OBLG>2017~70913</FUND_OBLG>
<FUND_OBLG>2018~72992</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-cd1c5a1c-7fff-f970-beb3-bfe6fc69ec1c">&nbsp;</span></p> <p dir="ltr"><span>Improving the performance and efficiency of cloud distributed systems is crucial with cloud distributed systems becoming the backbone of today&rsquo;s computing society. Unfortunately, performance problems exist widely in cloud systems and are difficult to diagnose and fix due to the large scale of cloud systems. In practice, these performance problems have led to many system outages and severe economic losses.</span></p> <p dir="ltr"><span>&nbsp;</span></p> <p dir="ltr"><span>This project focuses on detecting and diagnosing performance anomalies in distributed systems and has made significant contributions to the state of the art in understanding, detecting, diagnosing, and fixing performance problems in real-world distributed systems.</span></p> <p dir="ltr"><span>- It conducts one of the first comprehensive empirical studies about real-world performance problems in cloud systems, offering in-depth understanding of several major types of cloud performance problems for the first time such as cascading delays caused by software resource contention, time-out bugs, performance-related misconfigurations, and others.</span></p> <p dir="ltr"><span>- It provides a variety of white-box-and-black-box hybrid analysis tools that can automatically detect and diagnose various types of performance anomalies in cloud systems, with many previously unknown bugs discovered by us.</span></p> <p dir="ltr"><span>- It provides automated fixing tools to help fix time-out bugs and automatically control performance-sensitive configuration parameters.</span></p> <p dir="ltr"><span>- It also helps open new directions such as data corruption problems in the cloud, performance problems in machine learning cloud systems, and so on.</span></p> <p dir="ltr"><span>&nbsp;</span></p> <p dir="ltr"><span>The above techniques can help software developers to improve the efficiency and performance of cloud distributed software, greatly improving the user experience and saving the development and maintenance cost of cloud service providers.</span></p> <p dir="ltr"><span>&nbsp;</span></p> <p dir="ltr"><span>The research results of this project have been disseminated through conference proceedings (11 research papers on top-tier computer science conferences so far), research talks, benchmark dissemination, PI Gu&rsquo;s start-up companies, both PIs&rsquo; collaboration with industry partners, and others.&nbsp;</span></p> <p dir="ltr"><span>&nbsp;</span></p> <p dir="ltr"><span>Multiple students have gone through research training in this project. Multiple of them have finished their Ph.D. and Master thesis about tackling performance anomalies in cloud systems. Out-reach activities and teaching development based on this project have also been conducted.</span></p> <p>&nbsp;</p><br> <p>            Last Modified: 11/16/2020<br>      Modified by: Shan&nbsp;Lu</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Improving the performance and efficiency of cloud distributed systems is crucial with cloud distributed systems becoming the backbone of todayâ€™s computing society. Unfortunately, performance problems exist widely in cloud systems and are difficult to diagnose and fix due to the large scale of cloud systems. In practice, these performance problems have led to many system outages and severe economic losses.   This project focuses on detecting and diagnosing performance anomalies in distributed systems and has made significant contributions to the state of the art in understanding, detecting, diagnosing, and fixing performance problems in real-world distributed systems. - It conducts one of the first comprehensive empirical studies about real-world performance problems in cloud systems, offering in-depth understanding of several major types of cloud performance problems for the first time such as cascading delays caused by software resource contention, time-out bugs, performance-related misconfigurations, and others. - It provides a variety of white-box-and-black-box hybrid analysis tools that can automatically detect and diagnose various types of performance anomalies in cloud systems, with many previously unknown bugs discovered by us. - It provides automated fixing tools to help fix time-out bugs and automatically control performance-sensitive configuration parameters. - It also helps open new directions such as data corruption problems in the cloud, performance problems in machine learning cloud systems, and so on.   The above techniques can help software developers to improve the efficiency and performance of cloud distributed software, greatly improving the user experience and saving the development and maintenance cost of cloud service providers.   The research results of this project have been disseminated through conference proceedings (11 research papers on top-tier computer science conferences so far), research talks, benchmark dissemination, PI Guâ€™s start-up companies, both PIsâ€™ collaboration with industry partners, and others.    Multiple students have gone through research training in this project. Multiple of them have finished their Ph.D. and Master thesis about tackling performance anomalies in cloud systems. Out-reach activities and teaching development based on this project have also been conducted.          Last Modified: 11/16/2020       Submitted by: Shan Lu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

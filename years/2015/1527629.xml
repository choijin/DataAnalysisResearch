<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Scalable Coordination for Wide-Area Distributed Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2015</AwardEffectiveDate>
<AwardExpirationDate>09/30/2020</AwardExpirationDate>
<AwardTotalIntnAmount>499566.00</AwardTotalIntnAmount>
<AwardAmount>499566</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Scalable coordination of concurrently executing tasks is a challenging open problem for large-scale distributed systems. For loosely dependent tasks that require little or no communication, simple abstractions such as barrier synchronization suffice for coordination. However, for large-scale cloud-computing and web-services applications that require tighter synchronization (such as online transaction processing systems, distributed file systems, and graph processing applications), a fine-grained complex coordination service is needed. Especially with increasing demand for large-scale web-services for e-commerce, social networking, and Internet of Things, the coordination of tasks over wide-area (i.e., across clusters, across datacenters, and across Internet) has recently gained greater importance.&lt;br/&gt;&lt;br/&gt;Traditional distributed coordination techniques fail to scale for wide-area networks to support these new generation applications. Centralized coordination fails to scale with respect to the increased distances in the wide-area, whereas distributed coordination fails to scale with respect to the number of nodes involved. This research project claims that it is possible to achieve scalable coordination of distributed tasks over wide-area using a novel hybrid design, called Maestro. The Maestro framework will address the following research questions: (1) What are the limits of fully-centralized and fully-decentralized solutions to coordination, and what are the scalability benefits of a hybrid hierarchical approach? (2) How can locality-awareness be utilized to achieve high-performance across wide-area? (3) How can partition-awareness be utilized to achieve consistency across wide-area? &lt;br/&gt;&lt;br/&gt;The Maestro framework will employ a hierarchical lock broker architecture with a novel lock-leasing mechanism and smart/adaptive lock migration. This combination allows flexibility of control and provides the best of both centralized and decentralized approaches. As the authority of their respective domains, the brokers learn and adapt to the access patterns of tasks at runtime to improve lock-locality and hence scalability, while they also have autonomy to allow independent tasks to be initiated and executed in a decentralized manner. Maestro will provide optimizations such as proactive leasing of locks to servers even before they are requested, lock migration (changing primary site assignment of locks), and shared/fractional lock-leasing to selectively allow decentralized coordination and relaxed consistency when appropriate.&lt;br/&gt;&lt;br/&gt;The proposed Maestro framework will be evaluated on two popular distributed application domains: wide-area ZooKeeper for distributed coordination, and wide-area distributed metadata management. Maestro will fill an important gap in the wide-area scalable coordination of tightly-coupled consistency-critical distributed applications, and it will enable further broader impacts through graduate and undergraduate level curriculum development, enhancing scientific/technological understanding via organizing academic workshops, outreaching to K-12 students, recruitment of minority groups, and distributing tools and software to the community.</AbstractNarration>
<MinAmdLetterDate>09/14/2015</MinAmdLetterDate>
<MaxAmdLetterDate>03/19/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1527629</AwardID>
<Investigator>
<FirstName>Murat</FirstName>
<LastName>Demirbas</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Murat Demirbas</PI_FULL_NAME>
<EmailAddress>demirbas@buffalo.edu</EmailAddress>
<PI_PHON>7166453180</PI_PHON>
<NSF_ID>000282083</NSF_ID>
<StartDate>09/14/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Tevfik</FirstName>
<LastName>Kosar</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tevfik Kosar</PI_FULL_NAME>
<EmailAddress>tkosar@buffalo.edu</EmailAddress>
<PI_PHON>7166452323</PI_PHON>
<NSF_ID>000581942</NSF_ID>
<StartDate>09/14/2015</StartDate>
<EndDate>03/19/2020</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Buffalo</Name>
<CityName>Buffalo</CityName>
<ZipCode>142282567</ZipCode>
<PhoneNumber>7166452634</PhoneNumber>
<StreetAddress>520 Lee Entrance</StreetAddress>
<StreetAddress2><![CDATA[Suite 211]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>038633251</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Buffalo]]></Name>
<CityName>Buffalo</CityName>
<StateCode>NY</StateCode>
<ZipCode>142602500</ZipCode>
<StreetAddress><![CDATA[338 Davis Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~499566</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project explored scalable coordination protocols in distributed systems, especially those over wide-area networks (WANs), such as across different geographical regions. This is an important problem because existing distributed coordination protocols have scalability bottlenecks, both in terms of the number of nodes involved in the protocol and in terms of the distance between the nodes.</p> <p>The project investigated the bottlenecks of fully centralized and fully distributed solutions to coordination. This work culminate in the publication of Sigmod 2019 paper titled: Dissecting the performance of strongly-consistent replication protocols. The paper gave a framework to easily reason about the bottlenecks and relative performances of strongly consistent coordination protocols.</p> <p>The project resulted in several novel scalable and fault-tolerant distributed coordination protocols. The publication in ICDCS 2017, "Efficient distributed coordination at WAN-scale" described the WAN-Keeper protocol. WAN-Keeper showed that a hierarchical approach to coordination outperforms existing central and distributed coordination solutions.</p> <p>The publication in IEEE Transactions on Parallel and Distributed Systems in 2019 described WPaxos, a wide area network flexible consensus protocol. WPaxos showed how locality-awareness can be integrated within a multi-leader Paxos protocol to achieve high-performance across WAN. WPaxos employs multiple leader nodes to concurrently serve a set of objects in the system, where the nodes may steal leadership of objects from each other based on locality of accesses to the objects, but in a fault-tolerant manner using phase-1 of Paxos.</p> <p>In order to alleviate the leader bottleneck in distributed coordination protocols, the project introduced for the first time a linearizable read protocol involving only follower nodes without the use of leases. This work appeared in HotStorage 2019, with the title "Linearizable quorum reads in Paxos".</p> <p>The project also produced software for enabling others to perform research on distributed coordination. The Paxi framework is implemented in Go language and&nbsp; is shared as opensource at https://github.com/ailidani/paxi (with more than 400 stars). The framework provides implementations of Classical multi-Paxos, Flexible Paxos, WPaxos, EPaxos, KPaxos (Static partitioned Paxos), Atomic Storage (Majority Replication), Dynamo Key-value Store, WanKeeper, and Vertical Paxos.</p><br> <p>            Last Modified: 01/31/2021<br>      Modified by: Murat&nbsp;Demirbas</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project explored scalable coordination protocols in distributed systems, especially those over wide-area networks (WANs), such as across different geographical regions. This is an important problem because existing distributed coordination protocols have scalability bottlenecks, both in terms of the number of nodes involved in the protocol and in terms of the distance between the nodes.  The project investigated the bottlenecks of fully centralized and fully distributed solutions to coordination. This work culminate in the publication of Sigmod 2019 paper titled: Dissecting the performance of strongly-consistent replication protocols. The paper gave a framework to easily reason about the bottlenecks and relative performances of strongly consistent coordination protocols.  The project resulted in several novel scalable and fault-tolerant distributed coordination protocols. The publication in ICDCS 2017, "Efficient distributed coordination at WAN-scale" described the WAN-Keeper protocol. WAN-Keeper showed that a hierarchical approach to coordination outperforms existing central and distributed coordination solutions.  The publication in IEEE Transactions on Parallel and Distributed Systems in 2019 described WPaxos, a wide area network flexible consensus protocol. WPaxos showed how locality-awareness can be integrated within a multi-leader Paxos protocol to achieve high-performance across WAN. WPaxos employs multiple leader nodes to concurrently serve a set of objects in the system, where the nodes may steal leadership of objects from each other based on locality of accesses to the objects, but in a fault-tolerant manner using phase-1 of Paxos.  In order to alleviate the leader bottleneck in distributed coordination protocols, the project introduced for the first time a linearizable read protocol involving only follower nodes without the use of leases. This work appeared in HotStorage 2019, with the title "Linearizable quorum reads in Paxos".  The project also produced software for enabling others to perform research on distributed coordination. The Paxi framework is implemented in Go language and  is shared as opensource at https://github.com/ailidani/paxi (with more than 400 stars). The framework provides implementations of Classical multi-Paxos, Flexible Paxos, WPaxos, EPaxos, KPaxos (Static partitioned Paxos), Atomic Storage (Majority Replication), Dynamo Key-value Store, WanKeeper, and Vertical Paxos.       Last Modified: 01/31/2021       Submitted by: Murat Demirbas]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

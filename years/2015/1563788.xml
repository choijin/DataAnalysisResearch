<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NeTS: Medium: Collaborative Research: Language and Hardware Primitives for Programming the Data Plane in High Speed Networks</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2016</AwardEffectiveDate>
<AwardExpirationDate>05/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>201667.00</AwardTotalIntnAmount>
<AwardAmount>201667</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Darleen Fisher</SignBlockName>
<PO_EMAI>dlfisher@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The evolution of network routers and switches has been driven primarily by performance. Recently, thanks in part to the emergence of large datacenter networks, the need for better control over network operations, and the desire for new features, programmability of routers has become as important as performance. In response, researchers and practitioners have developed reconfigurable switching chips with a RISC-inspired pipeline architecture, which provide some programmability through hardware primitives that can be configured into a processing pipeline with software directives. Reconfigurable switches are gaining traction as they perform the same as fixed-function chipsets but with lower area overhead. &lt;br/&gt;&lt;br/&gt;This project seeks to extend the state-of-the-art by developing higher-level programming abstractions and traffic management algorithms for reconfigurable switches. This project will investigate: &lt;br/&gt;1) a C-like language and an abstract machine representing modern switches, &lt;br/&gt;2) a compiler to convert the transactional specification to the pipelined abstract machine, and a &lt;br/&gt;3) Push-In, First-Out (PIFO) primitive for programmable packet scheduling. &lt;br/&gt;&lt;br/&gt;This project will make programming high-speed switches easier and more expressive, which will be useful in datacenters, enterprises, and service provider networks. Research findings will be incorporated into the undergraduate and graduate curricula, offering students an opportunity to implement network protocols in C, a familiar language, but run them at hardware speeds. The course material will be made widely available through MIT OpenCourseWare and on the MITx MOOC.</AbstractNarration>
<MinAmdLetterDate>05/31/2016</MinAmdLetterDate>
<MaxAmdLetterDate>08/31/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1563788</AwardID>
<Investigator>
<FirstName>Alvin</FirstName>
<LastName>Cheung</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Alvin Cheung</PI_FULL_NAME>
<EmailAddress>akcheung@cs.berkeley.edu</EmailAddress>
<PI_PHON>2065431695</PI_PHON>
<NSF_ID>000684029</NSF_ID>
<StartDate>05/31/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Washington</Name>
<CityName>Seattle</CityName>
<ZipCode>981950001</ZipCode>
<PhoneNumber>2065434043</PhoneNumber>
<StreetAddress>4333 Brooklyn Ave NE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<StateCode>WA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>WA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>605799469</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF WASHINGTON</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042803536</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Washington]]></Name>
<CityName/>
<StateCode>WA</StateCode>
<ZipCode>981952350</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Washington</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>WA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>7363</Code>
<Text>RES IN NETWORKING TECH &amp; SYS</Text>
</ProgramReference>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0117</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~126178</FUND_OBLG>
<FUND_OBLG>2017~75489</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project aims to develop new ways to program network switches.&nbsp;Network switches are important elements that form the backbone of our modern communication infrastructure nowadays. Programming such switches has been difficult in the past due to the variety of platforms provided by hardware vendors. Over the course of this project, we have developed a new way called packet transactions to organize code to be executed on network switches. To validate our proposal, we have implemented a compiler called Domino that translates code written using packet transactions into actual executable instructions that can be run on programmable network switches. Along the way, we have also developed new algorithms that can speed up the translation of packet transactions and other similar types of code. We have validated our results by implementing real-world programs as packet transactions, and compiling them to be executed using commercially available programmable switches.&nbsp;Furthermore, we have disseminated our results by publishing in academic conferences, proposing our packet transactions idea to networking standards committees, and also incorporating them into undergraduate and graduate courses offered at the University of Washington. This project has supported three graduate students at the University of Washington during its course, and has also inspired different undergraduate research projects along the way.</p><br> <p>            Last Modified: 07/11/2019<br>      Modified by: Alvin&nbsp;Cheung</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project aims to develop new ways to program network switches. Network switches are important elements that form the backbone of our modern communication infrastructure nowadays. Programming such switches has been difficult in the past due to the variety of platforms provided by hardware vendors. Over the course of this project, we have developed a new way called packet transactions to organize code to be executed on network switches. To validate our proposal, we have implemented a compiler called Domino that translates code written using packet transactions into actual executable instructions that can be run on programmable network switches. Along the way, we have also developed new algorithms that can speed up the translation of packet transactions and other similar types of code. We have validated our results by implementing real-world programs as packet transactions, and compiling them to be executed using commercially available programmable switches. Furthermore, we have disseminated our results by publishing in academic conferences, proposing our packet transactions idea to networking standards committees, and also incorporating them into undergraduate and graduate courses offered at the University of Washington. This project has supported three graduate students at the University of Washington during its course, and has also inspired different undergraduate research projects along the way.       Last Modified: 07/11/2019       Submitted by: Alvin Cheung]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRII: SHF: EVID: Evidence-Assisted Detection and Elimination of Memory Errors in Single and Multi-threaded Programs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2016</AwardEffectiveDate>
<AwardExpirationDate>02/28/2019</AwardExpirationDate>
<AwardTotalIntnAmount>174731.00</AwardTotalIntnAmount>
<AwardAmount>206731</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Title: CRII: SHF: EVID: Evidence-Assisted Detection and Elimination of Memory Errors in Single and Multi-threaded Programs&lt;br/&gt;&lt;br/&gt;Despite decades of efforts, most real-world C/C++ software is still deployed with memory errors. Existing approaches either introduce significant performance overhead (for detection) or only partially defeat memory errors. The intellectual merits of this project are an evidence-assisted approach (EVID) for dynamic analysis and prevention of memory errors. The project's broader significance and importance are in (a) efficient and precise detection tools that significantly reduce manual effort in locating and fixing memory errors; (b) the improvement of availability and security of software systems; and (c) outreach to underrepresented groups such as Hispanic students. &lt;br/&gt;&lt;br/&gt;This project proposes several techniques to detect and prevent memory errors, which can greatly reduce zero-day vulnerabilities and improve the reliability/security of software systems. EVID employs the following insight: it is often possible to discover the evidence of errors such as buffer overflows, use-after-frees, and memory leaks, after-the-fact. Assisted by the evidence, this project utilizes deterministic and instrumented re-execution to pinpoint the exact causes of memory errors in both single and multithreaded programs. EVID further proposes an innovative system that automatically eliminates detected memory errors, without restarting the software or compromising its availability. Thus the tools developed in the project have a direct impact on improving robustness of national cyberinfrastructure.</AbstractNarration>
<MinAmdLetterDate>02/16/2016</MinAmdLetterDate>
<MaxAmdLetterDate>03/22/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1566154</AwardID>
<Investigator>
<FirstName>Tongping</FirstName>
<LastName>Liu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tongping Liu</PI_FULL_NAME>
<EmailAddress>tongping@umass.edu</EmailAddress>
<PI_PHON>4135450239</PI_PHON>
<NSF_ID>000677409</NSF_ID>
<StartDate>02/16/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at San Antonio</Name>
<CityName>San Antonio</CityName>
<ZipCode>782491644</ZipCode>
<PhoneNumber>2104584340</PhoneNumber>
<StreetAddress>One UTSA Circle</StreetAddress>
<StreetAddress2><![CDATA[Grants, Contracts & Ind. Agr.]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX20</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>800189185</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT SAN ANTONIO, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at San Antonio]]></Name>
<CityName>San Antonio</CityName>
<StateCode>TX</StateCode>
<ZipCode>782493209</ZipCode>
<StreetAddress><![CDATA[1 UTSA Circle]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX20</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>026Y</Code>
<Text>CRII CISE Research Initiation</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>8228</Code>
<Text>CISE Resrch Initiatn Initiatve</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~190731</FUND_OBLG>
<FUND_OBLG>2018~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The project significantly advanced the state-of-the-arts in the following aspects.<br /><br />1. It developped a novel record-and-replay system--iReplayer--for multithreaded applications, which could identically reproduce the original execution in the same process. This RnR system only imposes very little recording overhead, allowing it to be employed in the production systems.The paper is published in PLDI'18.<br /><br />2. Based on the record-and-replay system, multiple tools have been built on top of it with the evidence-based approach. Two tools are developped to detect typical memory errors, such as buffer overflows and use-after-free bugs. The paper is published in PLDI'18.<br /><br />3. Two secure memory allocators are built with this support. These memory allocators make it harder for attackers to succeed, even when applications have many latent memory errors. The papers are published in CCS'17 and USENIX Security'18, and the corresponding source code are openned in https://github.com/UTSASRG.<br /><br />4. One tool of identifying one notorious concurrency issue--deadlocks--has been developped. Deadlocks may cause software to hang with no further progress. The tool imposes negligible runtime performanceoverhead (less than 3% on average) and small memory overhead(around 6%), without any storage consumption. After detection,UNDEADautomatically strengthens erroneous programs to pre-vent future occurrences of both existing and potential deadlock. The paper was published in ASE'17, and the source code is openned at https://github.com/UTSASRG .<br /><br />5. One tool to identify the performance issue related with explicit synchronizations has been developped. it discovers many unknown but significant synchronization performance issues, but without imposing too much overhead for its detection. The paper was published in EuroSys'17, and the source code is openned at https://github.com/UTSASRG .<br /><br />6. The first tool that could employ the sample of memory accesses to detect memory errors in the deployment environment has been developped. The paper was published in Micro'18, and the source code is openned at https://github.com/UTSASRG .</p> <p>&nbsp;</p> <p>The project also has the following broader impacts.</p> <p>1. One course project related to kernel memory management has been designed and applied to both graduate and undergraduate teaching in UTSA. This course project improves the performance of students by over 30%, and a SIGCSE'18 paper has been published on this.&nbsp;</p> <p>2. The project creates some products that attracts the industry partners, such as Mozilla. They are interested in integrating our secure memory allocator with Firefox. Currently, this project is undergoing. If successful, it will benefit millions of users of using Firefox, improving their security.</p> <p>3. The project outreached to K12 students via mentoring at Youth Code Jam and coaching at "USTA Robotics Summer Camp".</p><br> <p>            Last Modified: 04/03/2019<br>      Modified by: Tongping&nbsp;Liu</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The project significantly advanced the state-of-the-arts in the following aspects.  1. It developped a novel record-and-replay system--iReplayer--for multithreaded applications, which could identically reproduce the original execution in the same process. This RnR system only imposes very little recording overhead, allowing it to be employed in the production systems.The paper is published in PLDI'18.  2. Based on the record-and-replay system, multiple tools have been built on top of it with the evidence-based approach. Two tools are developped to detect typical memory errors, such as buffer overflows and use-after-free bugs. The paper is published in PLDI'18.  3. Two secure memory allocators are built with this support. These memory allocators make it harder for attackers to succeed, even when applications have many latent memory errors. The papers are published in CCS'17 and USENIX Security'18, and the corresponding source code are openned in https://github.com/UTSASRG.  4. One tool of identifying one notorious concurrency issue--deadlocks--has been developped. Deadlocks may cause software to hang with no further progress. The tool imposes negligible runtime performanceoverhead (less than 3% on average) and small memory overhead(around 6%), without any storage consumption. After detection,UNDEADautomatically strengthens erroneous programs to pre-vent future occurrences of both existing and potential deadlock. The paper was published in ASE'17, and the source code is openned at https://github.com/UTSASRG .  5. One tool to identify the performance issue related with explicit synchronizations has been developped. it discovers many unknown but significant synchronization performance issues, but without imposing too much overhead for its detection. The paper was published in EuroSys'17, and the source code is openned at https://github.com/UTSASRG .  6. The first tool that could employ the sample of memory accesses to detect memory errors in the deployment environment has been developped. The paper was published in Micro'18, and the source code is openned at https://github.com/UTSASRG .     The project also has the following broader impacts.  1. One course project related to kernel memory management has been designed and applied to both graduate and undergraduate teaching in UTSA. This course project improves the performance of students by over 30%, and a SIGCSE'18 paper has been published on this.   2. The project creates some products that attracts the industry partners, such as Mozilla. They are interested in integrating our secure memory allocator with Firefox. Currently, this project is undergoing. If successful, it will benefit millions of users of using Firefox, improving their security.  3. The project outreached to K12 students via mentoring at Youth Code Jam and coaching at "USTA Robotics Summer Camp".       Last Modified: 04/03/2019       Submitted by: Tongping Liu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

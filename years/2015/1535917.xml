<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AitF: FULL: Collaborative Research: Practical Foundations for Software-Defined Network Optimization</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2015</AwardEffectiveDate>
<AwardExpirationDate>09/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>173333.00</AwardTotalIntnAmount>
<AwardAmount>173333</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy Kimbrel</SignBlockName>
<PO_EMAI>tkimbrel@nsf.gov</PO_EMAI>
<PO_PHON>7032927924</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Society today critically depends on Internet services. The safety and performance of these Internet services in turn depends on the ability of individual networks to successfully&amp;#8203; manage and optimize their network configurations in reaction to a changing operating environment (e.g., sudden increases in traffic or attacks or changes in policy compliance requirements). Today, network operators often resort to ad hoc and brittle solutions that affect the safety and performance of the networks. The goal of this project is combine theory and practice to develop foundational mechanisms enabling network administrators to implement diverse network operations tasks. This project will develop abstractions for expressing a broad spectrum of network optimization tasks and algorithmic foundations to reason about and achieve optimal (or near-­optimal) solutions that will be better than current state-of-the-art. &amp;#8203;The project will develop and release open­-source toolkits that will dramatically reduce the time to prototype and deploy novel network management applications, and democratize these benefits for a larger audience. The project will lead to educational advances that help create a well­-rounded workforce capable of handling future technology challenges by applying transformational research that couples theory and practice. The project will actively encourage participation from underrepresented groups as part of the proposed work and mentor them to be future technology leaders.&lt;br/&gt;&lt;br/&gt;Software-­defined networking (SDN) is an emerging paradigm to simplify network management by moving policies embedded in the configurations of the network hardware to software running in centralized controllers. Realizing the potential benefits of SDN, however, currently requires significant theoretical and practical effort. Specifically, at the core of many SDN applications are complex optimization problems to tackle goals and requirements that arise in practice. These problems are ones for which good theoretical solutions are unknown.The goal of this project is to design and implement a novel framework that enables SDN application developers to express new application goals and constraints in a high-­level language, using a sound algorithmic approach to generate near­-optimal solutions, and then to generate compliant configurations that can be deployed to SDN control platforms directly. There are two requirements for this vision to be successful in practice: (i) the ability to express the requirements of a broad spectrum of applications and (ii)­­ generating provably optimal (or close ­to ­optimal) configurations, on a timescale that is responsive to application needs. The proposed research will investigate theoretical foundations and practical implementations to simultaneously achieve both goals. The project's contributions will include: (1) investigating the robustness of path-­based optimizations for a wide spectrum of SDN applications and developing algorithms for ensuring that such path­-based reformulations do not sacrifice efficiency; (2) designing richer abstractions for applications that require more dynamic network processing features and developing near­-optimal and practical algorithms for these applications; (3) designing efficient optimization-­preserving translations of solutions from such theoretical frameworks into practical network configurations; and (4) implementing these techniques in an end­-to-­end open-­source tool integrated with state­-of-­the-­art network management platforms.</AbstractNarration>
<MinAmdLetterDate>08/26/2015</MinAmdLetterDate>
<MaxAmdLetterDate>08/26/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1535917</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Reiter</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael Reiter</PI_FULL_NAME>
<EmailAddress>michael.reiter@duke.edu</EmailAddress>
<PI_PHON>9196606524</PI_PHON>
<NSF_ID>000161868</NSF_ID>
<StartDate>08/26/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of North Carolina at Chapel Hill</Name>
<CityName>CHAPEL HILL</CityName>
<ZipCode>275991350</ZipCode>
<PhoneNumber>9199663411</PhoneNumber>
<StreetAddress>104 AIRPORT DR STE 2200</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>608195277</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NORTH CAROLINA AT CHAPEL HILL</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>142363428</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of North Carolina at Chapel Hill]]></Name>
<CityName/>
<StateCode>NC</StateCode>
<ZipCode>275993175</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7239</Code>
<Text>Algorithms in the Field</Text>
</ProgramElement>
<ProgramReference>
<Code>012Z</Code>
<Text>AitF FULL Projects</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~173333</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-17603f04-7fff-d1e4-86f5-17183f2746bb"> <p dir="ltr"><span>Software-defined networking (SDN) is an emerging paradigm to simplify network management by moving policies embedded in the configurations of the network hardware to software running on centralized controllers. This supports better high-level tools for managing networks and enables new management applications that would otherwise be difficult (if not impossible) to realize using existing techniques.&nbsp; By centralizing control, SDN enables administrators to implement diverse network configuration tasks such as traffic engineering, service chaining, energy efficient routing, and cloud offloading.</span></p> <p dir="ltr"><span>Realizing these potential benefits requires significant theoretical and practical effort. Specifically, at the core of many SDN applications are complex optimization problems to tackle goals and requirements that arise in practice. Furthermore, these problems are ones for which we often do not know good (even approximate) theoretical solutions.&nbsp; The overarching vision of this project is to eliminate the pain-point of each SDN application of having to reinvent the wheel with respect to such optimization problems.  Thus, we want to raise the level of abstraction for writing SDN-based network management tasks via a flexible optimization framework, to reduce the development time and cognitive effort to build novel applications atop SDN.</span></p> <p dir="ltr"><span>The project outcomes include both: (1) Practical abstractions and tools for expressing a broad spectrum of network optimization tasks atop SDN and (2) Algorithmic foundations to reason about and achieve optimal (or near-optimal) solutions using these unifying abstractions.</span></p> <p dir="ltr"><span>Some of the specific outcomes include:&nbsp;</span></p> <p dir="ltr"><span>Abstractions: </span><span>&nbsp;SOL is&nbsp; a framework that demonstrates (perhaps surprisingly) that it is possible to simultaneously achieve generality and efficiency in SDN optimizations. The insight underlying SOL is that many SDN applications can be recast within a unifying path-based optimization abstraction. Using this, SOL can efficiently generate near-optimal solutions and device configurations to implement them. Results on real world topologies and workloads&nbsp; show that SOL provides comparable or better scalability than custom optimization solutions for diverse applications, allows a balancing of optimality and route churn per reconfiguration, and interfaces with modern SDN controllers.</span></p> <p dir="ltr"><span>Composing applications: </span><span>As software-defined networking deployments mature, operators need to manage and compose multiple resource-management applications, such as traffic engineering and service chaining. Today such applications&rsquo; resource management algorithms run separately and composition approaches are output-driven, e.g., running each application on a statically provisioned slice of the network and then combining the flow rules output for each slice. Such approaches result in inefficient resource utilization and unfairness. By utilizing the above general-purpose abstractions, our project made a case for&nbsp; intent-driven composition, where a unified resource optimization formulation is composed from applications&rsquo; high-level intents and the solution to this problem formulation is realized in the network. Chopin is the realization of such an intent-driven framework for composing SDN resource-management applications, which substantially improves efficiency and fairness over existing composition approaches.</span></p> <p dir="ltr"><span>Dynamic Algorithms for SDN: </span><span>The ever-changing patterns of network traffic and requirements of network coverage mean that we need new dynamic algorithms. For example, if we want to install middleboxes to scan network traffic, then we need to increase or change the currently active set of middleboxes as the traffic changes. Moreover, we would like to avoid changing the solutions completely. Our project formalizes these problems as submodular coverage problems, and gives new and provably good algorithms to maintain a solution in both online and dynamic environments. Specifically, in the online submodular cover problem we can open additional midddleboxes to maintain a good approximation at each timestep, whereas in the dynamic problem, we can both open new middleboxes and close existing ones to maintain an even better approximation at each timestep. This shows how solving problems from the networking side can lead to interesting developments on the theoretical front.</span></p> <p dir="ltr"><span>Consistency: </span><span>An artifact of the dynamic optimization enabled by SDNs and specifically by the other research in this project is the need to change traffic routing policies to realize optimal routes under changing conditions.&nbsp; However, haphazard installation of forwarding rules in switches to reflect new routing policies can result in packets being handled by unpredictable mixtures of old and new rules and consequently violations of routing policies or packet loss.&nbsp; We therefore developed new algorithms to coordinate the deployment of rules to switches in a way that retains compliance with routing policies more efficiently than prior approaches.</span></p> <span>Broader Impacts:</span><span> In addition to these technical outcomes published at leading venues, the project also released multiple open source prototypes that have been used by follow-on work, and also organized workshops to bring practitioners and theoreticians together to inspire new synergistic&nbsp; collaborations.</span><span> Questions arising in the networking context led to new problems formulations on the theoretical side, and conversely theoretical algorithms influenced developments on the networking front.</span></span></p> <p>&nbsp;</p><br> <p>            Last Modified: 12/23/2019<br>      Modified by: Michael&nbsp;Reiter</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Software-defined networking (SDN) is an emerging paradigm to simplify network management by moving policies embedded in the configurations of the network hardware to software running on centralized controllers. This supports better high-level tools for managing networks and enables new management applications that would otherwise be difficult (if not impossible) to realize using existing techniques.  By centralizing control, SDN enables administrators to implement diverse network configuration tasks such as traffic engineering, service chaining, energy efficient routing, and cloud offloading. Realizing these potential benefits requires significant theoretical and practical effort. Specifically, at the core of many SDN applications are complex optimization problems to tackle goals and requirements that arise in practice. Furthermore, these problems are ones for which we often do not know good (even approximate) theoretical solutions.  The overarching vision of this project is to eliminate the pain-point of each SDN application of having to reinvent the wheel with respect to such optimization problems.  Thus, we want to raise the level of abstraction for writing SDN-based network management tasks via a flexible optimization framework, to reduce the development time and cognitive effort to build novel applications atop SDN. The project outcomes include both: (1) Practical abstractions and tools for expressing a broad spectrum of network optimization tasks atop SDN and (2) Algorithmic foundations to reason about and achieve optimal (or near-optimal) solutions using these unifying abstractions. Some of the specific outcomes include:  Abstractions:  SOL is  a framework that demonstrates (perhaps surprisingly) that it is possible to simultaneously achieve generality and efficiency in SDN optimizations. The insight underlying SOL is that many SDN applications can be recast within a unifying path-based optimization abstraction. Using this, SOL can efficiently generate near-optimal solutions and device configurations to implement them. Results on real world topologies and workloads  show that SOL provides comparable or better scalability than custom optimization solutions for diverse applications, allows a balancing of optimality and route churn per reconfiguration, and interfaces with modern SDN controllers. Composing applications: As software-defined networking deployments mature, operators need to manage and compose multiple resource-management applications, such as traffic engineering and service chaining. Today such applications’ resource management algorithms run separately and composition approaches are output-driven, e.g., running each application on a statically provisioned slice of the network and then combining the flow rules output for each slice. Such approaches result in inefficient resource utilization and unfairness. By utilizing the above general-purpose abstractions, our project made a case for  intent-driven composition, where a unified resource optimization formulation is composed from applications’ high-level intents and the solution to this problem formulation is realized in the network. Chopin is the realization of such an intent-driven framework for composing SDN resource-management applications, which substantially improves efficiency and fairness over existing composition approaches. Dynamic Algorithms for SDN: The ever-changing patterns of network traffic and requirements of network coverage mean that we need new dynamic algorithms. For example, if we want to install middleboxes to scan network traffic, then we need to increase or change the currently active set of middleboxes as the traffic changes. Moreover, we would like to avoid changing the solutions completely. Our project formalizes these problems as submodular coverage problems, and gives new and provably good algorithms to maintain a solution in both online and dynamic environments. Specifically, in the online submodular cover problem we can open additional midddleboxes to maintain a good approximation at each timestep, whereas in the dynamic problem, we can both open new middleboxes and close existing ones to maintain an even better approximation at each timestep. This shows how solving problems from the networking side can lead to interesting developments on the theoretical front. Consistency: An artifact of the dynamic optimization enabled by SDNs and specifically by the other research in this project is the need to change traffic routing policies to realize optimal routes under changing conditions.  However, haphazard installation of forwarding rules in switches to reflect new routing policies can result in packets being handled by unpredictable mixtures of old and new rules and consequently violations of routing policies or packet loss.  We therefore developed new algorithms to coordinate the deployment of rules to switches in a way that retains compliance with routing policies more efficiently than prior approaches. Broader Impacts: In addition to these technical outcomes published at leading venues, the project also released multiple open source prototypes that have been used by follow-on work, and also organized workshops to bring practitioners and theoreticians together to inspire new synergistic  collaborations. Questions arising in the networking context led to new problems formulations on the theoretical side, and conversely theoretical algorithms influenced developments on the networking front.          Last Modified: 12/23/2019       Submitted by: Michael Reiter]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

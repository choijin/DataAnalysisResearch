<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSI:  Collaborative Research: ParaTreet: Parallel Software for Spatial Trees in Simulation and Analysis</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2016</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>170000.00</AwardTotalIntnAmount>
<AwardAmount>170000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Robert Beverly</SignBlockName>
<PO_EMAI>rbeverly@nsf.gov</PO_EMAI>
<PO_PHON>7032927068</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Many scientific and visualization methods involve organizing the data they are processing into a hierarchy (also known as a "tree").   These applications and methods include: astronomical simulations of particles moving under the influence of gravity, analysis of spatial data (that is, data that describes objects with respect to their relative position in space), photorealistic rendering of virtual environments,reconstruction of surfaces from laser scans, collision detection when simulating the movement of physical objects, and many others.   Tree data structures, and the algorithms used to work on these structures, are heavily used in these applications because they help to make these applications run much faster on supercomputers. However, implementing tree-based algorithms can require a significant effort, particularly on modern highly parallel computers.  This project will create ParaTreet, a software toolkit for parallel trees, that will enable rapid development of such applications.  Details of the parallel aspects will be hidden from the programmer, who will be able to quickly evaluate the relative merits of different trees and algorithms even when applied to large datasets and very computation-intensive applications. The combination of such an abstract and extensible framework with a portable adaptive runtime system will allow scientists to effectively use parallel hardware ranging from small clusters to petascale-class machines, for a wide variety of tree-based applications. This project will demonstrate the feasibility of such an approach as well as generate evidence of community adoption of this technology. If successful, this project will enable NSF-supported researchers to solve science problems faster as well as to tackle more complex problems, thus serving NSF's science mission.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;This project builds upon an existing collaboration on Computational Astronomy and the resultant software base in the ChaNGa (Charm N-body GrAvity solver) code. ChaNGa is a software package that performs collisionless N-body simulations, and can perform cosmological simulations with periodic boundary conditions in co-moving coordinates or simulations of isolated stellar systems. This project will extend ChaNGa with a parallel tree toolkit called ParaTreet and associated applications, that will allow scientists to effectively utilize small clusters as well as very large supercomputers for parallel tree-based calculations.  The key data structure in ParaTreet is an asynchronous software-based tree data cache, which maintains a writeback local copy of remote tree data. We plan to support a variety of spatial decomposition methods and the associated trees, including Oct-trees, KD-trees, inside-outside trees, ball trees, R-trees, and their combinations. Different trees are useful in different application circumstances, and the software will allow their relative merits to be evaluated with relative ease. The framework will support a variety of parallel work decomposition methods, including those based on space filling curves, and support dynamic rearrangement of parallel work at runtime. The algorithms supported will range from Barnes-Hut with various multipole expansions, data clustering, collision detection, surface reconstruction, ray intersection, etc. The software includes a collection of dynamic load balancing strategies in the Charm++ framework that can be tuned for specific problem structures. It also includes support for clusters of accelerators, such as GPGPUs. This project will demonstrate the feasibility of such an approach as well as generate evidence of community adoption of this technology.</AbstractNarration>
<MinAmdLetterDate>08/19/2016</MinAmdLetterDate>
<MaxAmdLetterDate>08/19/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1550554</AwardID>
<Investigator>
<FirstName>Laxmikant</FirstName>
<LastName>Kale</LastName>
<PI_MID_INIT>V</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Laxmikant V Kale</PI_FULL_NAME>
<EmailAddress>kale@uiuc.edu</EmailAddress>
<PI_PHON>2172440094</PI_PHON>
<NSF_ID>000123469</NSF_ID>
<StartDate>08/19/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>John</FirstName>
<LastName>Hart</LastName>
<PI_MID_INIT>C</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>John C Hart</PI_FULL_NAME>
<EmailAddress>jch@cs.uiuc.edu</EmailAddress>
<PI_PHON>2173338740</PI_PHON>
<NSF_ID>000307735</NSF_ID>
<StartDate>08/19/2016</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName/>
<StateCode>IL</StateCode>
<ZipCode>618207473</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8009</Code>
<Text>Scientifc Software Integration</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~170000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-786d77a1-7fff-de21-85b7-3e07e25dd11c"> </span></p> <p dir="ltr"><span>Much of the information about the world surrounding us needs to be represented hierarchically. We may want to see information about nearby locations in incredible detail, while approximating information about faraway objects. While predicting whether in one location, information about nearby locations? pressure temperature and moisture is useful at the level of higher resolution, but whether in faraway regions can be approximated with a broad brush. Important calculations and computational astronomy or data analytics depend on the ability to approximate at will. This requires organizing the data in the form of a hierarchical tree, so that any particular region may choose to look at other regions at any level of resolution desired.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>At the same time, many of the computations involved are highly expensive. Supercomputers consisting of multiple individual computers need to be deployed to handle such applications. Programming such supercomputers is a highly challenging task, and requires much larger time from a rare set of expert individual programmers, which is highly expensive. This project developed a framework and a library of computer programs that simplifies the task of developing such applications by providing a repertoire of ready-made pieces that expert application developers can use to put together a highly efficient supercomputer application code with much lesser effort than they would need to develop the whole application themselves. This framework, called ParaTreet, can be used for a variety of applications, thus saving significant amount of expensive software development. </span></p> <div><span><br /></span></div> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 02/27/2019<br>      Modified by: Laxmikant&nbsp;V&nbsp;Kale</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   Much of the information about the world surrounding us needs to be represented hierarchically. We may want to see information about nearby locations in incredible detail, while approximating information about faraway objects. While predicting whether in one location, information about nearby locations? pressure temperature and moisture is useful at the level of higher resolution, but whether in faraway regions can be approximated with a broad brush. Important calculations and computational astronomy or data analytics depend on the ability to approximate at will. This requires organizing the data in the form of a hierarchical tree, so that any particular region may choose to look at other regions at any level of resolution desired.    At the same time, many of the computations involved are highly expensive. Supercomputers consisting of multiple individual computers need to be deployed to handle such applications. Programming such supercomputers is a highly challenging task, and requires much larger time from a rare set of expert individual programmers, which is highly expensive. This project developed a framework and a library of computer programs that simplifies the task of developing such applications by providing a repertoire of ready-made pieces that expert application developers can use to put together a highly efficient supercomputer application code with much lesser effort than they would need to develop the whole application themselves. This framework, called ParaTreet, can be used for a variety of applications, thus saving significant amount of expensive software development.                Last Modified: 02/27/2019       Submitted by: Laxmikant V Kale]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

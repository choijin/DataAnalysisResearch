<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase I:  An automated tutoring software that teaches K-12 students coding through integration with popular video games</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2015</AwardEffectiveDate>
<AwardExpirationDate>12/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Glenn H. Larsen</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This SBIR Phase I project would result in the development of an intelligent automated tutoring system for teaching coding to K-12 students. Millions of 6-14 year old students in the U.S. have an interest in learning how to mod ("modify") popular video games, but lack the necessary skillset: coding. Coding is a highly valuable STEM subject, but is not currently a core subject in U.S. schools. Because the U.S. is not producing enough skilled workers in computing fields, there will be 56,000 jobs that go unfilled by U.S. workers every year. This project aims to expose millions of students to coding in the next 5 years by making modding accessible to them. In order to teach millions of students at scale, this project will develop a complex automated tutoring system which intelligently guides students through their coding education, detects and helps students when they run into errors, and provides students with a near-endless supply of puzzles and educational content. This project plans to tackle ongoing problems in the field of computer science education. The automated tutoring system developed through this project will be a foundation for automated tutoring systems that teach other STEM subjects.&lt;br/&gt;&lt;br/&gt;The main technical innovation of this project is a browser-based IDE for writing code and executing it within the runtime environment of video games. This inherently gamified coding environment opens new doors in computer science education. Around this coding environment, an automated tutoring system is being built. This project aims to tackle several problems in computer science education. These problems include: (1) a stealth assessment system that identifies when a student does not understand a coding concept and that guides the student towards understanding, (2) a novice-friendly error detection and reporting system that points students to the part of their code where the error originated, (3) an automated Stack Overflow-like resource for novice programmers that suggests possible solutions when the novice encounters an error, (4) a random puzzle generator that creates a near-endless supply of coding educational content for different skill levels, (5) tutorials and puzzles that gamify the transition from a visual programming language to a syntactically complex programming language, and (6) teacher tools and APIs that allow teachers to integrate the software into their classrooms. By solving these problems in computer science education, this project aims to make an effective coding education tool that scales.</AbstractNarration>
<MinAmdLetterDate>05/21/2015</MinAmdLetterDate>
<MaxAmdLetterDate>05/21/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1520569</AwardID>
<Investigator>
<FirstName>Stephen</FirstName>
<LastName>Foster</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Stephen R Foster</PI_FULL_NAME>
<EmailAddress>stephen@thoughtstem.com</EmailAddress>
<PI_PHON>2813810358</PI_PHON>
<NSF_ID>000687040</NSF_ID>
<StartDate>05/21/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>ThoughtSTEM, LLC</Name>
<CityName>San Diego</CityName>
<ZipCode>921083727</ZipCode>
<PhoneNumber>8588699430</PhoneNumber>
<StreetAddress>2635 Camino del Rio South</StreetAddress>
<StreetAddress2><![CDATA[Suite 103]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>53</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA53</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>078849617</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>THOUGHTSTEM, LLC</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[ThoughtSTEM, LLC]]></Name>
<CityName>San Diego</CityName>
<StateCode>CA</StateCode>
<ZipCode>921928025</ZipCode>
<StreetAddress><![CDATA[8650 Genesee Avenue #928025]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>52</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA52</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5371</Code>
<Text>SBIR Phase I</Text>
</ProgramElement>
<ProgramReference>
<Code>5371</Code>
<Text>SMALL BUSINESS PHASE I</Text>
</ProgramReference>
<ProgramReference>
<Code>8031</Code>
<Text>Education Products</Text>
</ProgramReference>
<ProgramReference>
<Code>8032</Code>
<Text>Software Services and Applications</Text>
</ProgramReference>
<ProgramReference>
<Code>8039</Code>
<Text>Information, Communication &amp; Computing</Text>
</ProgramReference>
<ProgramReference>
<Code>9180</Code>
<Text>PUBLIC SCIENCE LITERACY EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~150000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The goal of this project was to develop an intelligent and automated tutoring software for teaching coding to K-12 students by modding (i.e., modifying) popular video games. Modding is a skill of particular interest to millions of 8-14 year olds, who play the popular video game Minecraft. Because modding involves coding, teaching K-12 students how to mod Minecraft has the potential to provide a new, engaging method of computer science (CS) education to millions of students. ThoughtSTEM, LLC had already prototyped an e-learning software (LearnToMod, http://www.learntomod.com) for teaching students how to mod Minecraft, but in order to teach these millions of students at scale, six technical challenges needed to be solved to automate the software further.</p> <p>During the grant period, the Project Team, under the guidance of ThoughtSTEM Co-Founders, Dr. Stephen Foster, Dr. Sarah Guthals, and Dr. Lindsey Handley, made significant breakthroughs in all 6 technical challenges they set out to solve:</p> <ul> <li>The Project Team designed and implemented a new Quest System. This Quest System serves the user with educationally relevant activities (&ldquo;quests&rdquo;) that the underlying software algorithms detect will improve the student&rsquo;s understanding.</li> <li>Error reporting to aid novice programmers was greatly improved by developing an in-browser, Minecraft-compatible game engine (called Vox-L). This new runtime environment allows students to test their code in the IDE before loading their code into Minecraft, such that errors reported to the user can now be controlled by the LearnToMod software. Furthermore, the Project Team implemented an interactive debugger that allows students to step through arbitrarily complex code one line at a time, in order to understand how it works.</li> <li>The Project Team developed an algorithm for recommending potential solutions to students with errors in their code.</li> <li>The Project Team was able to design and release 5 different kinds of educational activities, diversifying the gamified learning environment within LearnToMod and encouraging active learning.</li> <li>A new curriculum was implemented to transition students from Blockly (a visual, drag-and-drop programming language) to typed JavaScript.</li> <li>The Project Team also designed new tools to aid teachers using LearnToMod in the classroom, including a Badge Builder interface that allows teachers to design their own gamified curriculum, as well as a new interface for monitoring students in real-time during class.</li> </ul> <p>We completed the grant period with a truly improved software for scalable teaching of CS to K-12 students. LearnToMod is currently available to the public for purchase at http://www.learntomod.com. In addition, for-profit and non-profit teachers are able to sign up for free teacher accounts to use the software in the classroom with their students. Since LearnToMod was first launched, over 30,000 accounts have been created, with nearly 60% of these accounts being free accounts provided to over 800 K-12 educators. Thousands of students around the country are learning how to code, thanks to this Phase I grant, and hundreds of teachers are able to use LearnToMod in their classrooms to inspire students to become the nation's next cohort of computer scientists.</p> <p>The intellectual merit of this project is the improvement of CS education for teaching novice K-12 programmers coding at scale. LearnToMod is an innovative, immersive tutoring software that transfigures student passion into powerful educational outcomes. The broader impact of this project is the long-lasting, widespread societal benefits by producing more students in the United States and around the world who are interested in coding. <span id="docs-internal-guid-da59c29d-b26a-98fd-56fe-919b933c2477"><span>The Bureau of Labor Statistics projects that there will be over 1 million c...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The goal of this project was to develop an intelligent and automated tutoring software for teaching coding to K-12 students by modding (i.e., modifying) popular video games. Modding is a skill of particular interest to millions of 8-14 year olds, who play the popular video game Minecraft. Because modding involves coding, teaching K-12 students how to mod Minecraft has the potential to provide a new, engaging method of computer science (CS) education to millions of students. ThoughtSTEM, LLC had already prototyped an e-learning software (LearnToMod, http://www.learntomod.com) for teaching students how to mod Minecraft, but in order to teach these millions of students at scale, six technical challenges needed to be solved to automate the software further.  During the grant period, the Project Team, under the guidance of ThoughtSTEM Co-Founders, Dr. Stephen Foster, Dr. Sarah Guthals, and Dr. Lindsey Handley, made significant breakthroughs in all 6 technical challenges they set out to solve:  The Project Team designed and implemented a new Quest System. This Quest System serves the user with educationally relevant activities ("quests") that the underlying software algorithms detect will improve the studentÆs understanding. Error reporting to aid novice programmers was greatly improved by developing an in-browser, Minecraft-compatible game engine (called Vox-L). This new runtime environment allows students to test their code in the IDE before loading their code into Minecraft, such that errors reported to the user can now be controlled by the LearnToMod software. Furthermore, the Project Team implemented an interactive debugger that allows students to step through arbitrarily complex code one line at a time, in order to understand how it works. The Project Team developed an algorithm for recommending potential solutions to students with errors in their code. The Project Team was able to design and release 5 different kinds of educational activities, diversifying the gamified learning environment within LearnToMod and encouraging active learning. A new curriculum was implemented to transition students from Blockly (a visual, drag-and-drop programming language) to typed JavaScript. The Project Team also designed new tools to aid teachers using LearnToMod in the classroom, including a Badge Builder interface that allows teachers to design their own gamified curriculum, as well as a new interface for monitoring students in real-time during class.   We completed the grant period with a truly improved software for scalable teaching of CS to K-12 students. LearnToMod is currently available to the public for purchase at http://www.learntomod.com. In addition, for-profit and non-profit teachers are able to sign up for free teacher accounts to use the software in the classroom with their students. Since LearnToMod was first launched, over 30,000 accounts have been created, with nearly 60% of these accounts being free accounts provided to over 800 K-12 educators. Thousands of students around the country are learning how to code, thanks to this Phase I grant, and hundreds of teachers are able to use LearnToMod in their classrooms to inspire students to become the nation's next cohort of computer scientists.  The intellectual merit of this project is the improvement of CS education for teaching novice K-12 programmers coding at scale. LearnToMod is an innovative, immersive tutoring software that transfigures student passion into powerful educational outcomes. The broader impact of this project is the long-lasting, widespread societal benefits by producing more students in the United States and around the world who are interested in coding. The Bureau of Labor Statistics projects that there will be over 1 million computing job openings that go unfilled by U.S. workers by 2022. Furthermore, studies have shown that 98% of current CS majors report they were exposed to CS before college, but only 1 out of 4 K-12 schools around the U.S. teach a CS c...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

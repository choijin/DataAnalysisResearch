<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Collaborative: Practical Security Protocols via Advanced Data Structures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>166654.00</AwardTotalIntnAmount>
<AwardAmount>166654</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Shannon Beck</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Data structures have a prominent modern computational role, due to their wide applicability, such as in database querying, web searching, and social network analysis. This project focuses on the interplay of data structures with security protocols, examining two different paradigms: the security for data structures paradigm (SD) and the data structures for security paradigm (DS). The objectives of this project are, in the SD paradigm, to provide security and privacy both for data elements in data sets and also for the inter-relationships and distributions between such data elements, such as links between nodes in a social network, and, in the DS paradigm, to develop new data structures to improve the efficiency of algorithms for security and/or privacy applications.&lt;br/&gt; &lt;br/&gt;The project explores methods for achieving these objectives include algorithm design, theoretical analysis, rigorous proofs of security and correctness, and experimental validation of claims of practicality. This research focuses on the security and cybersecurity uses of three advanced data structures: tree structures, invertible Bloom filters and cascading tables. The project advances knowledge on (a) authenticated data structures and verifiable query execution within the SD paradigm, and (b) secure deduplication, searchable encryption, and privacy-preserving memory allocators within the DS paradigm.</AbstractNarration>
<MinAmdLetterDate>09/16/2015</MinAmdLetterDate>
<MaxAmdLetterDate>07/18/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1525044</AwardID>
<Investigator>
<FirstName>Roberto</FirstName>
<LastName>Tamassia</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Roberto Tamassia</PI_FULL_NAME>
<EmailAddress>rt@cs.brown.edu</EmailAddress>
<PI_PHON>4012583298</PI_PHON>
<NSF_ID>000304866</NSF_ID>
<StartDate>09/16/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Brown University</Name>
<CityName>Providence</CityName>
<ZipCode>029129002</ZipCode>
<PhoneNumber>4018632777</PhoneNumber>
<StreetAddress>BOX 1929</StreetAddress>
<StreetAddress2><![CDATA[350 Eddy Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<StateCode>RI</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>RI01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001785542</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>BROWN UNIVERSITY IN PROVIDENCE IN THE STATE OF RHODE ISLAND AND PROVIDENCE PLANTATIONS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001785542</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Brown University]]></Name>
<CityName>Providence</CityName>
<StateCode>RI</StateCode>
<ZipCode>029129093</ZipCode>
<StreetAddress><![CDATA[Office of Sponsored Projects]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>RI01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~81869</FUND_OBLG>
<FUND_OBLG>2016~84785</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The project has investigated algorithmic methods and cryptographic techniques with a dual objective: enhance the security of data management systems and improve the performance of security applications.&nbsp; The project is part of an NSF-funded collaborative effort by investigators at three institutions: Brown University, University of California, Irvine, and University of Maryland.</p> <p>Selected project results are summarized below:</p> <p>An order query on a database asks which one of two records precedes the other based on the value of a certain field. For example, an airline may prioritize passengers on a flight waitlist based on the ticket price. A method for executing order queries on a database has been developed that supports both accountability and privacy. To enable accountability, the database provides for each query a proof of the correctness of the comparison. To guarantee privacy, this proof does not reveal any information about the database besides what can be inferred solely from the comparison outcome. In the above flight waitlist example, this means that passengers can verify the correctness of the waitlist priority order without learning the prices of the tickets of the other passengers.</p> <p>A framework for cloud storage that provides automatic compensation to the client in the event data is lost or corrupted has been developed. In this framework, a client outsources file blocks to a cloud server and is subsequently able to determine with high accuracy how many bits were discarded or corrupted by the server. This determination is then used to obtain automatic compensation from the server proportionally to the amount of data damage.</p> <p>The project provided professional training opportunities for several graduate students.&nbsp; &nbsp;</p><br> <p>            Last Modified: 02/26/2019<br>      Modified by: Roberto&nbsp;Tamassia</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The project has investigated algorithmic methods and cryptographic techniques with a dual objective: enhance the security of data management systems and improve the performance of security applications.  The project is part of an NSF-funded collaborative effort by investigators at three institutions: Brown University, University of California, Irvine, and University of Maryland.  Selected project results are summarized below:  An order query on a database asks which one of two records precedes the other based on the value of a certain field. For example, an airline may prioritize passengers on a flight waitlist based on the ticket price. A method for executing order queries on a database has been developed that supports both accountability and privacy. To enable accountability, the database provides for each query a proof of the correctness of the comparison. To guarantee privacy, this proof does not reveal any information about the database besides what can be inferred solely from the comparison outcome. In the above flight waitlist example, this means that passengers can verify the correctness of the waitlist priority order without learning the prices of the tickets of the other passengers.  A framework for cloud storage that provides automatic compensation to the client in the event data is lost or corrupted has been developed. In this framework, a client outsources file blocks to a cloud server and is subsequently able to determine with high accuracy how many bits were discarded or corrupted by the server. This determination is then used to obtain automatic compensation from the server proportionally to the amount of data damage.  The project provided professional training opportunities for several graduate students.          Last Modified: 02/26/2019       Submitted by: Roberto Tamassia]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

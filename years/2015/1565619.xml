<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Finding and Repairing Semantic Vulnerabilities in Modern Software</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>450104.00</AwardTotalIntnAmount>
<AwardAmount>450104</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Software is responsible for many critical government, business, and educational functions.  This project aims to develop new methods for finding and repairing some of the most challenging, poorly understood security vulnerabilities in modern software that have the potential to jeopardize the security and reliability of the nation's cyber infrastructure.&lt;br/&gt;&lt;br/&gt;The first objective of this project is to design and implement a robust program analysis framework that is capable of finding exploitable semantic bugs in modern applications, such as accidental omission of access-control checks, unintentional exposure of sensitive operations such as native calls and database queries to untrusted code or users, high-complexity control structures vulnerable to denial of service, misconfigurations of security policies, and other errors in programs' security logic.&lt;br/&gt;The second objective is to develop methods for automatically repairing semantic vulnerabilities by applying program transformations that insert correct implementations of appropriate security logic.</AbstractNarration>
<MinAmdLetterDate>11/06/2015</MinAmdLetterDate>
<MaxAmdLetterDate>11/06/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1565619</AwardID>
<Investigator>
<FirstName>Vitaly</FirstName>
<LastName>Shmatikov</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Vitaly Shmatikov</PI_FULL_NAME>
<EmailAddress>shmat@cs.cornell.edu</EmailAddress>
<PI_PHON>5124738959</PI_PHON>
<NSF_ID>000109107</NSF_ID>
<StartDate>11/06/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY23</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>872612445</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CORNELL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002254837</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Cornell University]]></Name>
<CityName>Ithaca</CityName>
<StateCode>NY</StateCode>
<ZipCode>148502820</ZipCode>
<StreetAddress><![CDATA[373 Pine Tree Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY23</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~450104</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project produced new technologies for identifying and repairing semantic security vulnerabilities in modern software, focusing especially on access-control code in Web and mobile applications. Contributions include a new method for discovering access-control bugs in server-side Web applications and automatically repairing them; a large-scale study of access-control vulnerabilities in client-side Web code; a new method for detecting code injection attacks on server-side Web applications; a new method for discovering security errors in SSL/TLS implementations; new access-control enforcement mechanisms for hybrid Web/mobile application frameworks; discovery of a new class of vulnerabilities in mobile advertising libraries and the design and implementation of new isolation mechanisms that prevent exploitation of these vulnerabilities; and new program analysis methods for automatic generation of sensor spoofing attacks.</p> <p>The results of this project were disseminated via publications in top venues, including NDSS 2013 (two papers, one of which received the best student paper award), ACM CCS 2013, NDSS 2014, IEEE S&amp;P 2014 (received the best practical paper award), WWW 2015 (two papers), NDSS 2016, NSDI 2016, and ASIA CCS 2017.</p> <!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 10.0px Helvetica} --> <p class="p1">Software developed by this project has been widely disseminated as open source code. Many SSL/TLS developers, including those at Mozilla, have started using the frankencerts methodology for testing their SSL/TLS code. The NoFrak access-control mechanism for hybrid Web/mobile application development frameworks has been integrated into the open-source Apache Cordova project (under the name SecureToken), which provides the core functionality for dozens of thousands of mobile apps and is running on millions of Android phones. Our access-control methodology for preventing untrusted advertisements from inferring sensitive information about mobile users has been adopted by all major Android mobile advertising libraries.</p> <p>The project supported multiple PhD students, all of whom have gone on successful careers in computer security and privacy research.&nbsp; Two are tenure-track assistant professors, at Columbia University and KAIST, respectively; two are working as security engineers at Google and Yelp, respectively.</p><br> <p>            Last Modified: 11/05/2017<br>      Modified by: Vitaly&nbsp;Shmatikov</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project produced new technologies for identifying and repairing semantic security vulnerabilities in modern software, focusing especially on access-control code in Web and mobile applications. Contributions include a new method for discovering access-control bugs in server-side Web applications and automatically repairing them; a large-scale study of access-control vulnerabilities in client-side Web code; a new method for detecting code injection attacks on server-side Web applications; a new method for discovering security errors in SSL/TLS implementations; new access-control enforcement mechanisms for hybrid Web/mobile application frameworks; discovery of a new class of vulnerabilities in mobile advertising libraries and the design and implementation of new isolation mechanisms that prevent exploitation of these vulnerabilities; and new program analysis methods for automatic generation of sensor spoofing attacks.  The results of this project were disseminated via publications in top venues, including NDSS 2013 (two papers, one of which received the best student paper award), ACM CCS 2013, NDSS 2014, IEEE S&amp;P 2014 (received the best practical paper award), WWW 2015 (two papers), NDSS 2016, NSDI 2016, and ASIA CCS 2017.  Software developed by this project has been widely disseminated as open source code. Many SSL/TLS developers, including those at Mozilla, have started using the frankencerts methodology for testing their SSL/TLS code. The NoFrak access-control mechanism for hybrid Web/mobile application development frameworks has been integrated into the open-source Apache Cordova project (under the name SecureToken), which provides the core functionality for dozens of thousands of mobile apps and is running on millions of Android phones. Our access-control methodology for preventing untrusted advertisements from inferring sensitive information about mobile users has been adopted by all major Android mobile advertising libraries.  The project supported multiple PhD students, all of whom have gone on successful careers in computer security and privacy research.  Two are tenure-track assistant professors, at Columbia University and KAIST, respectively; two are working as security engineers at Google and Yelp, respectively.       Last Modified: 11/05/2017       Submitted by: Vitaly Shmatikov]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

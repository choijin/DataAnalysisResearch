<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Scalable and Maximal Concurrency Debugging</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2016</AwardEffectiveDate>
<AwardExpirationDate>01/31/2022</AwardExpirationDate>
<AwardTotalIntnAmount>550000.00</AwardTotalIntnAmount>
<AwardAmount>566000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Title: CAREER: Scalable and Maximal Concurrency Debugging&lt;br/&gt;&lt;br/&gt;Concurrency related software defects are among the most expensive and dangerous in practice, and have become a major threat to the reliability and security of safety-critical systems and the nation's critical infrastructure.  The intellectual merits of this project are to develop new theoretical and algorithmic advances, and to build practical automated tools for debugging concurrent software, which will enable more concurrency bugs easier to detect and understand, and safer and faster to fix.  The project's broader significance and importance are to help produce more reliable, secure, and economical software systems and infrastructure, remove concurrency related vulnerabilities, and strengthen STEM education on software debugging, which is a critical, but lacking aspect of today's software engineering education.&lt;br/&gt;&lt;br/&gt;This project will investigate solutions to four major research questions on concurrency debugging.  (1) Reproduction: How to reproduce failures in long running concurrent programs with minimal runtime perturbation and overhead? How to reproduce failures in concurrent programs running on commodity hardware exhibiting relaxed-memory behaviors?  (2) Detection: How to detect concurrency bugs at the maximum ability and with no false alarm, even under limited observation, e.g., when missing log events?  (3) Understanding: How to accurately identify the failure's root cause? How to effectively simplify concurrency bugs and speed up their reproduction?  (4) Fixing &amp; Validation: How to fix concurrency bugs without introducing deadlocks or unnecessary performance degradation? How to effectively validate the correctness of fixes?</AbstractNarration>
<MinAmdLetterDate>01/15/2016</MinAmdLetterDate>
<MaxAmdLetterDate>02/11/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1552935</AwardID>
<Investigator>
<FirstName>Jeff</FirstName>
<LastName>Huang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jeff Huang</PI_FULL_NAME>
<EmailAddress>jeff@cse.tamu.edu</EmailAddress>
<PI_PHON>9798455485</PI_PHON>
<NSF_ID>000677528</NSF_ID>
<StartDate>01/15/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Texas A&amp;M Engineering Experiment Station</Name>
<CityName>College Station</CityName>
<CountyName>BRAZOS</CountyName>
<ZipCode>778454645</ZipCode>
<PhoneNumber>9798626777</PhoneNumber>
<StreetAddress>400 Harvey Mitchell Pkwy S</StreetAddress>
<StreetAddress2>Suite 300</StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX17</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>847205572</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TEXAS A&amp;M ENGINEERING EXPERIMENT STATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042915991</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Texas A&M University]]></Name>
<CityName>College Station</CityName>
<CountyName>BRAZOS</CountyName>
<StateCode>TX</StateCode>
<ZipCode>778433112</ZipCode>
<StreetAddress><![CDATA[301 Harvey R. Bright Building]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX17</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~250377</FUND_OBLG>
<FUND_OBLG>2018~92495</FUND_OBLG>
<FUND_OBLG>2019~102177</FUND_OBLG>
<FUND_OBLG>2020~120951</FUND_OBLG>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSE: Development of a Software Framework for Formalizing Forcefield Atom-Typing for Molecular Simulation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>501836.00</AwardTotalIntnAmount>
<AwardAmount>501836</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Bogdan Mihaila</SignBlockName>
<PO_EMAI>bmihaila@nsf.gov</PO_EMAI>
<PO_PHON>7032928235</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Molecular simulation plays a key role in understanding the atomistic and molecular level interactions that underlie many natural and man-made materials and processes. Classical molecular simulations rely upon forcefields to describe the various interactions that exist between atoms and/or groups of atoms. The availability of forcefields for molecular simulation has reduced the effort researchers must devote to the difficult and costly task of determining the interactions between species, allowing them to instead focus on the motivating scientific questions. However, determining which parameters in a forcefield to use is still often a tedious and error prone task. This difficulty is related to the strong dependence of the parameters on the chemical context of the atoms; the chemical context may depend on the local bonded environment of an atom in a molecule, the local environment of neighboring atoms, the type of molecule(s) being considered, the phase of the molecule(s), etc. Forcefields can contain tens or hundreds of different types of the same element, where each type represents the element in a different chemical context. Atom typing can be challenging, often requiring the user to consult textual comments scattered in parameter files or the scientific literature where the parameters were published. Unfortunately, as of today, the documentation of a typical forcefield tends to be scarce and unstructured, commonly expressed in plain English or in an ad-hoc shorthand notation, leading to ambiguities and increasing the likelihood of incorrect usage. While there are freely available tools to aid in atom-typing, these are typically specific to a particular forcefield or simulator and capture the atom-typing and parameterization rules in ways that are hard to maintain, debug, and evolve. The central tenet of this project is that there is an imminent need in the research community for a forcefield agnostic formalism to express atom-typing and parameterization rules in a way that is expressive enough for human consumption, while being machine readable to enable automation in complex scientific workflows.&lt;br/&gt; &lt;br/&gt;This work proposes to establish a formalism to express the chemical context for which a particular forcefield parameter is applicable (i.e., forcefield usage semantics) and an atom-typing tool that interprets this formalism to generate forcefield parameterizations that are provably correct. Annotating forcefields with this formalism will serve as clear, unambiguous documentation of the atom-types and parameter usage, and also allows ambiguities or inconsistencies in forcefield specifications to be programmatically pinpointed during development. Successfully developing this framework will simplify the rules needed for atom-typing, which is crucial as forcefields continue to grow, specialize, and become more complex. The machine-readable annotations of forcefield usage semantics will enable automating tedious and error prone tasks and have the potential to enable new application areas, ranging from automated forcefield comparison and cross-validation, to complex simulation workflows integrating multiple forcefields and simulator tools.   An open online forcefield repository containing the annotated forcefields, associated open source software, and documentation on how to use, annotate, and develop forcefields within the proposed framework will be developed to disseminate results and foster community involvement.</AbstractNarration>
<MinAmdLetterDate>08/24/2015</MinAmdLetterDate>
<MaxAmdLetterDate>08/22/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1535150</AwardID>
<Investigator>
<FirstName>Peter</FirstName>
<LastName>Volgyesi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Peter Volgyesi</PI_FULL_NAME>
<EmailAddress>peter.volgyesi@vanderbilt.edu</EmailAddress>
<PI_PHON>6153221018</PI_PHON>
<NSF_ID>000347511</NSF_ID>
<StartDate>08/22/2017</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Janos</FirstName>
<LastName>Sallai</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Janos Sallai</PI_FULL_NAME>
<EmailAddress>janos.sallai@vanderbilt.edu</EmailAddress>
<PI_PHON>6153437555</PI_PHON>
<NSF_ID>000583929</NSF_ID>
<StartDate>08/24/2015</StartDate>
<EndDate>08/22/2017</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Christopher</FirstName>
<LastName>Iacovella</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Christopher Iacovella</PI_FULL_NAME>
<EmailAddress>christopher.r.iacovella@vanderbilt.edu</EmailAddress>
<PI_PHON>6153222631</PI_PHON>
<NSF_ID>000596965</NSF_ID>
<StartDate>08/24/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Vanderbilt University</Name>
<CityName>Nashville</CityName>
<ZipCode>372350002</ZipCode>
<PhoneNumber>6153222631</PhoneNumber>
<StreetAddress>Sponsored Programs Administratio</StreetAddress>
<StreetAddress2><![CDATA[PMB 407749 2301 Vanderbilt Place]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<StateCode>TN</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TN05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>965717143</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>VANDERBILT UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004413456</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Vanderbilt University]]></Name>
<CityName>Nashville</CityName>
<StateCode>TN</StateCode>
<ZipCode>372350002</ZipCode>
<StreetAddress><![CDATA[2301 Vanderbilt Pl]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TN05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1253</Code>
<Text>OFFICE OF MULTIDISCIPLINARY AC</Text>
</ProgramElement>
<ProgramElement>
<Code>1712</Code>
<Text>DMR SHORT TERM SUPPORT</Text>
</ProgramElement>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramElement>
<Code>8292</Code>
<Text>DMREF</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8005</Code>
<Text>Scientific Software Elements</Text>
</ProgramReference>
<ProgramReference>
<Code>8400</Code>
<Text>DMREF</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~501836</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Intellectual Merit. Classical molecular simulations rely upon force fields to define the interactions between species in a system, where interactions are typically defined as analytical functions with associated fitting parameters. This project proposed to create a formalism to express force field usage semantics (i.e., the rules that define which set of parameters should be used) in a single format that is both human and machine readable. The project also proposed to develop a general purpose atom-typing software tool that interprets this formalism to generate force field parameterizations and output these to syntactically correct file formats for common simulation engines. This goal was achieved by combining the SMARTS language for defining chemical patterns with explicit &ldquo;overrides&rdquo; statements to define rule precedence, providing a clear format that can be interpreted by both humans and computers. The rules were encoded in an XML file format that extends the existing OpenMM force field file format. A Python library, termed Foyer, was developed to interpret this formalism that applies the rules by treating the system of interest as a graph and searching the graph for the usage rules that match.&nbsp;&nbsp;By employing an iterative process for determining the appropriate parameters, rather than a pre-defined rule hierarchy, force fields can be more readily evaluated for conflicting or incomplete rules.</p> <p>&nbsp;</p> <p>Broader Impacts: Through the development of a formalism for force field usage semantics and the Foyer software, our work allows force fields to be unambiguously described and applied, reducing atom-typing as a source of error during model development and parameterization. By encoding usage rules along with the associated parameters in a single XML file, the force fields can be more easily disseminated to the community via publications and online resources.&nbsp;&nbsp;As a result, the exact parameterization of a system can be captured and reproduced.&nbsp;&nbsp;The work of this proposal has resulted in the development of a growing community of researchers working to adopt the formalism and extend the range of available forcefields.&nbsp;&nbsp;The development of this formalism and software has played a key role in enabling novel research projects, including large scale screening studies of the chemical space of monolayer films.&nbsp;</p> <p>&nbsp;</p> <p>Additional broader impacts involve training students in aspects related to the intersection between chemical engineering and computer science. Several students that have participated in the research have gone on to be employed in the software industry. Several undergraduate students also worked on the project during summers, learning valuable lessons about performing research and programming.&nbsp;&nbsp;The results of this project have been disseminated through research papers, conference presentations, online tutorials, and workshops. The software developed is freely available online with a minimally invasive open-source license.&nbsp;&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 11/28/2019<br>      Modified by: Christopher&nbsp;Iacovella</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intellectual Merit. Classical molecular simulations rely upon force fields to define the interactions between species in a system, where interactions are typically defined as analytical functions with associated fitting parameters. This project proposed to create a formalism to express force field usage semantics (i.e., the rules that define which set of parameters should be used) in a single format that is both human and machine readable. The project also proposed to develop a general purpose atom-typing software tool that interprets this formalism to generate force field parameterizations and output these to syntactically correct file formats for common simulation engines. This goal was achieved by combining the SMARTS language for defining chemical patterns with explicit "overrides" statements to define rule precedence, providing a clear format that can be interpreted by both humans and computers. The rules were encoded in an XML file format that extends the existing OpenMM force field file format. A Python library, termed Foyer, was developed to interpret this formalism that applies the rules by treating the system of interest as a graph and searching the graph for the usage rules that match.  By employing an iterative process for determining the appropriate parameters, rather than a pre-defined rule hierarchy, force fields can be more readily evaluated for conflicting or incomplete rules.     Broader Impacts: Through the development of a formalism for force field usage semantics and the Foyer software, our work allows force fields to be unambiguously described and applied, reducing atom-typing as a source of error during model development and parameterization. By encoding usage rules along with the associated parameters in a single XML file, the force fields can be more easily disseminated to the community via publications and online resources.  As a result, the exact parameterization of a system can be captured and reproduced.  The work of this proposal has resulted in the development of a growing community of researchers working to adopt the formalism and extend the range of available forcefields.  The development of this formalism and software has played a key role in enabling novel research projects, including large scale screening studies of the chemical space of monolayer films.      Additional broader impacts involve training students in aspects related to the intersection between chemical engineering and computer science. Several students that have participated in the research have gone on to be employed in the software industry. Several undergraduate students also worked on the project during summers, learning valuable lessons about performing research and programming.  The results of this project have been disseminated through research papers, conference presentations, online tutorials, and workshops. The software developed is freely available online with a minimally invasive open-source license.               Last Modified: 11/28/2019       Submitted by: Christopher Iacovella]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>III: Small: Low-Cost Deduplication and Search for Versioned Datasets</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>499998.00</AwardTotalIntnAmount>
<AwardAmount>515998</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Wei-Shinn Ku</SignBlockName>
<PO_EMAI>weiku@nsf.gov</PO_EMAI>
<PO_PHON>7032928318</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Organizations and companies often archive high volumes of versioned digital datasets. There are research challenges and opportunities for developing  integrated  archival and search support needed for data preservation, electronic discovery, and  regulatory compliance. Since versioned datasets contain highly repetitive content, deduplication can reduce the storage demand by an order of magnitude or more; however such an optimization is resource-intensive. After deduplication, the structure of an inverted index for versioned data becomes complex and  it is expensive to search relevant results.  This project will study low-cost solutions for compact archiving and indexing and develop efficient algorithms and systems techniques for searching versioned datasets. It will also consider that the archived data can be stored in an untrusted server environment and investigate tradeoffs in efficiency and privacy-preservation for search. The developed solutions will bring significant computing and storage cost advantages for application users involving large-scale versioned data management and search. The developed software will be made public for research communities. The research effort will be integrated with an educational plan containing research mentoring, instruction improvement, and outreach activities.&lt;br/&gt;&lt;br/&gt;This project will be focused on studying key challenges and cost-sensitive technical aspects in integrated archival and search support for managing large versioned datasets. The main tasks include efficient software architecture and optimization for detecting duplicated content on a cloud cluster architecture, fast multi-phase search with a hybrid index structure to exploit content similarity and query characteristics, and an efficient privacy-preserving framework with top result ranking.</AbstractNarration>
<MinAmdLetterDate>08/20/2015</MinAmdLetterDate>
<MaxAmdLetterDate>08/01/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1528041</AwardID>
<Investigator>
<FirstName>Tao</FirstName>
<LastName>Yang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tao Yang</PI_FULL_NAME>
<EmailAddress>tyang@cs.ucsb.edu</EmailAddress>
<PI_PHON>8057055606</PI_PHON>
<NSF_ID>000202471</NSF_ID>
<StartDate>08/20/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Stefano</FirstName>
<LastName>Tessaro</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Stefano Tessaro</PI_FULL_NAME>
<EmailAddress>tessaro@cs.washington.edu</EmailAddress>
<PI_PHON>2065430373</PI_PHON>
<NSF_ID>000660734</NSF_ID>
<StartDate>08/20/2015</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Santa Barbara</Name>
<CityName>Santa Barbara</CityName>
<ZipCode>931062050</ZipCode>
<PhoneNumber>8058934188</PhoneNumber>
<StreetAddress>Office of Research</StreetAddress>
<StreetAddress2><![CDATA[Rm 3227 Cheadle Hall]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>24</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA24</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>094878394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, SANTA BARBARA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Santa Barbara]]></Name>
<CityName>Santa Babara</CityName>
<StateCode>CA</StateCode>
<ZipCode>931065110</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>24</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA24</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7364</Code>
<Text>Info Integration &amp; Informatics</Text>
</ProgramElement>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~499998</FUND_OBLG>
<FUND_OBLG>2016~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project has studied key challenges and cost-sensitive technical aspects in archival and search support for managing large versioned datasets. The main activities include efficient software architecture and optimization in detecting duplicated content on a cloud cluster architecture, fast multi-phase search with a hybrid index structure to exploit content similarity and query characteristics, and an efficient privacy-preserving framework with top result ranking.</p> <p>For cluster-based cloud backup, we have proposed&nbsp;a source-side backup scheme with low-resource usage through collaborative deduplication and approximated lazy deletion when frequent virtual machine snapshot backup is required in a large-scale cloud cluster. The key ideas are to orchestrate multi-round duplicate detection batches among machines in a partitioned asynchronous manner and remove most unreferenced content chunks with approximated snapshot deletion.&nbsp;For the tested datasets, network cost is reduced by 255% and storage cost is reduced by 355% times compared to a pure dirty-bit-based source-side deduplication. The new scheme is an order of magnitude faster than a synchronous scheme.</p> <p>For versioned-data search,&nbsp;we&nbsp;proposed an approach called representative-guided two-phase search (RTP) that uses cluster-based retrieval to quickly narrow the search scope guided by version representatives at Phase 1 and developed&nbsp;a hybrid index structure with adaptive runtime data traversal to conduct fast Phase 2 search and ranking. The hybrid scheme exploits the advantages of forward index and inverted index based on the term characteristics to minimize the time in extracting positional and other features during runtime search.&nbsp;The evaluation shows that &nbsp;RTP can be up-to&nbsp;4x as fast as the previously-developed two-phase method for the tested datasets. The RTP prototype software is accessible from the project website.<strong>&nbsp;</strong></p> <p>To improve query-time efficiency for search, we have proposed an approximation of interaction-based neural ranking algorithms based on locality-sensitive hashing. This scheme accelerates query-document interaction computation by using a query-time cache with precomputed term vectors, and speeds up kernel calculation by taking advantages of limited integer similarity values. This scheme preserves semantic similarity of search words with a small error while yielding a significant efficiency gain. For example,&nbsp;our approximation solution for neural ranking yields up-to 106x scoring time speedup compared to the previous work in the tested datasets while accomplishing competitive relevance.&nbsp;We have also&nbsp;developed cache-aware runtime optimization to speed up the scoring of tree ensembles in ranking a large number of feature vectors.&nbsp;</p> <p>We have further addressed several open problems in privacy-aware top result ranking based on linear and nonlinear ranking algorithms.&nbsp;The main challenge for privacy protection is that letting a cloud server perform ranking computation may unsafely reveal privacy-sensitive information.&nbsp;&nbsp;For&nbsp;linear additive scoring used for searching modest-sized cloud datasets, we have developed a privacy-aware scheme&nbsp;with single-round client-server collaboration and server-side partial ranking based on blinded feature weights and random masks.&nbsp;&nbsp;This scheme strikes for a tradeoff between privacy and efficiency and client-side preprocessing includes query decomposition with chunked postings to facilitate earlier range intersection and fast access of server-side key-value stores. Server-side query processing can efficiently deal with feature vector sparsity through optional feature matching and enable result filtering with query-dependent chunk-wide random masks for queries that yield too many matched documents.&nbsp;</p> <p>For nonlinear result ranking with tree-based ensembles,&nbsp;we have developed a privacy-aware server-side query processing scheme based on comparison-preserving mapping that&nbsp;hides feature values and tree thresholds. This solution scales well for large datasets since a server does not involve time-consuming heavyweight cryptography or additional client involvement after receiving encrypted search words from a client. Our solution restricts the computation complexity of feature composition which represents a trade-off of relevancy for privacy. The evaluation shows that decision trees relying more on raw features can still perform well with a hybrid model trained for each query length and our approach only yields a small relevance degradation compared to a traditional tree algorithm for the tested dataset.&nbsp;For ranking with interaction-based neural ranking, we have&nbsp;analyzed the critical leakages during score calculation and studied countermeasures to mitigate such a leakage. We&nbsp;have developed a privacy-aware scheme and its&nbsp;key techniques include the replacement of the exact kernel with a tree ensemble, a soft match map using obfuscated kernel values and term closures, and adaptive clustering for term occurrence obfuscation and storage optimization. Our design for privacy enhancement is to prevent the leakage of two critical text signals in terms of term frequency and occurrence needed for the attacks shown in the previous work and our analysis. We have also investigated the feasibility of using trusted processors to enhance privacy for search.</p> <p>During the project period, the PI and co-PI have taught graduate and&nbsp;undergraduate courses on information retrieval, high performance computing, cryptography, and security, and have&nbsp;&#8232;advised a number of&nbsp;&nbsp;PhD, master, and undergraduate students including under-represented students,&nbsp;&nbsp;working on related research projects.&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 07/24/2020<br>      Modified by: Tao&nbsp;Yang</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project has studied key challenges and cost-sensitive technical aspects in archival and search support for managing large versioned datasets. The main activities include efficient software architecture and optimization in detecting duplicated content on a cloud cluster architecture, fast multi-phase search with a hybrid index structure to exploit content similarity and query characteristics, and an efficient privacy-preserving framework with top result ranking.  For cluster-based cloud backup, we have proposed a source-side backup scheme with low-resource usage through collaborative deduplication and approximated lazy deletion when frequent virtual machine snapshot backup is required in a large-scale cloud cluster. The key ideas are to orchestrate multi-round duplicate detection batches among machines in a partitioned asynchronous manner and remove most unreferenced content chunks with approximated snapshot deletion. For the tested datasets, network cost is reduced by 255% and storage cost is reduced by 355% times compared to a pure dirty-bit-based source-side deduplication. The new scheme is an order of magnitude faster than a synchronous scheme.  For versioned-data search, we proposed an approach called representative-guided two-phase search (RTP) that uses cluster-based retrieval to quickly narrow the search scope guided by version representatives at Phase 1 and developed a hybrid index structure with adaptive runtime data traversal to conduct fast Phase 2 search and ranking. The hybrid scheme exploits the advantages of forward index and inverted index based on the term characteristics to minimize the time in extracting positional and other features during runtime search. The evaluation shows that  RTP can be up-to 4x as fast as the previously-developed two-phase method for the tested datasets. The RTP prototype software is accessible from the project website.   To improve query-time efficiency for search, we have proposed an approximation of interaction-based neural ranking algorithms based on locality-sensitive hashing. This scheme accelerates query-document interaction computation by using a query-time cache with precomputed term vectors, and speeds up kernel calculation by taking advantages of limited integer similarity values. This scheme preserves semantic similarity of search words with a small error while yielding a significant efficiency gain. For example, our approximation solution for neural ranking yields up-to 106x scoring time speedup compared to the previous work in the tested datasets while accomplishing competitive relevance. We have also developed cache-aware runtime optimization to speed up the scoring of tree ensembles in ranking a large number of feature vectors.   We have further addressed several open problems in privacy-aware top result ranking based on linear and nonlinear ranking algorithms. The main challenge for privacy protection is that letting a cloud server perform ranking computation may unsafely reveal privacy-sensitive information.  For linear additive scoring used for searching modest-sized cloud datasets, we have developed a privacy-aware scheme with single-round client-server collaboration and server-side partial ranking based on blinded feature weights and random masks.  This scheme strikes for a tradeoff between privacy and efficiency and client-side preprocessing includes query decomposition with chunked postings to facilitate earlier range intersection and fast access of server-side key-value stores. Server-side query processing can efficiently deal with feature vector sparsity through optional feature matching and enable result filtering with query-dependent chunk-wide random masks for queries that yield too many matched documents.   For nonlinear result ranking with tree-based ensembles, we have developed a privacy-aware server-side query processing scheme based on comparison-preserving mapping that hides feature values and tree thresholds. This solution scales well for large datasets since a server does not involve time-consuming heavyweight cryptography or additional client involvement after receiving encrypted search words from a client. Our solution restricts the computation complexity of feature composition which represents a trade-off of relevancy for privacy. The evaluation shows that decision trees relying more on raw features can still perform well with a hybrid model trained for each query length and our approach only yields a small relevance degradation compared to a traditional tree algorithm for the tested dataset. For ranking with interaction-based neural ranking, we have analyzed the critical leakages during score calculation and studied countermeasures to mitigate such a leakage. We have developed a privacy-aware scheme and its key techniques include the replacement of the exact kernel with a tree ensemble, a soft match map using obfuscated kernel values and term closures, and adaptive clustering for term occurrence obfuscation and storage optimization. Our design for privacy enhancement is to prevent the leakage of two critical text signals in terms of term frequency and occurrence needed for the attacks shown in the previous work and our analysis. We have also investigated the feasibility of using trusted processors to enhance privacy for search.  During the project period, the PI and co-PI have taught graduate and undergraduate courses on information retrieval, high performance computing, cryptography, and security, and have &#8232;advised a number of  PhD, master, and undergraduate students including under-represented students,  working on related research projects.           Last Modified: 07/24/2020       Submitted by: Tao Yang]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Multi-hypervisor Virtual Machines - Enabling an Ecosystem of Hypervisors in the Cloud</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>399989.00</AwardTotalIntnAmount>
<AwardAmount>415989</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Modern cloud computing platforms offer users an array of choices in operating systems, database systems, financial software, virtual network routers, and so forth, all of which can be easily customized and executed within Virtual Machines (VM). Unfortunately, this level of user choice has not extended to the underlying systems software, called the hypervisor, which enables the cloud infrastructure to run VMs. On one hand, cloud providers have an opportunity to differentiate their service by offering rich hypervisor-level services such as rootkit detection, live patching, intrusion detection, high availability, and VM introspection. On the other hand, it is difficult for a cloud provider to develop and maintain a single hypervisor that incorporates every feature that each cloud user wants. This research is to enable a software ecosystem in which third-parties can also contribute hypervisor-level services to the cloud platform and augment the services of a base hypervisor. &lt;br/&gt;&lt;br/&gt;To use multiple hypervisor-level services, a cloud user can run a multi-hypervisor virtual machine, which is  envisioned as an unmodified VM that simultaneously runs atop multiple co-existing hypervisors. There are two thrusts of this project. The first is to develop the systems software to transparently run multi-hypervisor VMs, where multiple hypervisors co-operatively exert control over the memory, virtual CPUs, and I/O devices of a VM using nested virtualization. The second thrust is to investigate mechanisms for the co-existence of various hypervisor-level services and demonstrate a multi-hypervisor ecosystem of services such as those listed above. &lt;br/&gt;&lt;br/&gt;By enabling an ecosystem of third-party hypervisors, the technology behind multi-hypervisor VM can significantly improve the functionality and performance of the cloud platforms. Integration of research with education includes course modules and projects, and an advanced topics graduate course. Broader impacts include mentoring undergraduate and under-represented students in research, outreach to local high schools, and technology transfer.</AbstractNarration>
<MinAmdLetterDate>08/12/2015</MinAmdLetterDate>
<MaxAmdLetterDate>10/30/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1527338</AwardID>
<Investigator>
<FirstName>Kartik</FirstName>
<LastName>Gopalan</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Kartik Gopalan</PI_FULL_NAME>
<EmailAddress>kartik@binghamton.edu</EmailAddress>
<PI_PHON>6077773751</PI_PHON>
<NSF_ID>000176936</NSF_ID>
<StartDate>08/12/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Binghamton</Name>
<CityName>BINGHAMTON</CityName>
<ZipCode>139026000</ZipCode>
<PhoneNumber>6077776136</PhoneNumber>
<StreetAddress>4400 VESTAL PKWY E</StreetAddress>
<StreetAddress2><![CDATA[PO Box 6000]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY22</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>090189965</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>020657151</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[SUNY at Binghamton]]></Name>
<CityName/>
<StateCode>NY</StateCode>
<ZipCode>139026000</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>22</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY22</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~399989</FUND_OBLG>
<FUND_OBLG>2018~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Hypervisors have become the foundational system software for major cloud computing platforms. Modern hypervisors have evolved to provide two major functionalities: multiplexing the physical hardware among virtual machines (VMs) and providing rich value-added hypervisor-level services, such as for guest monitoring, rootkit detection, high availability, and live guest patching. Unfortunately, it is difficult for a cloud provider to develop and maintain a single hypervisor that incorporates every feature that cloud users want.&nbsp;</p> <p>In this project we developed a new hypervisor design using which cloud platforms can enable multiple, possibly third-party, hypervisors to co-exist and augment the services of a base hypervisor.&nbsp; This research led to the development of fundamental abstractions and techniques for supporting a multi-hypervisor VM, or Span VM, which is an unmodified VM that simultaneously runs atop multiple co-located hypervisors.&nbsp;We developed a lightweight hyperplexor to support Span VMs that minimizes nested virtualization overheads. We developed new low-overhead techniques for scheduling VMs having large number of virtual CPUs. We developed a new virtualization technique called Ephemeral virtualization which efficiently and repeatedly transfers control of a VM between the hyperplexor and nested hypervisor-level services using memory co-mapping. We also developed techniques for customized resource control for containers to enable third-party service ecosystem for containers, akin to what Span virtualization does for VMs.&nbsp;</p> <p>We developed new hypervisor-level techniques for improving resilience of both hypervisors and VMs. We developed a new technique for live replacement of hypervisors beneath running VMs to enable software rejuvenation of hypervisors and strengthen their operational reliability. We developed Quick Eviction to significantly reduce the time to completely and rapidly evict a VM from a source host. When migrating multiple VMs together, we discovered the significance of ordering different VM workload types to reduce overall migration times. We developed a failure resilient post-copy live migration service that handles failures of destination node, source node, and network, to allow cloud platforms to more confidently use live migration in production settings without the fear of losing customer VMs. For instance, a recent paper by Google titled "VM Live Migration At Scale" documented the extensive use of of pre-copy and post-copy VM migration techniques within Google's production data centers. Post-copy VM migration was invented by the PI in 2008. Thus improving the failure resilience of live VM migration can have significant impact on production data center environments. We also developed a new technique for intra-host relocation of containers between co-located VMs.&nbsp;</p> <p>To date, this research has led to the publication of 2 US patents, 8 conference papers, 2 journal papers, 3 workshop papers, 2 posters, 4 PhD dissertations, and 3 MS thesis/projects. During the course of this project, the PI collaborated with researchers from IBM T.J. Watson Research Center, Yorktown Heights, and Industrial Technologies Research Institute (ITRI), Taiwan to gain industry perspective on the techniques developed and their potential use cases.</p> <p>This research also trained a number of graduate and undergraduate students, specifically, 7 Ph.D., 4 Masters, 5 undergraduate students, and one high school student. This includes 3 female Ph.D students and one minority student who went on to join the CS Masters program.&nbsp; Students were trained in state-of-the-art in virtualization and cloud computing technologies ranging from operating system, networks, storage, and memory subsystems. All students developed new programming skills, including Linux kernel programming, hypervisor-level programming, and network programming. Students also developed technical presentation skills in seminars and conference presentations. A number of graduate and undergraduate students were trained through coursework on basics of virtualization, security, and VM migration. Course modules related to virtualization, hypervisors, and security were developed and included in graduate and undergraduate courses on Operating Systems and Virtualization.</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/26/2019<br>      Modified by: Kartik&nbsp;Gopalan</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Hypervisors have become the foundational system software for major cloud computing platforms. Modern hypervisors have evolved to provide two major functionalities: multiplexing the physical hardware among virtual machines (VMs) and providing rich value-added hypervisor-level services, such as for guest monitoring, rootkit detection, high availability, and live guest patching. Unfortunately, it is difficult for a cloud provider to develop and maintain a single hypervisor that incorporates every feature that cloud users want.   In this project we developed a new hypervisor design using which cloud platforms can enable multiple, possibly third-party, hypervisors to co-exist and augment the services of a base hypervisor.  This research led to the development of fundamental abstractions and techniques for supporting a multi-hypervisor VM, or Span VM, which is an unmodified VM that simultaneously runs atop multiple co-located hypervisors. We developed a lightweight hyperplexor to support Span VMs that minimizes nested virtualization overheads. We developed new low-overhead techniques for scheduling VMs having large number of virtual CPUs. We developed a new virtualization technique called Ephemeral virtualization which efficiently and repeatedly transfers control of a VM between the hyperplexor and nested hypervisor-level services using memory co-mapping. We also developed techniques for customized resource control for containers to enable third-party service ecosystem for containers, akin to what Span virtualization does for VMs.   We developed new hypervisor-level techniques for improving resilience of both hypervisors and VMs. We developed a new technique for live replacement of hypervisors beneath running VMs to enable software rejuvenation of hypervisors and strengthen their operational reliability. We developed Quick Eviction to significantly reduce the time to completely and rapidly evict a VM from a source host. When migrating multiple VMs together, we discovered the significance of ordering different VM workload types to reduce overall migration times. We developed a failure resilient post-copy live migration service that handles failures of destination node, source node, and network, to allow cloud platforms to more confidently use live migration in production settings without the fear of losing customer VMs. For instance, a recent paper by Google titled "VM Live Migration At Scale" documented the extensive use of of pre-copy and post-copy VM migration techniques within Google's production data centers. Post-copy VM migration was invented by the PI in 2008. Thus improving the failure resilience of live VM migration can have significant impact on production data center environments. We also developed a new technique for intra-host relocation of containers between co-located VMs.   To date, this research has led to the publication of 2 US patents, 8 conference papers, 2 journal papers, 3 workshop papers, 2 posters, 4 PhD dissertations, and 3 MS thesis/projects. During the course of this project, the PI collaborated with researchers from IBM T.J. Watson Research Center, Yorktown Heights, and Industrial Technologies Research Institute (ITRI), Taiwan to gain industry perspective on the techniques developed and their potential use cases.  This research also trained a number of graduate and undergraduate students, specifically, 7 Ph.D., 4 Masters, 5 undergraduate students, and one high school student. This includes 3 female Ph.D students and one minority student who went on to join the CS Masters program.  Students were trained in state-of-the-art in virtualization and cloud computing technologies ranging from operating system, networks, storage, and memory subsystems. All students developed new programming skills, including Linux kernel programming, hypervisor-level programming, and network programming. Students also developed technical presentation skills in seminars and conference presentations. A number of graduate and undergraduate students were trained through coursework on basics of virtualization, security, and VM migration. Course modules related to virtualization, hypervisors, and security were developed and included in graduate and undergraduate courses on Operating Systems and Virtualization.          Last Modified: 12/26/2019       Submitted by: Kartik Gopalan]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

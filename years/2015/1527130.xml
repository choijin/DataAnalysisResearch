<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CIF: Small: Collaborative Research:Synchronization and Deduplication of Distributed Coded Data: Fundamental Limits and Algorithms</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2015</AwardEffectiveDate>
<AwardExpirationDate>06/30/2019</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Phillip Regalia</SignBlockName>
<PO_EMAI>pregalia@nsf.gov</PO_EMAI>
<PO_PHON>7032922981</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Part 1: Coding for distributed storage systems has garnered significant attention in the past few years due to the rapid development of information technologies and the emergence of Big Data formats that need to be stored and disseminated across large-scale networks. As typical distributed systems need to ensure low-latency data access and store a large number of files over a set of nodes connected through a communication network, it is imperative to develop new distributed coding schemes that protect the systems from undesired component failures. The two key functionalities of codes used in distributed systems, namely the reconstruction of files via access to a subset of the nodes and repair of failed nodes, need to be retained when the files are accessed and processed by the users via symbol/block insertion, deletion, or substitution edits. Deletions frequently arise due to system-level data deduplication: when parts of files are deduplicated or edited, the changes in the information content need to be communicated to the redundant storage nodes with minimum communication cost. Current solutions for synchronizing data that underwent edits assume that data is uncoded and they do not fully exploit the distributed nature of information. Furthermore, they mostly ignore the presence of deduplication protocols. This makes distributed storage architectures inefficient in terms of storage, user access times, and error protection. Hence, the goals of the proposed research program are to develop a new set of protocols and coding schemes that will  support a new generation of versatile and updatable coded distributed storage systems. &lt;br/&gt;&lt;br/&gt;Part 2: Building on the preliminary work of the investigators, this proposal aims to set the foundations of the new field of coded synchronization and deduplication, with the goal of deriving fundamental performance limits, developing efficient algorithmic solutions for the two families of problems, and constructing new distributed storage codes that enable synchronization of coded data and coded deduplication. In particular, the proposal addresses the following comprehensive issues: &lt;br/&gt;1) Characterizing the communication rate limits of known and new (un)coded synchronization schemes, trade-offs between deduplication and data repair performance for different structured or encoded data formats and different types of communication channels.&lt;br/&gt;2) Introducing and analyzing the communication rate-distortion (CRD) function for approximate synchronization and deduplication of structured/encoded data, with a special focus on delay-sensitive applications.&lt;br/&gt;3) Developing dynamically updatable synchronization and deduplication algorithms cognizant of the network topology and of different prioritization needs of the users, as encountered in image and video data coding.</AbstractNarration>
<MinAmdLetterDate>06/29/2015</MinAmdLetterDate>
<MaxAmdLetterDate>06/29/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1527130</AwardID>
<Investigator>
<FirstName>Lara</FirstName>
<LastName>Dolecek</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Lara Dolecek</PI_FULL_NAME>
<EmailAddress>dolecek@ee.ucla.edu</EmailAddress>
<PI_PHON>3107940102</PI_PHON>
<NSF_ID>000541683</NSF_ID>
<StartDate>06/29/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Los Angeles</Name>
<CityName>LOS ANGELES</CityName>
<ZipCode>900951406</ZipCode>
<PhoneNumber>3107940102</PhoneNumber>
<StreetAddress>10889 Wilshire Boulevard</StreetAddress>
<StreetAddress2><![CDATA[Suite 700]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>33</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA33</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>092530369</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, LOS ANGELES</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Los Angeles]]></Name>
<CityName/>
<StateCode>CA</StateCode>
<ZipCode>900952000</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>33</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA33</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7797</Code>
<Text>Comm &amp; Information Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7935</Code>
<Text>COMM &amp; INFORMATION THEORY</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~150000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Data is growing at a staggering pace, yet the tools for efficiently managing seemingly similar (but not identical) data files fall short in the presence of edits. Edits are changes in data files, and include insertions and deletions. Edits are fundamental operations&nbsp;on data and can be man-made (e.g., when multiple users work on a software code at the same time, and make changes to it across different versions), or nature-made (mutations in DNA sequences). Despite their pervasiveness, edit errors are difficult to study since the changes they cause in the data set are, mathematically speaking, non-linear. This situation is in contrast to substitution errors and erasures of data that are linear operations, and for which, a comprehensive mathematical machinery has been developed and successfully implemented in practice.&nbsp;</p> <p>Recovery from edit errors is needed in data synchronization where distant users need to efficiently synchronized their versions of the data sets (e.g., in version control) , in data deduplication where redundant data needs to be identified and omitted (e.g., to keep data storage compact), and in data reconstruction where the original but unknown data needs to be reconstructed based on its available, edited copies (e.g. in phylogenomics). &nbsp;</p> <p>In this research project, we established fundamental performance limits and invented practical algorithms for synchronization, deduplication and reconstruction schemes that recover from a potentially large number of edits. Our results utilize the concept of interactive communication as well as advanced tools from information theory and combinatorics. We successfully demonstrated the utility of our algorithms on practical data sets including images, text translation, and DNA sequences. Our results will help pave the way for efficient management of large-scale data across many existing and emerging applications.</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/15/2019<br>      Modified by: Lara&nbsp;Dolecek</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Data is growing at a staggering pace, yet the tools for efficiently managing seemingly similar (but not identical) data files fall short in the presence of edits. Edits are changes in data files, and include insertions and deletions. Edits are fundamental operations on data and can be man-made (e.g., when multiple users work on a software code at the same time, and make changes to it across different versions), or nature-made (mutations in DNA sequences). Despite their pervasiveness, edit errors are difficult to study since the changes they cause in the data set are, mathematically speaking, non-linear. This situation is in contrast to substitution errors and erasures of data that are linear operations, and for which, a comprehensive mathematical machinery has been developed and successfully implemented in practice.   Recovery from edit errors is needed in data synchronization where distant users need to efficiently synchronized their versions of the data sets (e.g., in version control) , in data deduplication where redundant data needs to be identified and omitted (e.g., to keep data storage compact), and in data reconstruction where the original but unknown data needs to be reconstructed based on its available, edited copies (e.g. in phylogenomics).    In this research project, we established fundamental performance limits and invented practical algorithms for synchronization, deduplication and reconstruction schemes that recover from a potentially large number of edits. Our results utilize the concept of interactive communication as well as advanced tools from information theory and combinatorics. We successfully demonstrated the utility of our algorithms on practical data sets including images, text translation, and DNA sequences. Our results will help pave the way for efficient management of large-scale data across many existing and emerging applications.          Last Modified: 10/15/2019       Submitted by: Lara Dolecek]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: SI2-SSI: Adding Volunteer Computing to the Research Cyberinfrastructure</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2016</AwardEffectiveDate>
<AwardExpirationDate>07/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>259999.00</AwardTotalIntnAmount>
<AwardAmount>259999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rajiv Ramnath</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The aggregate computing power of consumer devices - desktop and laptop computers, tablets, smartphones - far exceeds that of institutional computing resources.  "Volunteer computing" uses these consumer devices, volunteered by their owners, to do scientific computing. In addition to providing additional, much-needed computational resources to scientists, volunteer computing publicizes scientific research and engages citizens in science. BOINC is the primary software system for volunteer computing.  It was developed at UC Berkeley with NSF support starting in 2002. Until now, BOINC has been based on a model of independent competing projects.  Scientists set up their own BOINC servers, port their applications to run on BOINC, and publicize their projects to attract volunteers.  There are about 40 such projects, in many areas of science: examples include Einstein@home, CERN, and SETI@home (astrophysics), Rosetta@home and GPUGrid.net (biomedicine), Climateprediction.net (climate study), and IBM World Community Grid (multiple applications).  Together these projects have about 400,000 active volunteers and 12 PetaFLOPS of computing throughput. This model, while successful to an extent, has reached a limit.  The number of projects and volunteers has stagnated.  Volunteer computing is supplying lots of computing power, but only to a few research projects.  For other scientists, there are two major barriers.  First, creating a BOINC project has significant overhead: learning a new technology, creating a public web site, generating publicity, and so on.  Second, volunteer computing is risky and uncertain; there is no guarantee that a new project will attract volunteers. This project aims to break this barrier, and to make volunteer computing available to all scientists doing high-throughput computing, by replacing the competing-projects model with a new "central broker" model. The new model has two related parts: 1) the integration of BOINC with existing high-throughput computing facilities such as supercomputing centers and science portals. Jobs currently run on cluster nodes will be transparently offloaded to volunteer computers. Scientists using these facilities will see faster turnaround times; they'll benefit from volunteer computing without even knowing it's there. 2) The project will change the volunteer interface so that participants sign up for scientific areas and goals rather then for particular projects. For example, a participant might sign up to contribute to cancer research. A central broker, to be developed as part of this project, would dynamically assign their computing resources to projects doing that type of research. This project mobilizes public support for and interest in scientific research by encouraging "volunteer computing" and engaging citizens in the conduct of the research itself. It simultaneously advances NSF's mission to advance science while broadening citizen engagement.&lt;br/&gt;&lt;br/&gt;The first year of this project will prototype each of these parts, and will integrate BOINC with TACC and nanoHub. Integrating BOINC with existing HTC systems involves several subtasks: 1) Job routing: modifying existing job processing systems used by TACC and nanoHub (Launcher and Rappture respectively) to decide when a group of jobs should be offloaded to BOINC. This decision might involve the estimated runtime of the jobs, input and output file sizes, data sensitivity, the deadline or priority of the jobs, and the identity of the job submitter. 2) Job format conversion: mapping job descriptions (input/output file specifications, resource and timing requirements) to their BOINC equivalents. 3) Application packaging: adapting existing applications (such as nanoHub's simulation tools and TACC's Autodock) to run under BOINC. We will use BOINC's virtual machine facility, which packages an application as a virtual machine image (VirtualBox or Docker) and a program to be run within the VM.  This allows existing Linux applications to run on consumer desktop platforms such as Windows and Mac, as well as providing a strong security sandbox and an efficient application-independent checkpoint/restart mechanism. 4) File handling: moving input and output files between existing storage systems (typically inaccessible from outside firewalls) to Internet-visible servers.  This will use existing BOINC components that manage files based on hashes to eliminate duplicate transfer and storage of files. 5) Job monitoring and control: adapting existing web- or command-line based tools for monitoring the progress of batches of jobs, and for aborting jobs, to work with BOINC. This will use existing Web RPCs provided by BOINC for these purposes. This project will carry out these tasks by designing and implementing new software as needed, testing for correctness, performance, and scalability, and deploying it in a production environment. The second part of the project - a brokering system for allocating computing power based on volunteer scientific preferences - will be designed and prototyped.  This involves several subtasks: 1) Designing a schema for volunteer preferences, including scientific areas and sub-areas, project nationality and institutions, specific projects and applications, inclusions/exclusions, and so on. 2) Designing a schema for assigning attributes to job streams (e.g. their area, sub-area, institution, etc.), and for assigning quotas or priorities to job streams. 3) Designing a relational database for storing the above information. 4) Designing and implementing policies for assigning volunteer resources to job streams in a way that respects volunteer preferences and optimizes quota, fairness, and throughput criteria.  This will be implemented as a BOINC "account manager" so that volunteers see a single interface rather than lots of separate projects and web sites.</AbstractNarration>
<MinAmdLetterDate>08/02/2016</MinAmdLetterDate>
<MaxAmdLetterDate>08/02/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1550601</AwardID>
<Investigator>
<FirstName>David</FirstName>
<LastName>Anderson</LastName>
<PI_MID_INIT>P</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>David P Anderson</PI_FULL_NAME>
<EmailAddress>davea@ssl.berkeley.edu</EmailAddress>
<PI_PHON>5106424921</PI_PHON>
<NSF_ID>000467556</NSF_ID>
<StartDate>08/02/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Berkeley</Name>
<CityName>BERKELEY</CityName>
<ZipCode>947101749</ZipCode>
<PhoneNumber>5106433891</PhoneNumber>
<StreetAddress>Sponsored Projects Office</StreetAddress>
<StreetAddress2><![CDATA[1608 Fourth Street, Suite 220]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>124726725</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF CALIFORNIA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Berkeley]]></Name>
<CityName>Berkeley</CityName>
<StateCode>CA</StateCode>
<ZipCode>947207450</ZipCode>
<StreetAddress><![CDATA[9 Gauss Way]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>7433</Code>
<Text>CyberInfra Frmwrk 21st (CIF21)</Text>
</ProgramReference>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8009</Code>
<Text>Scientifc Software Integration</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~259999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>During the award period we completed the first phase of a project that seeks to 1) make the immense computing power of the consumer digital infrastructure available to thousands of U.S. scientists and research groups, and 2) expand the volunteer computing population (which is currently mostly male, technical, and over 50) by offering a simpler interface and a more coherent marketing message.</p> <p>This project has two connected parts.&nbsp; The first involves adding BOINC-based volunteer-computing back ends to two existing HPC providers: TACC and nanoHUB.&nbsp; In each case we developed &ldquo;adapter&rdquo; software for moving jobs between the native job queueing system (Launcher at TACC, Rappture at nanoHUB) and BOINC:</p> <ul> <li>We used a system, developed by the BOINC community, for packaging applications using VirtualBox and Docker.&nbsp; This allows Linux-based applications to run on Windows and Mac OS X computers with no changes or recompilation.&nbsp; The hundreds of applications currently being run using Launcher and Rappture can now be run on volunteer computers with no per-application porting or other work.</li> <li>We extended BOINC&rsquo;s remote job submission and remote file management to handle the needs to TACC and nanoHUB; for example, extending batch operations to allow per-job specification of application, input/output file signature, expected runtime, etc.</li> </ul> <p>We helped the collaborators learn about BOINC, set up BOINC servers, and debug the job-processing systems described above.&nbsp; Each of the collaborators now has a fully-functioning test project.&nbsp; Both are in the process of moving to production, and are on track to do this by end of year.</p> <p>This work achieves our Broader Impact goals of creating a blueprint by which any HTC provider can add a volunteer computing back end with a fairly small investment. &nbsp;TACC is a leading supercomputing center, and nanoHUB is a leading science gateway; by creating these examples we encourage and enable other HPC providers to follow suit.</p> <p>A second part of the project involved creating a new framework for volunteer computing, based on a central &ldquo;coordinator&rdquo; called Science United (SU).&nbsp; In the original BOINC model, volunteers had to survey all the (40 or so) projects and decide which ones to compute for.&nbsp; In the new model volunteers register with SU and specify what kinds of research they want to support.&nbsp; SU then dynamically attaches their computers to appropriate projects (or, in the case of heterogeneous projects like TACC, applications within projects).&nbsp; Resource allocation among projects will be determined by an external XSEDE-type mechanism.</p> <p>We designed and implemented SU, which consists of a web site and a meta-scheduler that assigns computers to projects.&nbsp; These use a system of hierarchical keywords for specifying science areas and research project locations.&nbsp; We made significant modifications to the BOINC client and server software to support SU, in terms of keywords and resource accounting information.</p> <p>SU also incorporates a number of UI/UX changes designed to attract a broader volunteer population:</p> <ul> <li>We designed and implemented a new system for volunteer registration and software installation that reduces the number of mouse clicks from 12 to 3, and that keeps all UI on the web (rather than the BOINC client).</li> <li>SU eliminates &ldquo;leader boards&rdquo; that rank volunteers and teams based on how much computing they&rsquo;re done.&nbsp; We found that many people are repelled by this competitive aspect.</li> <li>We simplified the feature set in several places.&nbsp; For example, BOINC offered an elaborate set of features for specifying &ldquo;computing preferences&rdquo;: when to compute, how many cores to use, etc.&nbsp; SU replaces this with three choices: &ldquo;green&rdquo;, &ldquo;standard&rdquo;, and &ldquo;maximum computing&rdquo;.</li> <li>The BOINC web interfaces provide a glut of information, mostly in textual form.&nbsp; We found that many people feel overwhelmed by this.&nbsp; The SU interface reduces the amount of information, and presents it graphically when possible.</li> </ul> <p>SU is currently being tested internally, and we hope to open it to public testing by the end of year, and launch it early 2018.</p> <p>SU will have several major broader impacts:</p> <ul> <li>It will eliminate uncertainty for new BOINC projects: a research group or HPC provider can get an SU allocation before investing in BOINC, and be assured of a certain level of computing power.&nbsp; It will also eliminate the need for these new projects to do publicity and outreach activities to attract volunteers.&nbsp; These are currently enormous barriers to entry and have greatly limited the number of BOINC projects.&nbsp; In this way we hope that SU will increase the number of scientists who benefit from volunteer computing from dozens to thousands.</li> <li>It will provide a single brand (SU) for marketing volunteer computing through traditional, web, and social media, and will provide a UI/UX that is appealing and accessible to a much larger range of potential volunteers.&nbsp; In this way we hope that the volunteer population will grow from 100Ks to millions.</li> </ul> <p>&nbsp;</p><br> <p>            Last Modified: 11/29/2017<br>      Modified by: David&nbsp;P&nbsp;Anderson</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ During the award period we completed the first phase of a project that seeks to 1) make the immense computing power of the consumer digital infrastructure available to thousands of U.S. scientists and research groups, and 2) expand the volunteer computing population (which is currently mostly male, technical, and over 50) by offering a simpler interface and a more coherent marketing message.  This project has two connected parts.  The first involves adding BOINC-based volunteer-computing back ends to two existing HPC providers: TACC and nanoHUB.  In each case we developed "adapter" software for moving jobs between the native job queueing system (Launcher at TACC, Rappture at nanoHUB) and BOINC:  We used a system, developed by the BOINC community, for packaging applications using VirtualBox and Docker.  This allows Linux-based applications to run on Windows and Mac OS X computers with no changes or recompilation.  The hundreds of applications currently being run using Launcher and Rappture can now be run on volunteer computers with no per-application porting or other work. We extended BOINC?s remote job submission and remote file management to handle the needs to TACC and nanoHUB; for example, extending batch operations to allow per-job specification of application, input/output file signature, expected runtime, etc.   We helped the collaborators learn about BOINC, set up BOINC servers, and debug the job-processing systems described above.  Each of the collaborators now has a fully-functioning test project.  Both are in the process of moving to production, and are on track to do this by end of year.  This work achieves our Broader Impact goals of creating a blueprint by which any HTC provider can add a volunteer computing back end with a fairly small investment.  TACC is a leading supercomputing center, and nanoHUB is a leading science gateway; by creating these examples we encourage and enable other HPC providers to follow suit.  A second part of the project involved creating a new framework for volunteer computing, based on a central "coordinator" called Science United (SU).  In the original BOINC model, volunteers had to survey all the (40 or so) projects and decide which ones to compute for.  In the new model volunteers register with SU and specify what kinds of research they want to support.  SU then dynamically attaches their computers to appropriate projects (or, in the case of heterogeneous projects like TACC, applications within projects).  Resource allocation among projects will be determined by an external XSEDE-type mechanism.  We designed and implemented SU, which consists of a web site and a meta-scheduler that assigns computers to projects.  These use a system of hierarchical keywords for specifying science areas and research project locations.  We made significant modifications to the BOINC client and server software to support SU, in terms of keywords and resource accounting information.  SU also incorporates a number of UI/UX changes designed to attract a broader volunteer population:  We designed and implemented a new system for volunteer registration and software installation that reduces the number of mouse clicks from 12 to 3, and that keeps all UI on the web (rather than the BOINC client). SU eliminates "leader boards" that rank volunteers and teams based on how much computing they?re done.  We found that many people are repelled by this competitive aspect. We simplified the feature set in several places.  For example, BOINC offered an elaborate set of features for specifying "computing preferences": when to compute, how many cores to use, etc.  SU replaces this with three choices: "green", "standard", and "maximum computing". The BOINC web interfaces provide a glut of information, mostly in textual form.  We found that many people feel overwhelmed by this.  The SU interface reduces the amount of information, and presents it graphically when possible.   SU is currently being tested internally, and we hope to open it to public testing by the end of year, and launch it early 2018.  SU will have several major broader impacts:  It will eliminate uncertainty for new BOINC projects: a research group or HPC provider can get an SU allocation before investing in BOINC, and be assured of a certain level of computing power.  It will also eliminate the need for these new projects to do publicity and outreach activities to attract volunteers.  These are currently enormous barriers to entry and have greatly limited the number of BOINC projects.  In this way we hope that SU will increase the number of scientists who benefit from volunteer computing from dozens to thousands. It will provide a single brand (SU) for marketing volunteer computing through traditional, web, and social media, and will provide a UI/UX that is appealing and accessible to a much larger range of potential volunteers.  In this way we hope that the volunteer population will grow from 100Ks to millions.           Last Modified: 11/29/2017       Submitted by: David P Anderson]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

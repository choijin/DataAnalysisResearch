<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CIF: Small: Collaborative Research:Towards more Secure Systems: Uniformization for Secrecy</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2015</AwardEffectiveDate>
<AwardExpirationDate>09/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>254729.00</AwardTotalIntnAmount>
<AwardAmount>254729</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Phillip Regalia</SignBlockName>
<PO_EMAI>pregalia@nsf.gov</PO_EMAI>
<PO_PHON>7032922981</PO_PHON>
</ProgramOfficer>
<AbstractNarration>As communication networks play an increasingly vital role in our society, ensuring the confidentiality of information transmission and storage has become an increasing concern. New classes of networks, such as heterogeneous wireless networks and distributed storage networks, are emerging, in which the deployment of off-the-shelf cryptographic solutions faces several limitations. These include, for instance, the overhead of key management to maintain synchronized private and public keys; the challenge of distributing keys within the stringent delay constraints imposed by clients; and the exposure to large-scale attacks that were once deemed infeasible. Consequently, several solutions from network coding to physical-layer security have been developed to improve the confidentiality of data over modern wireless networks. Many key-independent and keyless schemes have been developed to provide additional robustness against attacks and more flexibility in the network operation. These schemes have in common that they exploit coded data as keys and move away from the traditional paradigm in which data is a commodity and in which information packets must be transmitted and protected independently. Instead, these schemes envision that information packets could be mixed in a controlled manner so as to introduce an intrinsic level of security against adversaries.&lt;br/&gt;&lt;br/&gt;Most existing secrecy results hinge on the crucial assumption that data is uniformly distributed and independent from a packet to another. Unfortunately, recent results have shown that even optimal data compression algorithms  uniformize the statistics of coded data only in a very weak sense. Consequently, several security guarantees established in the literature may well collapse in the absence of any proven robustness with respect to data uniformity assumptions. The objective of this project is to develop a better understanding of how the statistical properties of passwords and data influence the security of secrecy systems. The project investigates several interrelated research tasks: (i) the analysis of the fundamental limits of data-compression techniques with improved uniformity properties; (ii) the design of low-complexity codes for uniformization; (iii) the application of such algorithms in cloud storage systems. Additional activities include an outreach effort to high-school students.</AbstractNarration>
<MinAmdLetterDate>09/22/2015</MinAmdLetterDate>
<MaxAmdLetterDate>09/22/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1527270</AwardID>
<Investigator>
<FirstName>Muriel</FirstName>
<LastName>Medard</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Muriel Medard</PI_FULL_NAME>
<EmailAddress>medard@mit.edu</EmailAddress>
<PI_PHON>6172533167</PI_PHON>
<NSF_ID>000106371</NSF_ID>
<StartDate>09/22/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName>Cambridge</CityName>
<StateCode>MA</StateCode>
<ZipCode>021394701</ZipCode>
<StreetAddress><![CDATA[77 Mass Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7797</Code>
<Text>Comm &amp; Information Foundations</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7935</Code>
<Text>COMM &amp; INFORMATION THEORY</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~254729</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In September 2017, McAffee Labs quarterly report estimated that brute force attacks represent 20% of total network attacks, making them the most prevalent type of attack ex-aequo with browser based vulnerabilities. These attacks have sometimes catastrophic consequences, and understanding their fundamental limits may play an important role in the risk assessment of password-secured systems, and in the design of better security protocols. From online banking and bitcoin wallets, to secure shell (SSH), file transfer protocol (ftp), and telnet servers, and passing by governmental institutions, brute-force attacks have shown to be one of the major threats to network security.<br />&nbsp;<br />Despite the computational burden on the attacker, brute-force attacks are prevalent. This can be explained through multiple points of view. First, passwords are often weaker than what they ought to be, meaning that attackers can hope to find the correct password well before they query a significant portion of the possible password strings. Next, attacks through huge networks of compromised computers (botnets) are now more common, giving access to significant computational resources for the attacker. More critically, these botnets help to disguise the attack by distributing it. Indeed, a main solution to the threat of online brute-force attacks is to setup a system that detects and prevents too many queries from any one user, as determined by IP addresses. As such, an attacker which uses only a single IP address would be limited to a fixed number of guesses. In recent years, however, this defense was circumvented by using massive botnets, each bot querying potential passwords. In this situation, it is hard to detect legitimate users in the crowd of illegitimate attackers. These attacks come with a cost, namely, the attack is now distributed.<br />&nbsp;<br />While some solutions exist to prevent online brute-force attacks that arise from one single IP address, attacks performed by botnets are more challenging. The attack is now distributed across thousands, sometimes millions of computers, each with limited computational power and synchronization tools. If multiple adversarial agents (we shall use adversary and agents interchangeably) coordinate their attack, the system will be compromised as soon as any of them succeeds. Moreover, the individual computational effort of each adversary is reduced, while the total number of queries remains the same. Indeed, an optimal strategy here would consist of having each agent query the most-likely password that has not been queried by any of the other agents. Since this strategy reduces to querying as a group from the optimal list, the average number of queries completed by each agent is thus reduced by a factor of the number of agents, with respect to the case where a single agent queries alone. This requires the agents to be able to synchronize their queries, that is, there must be a knowledge of an ordering in which the agents make guesses. However, in many practical scenarios the adversarial agents are completely distributed and have limited communication with each other. One prime example is botnets, in which agents are often oblivious to the actions taken by other agents, and may have limited access to shared memory or synchronization tools. Owing to constraints of the physical computers in which these bots run, the speed, latency, and reliability of these agents is heterogeneous &mdash; thus, perfect synchronization is unlikely. Note that even if a central agent distributes lists of possible guesses to the bots, such that the lists form a partition of all guesses, making sure no guess is repeated, the lack of synchronization may still render the process sub-optimal.<br />&nbsp;<br />In this project, we analyze these distributed attacks by using a simplified model. Our aim is to understand the impact of distribution and asynchronization on the overall computational effort necessary to breach a system. Our result is based on Guesswork, a measure of the number of queries (guesses) required of an adversary before a correct sequence, such as a password, is found in an optimal attack. Guesswork is a direct surrogate for time and computational effort of guessing a sequence from a set of sequences with associated likelihoods.<br />We show that asynchronous guessers can asymptotically perform brute-force attacks as efficiently as synchronized guessers. To illustrate this claim, we have shown our results on an extract of the Adobe Leaked password dataset. In particular, we extracted the 10,000 most likely passwords from a subset of 10 millions passwords in the data, and restricted our study to those passwords.</p><br> <p>            Last Modified: 07/02/2019<br>      Modified by: Muriel&nbsp;Medard</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In September 2017, McAffee Labs quarterly report estimated that brute force attacks represent 20% of total network attacks, making them the most prevalent type of attack ex-aequo with browser based vulnerabilities. These attacks have sometimes catastrophic consequences, and understanding their fundamental limits may play an important role in the risk assessment of password-secured systems, and in the design of better security protocols. From online banking and bitcoin wallets, to secure shell (SSH), file transfer protocol (ftp), and telnet servers, and passing by governmental institutions, brute-force attacks have shown to be one of the major threats to network security.   Despite the computational burden on the attacker, brute-force attacks are prevalent. This can be explained through multiple points of view. First, passwords are often weaker than what they ought to be, meaning that attackers can hope to find the correct password well before they query a significant portion of the possible password strings. Next, attacks through huge networks of compromised computers (botnets) are now more common, giving access to significant computational resources for the attacker. More critically, these botnets help to disguise the attack by distributing it. Indeed, a main solution to the threat of online brute-force attacks is to setup a system that detects and prevents too many queries from any one user, as determined by IP addresses. As such, an attacker which uses only a single IP address would be limited to a fixed number of guesses. In recent years, however, this defense was circumvented by using massive botnets, each bot querying potential passwords. In this situation, it is hard to detect legitimate users in the crowd of illegitimate attackers. These attacks come with a cost, namely, the attack is now distributed.   While some solutions exist to prevent online brute-force attacks that arise from one single IP address, attacks performed by botnets are more challenging. The attack is now distributed across thousands, sometimes millions of computers, each with limited computational power and synchronization tools. If multiple adversarial agents (we shall use adversary and agents interchangeably) coordinate their attack, the system will be compromised as soon as any of them succeeds. Moreover, the individual computational effort of each adversary is reduced, while the total number of queries remains the same. Indeed, an optimal strategy here would consist of having each agent query the most-likely password that has not been queried by any of the other agents. Since this strategy reduces to querying as a group from the optimal list, the average number of queries completed by each agent is thus reduced by a factor of the number of agents, with respect to the case where a single agent queries alone. This requires the agents to be able to synchronize their queries, that is, there must be a knowledge of an ordering in which the agents make guesses. However, in many practical scenarios the adversarial agents are completely distributed and have limited communication with each other. One prime example is botnets, in which agents are often oblivious to the actions taken by other agents, and may have limited access to shared memory or synchronization tools. Owing to constraints of the physical computers in which these bots run, the speed, latency, and reliability of these agents is heterogeneous &mdash; thus, perfect synchronization is unlikely. Note that even if a central agent distributes lists of possible guesses to the bots, such that the lists form a partition of all guesses, making sure no guess is repeated, the lack of synchronization may still render the process sub-optimal.   In this project, we analyze these distributed attacks by using a simplified model. Our aim is to understand the impact of distribution and asynchronization on the overall computational effort necessary to breach a system. Our result is based on Guesswork, a measure of the number of queries (guesses) required of an adversary before a correct sequence, such as a password, is found in an optimal attack. Guesswork is a direct surrogate for time and computational effort of guessing a sequence from a set of sequences with associated likelihoods. We show that asynchronous guessers can asymptotically perform brute-force attacks as efficiently as synchronized guessers. To illustrate this claim, we have shown our results on an extract of the Adobe Leaked password dataset. In particular, we extracted the 10,000 most likely passwords from a subset of 10 millions passwords in the data, and restricted our study to those passwords.       Last Modified: 07/02/2019       Submitted by: Muriel Medard]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

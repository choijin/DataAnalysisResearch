<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative Research: Variation-Resilient VLSI Systems with Cross-Layer Controlled Approximation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2015</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>210000.00</AwardTotalIntnAmount>
<AwardAmount>210000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Applications driven by human-computer interactions through the five human senses are projected to underpin the next generation of computing. For many of these applications, occasional small errors are often not only acceptable but also bring opportunities for building lighter, cheaper, and more robust systems that use less energy and may have a longer battery life. This project will study how to advance computing technology by allowing deliberate imprecision in hardware implementations through the notion of approximate computing.  The outcomes of this project will be a set of design techniques for approximate computing that can become a key component of hardware computing technology, potentially benefiting systems ranging from high performance computing for big data analytics and low power implementation for internet of things. This project will also provide an opportunity for training students with the latest design and computing technology.&lt;br/&gt; &lt;br/&gt;The research goals of this project are to create new approximate computing techniques to optimize a system at all stages of its life, from design-time to runtime, which can enable cross-layer control of performance-power-precision trade-offs. The research agenda consists of several components. First, new error models with different accuracy-complexity trade-offs will be developed. Second, new design-time optimization techniques, especially hardware resource scheduling and binding in high-level synthesis, will be studied with consideration of approximation, variation, and runtime circuit reconfiguration. Third, compile-time and operating-system-level task mapping/scheduling algorithms will be investigated to make the best use of circuits with various precisions. Last but not least, runtime precision control techniques will be explored in conjunction with dynamic voltage and frequency scaling in order to achieve a smooth trade-off between power and user experience.</AbstractNarration>
<MinAmdLetterDate>07/29/2015</MinAmdLetterDate>
<MaxAmdLetterDate>07/29/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1525749</AwardID>
<Investigator>
<FirstName>Jiang</FirstName>
<LastName>Hu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jiang Hu</PI_FULL_NAME>
<EmailAddress>jianghu@ece.tamu.edu</EmailAddress>
<PI_PHON>9798478768</PI_PHON>
<NSF_ID>000386657</NSF_ID>
<StartDate>07/29/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Texas A&amp;M Engineering Experiment Station</Name>
<CityName>College Station</CityName>
<ZipCode>778454645</ZipCode>
<PhoneNumber>9798626777</PhoneNumber>
<StreetAddress>400 Harvey Mitchell Pkwy S</StreetAddress>
<StreetAddress2><![CDATA[Suite 300]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX17</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>847205572</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TEXAS A&amp;M ENGINEERING EXPERIMENT STATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042915991</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Texasa Engineering Experiment Station]]></Name>
<CityName>College Station</CityName>
<StateCode>TX</StateCode>
<ZipCode>778433128</ZipCode>
<StreetAddress><![CDATA[3128 TAMU]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>17</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX17</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~210000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Approximate computing is to intentionally allow occasional small errors in computing in exchange for reduced computing runtime, energy or circuit area. The goal of this project is to advance the state-of-art of approximate computing at multiple fronts. The outcomes of this project are summarized as follows.</p> <ul> <li>Accuracy-configurable adder design</li> </ul> <p>A low overhead accuracy configurable adder design is developed. It can be configured to different accuracy and power dissipations. Compared to accurate adder design, it can reduce power by 84% with the same performance. It leads to about 39% lower area overhead than previous works and yet achieves better power-performance-accuracy tradeoff. Moreover, a self-configuration scheme is provided along with the design, in contrast to the previous related works that assume the configuration by users. Theoretical results on the errors of the adder design are also derived. The efficacy of the adder design is validated in multiplier and image processing.&nbsp;</p> <ul> <li>Built-in self-optimization for variation resilience</li> </ul> <p>In such a circuit system, there is a self-test component to evaluate circuit response. The response is fed to a cost function circuit that calculate the difference from ideal responses. Based on the cost function values, a circuit performs optimization to configure certain tuning knobs to compensate the harmful effect from process variations. Such self-optimization can generate compensation according to individual variations and therefore can avoid the conventional over-design for variation tolerance, which tends to have much greater power overhead. Experimental results indicate that the self-optimization can reduce the process variation effect by as much as 80%.</p> <ul> <li>Approximate computing in high level synthesis</li> </ul> <p>In high level synthesis, time and hardware resources are allocated and assigned to computing operations at design time. In the past, high level synthesis has been mostly focused on performance and power tradeoff. When approximate computing is included as computing functional units, both delay and power can be potentially reduced. However, the approximation errors need to be controlled as well, and thus high level synthesis techniques in this project considers the performance-power-accuracy tradeoff. An analytical error model that is friendly to optimization use is developed. Two new high level synthesis approaches are investigated. In the first approach, all of time, hardware resource and use of approximation are simultaneous optimized through mathematical programming. This approach can reduce energy consumption by 40% with bounded errors and delays. The second approach is a sequential heuristic consisting of a precision optimization and a conventional high level synthesis step. This approach is much more scalable with slight solution degradation.</p> <ul> <li>Approximate computing in non-preemptive real-time scheduling</li> </ul> <p>In order to guarantee satisfying all the deadline constraints, the computation execution time estimation in real-time scheduling has been overly conservative. If a timing deficit at runtime is compensated by performing approximate computing, which has much shorter execution time, the estimation is no longer necessary to be overly conservative. The techniques developed in this research not only make use of approximate computing to reduce the pessimism in execution time estimation, which causes resource under-utilization or waste, but also maximize the chance of actually use precise computing if the condition allows. Experimental results show that our techniques can avoid the 23% deadline violations occurred in using precise computing. Compared to constantly using approximate computing, our techniques can reduce computing errors by 47% on average.</p> <ul> <li>Approximate computing in mixed-criticality system scheduling on multiprocessors</li> </ul> <p>In the field of real-time scheduling, a recent trend for addressing the pessimistic execution time estimation is the mixed criticality model. In this model, tasks are categorized into low-criticality and high-criticality tasks while the system operation has low-criticality and high-criticality mode. A less conservative execution time estimation is employed in the low-criticality mode. In case the actual execution exceeds the estimation, the system enters high-criticality mode, where the high-criticality tasks use a much more conservative execution time estimation. At the same time, all low-criticality tasks are dropped, and this dropping is controversial. The techniques developed in this research is to perform low-criticality tasks in approximation instead of completely abandoning them. An offline precision optimization method that maximizes precise computing is developed. In addition, a new technique is developed to defer the transition from low-criticality mode to high-criticality mode, which alleviate the pessimism in the high-criticality mode.&nbsp;&nbsp;</p> <p>Broader Impact</p> <p>The techniques developed in this research constitute a major progress of the approximate computing technology that helps improve the efficiency of overall computing technology. The knowledge obtained in this project has been disseminated through technical journal and conference publications. Students are trained with interdisciplinary skills on circuit design, optimization and real-time systems. &nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 08/06/2019<br>      Modified by: Jiang&nbsp;Hu</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2019/1525749/1525749_10381499_1565147734774_ApproximationImage--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1525749/1525749_10381499_1565147734774_ApproximationImage--rgov-800width.jpg" title="Comparison of approximate adders on image processing."><img src="/por/images/Reports/POR/2019/1525749/1525749_10381499_1565147734774_ApproximationImage--rgov-66x44.jpg" alt="Comparison of approximate adders on image processing."></a> <div class="imageCaptionContainer"> <div class="imageCaption">(a) is the image from precise computing. (b), (c) and (d) are images from using our approximate adders. (e) and (f) are images from previous works on approximate adders.</div> <div class="imageCredit">Xu, W., et al, TVLSI 2018.</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Jiang&nbsp;Hu</div> <div class="imageTitle">Comparison of approximate adders on image processing.</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Approximate computing is to intentionally allow occasional small errors in computing in exchange for reduced computing runtime, energy or circuit area. The goal of this project is to advance the state-of-art of approximate computing at multiple fronts. The outcomes of this project are summarized as follows.  Accuracy-configurable adder design   A low overhead accuracy configurable adder design is developed. It can be configured to different accuracy and power dissipations. Compared to accurate adder design, it can reduce power by 84% with the same performance. It leads to about 39% lower area overhead than previous works and yet achieves better power-performance-accuracy tradeoff. Moreover, a self-configuration scheme is provided along with the design, in contrast to the previous related works that assume the configuration by users. Theoretical results on the errors of the adder design are also derived. The efficacy of the adder design is validated in multiplier and image processing.   Built-in self-optimization for variation resilience   In such a circuit system, there is a self-test component to evaluate circuit response. The response is fed to a cost function circuit that calculate the difference from ideal responses. Based on the cost function values, a circuit performs optimization to configure certain tuning knobs to compensate the harmful effect from process variations. Such self-optimization can generate compensation according to individual variations and therefore can avoid the conventional over-design for variation tolerance, which tends to have much greater power overhead. Experimental results indicate that the self-optimization can reduce the process variation effect by as much as 80%.  Approximate computing in high level synthesis   In high level synthesis, time and hardware resources are allocated and assigned to computing operations at design time. In the past, high level synthesis has been mostly focused on performance and power tradeoff. When approximate computing is included as computing functional units, both delay and power can be potentially reduced. However, the approximation errors need to be controlled as well, and thus high level synthesis techniques in this project considers the performance-power-accuracy tradeoff. An analytical error model that is friendly to optimization use is developed. Two new high level synthesis approaches are investigated. In the first approach, all of time, hardware resource and use of approximation are simultaneous optimized through mathematical programming. This approach can reduce energy consumption by 40% with bounded errors and delays. The second approach is a sequential heuristic consisting of a precision optimization and a conventional high level synthesis step. This approach is much more scalable with slight solution degradation.  Approximate computing in non-preemptive real-time scheduling   In order to guarantee satisfying all the deadline constraints, the computation execution time estimation in real-time scheduling has been overly conservative. If a timing deficit at runtime is compensated by performing approximate computing, which has much shorter execution time, the estimation is no longer necessary to be overly conservative. The techniques developed in this research not only make use of approximate computing to reduce the pessimism in execution time estimation, which causes resource under-utilization or waste, but also maximize the chance of actually use precise computing if the condition allows. Experimental results show that our techniques can avoid the 23% deadline violations occurred in using precise computing. Compared to constantly using approximate computing, our techniques can reduce computing errors by 47% on average.  Approximate computing in mixed-criticality system scheduling on multiprocessors   In the field of real-time scheduling, a recent trend for addressing the pessimistic execution time estimation is the mixed criticality model. In this model, tasks are categorized into low-criticality and high-criticality tasks while the system operation has low-criticality and high-criticality mode. A less conservative execution time estimation is employed in the low-criticality mode. In case the actual execution exceeds the estimation, the system enters high-criticality mode, where the high-criticality tasks use a much more conservative execution time estimation. At the same time, all low-criticality tasks are dropped, and this dropping is controversial. The techniques developed in this research is to perform low-criticality tasks in approximation instead of completely abandoning them. An offline precision optimization method that maximizes precise computing is developed. In addition, a new technique is developed to defer the transition from low-criticality mode to high-criticality mode, which alleviate the pessimism in the high-criticality mode.    Broader Impact  The techniques developed in this research constitute a major progress of the approximate computing technology that helps improve the efficiency of overall computing technology. The knowledge obtained in this project has been disseminated through technical journal and conference publications. Students are trained with interdisciplinary skills on circuit design, optimization and real-time systems.            Last Modified: 08/06/2019       Submitted by: Jiang Hu]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

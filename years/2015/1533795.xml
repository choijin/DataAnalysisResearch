<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>XPS: EXPL: SDA: Scalable Concurrency Control Techniques for Distributed Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>299990.00</AwardTotalIntnAmount>
<AwardAmount>299990</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Virtually all distributed computing applications, from transactions on databases to updates on social media platforms, involve concurrent operations on data objects. For these applications, concurrency control mechanisms represent significant performance overheads. These applications typically exhibit strong and persistent patterns in data access. Motivated by the importance of the problem, this project investigates the use of dynamic data- and lock-access patterns in distributed computations to significantly improve the performance of concurrency control mechanisms for scalable systems, specifically, in conventional cloud environments and key-value stores such as BigTable, HBase, and Cassandra. In contrast to conventional techniques that collocate locks with corresponding data items, this project relies on a modular lock service that decouples lock locations from corresponding data objects, and maintains lock state of all data items in a small set of storage nodes. &lt;br/&gt;&lt;br/&gt;This design choice motivates a number of questions for this research: (i) where and when should lock states be migrated into the lock service? (ii) when should lock state be repatriated to the data store? (iii) how should the lock service be scaled out? (iv) what are fault-tolerant, low-overhead, deadlock- and livelock-free protocols for these operations? and (v) how can long-lived data access patterns be leveraged in such systems? Building on preliminary results that demonstrate the feasibility and considerable promise of the approach, the project develops algorithms, protocols, analyses, and open-source software, along with comprehensive validation in the context of a diverse set of applications.&lt;br/&gt;&lt;br/&gt;The project will result in a novel framework for concurrency control in scalable distributed systems. The concurrency control service has a number of desirable features: (i) modularity -- the service can be instantiated at runtime, with minimal change to underlying data storage organization and access mechanisms; (ii) extensibility ? the service adapts dynamically to load and service requirements; and (iii) high performance through the use of efficient algorithms exploiting data and lock access patterns. These features are achieved through a novel mix of algorithms for lock migration and collocation, statistical models for dynamic lock and data access, protocols for lock state management, associated proofs of correctness and fairness, fault tolerance, performance, and scalability. The concurrency control service is fully validated on private as well as public clouds on a mix of applications drawn from Online Transaction Processing and Machine Learning.&lt;br/&gt;&lt;br/&gt;The project directly impacts an important class of cloud-based applications by providing a modular and extensible lock service.  The service relieves burden on the application programmer while providing high performance and elastic throughput. Beyond this, the project includes a number of educational initiatives aimed at undergraduate and graduate education, along with outreach efforts aimed at enhancing representation of minority groups. These include development of instructional material, curricula, organization of and presentations at workshops and summer schools, and recruitment initiatives aimed at students from under-represented groups.</AbstractNarration>
<MinAmdLetterDate>08/14/2015</MinAmdLetterDate>
<MaxAmdLetterDate>08/14/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1533795</AwardID>
<Investigator>
<FirstName>Ananth</FirstName>
<LastName>Grama</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ananth Grama</PI_FULL_NAME>
<EmailAddress>ayg@cs.purdue.edu</EmailAddress>
<PI_PHON>7654946964</PI_PHON>
<NSF_ID>000319590</NSF_ID>
<StartDate>08/14/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName>West Lafayette</CityName>
<StateCode>IN</StateCode>
<ZipCode>479072107</ZipCode>
<StreetAddress><![CDATA[305 N. University Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8283</Code>
<Text>Exploiting Parallel&amp;Scalabilty</Text>
</ProgramElement>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~299990</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>A significant fraction of current high-throughput applications run in cloud environments. Efficient execution of these applications at scale is an important problem, particularly, in dynamic scalable data centers. This project resulted in efficient and effective concurrency control mechanisms for real-world cloud-based applications. It formulated suitable models for resource utilization, throughput, and makespan, developed methods for optimizing these measures, realized these methods in efficient software, incorporated the software into commonly used open source frameworks, and demonstrated the software in to context of an important application -- manipulation of large graph databases.</p> <p>The project resulted in a number of technical insights: (i) it resulted in methods for scheduling concurrent operations on key-value stores (such as those used in Facebook, for instance) to maximize their performance; (ii) it resulted in runtime systems for scheduling stream processing applications (such as those in Spark) that mitigate the impact of stragglers on overall system efficiency; (iii) it resulted in the development of scheduling techniques and resource managers, capable of opportunistically utilizing applicated-but-unused resources to significantly enhance overall cloud resource utilization; and (iv) in development of a complete graph database system, TruenoDB, which demonstrates various elements of the project in a single important application.</p> <p>The project outcomes have broad and significant impact. Cloud platforms are the dominant cost and energy drivers in current compute deployments. Our work has shown that the resource utilization of current data centers can be improved by over 30% in real-world environments. This is a very significant improvement in terms of energy utilization, cost, and application measures of turn-around time. To this end, the project has direct impact on a large application base. The demonstrator application, TruenoDB graph database, can itself be used in different domains. We have demonstrated its use in systems biology (for modeling biochemical pathways) and path-planning in reaction networks for manufacturing pharmaceutical compounds.</p> <p>Finally, the project directly funded the graduate education of a Hispanic student, and enabled the PI to develop significant online material in Parallel Computing.</p><br> <p>            Last Modified: 12/10/2020<br>      Modified by: Ananth&nbsp;Grama</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ A significant fraction of current high-throughput applications run in cloud environments. Efficient execution of these applications at scale is an important problem, particularly, in dynamic scalable data centers. This project resulted in efficient and effective concurrency control mechanisms for real-world cloud-based applications. It formulated suitable models for resource utilization, throughput, and makespan, developed methods for optimizing these measures, realized these methods in efficient software, incorporated the software into commonly used open source frameworks, and demonstrated the software in to context of an important application -- manipulation of large graph databases.  The project resulted in a number of technical insights: (i) it resulted in methods for scheduling concurrent operations on key-value stores (such as those used in Facebook, for instance) to maximize their performance; (ii) it resulted in runtime systems for scheduling stream processing applications (such as those in Spark) that mitigate the impact of stragglers on overall system efficiency; (iii) it resulted in the development of scheduling techniques and resource managers, capable of opportunistically utilizing applicated-but-unused resources to significantly enhance overall cloud resource utilization; and (iv) in development of a complete graph database system, TruenoDB, which demonstrates various elements of the project in a single important application.  The project outcomes have broad and significant impact. Cloud platforms are the dominant cost and energy drivers in current compute deployments. Our work has shown that the resource utilization of current data centers can be improved by over 30% in real-world environments. This is a very significant improvement in terms of energy utilization, cost, and application measures of turn-around time. To this end, the project has direct impact on a large application base. The demonstrator application, TruenoDB graph database, can itself be used in different domains. We have demonstrated its use in systems biology (for modeling biochemical pathways) and path-planning in reaction networks for manufacturing pharmaceutical compounds.  Finally, the project directly funded the graduate education of a Hispanic student, and enabled the PI to develop significant online material in Parallel Computing.       Last Modified: 12/10/2020       Submitted by: Ananth Grama]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

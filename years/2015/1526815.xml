<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>NSFSaTC-BSF: TWC: Small: Enabling Secure and Private Cloud Computing using Coresets</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2015</AwardEffectiveDate>
<AwardExpirationDate>09/30/2020</AwardExpirationDate>
<AwardTotalIntnAmount>486117.00</AwardTotalIntnAmount>
<AwardAmount>486117</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Wei-Shinn Ku</SignBlockName>
<PO_EMAI>weiku@nsf.gov</PO_EMAI>
<PO_PHON>7032928318</PO_PHON>
</ProgramOfficer>
<AbstractNarration>By collecting sensor data from individuals in a user community, e.g., using their smartphones, it is possible to learn the behavior of communities, for example locations, activities, and events. Similarly, using data from personal health monitoring sensors, it is possible to learn about the health risks and responses to treatments for population groups. But is it possible to use the valuable information for the greater good without disclosing information about the individuals contributing the data? What about protecting this information from improper access? This project uses cloud computing augmented with a combination of data reduction techniques and methods from differential privacy and homomorphic encryption to address such questions. The key ideas are (1) to use coresets as a way of mitigating the computational challenges around the state of the art in differential privacy and homomorphic encryption and to ensure private secure computation on the server side and the client side, and (2) to give the data owners control over setting access to their data as a trade-off between data access control guarantees and computation accuracy.  Combining coresets, differential privacy, and homomorphic encryption has the potential for practical private and secure computation in the cloud.&lt;br/&gt;&lt;br/&gt;This proposal builds on previous results in coresets, private coresets, and their implementations for the cloud.  Coresets are a data reduction technique for computing a function f on a large data set D efficiently by compressing the initial data into a small data set C (possibly on the cloud), and then solving the problem f on the reduced set C (now, possible also at the client). The reduced data set C is chosen so that it is fast to compute f(C) and f(C) ~ f(D). A particular type is coreset is the private coreset, which preserves privacy but must be constructed and sanitized on the client side. On the other hand, fully homomorphic encryption allows encrypted computation on the server side but it is usually impractical. This project develops (i) New private coresets for broad classes of practical problems, with focus on generic frameworks as for non-private coresets; (ii) Novel algorithms and techniques for efficient homomorphic encryption on the cloud using coresets; (iii) Private Encrypted Coresets which are new type of coresets that simultaneously preserve privacy and can be computed securely on the cloud; (iv)  Life-logging systems that implement and combine the above techniques for simultaneous secure and private computation in the cloud, with appropriate benchmarks and real-world testing.</AbstractNarration>
<MinAmdLetterDate>09/16/2015</MinAmdLetterDate>
<MaxAmdLetterDate>09/21/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1526815</AwardID>
<Investigator>
<FirstName>Daniela</FirstName>
<LastName>Rus</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniela Rus</PI_FULL_NAME>
<EmailAddress>rus@csail.mit.edu</EmailAddress>
<PI_PHON>6172587567</PI_PHON>
<NSF_ID>000390393</NSF_ID>
<StartDate>09/16/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName>Cambridge</CityName>
<StateCode>MA</StateCode>
<ZipCode>021394301</ZipCode>
<StreetAddress><![CDATA[77 Massachusetts Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>014Z</Code>
<Text>NSF and US-Israel Binational Science Fou</Text>
</ProgramReference>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~157550</FUND_OBLG>
<FUND_OBLG>2016~328567</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The aim of this project has been to design and implement a system that combines coresets, differential privacy, and homomorphic encryption in order to allow more secure, private, and practical computations of large data in the cloud. Creating private and secure data processing systems for the cloud poses many technical challenges, which our team is addressing by developing: (1) algorithms for coresets; (2) approaches to differential privacy via coresets; (3) algorithms for homomorphic encryption via coresets to enable computationally-tractable solutions to secure computation and (4) systems and applications that use these algorithms. The importance of providing secure and private solutions to cloud data can be seen in the context of sensor networks and other data sources. By collecting data with mobile sensor nodes from individuals in a user community, e.g. using their smartphones, we can learn global information such as track congestion patterns in the city, location of key community facilities, and locations of gathering places. The question that needs to be asked is, can we publish and run queries on such mobile sensor network databases without disclosing information about individual nodes?</p> <p>&nbsp;</p> <p>Our project tackled two aspects of enabling secure and private computations in the cloud: differential privacy (DP) and homomorphic encryption (HE). We built on the theory of coresets to provide practical and implementable solutions.</p> <p>&nbsp;</p> <p>Differential privacy is a strong notion of privacy which addresses exactly this type of questions. It guarantees that very little will be learned about individual records in a database, regardless to what an attacker already knows. Still, there is no practical system applying differential privacy algorithms for clustering points on real databases. Our key contribution for practical DP enabled by coresets has been an algorithm for constructing of small coresets for computing k-means clustering of a set of points while preserving differential privacy. The end result is the first k-means clustering algorithm that is both differentially private and has an approximation error that depends sub-linearly on the dimension d of the data. Previous results introduced errors that are exponential in d. We implemented this algorithm and used it to create differentially private location data from GPS tracks. Specifically, our algorithm allows clustering GPS databases generated from mobile nodes, while letting the user control the introduced noise due to privacy. We provide experimental results for the system and or the algorithms. We also compare them to existing techniques. To the best of our knowledge, this is the first practical system that enables differentially private clustering on real data.</p> <p>&nbsp;</p> <p>Homomorphic Encryption is an encryption scheme that is closed under multiplication and addition. That means that a user can encrypt two values, send their encryption to a server that can then add or multiply those encrypted values. The result of this addition (or multiplication) can then be decrypted by the user to obtain the correct result of the operation. Applying a sequence of additions and multiplications, it is theoretically possible to compute any polynomial and as a result any algorithm with HE. Practically, however, there are very few problems for which a practical solution exists with HE. While in theory any algorithm can be implement with HE, practically there are no practical implementations with HE that are able to handle large amounts of data as in real applications. The challenges and optimization goals when using HE are different than the ones we encounter when we build a solution for general computation model. Since we deal with encrypted numbers we cannot test them and branch upon their values. The gap between theory and practice is still large and needs to be bridged, which is exactly the goals of our research. The downside of using HE is the efficiency of evaluating polynomials. Although generic recipes exist that formulate any algorithm as a polynomial of its input, in practice the polynomials generated by these recipes have poor performance. We contributed several novel approaches to clustering and data classification. A novel coreset-based solution provides a practical HE solution to the 1-means clustering problem. We also developed a new practical approach to the HE k-ish nearest neighbor (k-ish NN) problem that consists of a new algorithm, analyses, and evaluations on a cancer dataset and a cars dataset. The k-ish NN classifier predicts a class of a query, q, by taking the majority class of its k neighbors in an existing (already classified) database, S. In secure k-ish NN, q and S are owned by two different parties and q is classified without sharing data. Our classifier based on k-ish NN is efficient to implement with homomorphic encryption and practical to use.</p><br> <p>            Last Modified: 11/29/2020<br>      Modified by: Daniela&nbsp;Rus</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The aim of this project has been to design and implement a system that combines coresets, differential privacy, and homomorphic encryption in order to allow more secure, private, and practical computations of large data in the cloud. Creating private and secure data processing systems for the cloud poses many technical challenges, which our team is addressing by developing: (1) algorithms for coresets; (2) approaches to differential privacy via coresets; (3) algorithms for homomorphic encryption via coresets to enable computationally-tractable solutions to secure computation and (4) systems and applications that use these algorithms. The importance of providing secure and private solutions to cloud data can be seen in the context of sensor networks and other data sources. By collecting data with mobile sensor nodes from individuals in a user community, e.g. using their smartphones, we can learn global information such as track congestion patterns in the city, location of key community facilities, and locations of gathering places. The question that needs to be asked is, can we publish and run queries on such mobile sensor network databases without disclosing information about individual nodes?     Our project tackled two aspects of enabling secure and private computations in the cloud: differential privacy (DP) and homomorphic encryption (HE). We built on the theory of coresets to provide practical and implementable solutions.     Differential privacy is a strong notion of privacy which addresses exactly this type of questions. It guarantees that very little will be learned about individual records in a database, regardless to what an attacker already knows. Still, there is no practical system applying differential privacy algorithms for clustering points on real databases. Our key contribution for practical DP enabled by coresets has been an algorithm for constructing of small coresets for computing k-means clustering of a set of points while preserving differential privacy. The end result is the first k-means clustering algorithm that is both differentially private and has an approximation error that depends sub-linearly on the dimension d of the data. Previous results introduced errors that are exponential in d. We implemented this algorithm and used it to create differentially private location data from GPS tracks. Specifically, our algorithm allows clustering GPS databases generated from mobile nodes, while letting the user control the introduced noise due to privacy. We provide experimental results for the system and or the algorithms. We also compare them to existing techniques. To the best of our knowledge, this is the first practical system that enables differentially private clustering on real data.     Homomorphic Encryption is an encryption scheme that is closed under multiplication and addition. That means that a user can encrypt two values, send their encryption to a server that can then add or multiply those encrypted values. The result of this addition (or multiplication) can then be decrypted by the user to obtain the correct result of the operation. Applying a sequence of additions and multiplications, it is theoretically possible to compute any polynomial and as a result any algorithm with HE. Practically, however, there are very few problems for which a practical solution exists with HE. While in theory any algorithm can be implement with HE, practically there are no practical implementations with HE that are able to handle large amounts of data as in real applications. The challenges and optimization goals when using HE are different than the ones we encounter when we build a solution for general computation model. Since we deal with encrypted numbers we cannot test them and branch upon their values. The gap between theory and practice is still large and needs to be bridged, which is exactly the goals of our research. The downside of using HE is the efficiency of evaluating polynomials. Although generic recipes exist that formulate any algorithm as a polynomial of its input, in practice the polynomials generated by these recipes have poor performance. We contributed several novel approaches to clustering and data classification. A novel coreset-based solution provides a practical HE solution to the 1-means clustering problem. We also developed a new practical approach to the HE k-ish nearest neighbor (k-ish NN) problem that consists of a new algorithm, analyses, and evaluations on a cancer dataset and a cars dataset. The k-ish NN classifier predicts a class of a query, q, by taking the majority class of its k neighbors in an existing (already classified) database, S. In secure k-ish NN, q and S are owned by two different parties and q is classified without sharing data. Our classifier based on k-ish NN is efficient to implement with homomorphic encryption and practical to use.       Last Modified: 11/29/2020       Submitted by: Daniela Rus]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

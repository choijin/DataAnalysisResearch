<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TWC: Small: Collaborative: Practical Security Protocols via Advanced Data Structures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2015</AwardEffectiveDate>
<AwardExpirationDate>08/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>166638.00</AwardTotalIntnAmount>
<AwardAmount>166638</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Shannon Beck</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Data structures have a prominent modern computational role, due to their wide applicability, such as in database querying, web searching, and social network analysis. This project focuses on the interplay of data structures with security protocols, examining two different paradigms: the security for data structures paradigm (SD) and the data structures for security paradigm (DS). The objectives of this project are, in the SD paradigm, to provide security and privacy both for data elements in data sets and also for the inter-relationships and distributions between such data elements, such as links between nodes in a social network, and, in the DS paradigm, to develop new data structures to improve the efficiency of algorithms for security and/or privacy applications.&lt;br/&gt; &lt;br/&gt;The project explores methods for achieving these objectives include algorithm design, theoretical analysis, rigorous proofs of security and correctness, and experimental validation of claims of practicality. This research focuses on the security and cybersecurity uses of three advanced data structures: tree structures, invertible Bloom filters and cascading tables. The project advances knowledge on (a) authenticated data structures and verifiable query execution within the SD paradigm, and (b) secure deduplication, searchable encryption, and privacy-preserving memory allocators within the DS paradigm.</AbstractNarration>
<MinAmdLetterDate>09/16/2015</MinAmdLetterDate>
<MaxAmdLetterDate>07/18/2016</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1526631</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Goodrich</LastName>
<PI_MID_INIT>T</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael T Goodrich</PI_FULL_NAME>
<EmailAddress>goodrich@acm.org</EmailAddress>
<PI_PHON>9498249366</PI_PHON>
<NSF_ID>000326182</NSF_ID>
<StartDate>09/16/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Irvine</Name>
<CityName>Irvine</CityName>
<ZipCode>926977600</ZipCode>
<PhoneNumber>9498247295</PhoneNumber>
<StreetAddress>160 Aldrich Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>45</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA45</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>046705849</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, IRVINE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Univ. of California]]></Name>
<CityName>Irvine</CityName>
<StateCode>CA</StateCode>
<ZipCode>926973425</ZipCode>
<StreetAddress><![CDATA[Dept. of Computer Science]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>45</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA45</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2015~83598</FUND_OBLG>
<FUND_OBLG>2016~83040</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project was directed at developing practical security protocols with advanced data structures, looking both at security for data structures and data structures for security. In the paradigms developed, the project aims included providing security and privacy both for the elements of a data set and for their distribution and relationships. In addition, another project aim was developing new data structures to improve the efficiency of algorithms for security and privacy applications.</p> <p>Intellectual Merit.</p> <p>One of the main themes of the project was exploring history-independence for data structures, which guarantee that if a data structure is ever observed, only its current contents are revealed, not the history of operations that built it. This project introduced efficient methods for achieving history independence for several different types of data structures, including hash tables.</p> <p>The project also introduced auditable data structures, where an auditor can observe data structures at arbitrary times, but while relaxing the unrealistic restriction that data structures cannot react to observations, since in most applications of history-independence, data owners know when observations have occurred. Given this conceptual relaxation, the investigators showed how to design data structures that have better performance than previous history-independent solutions. The framework developed considered two audit scenarios--secure topology, where an auditor can observe the contents and pointers of a data structure, and secure implementation, where an auditor can observe the memory layout of a data structure. The funded research resulted in a generic template for auditable data structures and, as a foundation for any auditable data structure, an Auditable Memory Manager, which is an efficient memory manager that translates any auditable data structure with a secure topology into one with a secure implementation. Thus, auditable data structures provide a practical way of achieving time efficiency, while allowing for multiple audits.</p> <p>The project results were disseminated in several peer-reviewed publications.</p> <p>Broader Impacts.</p> <p>The powerful concept of history-independence has applications, for example, to e-voting and data retention compliance, where data structure histories should be private. For instance, in e-voting applications it is important that all votes are tallied at the end of the vote, but it should not be possible to match the votes with the order of how the voters voted. History independent data structures provide such guarantees.</p> <p>The project also involved the development of human resources in the form of undergraduate and graduate student collaborators, including members of under-represented groups in computer science.</p> <p>&nbsp;</p><br> <p>            Last Modified: 02/24/2019<br>      Modified by: Michael&nbsp;T&nbsp;Goodrich</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project was directed at developing practical security protocols with advanced data structures, looking both at security for data structures and data structures for security. In the paradigms developed, the project aims included providing security and privacy both for the elements of a data set and for their distribution and relationships. In addition, another project aim was developing new data structures to improve the efficiency of algorithms for security and privacy applications.  Intellectual Merit.  One of the main themes of the project was exploring history-independence for data structures, which guarantee that if a data structure is ever observed, only its current contents are revealed, not the history of operations that built it. This project introduced efficient methods for achieving history independence for several different types of data structures, including hash tables.  The project also introduced auditable data structures, where an auditor can observe data structures at arbitrary times, but while relaxing the unrealistic restriction that data structures cannot react to observations, since in most applications of history-independence, data owners know when observations have occurred. Given this conceptual relaxation, the investigators showed how to design data structures that have better performance than previous history-independent solutions. The framework developed considered two audit scenarios--secure topology, where an auditor can observe the contents and pointers of a data structure, and secure implementation, where an auditor can observe the memory layout of a data structure. The funded research resulted in a generic template for auditable data structures and, as a foundation for any auditable data structure, an Auditable Memory Manager, which is an efficient memory manager that translates any auditable data structure with a secure topology into one with a secure implementation. Thus, auditable data structures provide a practical way of achieving time efficiency, while allowing for multiple audits.  The project results were disseminated in several peer-reviewed publications.  Broader Impacts.  The powerful concept of history-independence has applications, for example, to e-voting and data retention compliance, where data structure histories should be private. For instance, in e-voting applications it is important that all votes are tallied at the end of the vote, but it should not be possible to match the votes with the order of how the voters voted. History independent data structures provide such guarantees.  The project also involved the development of human resources in the form of undergraduate and graduate student collaborators, including members of under-represented groups in computer science.          Last Modified: 02/24/2019       Submitted by: Michael T Goodrich]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

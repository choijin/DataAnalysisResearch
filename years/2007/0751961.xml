<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR-AES-RCS: Scalable and Efficient Dynamic Information Flow Tracking in Multithreaded Programs</AwardTitle>
<AwardEffectiveDate>09/01/2007</AwardEffectiveDate>
<AwardExpirationDate>08/31/2010</AwardExpirationDate>
<AwardAmount>180000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Mohamed G. Gouda</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This project is aimed at developing scalable as well as highly efficient techniques for performing Dynamic Information Flow Tracking (DIFT) in multithreaded programs.&lt;br/&gt;The approach being developed is based upon dynamic instrumention of binaries to perform information flow tracking so that the application source code is not required and applications involving dynamically generated code can be handled. For achieving scalability, a novel strategy based upon the integration of checkpointing logging with fine-grained tracing is being used. Initially the program is executed with logging turned on. When DIFT needs to be performed, the execution of relevant execution intervals is replayed and fine-grained tracing is selectively performed.&lt;br/&gt;For achieving further efficiency, idle cores on a multicore processor are being used.&lt;br/&gt;Dynamically, a monitoring thread is generated by analyzing the application binary and the monitoring thread and the application execute concurrently on different cores.&lt;br/&gt;By achieving scalability and efficiency, the developed techniques can be applied to realistic programs such as server programs. The DIFT techniques are being evaluated in context of following applications: (debugging) bug location and avoidance; (security) software attack detection and location of vulnerability; and (data validation) maintaining lineage of scientific data.</AbstractNarration>
<MinAmdLetterDate>10/10/2007</MinAmdLetterDate>
<MaxAmdLetterDate>10/10/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0751961</AwardID>
<Investigator>
<FirstName>Rajiv</FirstName>
<LastName>Gupta</LastName>
<EmailAddress>gupta@cs.ucr.edu</EmailAddress>
<StartDate>10/10/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Riverside</Name>
<CityName>RIVERSIDE</CityName>
<ZipCode>925210217</ZipCode>
<PhoneNumber>9518275535</PhoneNumber>
<StreetAddress>Research &amp; Economic Development</StreetAddress>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
</Institution>
<ProgramElement>
<Code>7354</Code>
<Text>Computer Systems Research (CSR</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

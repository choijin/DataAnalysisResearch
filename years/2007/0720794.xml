<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: EHS: Assurance-Based Development of Critical Embedded Systems</AwardTitle>
<AwardEffectiveDate>09/01/2007</AwardEffectiveDate>
<AwardExpirationDate>08/31/2008</AwardExpirationDate>
<AwardAmount>65000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Critical systems should be built in a manner that makes them not only adequately dependable, but demonstrably adequately dependable. An assurance case is an argument that demonstrates how the specific evidence resulting from system development efforts (test results, results of static analysis, etc.) combine to support the conclusion that the system is adequately dependable. The assurance case moreover documents the rationale used to draw conclusions about each piece of evidence. In the event of a failure that is not a random event, this record can be examined to discover the faulty reasoning that led to the release of the flawed system, thus helping developers to redress the system?s flaws and to avoid making similar mistakes in future development efforts. &lt;br/&gt;&lt;br/&gt;This research is developing methods for Assurance Based Development that couples the development of the system with the development of its assurance case so that explicit criteria for the dependability impact of each development decision are available at the time the decision is made. The need for assurance of dependability drives system development, leading developers to make choices that give rise to both the needed dependability and evidence of that dependability. The explicit evaluation of dependability throughout the development process also facilitates detection and avoidance of potential assurance difficulties as they arise, rather than after development is complete?when they are much harder to address.  Furthermore, knowing the assurance obligation incident on each part of the system will give developers the flexibility to deploy expensive technology, such as formal verification, only on components whose assurance needs demand it.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/06/2007</MinAmdLetterDate>
<MaxAmdLetterDate>09/06/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0720794</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Knight</LastName>
<EmailAddress>knight@cs.virginia.edu</EmailAddress>
<StartDate>09/06/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Houston</FirstName>
<LastName>Wood</LastName>
<EmailAddress>hgw9p@virginia.edu</EmailAddress>
<StartDate>09/06/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Virginia Main Campus</Name>
<CityName>CHARLOTTESVILLE</CityName>
<ZipCode>229044195</ZipCode>
<PhoneNumber>4349244270</PhoneNumber>
<StreetAddress>P.O.  BOX 400195</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>Computer Systems Research (CSR</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:    Foundational Theories and Enforcement Tools for Secure Software Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2008</AwardEffectiveDate>
<AwardExpirationDate>01/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>331097.00</AwardTotalIntnAmount>
<AwardAmount>420771</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>This project addresses the problem that, to be trustworthy yet practical, mechanisms for enforcing software security must (1) undergo rigorous analysis that provides formal security guarantees and (2) be developed quickly.  The project addresses this problem by creating (1) formal, foundational theories of software security and (2) convenient tools for quickly generating provably sound enforcement mechanisms. The foundational theories consist of formal definitions and rules for precisely specifying and reasoning about general security principles: threats, policies, mechanisms, and the means by which mechanisms enforce policies to prevent attacks. These theories aim to enable researchers and developers to analyze real mechanisms precisely and to prove which attacks those mechanisms can and cannot prevent in practice.  The enforcement tools consist of technologies for converting expressive specifications of policies to be enforced into concrete mechanisms guaranteed to enforce those policies. These tools aim to enable researchers and developers to quickly and conveniently define, concretize, and deploy new security mechanisms.  The enforcement tools and foundational theories are connected in that the theories provide models in which to establish the trustworthiness of tool-generated mechanisms.  Taken together, these research tasks for creating and connecting theories and tools enable rapid development and deployment of trustworthy enforcement mechanisms for secure software systems.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/24/2008</MinAmdLetterDate>
<MaxAmdLetterDate>12/16/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0742736</AwardID>
<Investigator>
<FirstName>Jay</FirstName>
<LastName>Ligatti</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jay Ligatti</PI_FULL_NAME>
<EmailAddress>ligatti@cse.usf.edu</EmailAddress>
<PI_PHON>8139740908</PI_PHON>
<NSF_ID>000242597</NSF_ID>
<StartDate>01/24/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of South Florida</Name>
<CityName>Tampa</CityName>
<ZipCode>336172008</ZipCode>
<PhoneNumber>8139742897</PhoneNumber>
<StreetAddress>4019 E. Fowler Avenue</StreetAddress>
<StreetAddress2><![CDATA[Suite 100]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<StateCode>FL</StateCode>
<CONGRESSDISTRICT>14</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>FL14</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>069687242</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF SOUTH FLORIDA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>069687242</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of South Florida]]></Name>
<CityName>Tampa</CityName>
<StateCode>FL</StateCode>
<ZipCode>336172008</ZipCode>
<StreetAddress><![CDATA[4019 E. Fowler Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>14</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>FL14</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~81695</FUND_OBLG>
<FUND_OBLG>2009~161244</FUND_OBLG>
<FUND_OBLG>2010~8000</FUND_OBLG>
<FUND_OBLG>2011~83813</FUND_OBLG>
<FUND_OBLG>2012~86019</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project aimed to improve the security of software. &nbsp;We used two approaches. &nbsp;The first approach involved modeling and analyzing attacks and how mechanisms can prevent those attacks. &nbsp;The second approach involved educating students to understand how their software can be attacked and how to make their software more secure.</p> <p>The research outcomes have included new systems for preventing computer attacks:</p> <ul> <li>We have uncovered new ways for attackers to steal or delete information from databases, like credit cards or medical records, using ordinary web browsers. &nbsp;We have also created and published mechanisms for preventing these new attacks. &nbsp;</li> <li>We have modeled certain kinds of security mechanisms, like anti-virus software, that work by monitoring other programs. &nbsp;We have proved fundamental limits to how helpful such security mechanisms can be. &nbsp;For example, software monitors can never fully prevent certain kinds of denial-of-service attacks.</li> <li><span>We have created and tested several systems for enforcing customizable policies. &nbsp;With these systems, users can customize the security and privacy constraints they want to impose on software. &nbsp;For example, users may want to enforce very strict privacy policies when they're off duty, but still allow their employers to track and monitor their work activities when they're on duty. &nbsp;We have implemented many systems to help users create and customize these sorts of policies. &nbsp;All of our implementations can be downloaded <span>online</span> for free.</span></li> </ul> <p>The educational outcomes have included security training for many students:</p> <ul> <li>An estimated 140 students have enrolled in a new course developed for this project. &nbsp;The course, being offered at the University of South Florida, is called "Foundations of Software Security". &nbsp;The course covers all the basics of how software can be attacked and defended. &nbsp;Many of the course's alumni have gone on to work at contractors for the US Department of Defense, or to work as security engineers at commercial software vendors.</li> <li>This project has directly funded at least 9 students, all of whom received one-on-one, hands-on training in software security. &nbsp;After graduation, these students have accepted jobs at companies like American Express (helping to secure mobile-payment systems), Epic Systems (helping to secure medical records), and Mozilla (helping to secure web browsers).</li> <li>Because this project is a CAREER award, the funding also played a major role in establishing the Principal Investigator as a long-term faculty member. &nbsp;The project's funding has thus enabled the Principal Investigator to train many additional students---students who have not been funded directly by the project but who have nonetheless received one-on-one, hands-on training with the Principal Investigator. &nbsp;Since 2007, the Principal Investigator has supervised and trained a total of 80 independent-study and thesis students. &nbsp;These 80 students have received valuable training by completing hands-on projects in the areas of programming languages and software security.</li> </ul> <p>By improving our understanding of attacks and how to prevent attacks, and by teaching that understanding to the next generation of programmers and system engineers, this project has helped to improve the security of software.</p> <p>&nbsp;</p><br> <p>            Last Modified: 02/02/2014<br>      Modified by: Jarred&nbsp;Ligatti</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project aimed to improve the security of software.  We used two approaches.  The first approach involved modeling and analyzing attacks and how mechanisms can prevent those attacks.  The second approach involved educating students to understand how their software can be attacked and how to make their software more secure.  The research outcomes have included new systems for preventing computer attacks:  We have uncovered new ways for attackers to steal or delete information from databases, like credit cards or medical records, using ordinary web browsers.  We have also created and published mechanisms for preventing these new attacks.   We have modeled certain kinds of security mechanisms, like anti-virus software, that work by monitoring other programs.  We have proved fundamental limits to how helpful such security mechanisms can be.  For example, software monitors can never fully prevent certain kinds of denial-of-service attacks. We have created and tested several systems for enforcing customizable policies.  With these systems, users can customize the security and privacy constraints they want to impose on software.  For example, users may want to enforce very strict privacy policies when they're off duty, but still allow their employers to track and monitor their work activities when they're on duty.  We have implemented many systems to help users create and customize these sorts of policies.  All of our implementations can be downloaded online for free.   The educational outcomes have included security training for many students:  An estimated 140 students have enrolled in a new course developed for this project.  The course, being offered at the University of South Florida, is called "Foundations of Software Security".  The course covers all the basics of how software can be attacked and defended.  Many of the course's alumni have gone on to work at contractors for the US Department of Defense, or to work as security engineers at commercial software vendors. This project has directly funded at least 9 students, all of whom received one-on-one, hands-on training in software security.  After graduation, these students have accepted jobs at companies like American Express (helping to secure mobile-payment systems), Epic Systems (helping to secure medical records), and Mozilla (helping to secure web browsers). Because this project is a CAREER award, the funding also played a major role in establishing the Principal Investigator as a long-term faculty member.  The project's funding has thus enabled the Principal Investigator to train many additional students---students who have not been funded directly by the project but who have nonetheless received one-on-one, hands-on training with the Principal Investigator.  Since 2007, the Principal Investigator has supervised and trained a total of 80 independent-study and thesis students.  These 80 students have received valuable training by completing hands-on projects in the areas of programming languages and software security.   By improving our understanding of attacks and how to prevent attacks, and by teaching that understanding to the next generation of programmers and system engineers, this project has helped to improve the security of software.          Last Modified: 02/02/2014       Submitted by: Jarred Ligatti]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

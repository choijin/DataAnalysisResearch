<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:   Advanced Data Structures for Shortest Paths, Routing, and Self-Adjusting Computation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2008</AwardEffectiveDate>
<AwardExpirationDate>07/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>480000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The field of data structures concerns the mathematical problems of efficiently representing, manipulating, and answering queries about a typically long-lived corpus of data.  For decades data structures have been used to facilitate everything from mundane bookkeeping tasks to important high-level applications such as analyzing biological data, web search, and routing in networks.  The goals of this research program are (1) to design and understand the limits of data structures that represent various types of metric spaces, and (2) to analyze and understand self-adjusting (aka self-organizing) data structures.  A metric is an object that abstracts the intuitive notions of space and distance; examples include geodesic distance on a globe, evolutionary distance between species, and the distance between DNA sequences.  Perhaps the most important class of metrics today are those that correspond to distance (or latency or monetary cost) in networks, such as computer networks, road networks, or social networks.  All networks with some physical basis in reality are prone to congestion and spontaneous failure, whether due to benign causes or coordinated sabotage.  Examples include malfunctioning network routers, blockage on road networks, and collapsing bridges.  One aim of this research is to design versatile metric data structures that are capable of answering distance, shortest path, and reachability queries in the presence of fluctuations in congestion, topology, and other features.&lt;br/&gt;&lt;br/&gt;Broadly speaking, a self-adjusting data structure is one that automatically reorganizes its internal state in response to the environment in order to optimize its performance.  The PIs research goals are to settle some decades-old conjectures regarding the optimality of self-adjusting data structures and to apply the self-adjusting design philosophy more widely.&lt;br/&gt;&lt;br/&gt;The PI plans to improve the way data structures are taught at the University of Michigan and to develop curricular materials for undergraduate and graduate courses in the design and analysis of data structures.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/21/2008</MinAmdLetterDate>
<MaxAmdLetterDate>07/10/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0746673</AwardID>
<Investigator>
<FirstName>Seth</FirstName>
<LastName>Pettie</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Seth Pettie</PI_FULL_NAME>
<EmailAddress>pettie@umich.edu</EmailAddress>
<PI_PHON>7347641817</PI_PHON>
<NSF_ID>000477111</NSF_ID>
<StartDate>07/21/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Regents of the University of Michigan - Ann Arbor</Name>
<CityName>Ann Arbor</CityName>
<ZipCode>481091274</ZipCode>
<PhoneNumber>7347636438</PhoneNumber>
<StreetAddress>3003 South State St. Room 1062</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>073133571</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF MICHIGAN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>073133571</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Regents of the University of Michigan - Ann Arbor]]></Name>
<CityName>Ann Arbor</CityName>
<StateCode>MI</StateCode>
<ZipCode>481091274</ZipCode>
<StreetAddress><![CDATA[3003 South State St. Room 1062]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~80000</FUND_OBLG>
<FUND_OBLG>2009~240000</FUND_OBLG>
<FUND_OBLG>2011~80000</FUND_OBLG>
<FUND_OBLG>2012~80000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p class="Default">The focus of this project was broadly on the design and analysis of algorithms, with a focus on two specific areas: efficient algorithms for shortest paths, connectivity, and other optimization problems, and the analysis of "self-adjusting" data structures.</p> <p class="Default">We developed new data structures for answering queries about distances and connectivity in dynamic graphs, where nodes and links in a fixed underlying graph fail and recover dynamically.&nbsp; Data structures of this type can be applied to networks prone to transient failures.&nbsp; In many applications the most constrained resource is not time but storage space.&nbsp; We proved that large, dense graphs can be represented by small, sparse spanners that preserve distances in the original graph up to some stretch, sometimes a small additive stretch.&nbsp; Tolerating approximation, in other words, allows us to obtain substantial savings in storage space. &nbsp;In a different context we proved that a slightly suboptimal maximum weight matching can be computed significantly faster than an optimal solution.&nbsp; Specifically, a matching whose weight is within, say, 0.1% of maximum can be found in optimal linear time. &nbsp;Our approach also led to small improvements to the state-of-the-art in exact maximum weight matching.&nbsp; We designed faster algorithms for matrix multiplication over certain algebraic structures, which led to improved algorithms for computing bottleneck paths.</p> <p class="Default">Data structures are normally analyzed in a direct fashion.&nbsp; We developed a new, indirect method to analyze self-adjusting data structures via results from extremal combinatorics, particularly those bounding the density of 0-1 matrices avoiding certain 0-1 patterns and on the length of generalized Davenport-Schinzel sequences.&nbsp; We proved sharp bounds on the length of Davenport-Schinzel sequences, which are applied to numerous problems in computational geometry.</p> <p class="Default">We designed new graph algorithms in the distributed network model of computation, where computers are arranged in an arbitrary, unknown network topology.&nbsp; We proved that certain spanners and other sparse subgraphs can be computed efficiently, and gave improved algorithms for common symmetry-breaking primitives such as computing maximal matching, vertex coloring, and maximal independent set.</p> <p class="Default">This grant supported&nbsp; one postdoctoral researcher, one PhD student through graduation, and one PhD student in progress.&nbsp; They have taken a tenure-track position at Drexel University and a postdoctoral position at the Max Planck Institute for Computer Science.</p> <p>&nbsp;</p><br> <p>            Last Modified: 10/28/2013<br>      Modified by: Seth&nbsp;Pettie</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[The focus of this project was broadly on the design and analysis of algorithms, with a focus on two specific areas: efficient algorithms for shortest paths, connectivity, and other optimization problems, and the analysis of "self-adjusting" data structures. We developed new data structures for answering queries about distances and connectivity in dynamic graphs, where nodes and links in a fixed underlying graph fail and recover dynamically.  Data structures of this type can be applied to networks prone to transient failures.  In many applications the most constrained resource is not time but storage space.  We proved that large, dense graphs can be represented by small, sparse spanners that preserve distances in the original graph up to some stretch, sometimes a small additive stretch.  Tolerating approximation, in other words, allows us to obtain substantial savings in storage space.  In a different context we proved that a slightly suboptimal maximum weight matching can be computed significantly faster than an optimal solution.  Specifically, a matching whose weight is within, say, 0.1% of maximum can be found in optimal linear time.  Our approach also led to small improvements to the state-of-the-art in exact maximum weight matching.  We designed faster algorithms for matrix multiplication over certain algebraic structures, which led to improved algorithms for computing bottleneck paths. Data structures are normally analyzed in a direct fashion.  We developed a new, indirect method to analyze self-adjusting data structures via results from extremal combinatorics, particularly those bounding the density of 0-1 matrices avoiding certain 0-1 patterns and on the length of generalized Davenport-Schinzel sequences.  We proved sharp bounds on the length of Davenport-Schinzel sequences, which are applied to numerous problems in computational geometry. We designed new graph algorithms in the distributed network model of computation, where computers are arranged in an arbitrary, unknown network topology.  We proved that certain spanners and other sparse subgraphs can be computed efficiently, and gave improved algorithms for common symmetry-breaking primitives such as computing maximal matching, vertex coloring, and maximal independent set. This grant supported  one postdoctoral researcher, one PhD student through graduation, and one PhD student in progress.  They have taken a tenure-track position at Drexel University and a postdoctoral position at the Max Planck Institute for Computer Science.          Last Modified: 10/28/2013       Submitted by: Seth Pettie]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRI:   CRD - Enabling Research on Architecturally Diverse Computers</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/15/2008</AwardEffectiveDate>
<AwardExpirationDate>02/29/2012</AwardExpirationDate>
<AwardTotalIntnAmount>305000.00</AwardTotalIntnAmount>
<AwardAmount>338000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Architecturally diverse computers are those in which a variety of distinct computing engines are mutually present in a system.  Examples include chip multiprocessors, reconfigurable logic, and graphics engines.  While constructing systems of this type is straightforward, actually using the capabilities of the diverse architectural components to effectively deploy an interesting application is quite difficult.&lt;br/&gt;&lt;br/&gt;Each of the different computing engines has its own architecture, memory subsystem, language for authoring applications, performance capabilities and limitations, algorithmic strengths and weaknesses, and communities of proponents and detractors.  Coordinating a single application across all of this diversity is a daunting task.&lt;br/&gt;&lt;br/&gt;Auto-Pipe is an application development environment that is designed to support the exploitation of a wide variety of computing engines in the execution of real-world applications.  Auto-Pipe includes a coordination language, compiler, simulator, deployment tool, and performance monitor. &lt;br/&gt;  Application authors compose algorithm kernels into streaming applications and the development environment eases the tasks of specifying the required data communications, debugging the composed application, mapping the kernels to computational resources, understanding the performance implications of the mapping decisions, and deploying the resulting application on the architecturally diverse computer system.  Auto-Pipe is being developed as a community resource to enable the middleware and computational science communities to effectively use architecturally diverse computers.</AbstractNarration>
<MinAmdLetterDate>03/12/2008</MinAmdLetterDate>
<MaxAmdLetterDate>03/28/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0751212</AwardID>
<Investigator>
<FirstName>Mark</FirstName>
<LastName>Franklin</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mark A Franklin</PI_FULL_NAME>
<EmailAddress>jbf@cse.wustl.edu</EmailAddress>
<PI_PHON>3149356107</PI_PHON>
<NSF_ID>000165370</NSF_ID>
<StartDate>03/12/2008</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Roger</FirstName>
<LastName>Chamberlain</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Roger D Chamberlain</PI_FULL_NAME>
<EmailAddress>roger@wustl.edu</EmailAddress>
<PI_PHON>3149355708</PI_PHON>
<NSF_ID>000362967</NSF_ID>
<StartDate>03/12/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ron</FirstName>
<LastName>Cytron</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ron K Cytron</PI_FULL_NAME>
<EmailAddress>cytron@cs.wustl.edu</EmailAddress>
<PI_PHON>3149357527</PI_PHON>
<NSF_ID>000374266</NSF_ID>
<StartDate>03/12/2008</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Washington University</Name>
<CityName>Saint Louis</CityName>
<ZipCode>631304862</ZipCode>
<PhoneNumber>3147474134</PhoneNumber>
<StreetAddress>CAMPUS BOX 1054</StreetAddress>
<StreetAddress2><![CDATA[1 Brookings Drive]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Missouri</StateName>
<StateCode>MO</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MO01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>068552207</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WASHINGTON UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>068552207</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Washington University]]></Name>
<CityName>Saint Louis</CityName>
<StateCode>MO</StateCode>
<ZipCode>631304862</ZipCode>
<StreetAddress><![CDATA[CAMPUS BOX 1054]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Missouri</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MO01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7359</Code>
<Text>CCRI-CISE Cmnty Rsrch Infrstrc</Text>
</ProgramElement>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~73000</FUND_OBLG>
<FUND_OBLG>2009~168000</FUND_OBLG>
<FUND_OBLG>2011~97000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Architecturally diverse computers are those in which a variety of distinct computing engines are present and can operate cooperatively in a system. &nbsp;Examples include chip multiprocessors, reconfigurable logic, and graphics engines. &nbsp;Auto-Pipe is an application development environment that is designed to support the exploitation of a wide variety of computing engines in the execution of real-world applications. &nbsp;Auto-Pipe is being developed as a community resource to enable the computational science community to effectively use architecturally diverse systems.</p> <p>During the period of the grant, we have accomplished a number of goals. &nbsp;First, we have applied the Auto-Pipe application development environment to the design and implementation of a large, real-world application, the input data processing for a high-energy gamma ray telescope. &nbsp;Second, we have completed our first design of an application that includes graphics engines as one of the computational resources, a Monte Carlo simulation of value at risk for computational finance. &nbsp;We believe this to be a world's first, an application that effectively exploits all three computational resources: multicore processors, reconfigurable logic, and a graphics engine. &nbsp;Third, we have commenced the development of a block library to promote code reuse in the Auto-Pipe environment. &nbsp;Fourth, we have constructed a low-impact performance monitor that measures streaming application performance in reconfigurable logic. &nbsp;Fifth, we have shown necessary and sufficient conditions for deadlock to occur in filtering applications and have proposed three provably correct algorithms for deadlock avoidance. &nbsp;Sixth, we have developed an analytic performance model that describes computation kernels on graphics engines when they are memory bound.</p><br> <p>            Last Modified: 05/14/2012<br>      Modified by: Roger&nbsp;D&nbsp;Chamberlain</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Architecturally diverse computers are those in which a variety of distinct computing engines are present and can operate cooperatively in a system.  Examples include chip multiprocessors, reconfigurable logic, and graphics engines.  Auto-Pipe is an application development environment that is designed to support the exploitation of a wide variety of computing engines in the execution of real-world applications.  Auto-Pipe is being developed as a community resource to enable the computational science community to effectively use architecturally diverse systems.  During the period of the grant, we have accomplished a number of goals.  First, we have applied the Auto-Pipe application development environment to the design and implementation of a large, real-world application, the input data processing for a high-energy gamma ray telescope.  Second, we have completed our first design of an application that includes graphics engines as one of the computational resources, a Monte Carlo simulation of value at risk for computational finance.  We believe this to be a world's first, an application that effectively exploits all three computational resources: multicore processors, reconfigurable logic, and a graphics engine.  Third, we have commenced the development of a block library to promote code reuse in the Auto-Pipe environment.  Fourth, we have constructed a low-impact performance monitor that measures streaming application performance in reconfigurable logic.  Fifth, we have shown necessary and sufficient conditions for deadlock to occur in filtering applications and have proposed three provably correct algorithms for deadlock avoidance.  Sixth, we have developed an analytic performance model that describes computation kernels on graphics engines when they are memory bound.       Last Modified: 05/14/2012       Submitted by: Roger D Chamberlain]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

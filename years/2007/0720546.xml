<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR---EHS: Component-Based Hardware/Software Co-Verification of Embedded Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2007</AwardEffectiveDate>
<AwardExpirationDate>09/30/2012</AwardExpirationDate>
<AwardTotalIntnAmount>190000.00</AwardTotalIntnAmount>
<AwardAmount>234000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Building power-efficient and high-performance embedded systems demands hardware/software (HW/SW) co-design and, therefore, co-verification. The growing complexity of embedded systems generates an acute need for scalable co-verification. The central objective of this project is to develop a unified approach to component-based HW/SW co-verification of embedded systems, which effectively integrates model checking into component-based development of embedded systems and leverages component-based system architectures for scalable co-verification. The core of this approach is the synergistic integration of three innovative concepts: (1) a unified property specification language that supports uniform and coherent property specification for hardware and software, thus enabling compositional reasoning across the HW/SW semantic boundary; (2) a unified component model that provides a uniform representation for hardware and software components, thus enabling component-based abstraction and refinement; and (3) a platform concept that captures domain-specific knowledge, in particular, architectural patterns, which provides support for automatic formulation and decomposition of system and component properties. This integration has potential for substantially advancing the state of the art in scalable co-verification of embedded systems based on effective leverage of component-based architectures and systematic reuse of verification effort. This project has broad impact through two separate venues: (1) technology transfer to industrial partners and (2) dissemination through course delivery to undergraduate and graduate students. In addition to traditional outreach efforts to recruit minorities and women through lectures and science fairs, opportunities for internships are provided to students participating in this project.</AbstractNarration>
<MinAmdLetterDate>07/23/2007</MinAmdLetterDate>
<MaxAmdLetterDate>03/21/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0720546</AwardID>
<Investigator>
<FirstName>Fei</FirstName>
<LastName>Xie</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Fei Xie</PI_FULL_NAME>
<EmailAddress>xie@cs.pdx.edu</EmailAddress>
<PI_PHON>5037252403</PI_PHON>
<NSF_ID>000492528</NSF_ID>
<StartDate>07/23/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Portland State University</Name>
<CityName>Portland</CityName>
<ZipCode>972070751</ZipCode>
<PhoneNumber>5037259900</PhoneNumber>
<StreetAddress>1600 SW 4th Ave</StreetAddress>
<StreetAddress2><![CDATA[Attn: Sponsored Projects Admin]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Oregon</StateName>
<StateCode>OR</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OR03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052226800</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PORTLAND STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052226800</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Portland State University]]></Name>
<CityName>Portland</CityName>
<StateCode>OR</StateCode>
<ZipCode>972070751</ZipCode>
<StreetAddress><![CDATA[1600 SW 4th Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Oregon</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OR03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~60000</FUND_OBLG>
<FUND_OBLG>2008~72000</FUND_OBLG>
<FUND_OBLG>2009~86000</FUND_OBLG>
<FUND_OBLG>2010~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span style="text-decoration: underline;"><strong>Project Motivations</strong></span></p> <p>Embedded systems are becoming pervasive in the infrastructure of our society from the national transportation systems to small appliances at home. Therefore, they must be high-confidence. To achieve high-confidence, system-level properties concerning both hardware and software must be verified. This demands hardware/software co-verification. As embedded systems become more complex, co-verification must be scalable. Exploiting component-based system architectures is crucial to scalable co-verification.</p> <p>&nbsp;</p> <p><span style="text-decoration: underline;"><strong>Our Approach</strong></span></p> <p>We have developed a comprehensive approach to component-based hardware/software co-verification. This approach has three closely integrated elements: (1) Unified Component Model for Embedded Systems; (2) Unified Property Specification for Hardware and Software; (3) Component-Based Abstraction and Refinement. We have been pursuing these three elements simultaneously and developing tool supports for them. The tool supports are integrated in a toolkit named Embedded System Integration Development Environment (ESIDE). We&nbsp; have utilized the preliminary version of ESIDE in teaching two graduate-level classes. Several student groups have used ESIDE to co-design and co-verify families of embedded systems.</p> <p><br /><span style="text-decoration: underline;"><strong>Intellectual Merits</strong></span></p> <p><strong>Findings.</strong> We have found that the unified component model provides a uniform view of hardware and software components of embedded systems and fills the hardware/software semantics gap. The unified property specification enables specification of system-level properties that are across hardware/software boundaries. The component-based abstraction can be constructed efficiently from component properties that are specified in the unified language.</p> <p><strong>Contributions.</strong> Our research on the unified component model for embedded system has provided a balanced view of hardware, software, and their interfaces. Instead of being treated separately, they are treated uniformly as components of embedded systems. Such a uniform view is critical to co-design, co-verification, co-simulation, and system synthesis. The unified property specification promotes verification reuse and simplifies component-based abstraction. Component-based abstraction has great potential in scaling co-verification. The way how the various techniques interact with each other to support to co-development of hardware and software embedded systems can be utilized in development of other systems such as cyber-physical systems.</p> <p><strong>Products. </strong></p> <ul> <li> VisualEADL is an Eclipse plugin, which can be utilized to develop architectural descriptions of embedded systems. It supports all the language features of Embedded Architecture Description Language (EADL) which we have developed in our<br />research. The VisualEADL plugin can be downloaded at <a href="http://web.cecs.pdx.edu/~xie/co-ver/co-ver-home.htm">http://web.cecs.pdx.edu/~xie/co-ver/co-ver-home.htm</a></li> <li>Embedded System Integrated Development Environment (ESIDE) is a tool suite that supports component-based<br />hardware/software co-design, co-simulation, co-verification, and co-synthesis of embedded systems. ESIDE installation package is currently available upon request. We are making it available for use through our virtual laboratory. </li> <li>Physical Artifact Virtual Experience (PAVE) - PAVE is a virtual laboratory system that provides users virtual experiences of remotely residing physical artifacts, which are close to experiences through directly accessing these artifacts. PAVE has been deployed in PSU and is being used in teaching embedded systems and cyber-physical systems related courses ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Project Motivations  Embedded systems are becoming pervasive in the infrastructure of our society from the national transportation systems to small appliances at home. Therefore, they must be high-confidence. To achieve high-confidence, system-level properties concerning both hardware and software must be verified. This demands hardware/software co-verification. As embedded systems become more complex, co-verification must be scalable. Exploiting component-based system architectures is crucial to scalable co-verification.     Our Approach  We have developed a comprehensive approach to component-based hardware/software co-verification. This approach has three closely integrated elements: (1) Unified Component Model for Embedded Systems; (2) Unified Property Specification for Hardware and Software; (3) Component-Based Abstraction and Refinement. We have been pursuing these three elements simultaneously and developing tool supports for them. The tool supports are integrated in a toolkit named Embedded System Integration Development Environment (ESIDE). We  have utilized the preliminary version of ESIDE in teaching two graduate-level classes. Several student groups have used ESIDE to co-design and co-verify families of embedded systems.   Intellectual Merits  Findings. We have found that the unified component model provides a uniform view of hardware and software components of embedded systems and fills the hardware/software semantics gap. The unified property specification enables specification of system-level properties that are across hardware/software boundaries. The component-based abstraction can be constructed efficiently from component properties that are specified in the unified language.  Contributions. Our research on the unified component model for embedded system has provided a balanced view of hardware, software, and their interfaces. Instead of being treated separately, they are treated uniformly as components of embedded systems. Such a uniform view is critical to co-design, co-verification, co-simulation, and system synthesis. The unified property specification promotes verification reuse and simplifies component-based abstraction. Component-based abstraction has great potential in scaling co-verification. The way how the various techniques interact with each other to support to co-development of hardware and software embedded systems can be utilized in development of other systems such as cyber-physical systems.  Products.    VisualEADL is an Eclipse plugin, which can be utilized to develop architectural descriptions of embedded systems. It supports all the language features of Embedded Architecture Description Language (EADL) which we have developed in our research. The VisualEADL plugin can be downloaded at http://web.cecs.pdx.edu/~xie/co-ver/co-ver-home.htm Embedded System Integrated Development Environment (ESIDE) is a tool suite that supports component-based hardware/software co-design, co-simulation, co-verification, and co-synthesis of embedded systems. ESIDE installation package is currently available upon request. We are making it available for use through our virtual laboratory.  Physical Artifact Virtual Experience (PAVE) - PAVE is a virtual laboratory system that provides users virtual experiences of remotely residing physical artifacts, which are close to experiences through directly accessing these artifacts. PAVE has been deployed in PSU and is being used in teaching embedded systems and cyber-physical systems related courses and facilitating outreach efforts to K-12 students.      Broad Impacts  Impact on Industry. The PI gave presentations and demonstrations of the methodology and tools developed in this project in the Semiconductor Research Corporation (SRC) annual reviews which involve technical representatives from  SRC member companies such as AMD and Intel. It is a great channel for disseminating the research results from this project.  Impact on Education and Human Resources. Graduate stud...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

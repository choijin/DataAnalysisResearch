<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CT-ISG:  Robust and Efficient Tamper-Resistant Software</AwardTitle>
<AwardEffectiveDate>09/01/2007</AwardEffectiveDate>
<AwardExpirationDate>08/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Jeremy Epstein</SignBlockName>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;Increasingly, society relies on software systems to provide vital services. Consequently, it is critically important that this software be protected from unauthorized modification. For example, a malicious user may modify or tamper with a binary to circumvent protection or license mechanisms or introduce vulnerabilities that can be later exploited. Previous software-based anti-tamper and obfuscation research has attempted to provide solutions, but has failed to provide adequate protection under a realistic threat model, has failed to provide practical solutions, or has failed to provide protection against attacks in which an adversary uses sophisticated static and dynamic analyses.&lt;br/&gt;This project seeks to address the shortcomings of current software-based technology for tamper-resistance and obfuscation. The approach taken is to meld innovative, ultra-efficient software dynamic translation technology with theoretically sound encryption technology and dynamic versions of static anti-tampering and obfuscation techniques. &lt;br/&gt;The fundamental contributions expected from this project include: efficient methods for dynamically generating and inserting opaque predicates into running code, new dynamic techniques for program obfuscation, a new approach to self-checksumming that is stronger than previously proposed techniques, and new metrics for evaluating and measuring the strength of tamper-resistance techniques.&lt;br/&gt;The consequences of this research also include several societal impacts. Malicious adversaries continue to find security flaws in and marshal attacks against critical software infrastructures. This research pursues a complementary, secondary defense by making it harder for malicious entities to analyze software to locate vulnerabilities and then use this information to develop attacks. The applicability of the results is expected to be very broad since the results can be used to make a wide variety of software (both user software as well as server software) tamper-resistant.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/10/2007</MinAmdLetterDate>
<MaxAmdLetterDate>08/10/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0716446</AwardID>
<Investigator>
<FirstName>Jack</FirstName>
<LastName>Davidson</LastName>
<EmailAddress>jwd@virginia.edu</EmailAddress>
<StartDate>08/10/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Virginia Main Campus</Name>
<CityName>CHARLOTTESVILLE</CityName>
<ZipCode>229044195</ZipCode>
<PhoneNumber>4349244270</PhoneNumber>
<StreetAddress>P.O.  BOX 400195</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7456</Code>
<Text>ITR-CYBERTRUST</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: Nanoscale Coded Computation and Storage</AwardTitle>
<AwardEffectiveDate>09/01/2007</AwardEffectiveDate>
<AwardExpirationDate>08/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>199999.00</AwardTotalIntnAmount>
<AwardAmount>199999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
</ProgramOfficer>
<AbstractNarration>A key challenge before the semiconductor industry is coping with high errors rates resulting from the decreasing size of chip features. Transient faults, along with permanent defects and stochastic assembly, make it difficult to implement traditional architectures. Research has been done on routing around&lt;br/&gt;defects and coping with large amounts of device variation. Little is known, however, about how to cope efficiently with high-rates of transient errors during computation. This research will take a new systematic approach to the tolerance of transient failures. The goal is to help the semiconductor industry to better understand the dimensions of the nanoscale reliability problem. This research has relevance to space-borne applications where error control can serve as an alternative to radiation hardening. &lt;br/&gt;&lt;br/&gt;This research employs a sophisticated approach to fault-tolerant computation. First, it exploits differential reliability, that is, it examines the use of a small number of reliable elements to oversee a large number of&lt;br/&gt;unreliable elements. Second it draws on the success of coding theory to explore both special and general methods to encode inputs and outputs of a potentially faulty computation, paying particular attention to a seminal approach taken by Spielman in 1996.  By encoding computations, faults at the encoded outputs can then be detected and corrected.  Third, it examines the use of small check computations followed by possible rollback, where most of the checking is done using unreliable elements.  Allowing a computation to be&lt;br/&gt;repeated in time, rather than space, reduces the overhead of fault free computations.  The design work is expected to have immediate impact on practice whereas development of a general theory is expected to have a&lt;br/&gt;longer-term impact.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/07/2007</MinAmdLetterDate>
<MaxAmdLetterDate>09/07/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0726794</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Savage</LastName>
<EmailAddress>jes@cs.brown.edu</EmailAddress>
<StartDate>09/07/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Brown University</Name>
<CityName>Providence</CityName>
<ZipCode>029129002</ZipCode>
<PhoneNumber>4018632777</PhoneNumber>
<StreetAddress>BOX 1929</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<StateCode>RI</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7353</Code>
<Text>EMERGING MODELS &amp; TECHNOLOGIES</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

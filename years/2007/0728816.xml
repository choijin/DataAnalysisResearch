<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Designing Approximation Schemes</AwardTitle>
<AwardEffectiveDate>09/15/2007</AwardEffectiveDate>
<AwardExpirationDate>08/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Petros Drineas</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Design techniques for approximation algorithms.&lt;br/&gt;&lt;br/&gt;The MaxCut problem strives to cut a graph into two pieces so that many edges cross the cut.  The investigator studies new algorithms for MaxCut and other fundamental problems of combinatorial optimization. Why?&lt;br/&gt;Because MaxCut is a simplified abstraction of a wide range of partitioning problems that are pervasive in applications such as scientific computing, sparse-matrix ordering for linear solvers, VLSI design, or task partitioning for parallel processors. The hope that the insight currently being gained on core theory problems can later translate into progress for  more applied  problems.&lt;br/&gt;Thus, speeding up scientific computing applications could eventually  have impacts on computer simulations for engineering problems such as automotive crash studies or for exploring major scientific issues such as global climate change.&lt;br/&gt;&lt;br/&gt;How does the investigator proceed in her study?&lt;br/&gt;In two ways: first, by exploring the power of the "lift-and-project" technique to obtain better linear programming models. Better, in the sense that adding constraints makes the linear program resemble more closely the real problem under study.&lt;br/&gt;Lift-and-project&lt;br/&gt;is an exciting technique whose power is not yet well understood. Second, by unifying and simplifying existing algorithms. Known dense graph algorithms  can seem forbiddingly technical and numerous for prospective users. In contrast, the investigator is shifting the technical difficulties  from the design to the analysis of algorithms, by proving that  variants of greedy algorithms work well: greedy algorithms are simple, natural, and attractive, and thus much more likely to be used. Such foundational work on algorithms for combinatorial optimization is the way to engineering and technological improvements in the long term.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/17/2007</MinAmdLetterDate>
<MaxAmdLetterDate>09/17/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0728816</AwardID>
<Investigator>
<FirstName>Claire</FirstName>
<LastName>Kenyon-Mathieu</LastName>
<EmailAddress>claire@cs.brown.edu</EmailAddress>
<StartDate>09/17/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Brown University</Name>
<CityName>Providence</CityName>
<ZipCode>029129002</ZipCode>
<PhoneNumber>4018632777</PhoneNumber>
<StreetAddress>BOX 1929</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Rhode Island</StateName>
<StateCode>RI</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

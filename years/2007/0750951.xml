<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SGER: Exploring the Potential for Software-Informed Hardware Reconfigurability in the Memory Hierarchy of Embedded Systems</AwardTitle>
<AwardEffectiveDate>05/01/2008</AwardEffectiveDate>
<AwardExpirationDate>04/30/2009</AwardExpirationDate>
<AwardTotalIntnAmount>40000.00</AwardTotalIntnAmount>
<AwardAmount>40000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Chitaranjan Das</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Significant performance gains can be obtained when software (i.e., compiled code) is optimized to exploit the hardware (i.e., processor microarchitecture) on which it is executed.  For the compiler to generate optimized code for structures such as the cache memory, it needs to know the specification of the cache hierarchy, such as the associativity, block size, and so on.  In this case, the code will be optimized only for that particular cache hierarchy and is not guaranteed to perform well on other machines with different cache architectures, raising portability issues.  That is, the software may not execute efficiently on a wide range of machines when optimized for only a particular architecture.  In this proposal, the PI proposes a framework that enables compiled code for embedded applications to be optimized for specific cache hierarchies without suffering from portability issues.  The main goal is to close the gap between compilers and processor microarchitecture by providing a virtual cache system. With this, compilers can generate optimized code for specific cache architectures. When the code is executed on machines with different cache memories, the hardware will be dynamically reconfigured to take on the characteristics of the targeted cache architecture, thus exploiting the original optimizations made by the compiler.  &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>05/01/2008</MinAmdLetterDate>
<MaxAmdLetterDate>05/01/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0750951</AwardID>
<Investigator>
<FirstName>Mohamed</FirstName>
<LastName>Zahran</LastName>
<EmailAddress>mzahran@cs.nyu.edu</EmailAddress>
<StartDate>05/01/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>CUNY City College</Name>
<CityName>New York</CityName>
<ZipCode>100319101</ZipCode>
<PhoneNumber>2126505418</PhoneNumber>
<StreetAddress>Convent Ave at 138th St</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4715</Code>
<Text>COMPUTER SYSTEMS ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9237</Code>
<Text>SMALL GRANTS-EXPLORATORY RSRCH</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

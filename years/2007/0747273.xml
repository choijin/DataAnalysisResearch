<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:    An Evolutionary Approach to Hardware/Software Collaborative Design</AwardTitle>
<AwardEffectiveDate>05/01/2008</AwardEffectiveDate>
<AwardExpirationDate>09/30/2012</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>227150</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Thyagarajan Nandagopal</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Modern computer system designers must consider many more factors than just raw performance. Thermal output, power consumption, reliability, testing, and security are quickly becoming first-order concerns. Despite various motivating factors, research efforts in optimizing computer systems have historically targeted a single logical layer in the system stack, whether it has been application code, operating systems, virtual machines, microarchitecture, or circuits. Solutions targeting a single layer in isolation are losing momentum, however, given the ever-increasing complexity of modern system and application interaction. An effective way to mitigate this complexity is to employ a holistic solution that considers multiple layers of hardware and software in conjunction, allowing software to adapt and react to changing system conditions at run time.&lt;br/&gt;&lt;br/&gt;In this project, we are exploring the symbiotic relationship between the various hardware and software design layers, and the corresponding opportunity to provide cohesive solutions to performance, power, reliability, and temperature problems. We are focusing on adding lightweight, well-defined feedback channels to existing hardware and software. Meanwhile, we use a virtual execution environment (VEE) to collate information from various layers and to orchestrate adaptive solutions by modifying the application or OS behavior as necessary. The project provides the ability to re-factor the OS and other system layers to remove complex hardware idiosyncrasies. It also provides virtualization benefits to the underlying hardware. Above all, it directly addresses the pressing need for scalable yet simple solutions to modern and emerging computing challenges&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/22/2008</MinAmdLetterDate>
<MaxAmdLetterDate>09/26/2012</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0747273</AwardID>
<Investigator>
<FirstName>Kim</FirstName>
<LastName>Hazelwood</LastName>
<EmailAddress>hazelwood@virginia.edu</EmailAddress>
<StartDate>01/22/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Virginia Main Campus</Name>
<CityName>CHARLOTTESVILLE</CityName>
<ZipCode>229044195</ZipCode>
<PhoneNumber>4349244270</PhoneNumber>
<StreetAddress>P.O.  BOX 400195</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

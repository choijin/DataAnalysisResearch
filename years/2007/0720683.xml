<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR-EHS: Memory management as a run-time service</AwardTitle>
<AwardEffectiveDate>08/01/2007</AwardEffectiveDate>
<AwardExpirationDate>07/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>180000.00</AwardTotalIntnAmount>
<AwardAmount>180000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>SRAM memories are essential to improving run-time, energy use and real-time bounds. Many embedded processors contain Scratch Pad Memory (SPM), unenhanced SRAM  that is mapped to a portion of the address space. They offer better real-time guarantees than caches, an alternate SRAM memory type. Compiler methods to allocate objects automatically to SPM have existed for a decade, but a recent survey did not find even a single commercial compiler that does automatic SPM allocation. Instead, programmers manually specify the SPM allocation using annotations. Reasons may include developer unawareness of SPM, unwillingness to include another feature in the toolchain, and the expense of repeated implementation in each compiler. &lt;br/&gt;&lt;br/&gt;This research is developing a SPM allocation strategy that is completely implemented inside a binary rewriter. This binary rewriter is called automatically by the operating system the first time the program is loaded to memory. Subsequent executions derive the benefits of SPM with no additional overhead. This approach makes SPM a run-time-provided resource for the first time, much like cache and virtual memory are, making it ubiquitous and transparent to the software toolchain. The broader impacts of the research are (i) embedded systems that achieve high speed and real-time behavior at lower cost; (ii) portable devices with lower energy use, hence longer battery life; (iii) programs that are portable to any SPM size ? an important practical advantage; (iv) an educational and outreach program including graduate student training, undergraduate and graduate courses, internships, and a workshop on memory management.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/20/2007</MinAmdLetterDate>
<MaxAmdLetterDate>08/20/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0720683</AwardID>
<Investigator>
<FirstName>Rajeev</FirstName>
<LastName>Barua</LastName>
<EmailAddress>barua@eng.umd.edu</EmailAddress>
<StartDate>08/20/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>2801</Code>
<Text>EMBEDDED &amp; HYBRID SYSTEMS(EHS)</Text>
</ProgramReference>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
</Appropriation>
</Award>
</rootTag>

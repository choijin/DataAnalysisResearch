<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CT-ISG: On the Design of Secure Hash Functions and Privacy-Preserving Protocols</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2007</AwardEffectiveDate>
<AwardExpirationDate>07/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>480000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>While the mathematical study of cryptography has yielded a rich theory, and while the use of cryptography has become quite widespread, there is unfortunately still a significant gap between the theory and practice of cryptography.  The goal of this research is to try to bridge this gap.  The emphasis is on the design and analysis of fundamental cryptographic primitives that are practical yet theoretically sound.  This research focuses on two specific areas: the design and use of secure hash functions, and the design of more efficient privacy-preserving protocols. &lt;br/&gt;&lt;br/&gt;Because of recently discovered weaknesses in industry-standard hash functions, there is renewed interest and urgency to study the basic design principles of hash functions, as well as how such hash functions should be appropriately used in applications.  Indeed, although hash functions were originally designed to serve as message digests, which should provide a form of security known as collision resistance, they are actually used in many different types of applications where the security requirements may be somewhat different:  &lt;br/&gt;sometimes the security requirement of the hash function in a given application may be weaker than, stronger than, or perhaps just incomparable to collision resistance.  This project investigates new methodologies for constructing hash functions that satisfy the various security requirements required in applications, as well as how the applications themselves may be adapted so as to minimize the security requirements placed on the hash function. &lt;br/&gt;&lt;br/&gt;With the widespread use of computers and the Internet in daily transactions, concerns about privacy issues have taken on new urgency.  One key aspect of privacy is deniability: if a user runs a protocol, it should not be possible for an eavesdropper, or even another participant in the protocol, to convince a third party that the transaction actually occurred.  While there are compelling reasons to focus on this area for its own sake, there are also a number of technical issues that arise that overlap with some of the subproblems associated with hash functions.</AbstractNarration>
<MinAmdLetterDate>08/27/2007</MinAmdLetterDate>
<MaxAmdLetterDate>03/03/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0716690</AwardID>
<Investigator>
<FirstName>Yevgeniy</FirstName>
<LastName>Dodis</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Yevgeniy Dodis</PI_FULL_NAME>
<EmailAddress>dodis@cs.nyu.edu</EmailAddress>
<PI_PHON>2129983084</PI_PHON>
<NSF_ID>000122311</NSF_ID>
<StartDate>08/27/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Victor</FirstName>
<LastName>Shoup</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Victor Shoup</PI_FULL_NAME>
<EmailAddress>shoup@cs.nyu.edu</EmailAddress>
<PI_PHON>2129983511</PI_PHON>
<NSF_ID>000341746</NSF_ID>
<StartDate>08/27/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>New York University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100121019</ZipCode>
<PhoneNumber>2129982121</PhoneNumber>
<StreetAddress>70 WASHINGTON SQUARE S</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY10</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041968306</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NEW YORK UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041968306</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Courant Institute of Math Sciences]]></Name>
<CityName>New York</CityName>
<StateCode>NY</StateCode>
<ZipCode>100121092</ZipCode>
<StreetAddress><![CDATA[New York University]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7371</Code>
<Text>CYBER TRUST</Text>
</ProgramElement>
<ProgramElement>
<Code>7456</Code>
<Text>ITR-CYBERTRUST</Text>
</ProgramElement>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~200000</FUND_OBLG>
<FUND_OBLG>2008~100000</FUND_OBLG>
<FUND_OBLG>2009~100000</FUND_OBLG>
<FUND_OBLG>2010~80000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Hash functions are special algorithms which take as input an  arbitrarily long string and compress to to a short output string. Not  suprisingly, hash functions have a wide variety of cryptographic  applications, ranging from message digests, key derivation functions,  message authentication  codes, biometric-based randomness extractors,  and random oracles. Unfotunately, many applications of hash functions do  not explicitly specify which security property of such functions they  need. Correspondingly, some applications end up using hash functions  which are either too weak (maining some surprising attacks might be  found in the future) or too strong (meaning that simpler, more efficient  hash functions would siffice)&nbsp; for the talk at hand. Moreover, there is a significant gap between the theory and practice of cryptographic hash functions.&nbsp; The  goal of this research was to try to bridge this gap, with the emphasis  on the design and analysis of hash functions that are practical yet  theoretically sound. Our outcomes are the following.</p> <p>First, we have developed a new design criteria for Hash functions, called indifferentiability from random oracle. This design criteria is stronger that<br />previously studied properties like collision-resistance, and it became widely adopted in the hashing community. For example, it became a requirment for the new SHA3 competition on hash function design. We also showed how to modify existing hash functions to meet our new notion. We also asked the question of understanding minimal assumptions on the  compression&nbsp; functions of current standard hash function SHA, or other cascade-based hash functions, so that existing hash functions&nbsp; (or close variants of them) can satisfy various important properties,  such as pseudorandomness, collision-resistance, etc. In a related note,  we developed novel properties of hash functions, such as preimage awareness and public-use random oracle, which are: (a) satisfied by existing hash functions, such as SHA; (b)  are sufficient for proving the security of various cryptographic applications, such as signature schemes. Our notion of preimage  awareness is also very useful for building new hash functions. This was demonstrated by the PI Dodis by formally proving the security of MD6 - a  new hash functions submitted to the hash function competition - and also by other researchers designing a hash function SKEIN.<br /><br />In a related domain of building secure message authentication codes, we have initiated a question of building variable-input length message authentication codes (MACs) from block ciphers under minimal<br />assumptions on the security of the block cipher. No previous constructions satisfied our notion. We managed to build several constructions achieving our notion. Based on our construction, we advocated a new design criteria for building a mode of operations for block ciphers, and built the first such mode of operation, called enciphered CBC. We later improved the security of our mode by designing a new mode&nbsp; of operation, called SS-NMAC, achieving 'birthday security'. Most recently, we built a new mode of operation which achieves optimal, 'beyond-birthday' security.<br /><br />We have also studied new modes of operations of hash functions which are somewhat resistant to the so called 'side-channel attacks'. Such<br />attacks leak unexpected information about the secret key/inputs to the attacker. We also developed the first 'leakage-resilient' block cipher<br />under natural assumption on the leakage function available to the attacker.<br /><br />As the less central part of this project, we have developed new methods for enabling secure protocols that provide anonymity.&nbsp; In particular, we have developed&nbsp; new, more practical protocols that can be securely run on the Internet, even in the precense of other, possible malicious protocols.&nbsp...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Hash functions are special algorithms which take as input an  arbitrarily long string and compress to to a short output string. Not  suprisingly, hash functions have a wide variety of cryptographic  applications, ranging from message digests, key derivation functions,  message authentication  codes, biometric-based randomness extractors,  and random oracles. Unfotunately, many applications of hash functions do  not explicitly specify which security property of such functions they  need. Correspondingly, some applications end up using hash functions  which are either too weak (maining some surprising attacks might be  found in the future) or too strong (meaning that simpler, more efficient  hash functions would siffice)  for the talk at hand. Moreover, there is a significant gap between the theory and practice of cryptographic hash functions.  The  goal of this research was to try to bridge this gap, with the emphasis  on the design and analysis of hash functions that are practical yet  theoretically sound. Our outcomes are the following.  First, we have developed a new design criteria for Hash functions, called indifferentiability from random oracle. This design criteria is stronger that previously studied properties like collision-resistance, and it became widely adopted in the hashing community. For example, it became a requirment for the new SHA3 competition on hash function design. We also showed how to modify existing hash functions to meet our new notion. We also asked the question of understanding minimal assumptions on the  compression  functions of current standard hash function SHA, or other cascade-based hash functions, so that existing hash functions  (or close variants of them) can satisfy various important properties,  such as pseudorandomness, collision-resistance, etc. In a related note,  we developed novel properties of hash functions, such as preimage awareness and public-use random oracle, which are: (a) satisfied by existing hash functions, such as SHA; (b)  are sufficient for proving the security of various cryptographic applications, such as signature schemes. Our notion of preimage  awareness is also very useful for building new hash functions. This was demonstrated by the PI Dodis by formally proving the security of MD6 - a  new hash functions submitted to the hash function competition - and also by other researchers designing a hash function SKEIN.  In a related domain of building secure message authentication codes, we have initiated a question of building variable-input length message authentication codes (MACs) from block ciphers under minimal assumptions on the security of the block cipher. No previous constructions satisfied our notion. We managed to build several constructions achieving our notion. Based on our construction, we advocated a new design criteria for building a mode of operations for block ciphers, and built the first such mode of operation, called enciphered CBC. We later improved the security of our mode by designing a new mode  of operation, called SS-NMAC, achieving 'birthday security'. Most recently, we built a new mode of operation which achieves optimal, 'beyond-birthday' security.  We have also studied new modes of operations of hash functions which are somewhat resistant to the so called 'side-channel attacks'. Such attacks leak unexpected information about the secret key/inputs to the attacker. We also developed the first 'leakage-resilient' block cipher under natural assumption on the leakage function available to the attacker.  As the less central part of this project, we have developed new methods for enabling secure protocols that provide anonymity.  In particular, we have developed  new, more practical protocols that can be securely run on the Internet, even in the precense of other, possible malicious protocols.  These protocols provide anonymity for participants and, more generally, provide a very high level of security.     We have also developed new methods for co...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

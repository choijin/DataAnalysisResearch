<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRI: CRD -- Development of Alloy Tools, Technology and Materials</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2007</AwardEffectiveDate>
<AwardExpirationDate>01/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>800000.00</AwardTotalIntnAmount>
<AwardAmount>800000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rita Rodriguez</SignBlockName>
<PO_EMAI>rrodrigu@nsf.gov</PO_EMAI>
<PO_PHON>7032928950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Proposal #: CNS 07-07612&lt;br/&gt;PI(s):          Jackson, Daniel &lt;br/&gt;Institution: Massachussets Institute of Technology&lt;br/&gt;  Cambridge, MA 02139-4307  &lt;br/&gt;Title:   CRD: Collab Rsch: Development of Alloy Tools, Technology, and Materials&lt;br/&gt;&lt;br/&gt;Project Proposed:&lt;br/&gt;This collaborative project, developing a new Alloy infrastructure, aims to exploit further this approach.&lt;br/&gt;Alloy, an approach to modeling and analyzing software that comprises a language and a suite of tools (in particular the Alloy Analyzer, a tool for exploring and checking software designs), brings together a classical idea, the representation of complex systems with relational logic, and a recent idea, the use of SAT solvers for exploring huge cases. Alloy has been used in a wide variety of design analyses. Researchers use Alloy as a tool or back-end for their own tools; over thirty courses use Alloy today. It was recently used to model and check the transfer protocol of Mondex, an electron purse system. Twenty five students built the Analyzer over 5 years ago. However, the infrastructure suffers serious deficiencies, partly due to the fact that its individual components are not cleanly separated. Now this Analyzer has become fragile and bloated. This infrastructure aims to correct this situation. Its development comprises:&lt;br/&gt;- Tools and components,&lt;br/&gt;- Educational Materials, including course modules, case studies, sample problems, and common patterns, and a &lt;br/&gt;- Community Repository, allowing the sharing of tools, components, educational materials, and research papers.&lt;br/&gt;End-user applications will include a new version of the Alloy Analyzer, a tool for checking code against Alloy specifications, and an example-based modeling tool. The applications will be built on all-documented, cleanly separated components that will be made available to researchers: a new engine that can handle large configurations in addition to model constraints, a code front-end, a visualizer, and a translator for JML to Alloy. This infrastructure aims to create and enable a community that will use Alloy as an intellectual sandbox to explore fundamental and far-reaching questions faced by the field.&lt;br/&gt;&lt;br/&gt;Broader Impacts: Because the Alloy Analyzer itself, with its concrete and immediate visual feedback, plays the role of a very critical but constructive tutor, Alloy is particularly well suited to formal methods education in small college settings. Moreover, Alloy serves the larger community of educators and researchers.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/15/2007</MinAmdLetterDate>
<MaxAmdLetterDate>07/11/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0707612</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Jackson</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel Jackson</PI_FULL_NAME>
<EmailAddress>dnj@csail.mit.edu</EmailAddress>
<PI_PHON>6172588471</PI_PHON>
<NSF_ID>000460161</NSF_ID>
<StartDate>08/15/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName>Cambridge</CityName>
<StateCode>MA</StateCode>
<ZipCode>021394301</ZipCode>
<StreetAddress><![CDATA[77 MASSACHUSETTS AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7359</Code>
<Text>CCRI-CISE Cmnty Rsrch Infrstrc</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~150000</FUND_OBLG>
<FUND_OBLG>2008~100000</FUND_OBLG>
<FUND_OBLG>2009~300000</FUND_OBLG>
<FUND_OBLG>2011~250000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p class="p1">This grant funded the development of Alloy, a software design tool. Alloy comprises a language for modeling software systems, and a software application for analyzing Alloy models. The Alloy Analyzer works by translating design analysis problems to a format called &ldquo;SAT&rdquo; which has become widely used in the field of software analysis (although Alloy was one of the earliest tools to exploit it). The use of SAT, and advances in SAT technology, allow the Alloy Analyzer to perform analysis that require considering huge numbers of cases (usually in the billions), far too large a number to be considered by traditional approaches (such as testing). As a result, the Alloy Analyzer is capable of finding very subtle errors that have eluded both expert review and analysis with other methods.</p> <p class="p1">Alloy is sometimes described as a &lsquo;model checker&rsquo;, which refers to a kind of analysis tool that works (as Alloy does) by systematic exploration of a large number of cases. But Alloy is actually different from most model checkers both in its intended application and in how it works. Model checkers are designed to find errors in systems that involve multiple processes running in parallel; the complexity here arises from the fact that the behaviors of the different processes could be interleaved in many different ways (in fact, an exponential number of ways!). This is a big problem in analyzing hardware designs. Alloy addresses a different problem, more related to software: that an individual process often maintains a state that has some complex structure to it. For example, an email application would have a state consisting of a set of messages, a set of folders, with messages assigned to folders, and perhaps folders within folders &mdash; a big tree structure. Alloy&rsquo;s novelty is its ability to handle all the possible instances of these structures.</p> <p class="p1">Alloy itself had been developed prior to this grant. What the grant made possible was the further development of Alloy into a tool that could be widely used in research, teaching and industry. Over the period of the grant, we made dramatic improvements to the performance and functionality of the Alloy Analyzer; we extended the Alloy language with important new features (such as a full set of arithmetic operators); we improved the Alloy Analyzer application (with a new visualization tool to show results); and we made one extension to the Alloy language (along with an analysis strategy) that allows Alloy to be used on an entirely new class of applications, namely synthesis (that is, generating programs from their specifications).&nbsp;</p> <p class="p1">We also built a suite of powerful tools that used Alloy as their engine: Forge, a tool for verifying Java programs; Squander, an extension of Java that allows runtime assertions to be executed directly; WebAlloy and Sunny, frameworks for building web applications; Moolloy, a tool for solving multidimensional constraint optimization problems; Rubicon and SPACE, tools for finding security vulnerabilities in web applications; and aRby, an embedding of Alloy in the Ruby programming language making its analysis directly accessible in Ruby.&nbsp;</p> <p class="p1">On the outreach and publicity front, we deployed a community website which was eventually replaced in favor of a curated collection of links and materials (http://alloy.mit.edu). We moved our community forum to StackOverflow, a widely used resource for programmers, where many questions about Alloy are posted and answered.&nbsp;</p> <p class="p2">&nbsp;The Alloy community continues to grow, and there is an active Alloy track at the ABZ international conference. The Alloy website (http://alloy.mit.edu) lists over 600 papers describing work that uses Alloy, and Alloy has been used to find and fix flaws in a large variety of software designs.&nbsp;</p> <p class="p1">Beyond th...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[This grant funded the development of Alloy, a software design tool. Alloy comprises a language for modeling software systems, and a software application for analyzing Alloy models. The Alloy Analyzer works by translating design analysis problems to a format called "SAT" which has become widely used in the field of software analysis (although Alloy was one of the earliest tools to exploit it). The use of SAT, and advances in SAT technology, allow the Alloy Analyzer to perform analysis that require considering huge numbers of cases (usually in the billions), far too large a number to be considered by traditional approaches (such as testing). As a result, the Alloy Analyzer is capable of finding very subtle errors that have eluded both expert review and analysis with other methods. Alloy is sometimes described as a æmodel checkerÆ, which refers to a kind of analysis tool that works (as Alloy does) by systematic exploration of a large number of cases. But Alloy is actually different from most model checkers both in its intended application and in how it works. Model checkers are designed to find errors in systems that involve multiple processes running in parallel; the complexity here arises from the fact that the behaviors of the different processes could be interleaved in many different ways (in fact, an exponential number of ways!). This is a big problem in analyzing hardware designs. Alloy addresses a different problem, more related to software: that an individual process often maintains a state that has some complex structure to it. For example, an email application would have a state consisting of a set of messages, a set of folders, with messages assigned to folders, and perhaps folders within folders &mdash; a big tree structure. AlloyÆs novelty is its ability to handle all the possible instances of these structures. Alloy itself had been developed prior to this grant. What the grant made possible was the further development of Alloy into a tool that could be widely used in research, teaching and industry. Over the period of the grant, we made dramatic improvements to the performance and functionality of the Alloy Analyzer; we extended the Alloy language with important new features (such as a full set of arithmetic operators); we improved the Alloy Analyzer application (with a new visualization tool to show results); and we made one extension to the Alloy language (along with an analysis strategy) that allows Alloy to be used on an entirely new class of applications, namely synthesis (that is, generating programs from their specifications).  We also built a suite of powerful tools that used Alloy as their engine: Forge, a tool for verifying Java programs; Squander, an extension of Java that allows runtime assertions to be executed directly; WebAlloy and Sunny, frameworks for building web applications; Moolloy, a tool for solving multidimensional constraint optimization problems; Rubicon and SPACE, tools for finding security vulnerabilities in web applications; and aRby, an embedding of Alloy in the Ruby programming language making its analysis directly accessible in Ruby.  On the outreach and publicity front, we deployed a community website which was eventually replaced in favor of a curated collection of links and materials (http://alloy.mit.edu). We moved our community forum to StackOverflow, a widely used resource for programmers, where many questions about Alloy are posted and answered.   The Alloy community continues to grow, and there is an active Alloy track at the ABZ international conference. The Alloy website (http://alloy.mit.edu) lists over 600 papers describing work that uses Alloy, and Alloy has been used to find and fix flaws in a large variety of software designs.  Beyond the development and dissemination of Alloy and the Alloy Analyzer, the grant also funded the education of a generation of graduate students who are now researchers and professors at other institutions. We also mentored high school students...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

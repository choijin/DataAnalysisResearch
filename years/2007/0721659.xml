<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SDCI HPC:   Improvement and Release of the Uintah Computational Framework</AwardTitle>
<AwardEffectiveDate>12/01/2007</AwardEffectiveDate>
<AwardExpirationDate>11/30/2011</AwardExpirationDate>
<AwardAmount>703916</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Gabrielle D. Allen</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Intellectual Merit: Project proposes to improve and extend the Uintah framework to enable adaptive computations on modern HPC architectures with tens of thousands of nodes and complex communication/memory hierarchies. Uintah has been developed under the University of Utah Center for Simulation of Accidental Fires and Explosions (C-SAFE), a DOE-funded academic alliance project. This proposal aims to bring the unique capabilities that Uintah provides to the broader NSF science and engineering community. At the same time the underlying methodology employed will illustrate how such software packages may be used on large-scale&lt;br/&gt;HPC architectures in a fault-tolerant and self-adaptive way. Uintah is applicable to a wide range of engineering domains that require fluid-structure interactions and highly deformable models, and is used in its present advanced beta-release form for NSF-funded bioengineeringand computer science projects at the University of Utah (such as tissue modeling), as well as other NIH, DARPA, DOE and industry funded projects both at Utah and other institutions (such as heart injury modeling and blast-wave simulation). The aim of this proposed project is to move this software out into the broader NSF computational science community. Uintah is open-source software available through the MIT open-source license. &lt;br/&gt;Uintah will be extended to provide additional fault tolerance through redundant computation, which will be facilitated by the component-based architecture of the Uintah system. We will add hierarchical Monte Carlo radiation transport models to Uintah to provide additional capabilities for heat transfer, and electromagnetic wave propagation. Finally, we will demonstrate scalability of Uintah on Petascale architectures for real-world engineering design problems and support external users of Uintah for NSF-funded and other research through modern collaborative tools such as an online wiki. There are two major expected outcomes from this project. The first direct outcome is an enhanced version of Uintah with the potential to scale to many thousands of processors and to begin to approach petaflop performance. This code will have immediate use in the computational modeling of many applications involving hazards. The second contribution is less direct but equally important. The use of the underlying task graph methodology inside Uintah will provide an instance of how a potentially important methodology may be applied to large-scale parallelism in a fault-tolerant and self-adaptive way. Other contributions as part of the above will include scalable adaptive meshing in the context of fluid-structure interaction problems.The merit of this proposal will be demonstrated through the delivery general-purpose engineering quality software capable of utilizing thousands of processors when solving large scale fluid-interaction problems, and will also result in better methodologies and algorithms for the move to petaflop performance. At present the Uintah software has been demonstrated on thousands of processors, and this proposed effort will ensure that it will continue to scale on petascale class machines using fault tolerance and self-adaptive algorithms.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Broader Impact: The broader impact of this proposal is that the resulting algorithms, codes and levels of performance achieved will influence the next generation of code developers who will be seeking petascale performance on general purpose codes. Of particular importance is the idea that codes with dynamically varying work patterns can be made to perform on large cpu-count machines. The educational impact of this project demonstrated through the high-performance computing and computational science programs at taught at University of Utah. Scalability and the appropriate algorithms and software infrastructures are part of the graduate training that students receive as part of a multidisciplinaryprogram in scientific computing.</AbstractNarration>
<MinAmdLetterDate>11/21/2007</MinAmdLetterDate>
<MaxAmdLetterDate>11/21/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0721659</AwardID>
<Investigator>
<FirstName>Martin</FirstName>
<LastName>Berzins</LastName>
<EmailAddress>mb@cs.utah.edu</EmailAddress>
<StartDate>11/21/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Steven</FirstName>
<LastName>Parker</LastName>
<EmailAddress>sparker@cs.utah.edu</EmailAddress>
<StartDate>11/21/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ingo</FirstName>
<LastName>Wald</LastName>
<EmailAddress>wald@sci.utah.edu</EmailAddress>
<StartDate>11/21/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
</Institution>
<FoaInformation>
<Code>0000099</Code>
<Name>Other Applications NEC</Name>
</FoaInformation>
<ProgramElement>
<Code>7683</Code>
<Text>SOFTWARE DEVELOPEMENT FOR CI</Text>
</ProgramElement>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Spatio-Temporal Memory Streaming</AwardTitle>
<AwardEffectiveDate>06/01/2007</AwardEffectiveDate>
<AwardExpirationDate>05/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ahmed Louri</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Project Abstract for 0702658:&lt;br/&gt;&lt;br/&gt;Technological advancements in semiconductor fabrication have led to an abundance of on-chip transistors, faster clock speeds, and unprecedented processor performance. In contrast, while DRAM capacity has increased commensurately, DRAM speeds have primarily lagged behind resulting in an ever-increasing processor/memory performance gap. Conventional approaches to bridge the speed gap with a hierarchy of ''''cache'''' memories--where at every level cache size is traded off for speed--has reached diminishing returns. Cache hierarchies have become increasingly ineffective in hiding the memory latency for important classes of commercial and scientific workloads. For example, in modern servers (e.g., transaction processing or web servers) the processors idle more than 50% of the time waiting for memory. Processor-centric proposals to bridge the gap (e.g., large-window or run-ahead execution) rely on high inherent memory-level parallelism in applications, which is unfortunately absent in many such workloads due to the dependent nature of memory accesses (e.g., pointer chasing in linked data structures).&lt;br/&gt;&lt;br/&gt;In this project, a novel memory system architecture, called Spatio-Temporal Memory Streaming (STeMS), is developed in which memory moves in correlated groups (called spatio-temporal streams) rather than as individual cache blocks to enhance fetch lookahead and memory-level parallelism, hide memory latency, and improve on-chip storage utilization and pin bandwidth. STeMS capitalizes on the observation that memory access patterns, while arbitrarily irregular, are highly repetitive due to iterative program control flow and infrequent structural changes to data in memory. To enhance memory-level parallelism, STeMS is designed to extract repetitive temporally- and spatially-correlated ''''streams'''' of instructions and data corresponding to data structure traversals at program sites. Preliminary results indicate that a STEMS-based system can eliminate over 60% of shared cache misses in on-line transaction processing server software.</AbstractNarration>
<MinAmdLetterDate>05/29/2007</MinAmdLetterDate>
<MaxAmdLetterDate>05/29/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0702658</AwardID>
<Investigator>
<FirstName>Babak</FirstName>
<LastName>Falsafi</LastName>
<EmailAddress>babak@ece.cmu.edu</EmailAddress>
<StartDate>05/29/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Anastassia</FirstName>
<LastName>Ailamaki</LastName>
<EmailAddress>natassa@epfl.ch</EmailAddress>
<StartDate>05/29/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

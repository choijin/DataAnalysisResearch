<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER CPA-CSA: Correctness-Constrained Execution for Processor Designs</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2008</AwardEffectiveDate>
<AwardExpirationDate>01/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Hong Jiang</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The design complexity of current microprocessor systems is such that practically every system released to the market incorporates latent bugs. Manufacturers and design houses alike strive to validate and verify their designs as much as possible during system development, and then attempt to contain the impact of escaped bugs through publicly available errata reports. Some escaped bugs are innocuous, and can be easily overcome through a BIOS or OS update, but still others are potentially dangerous to the users of the system, or they might compromise its security and adversely affect its performance.&lt;br/&gt;&lt;br/&gt;This project focuses on developing integrated hardware and software solutions to guarantee that a processor chip operates correctly, even if its design is flawed. The key idea driving this research is to create two modes of operation for the processor: a complex high-performance mode to be used when executing within the portion of the system that has been verified at design time, and a simple low-performance mode guaranteed to be correct under all execution scenarios.  By carefully selecting the appropriate mode of operation at runtime, it is possible to always execute correctly: in high-performance when the operation is one that has been verified at design-time or in low performance otherwise. In addition, because of the extreme simplicity of the low-performance  mode, it is possible to guarantee that this mode of operation always provides correct results but at a performance price. Related research has shown that, in practice, the low-performance mode intervenes only in very rare occasions, making its performance impact negligible overall.  The research challenges to be undertaken in this project include devising low-cost mechanisms to select execution between fast and correct mode, developing the simple mode of operation in such a way that can be fully verified, and developing techniques to efficiently encode the correct states of operation.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/25/2008</MinAmdLetterDate>
<MaxAmdLetterDate>02/18/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0746425</AwardID>
<Investigator>
<FirstName>Valeria</FirstName>
<LastName>Bertacco</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Valeria Bertacco</PI_FULL_NAME>
<EmailAddress>valeria@umich.edu</EmailAddress>
<PI_PHON>7346154047</PI_PHON>
<NSF_ID>000488341</NSF_ID>
<StartDate>01/25/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Regents of the University of Michigan - Ann Arbor</Name>
<CityName>Ann Arbor</CityName>
<ZipCode>481091274</ZipCode>
<PhoneNumber>7347636438</PhoneNumber>
<StreetAddress>3003 South State St. Room 1062</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>073133571</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF MICHIGAN</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>073133571</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Regents of the University of Michigan - Ann Arbor]]></Name>
<CityName>Ann Arbor</CityName>
<StateCode>MI</StateCode>
<ZipCode>481091274</ZipCode>
<StreetAddress><![CDATA[3003 South State St. Room 1062]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~160000</FUND_OBLG>
<FUND_OBLG>2010~80000</FUND_OBLG>
<FUND_OBLG>2011~80000</FUND_OBLG>
<FUND_OBLG>2012~80000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The research supported by this grant pioneered new and effective techniques to protect complex microprocessor design from the manifestation of escaped design bugs. Escaped bugs are those design errors that are not detected prior to releasing a new chip to the market. These bugs may manifest once the system is deployed with the users and lead to a wide range of impacts, from minor performance issues to extensive product recalls. A number of recent disasters of these type among semiconductor and consumer electronics companies have led to an increase concern for escaped bugs. The grant enabled the investigation of solutions that allow a system to overcome bugs, even after its release to users. The common traits of these techniques entail monitoring the activity of the system at runtime and detecting when a bug may manifest. Upon the detection of such situations the solution triggers a recovery process for the system that allows it to bypass and/or overcome the impact of the bug.</p> <p><br />The focus of the research has been on modern processors, encompassing solutions for both processor cores and the interconnect subsystem in multicore processors and systems-on-chip. A key solution for processor cores is Semantic Guardians,where one small ad-hoc digital component monitor the processor execution to detect when it operates within design-time verified &nbsp;scenarios. When the processor steps out of this boundary, the recover mechanism forces the processor to operate in a extremely simplified mode that can be completed verified for correctness.</p> <p>On the interconnect front, the ForEVeR solution guarantees the correct operation of a network-on-chip by combining design-time verification of the individual routers in the network, with runtime validation of the overall network and its routing protocol. ForEVeR leverages a lightweigth (&lt;300 gates per router) network to send-ahead checker messages that wait for the data packet counter part at destination. When a message is dropped or misrouted, the recovery mechanisms uses again this lightweigth network to overcome the error in data transfer.</p> <p>Finally, effort within this research has been dedicated to create selectivity and efficiency in verifying the portion of the design tha is most critical, that is the set of operational activities that are exercised most frequently. Resarch in this space has leveraged both accelerators and GP-GPUs to boost the quality of design-time verification, and direct the effort towards operations that are executed most frequently (and thus should not trigger a runtime recovery mechanism, lest incurring a high runtime performance cost).</p> <p>A number of students, both graduate and undergraduate have been supported by this grant, including underrepresented racial minorities and women. Three students completed their Ph.D. dissertation on the topics investigated by the grant. All of the students greatly developed their research experience and skills and some of the undergraduate are planning to pursue Ph.D. studies because of the positive experiences they had while working on this research.</p> <p>The findings of the research have been disseminated in many publications at top-tier conferences and journals. More importantly the technology has been transferred to industry through internships, presentations at industry workshops and interactions in industry-funded research meetings. Finally, runtime validation and a number of the techniques developed within this grant are now included in the mainstream curriculum of the graduate-level course in processor correctness at the University of Michigan.</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 05/25/2015<br>      Modified by: Valeria&nbsp;Bertacco</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<s...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The research supported by this grant pioneered new and effective techniques to protect complex microprocessor design from the manifestation of escaped design bugs. Escaped bugs are those design errors that are not detected prior to releasing a new chip to the market. These bugs may manifest once the system is deployed with the users and lead to a wide range of impacts, from minor performance issues to extensive product recalls. A number of recent disasters of these type among semiconductor and consumer electronics companies have led to an increase concern for escaped bugs. The grant enabled the investigation of solutions that allow a system to overcome bugs, even after its release to users. The common traits of these techniques entail monitoring the activity of the system at runtime and detecting when a bug may manifest. Upon the detection of such situations the solution triggers a recovery process for the system that allows it to bypass and/or overcome the impact of the bug.   The focus of the research has been on modern processors, encompassing solutions for both processor cores and the interconnect subsystem in multicore processors and systems-on-chip. A key solution for processor cores is Semantic Guardians,where one small ad-hoc digital component monitor the processor execution to detect when it operates within design-time verified  scenarios. When the processor steps out of this boundary, the recover mechanism forces the processor to operate in a extremely simplified mode that can be completed verified for correctness.  On the interconnect front, the ForEVeR solution guarantees the correct operation of a network-on-chip by combining design-time verification of the individual routers in the network, with runtime validation of the overall network and its routing protocol. ForEVeR leverages a lightweigth (&lt;300 gates per router) network to send-ahead checker messages that wait for the data packet counter part at destination. When a message is dropped or misrouted, the recovery mechanisms uses again this lightweigth network to overcome the error in data transfer.  Finally, effort within this research has been dedicated to create selectivity and efficiency in verifying the portion of the design tha is most critical, that is the set of operational activities that are exercised most frequently. Resarch in this space has leveraged both accelerators and GP-GPUs to boost the quality of design-time verification, and direct the effort towards operations that are executed most frequently (and thus should not trigger a runtime recovery mechanism, lest incurring a high runtime performance cost).  A number of students, both graduate and undergraduate have been supported by this grant, including underrepresented racial minorities and women. Three students completed their Ph.D. dissertation on the topics investigated by the grant. All of the students greatly developed their research experience and skills and some of the undergraduate are planning to pursue Ph.D. studies because of the positive experiences they had while working on this research.  The findings of the research have been disseminated in many publications at top-tier conferences and journals. More importantly the technology has been transferred to industry through internships, presentations at industry workshops and interactions in industry-funded research meetings. Finally, runtime validation and a number of the techniques developed within this grant are now included in the mainstream curriculum of the graduate-level course in processor correctness at the University of Michigan.                Last Modified: 05/25/2015       Submitted by: Valeria Bertacco]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR-EHS Predictable Adaptive Residual Monitoring for Real-time Embedded Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2007</AwardEffectiveDate>
<AwardExpirationDate>02/29/2012</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>515950</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The use of software to control devices deployed, for example, in medical, transportation, and power systems demands correct software operation.  Current approaches to assuring the correct operation of embedded software face significant challenges in scaling to the next generation of embedded applications.  A promising strategy for meeting these challenges is to deploy "monitoring" software that will "watch" and "warn" of problematic situations that the operational software should adapt to avoid.  Unfortunately, current approaches for software monitoring result in excessive overhead and are not sensitive to the fundamental timeliness requirements in embedded software.&lt;br/&gt;&lt;br/&gt;This project is investigating technologies for the timely and efficient monitoring of software in embedded systems.  Specifically, the project explores the synergistic combination of three approaches: (1) exploiting the results of static analysis to calculate a minimal "residual" analysis problem to be monitored at run-time, (2) "adapting" the degree of observation of the software dynamically during execution while preserving the fidelity of monitoring, and (3) using scheduling techniques to ensure that monitors detect patterns of software behavior with a "predictable" worst-case delay.  Together these techniques are being combined into a single predictable, adaptable, residual (PAR) monitoring infrastructure within which a variety of implementation strategies will be realized.   Evaluation of the cost-effectiveness of these techniques will be carried out in the context of RTSJ and sensor-network infrastructures and applications. These techniques and the PAR infrastructure are the basis for projects in both real-time systems and software validation courses to train the next generation of embedded software engineers.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/06/2007</MinAmdLetterDate>
<MaxAmdLetterDate>02/11/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0720654</AwardID>
<Investigator>
<FirstName>Matthew</FirstName>
<LastName>Dwyer</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Matthew Dwyer</PI_FULL_NAME>
<EmailAddress>md3cn@virginia.edu</EmailAddress>
<PI_PHON>4349247604</PI_PHON>
<NSF_ID>000103915</NSF_ID>
<StartDate>08/06/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Stephen</FirstName>
<LastName>Goddard</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Stephen M Goddard</PI_FULL_NAME>
<EmailAddress>goddard@cse.unl.edu</EmailAddress>
<PI_PHON>4024729968</PI_PHON>
<NSF_ID>000384829</NSF_ID>
<StartDate>08/06/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Sebastian</FirstName>
<LastName>Elbaum</LastName>
<PI_MID_INIT>G</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sebastian G Elbaum</PI_FULL_NAME>
<EmailAddress>selbaum@virginia.edu</EmailAddress>
<PI_PHON>4342435213</PI_PHON>
<NSF_ID>000412723</NSF_ID>
<StartDate>08/06/2007</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Nebraska-Lincoln</Name>
<CityName>Lincoln</CityName>
<ZipCode>685031435</ZipCode>
<PhoneNumber>4024723171</PhoneNumber>
<StreetAddress>151 Prem S. Paul Research Center</StreetAddress>
<StreetAddress2><![CDATA[2200 Vine St]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Nebraska</StateName>
<StateCode>NE</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NE01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>555456995</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>BOARD OF REGENTS OF THE UNIVERSITY OF NEBRASKA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>068662618</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Nebraska-Lincoln]]></Name>
<CityName>Lincoln</CityName>
<StateCode>NE</StateCode>
<ZipCode>685031435</ZipCode>
<StreetAddress><![CDATA[151 Prem S. Paul Research Center]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Nebraska</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NE01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2007~50000</FUND_OBLG>
<FUND_OBLG>2008~100000</FUND_OBLG>
<FUND_OBLG>2009~190950</FUND_OBLG>
<FUND_OBLG>2010~175000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Computer software is a critical component of modern society's infrastructure. &nbsp;Assuring that software operates correctly is a significant challenge. &nbsp;One approach that has been explored in recent years is to equip application software with additional software whose purpose is to "watch" the operation of the application looking for erroneous behavior and inform interested parties so that errors can be fixed quickly. &nbsp; &nbsp;As one might anticipate adding monitoring to an application may slow it down. &nbsp; This project explores a range of techniques to minimize the application slow down arising from monitoring. &nbsp; &nbsp; The project advances the state of the art in this area by (1) developing a number of techniques for identifying when certain parts of the program do not need to be monitored (because they are guaranteed to be error free), (2) developing techniques that make the execution of monitors faster when they are needed, and (3) developing the theoretical foundations that allow monitors to be incorporated into "real time" systems for which correctness is judged not only by calculating the expected answer, but by doing so in given amount of time.</p> <p>As an application of these ideas, we have incorporated our monitoring techniques into a device that is capable of gathering data on the migratory behavior of Cranes. &nbsp; This system has been used to monitor the migration of a small number of Sandhill Cranes and in the coming years many more birds will be equipped with this device. &nbsp;The monitoring software on board the device will help to ensure that the devices operates correctly and transmits data back to ecologists concerned with Crane behavior, habitat, and survival.</p><br> <p>            Last Modified: 03/19/2012<br>      Modified by: Matthew&nbsp;Dwyer</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Computer software is a critical component of modern society's infrastructure.  Assuring that software operates correctly is a significant challenge.  One approach that has been explored in recent years is to equip application software with additional software whose purpose is to "watch" the operation of the application looking for erroneous behavior and inform interested parties so that errors can be fixed quickly.    As one might anticipate adding monitoring to an application may slow it down.   This project explores a range of techniques to minimize the application slow down arising from monitoring.     The project advances the state of the art in this area by (1) developing a number of techniques for identifying when certain parts of the program do not need to be monitored (because they are guaranteed to be error free), (2) developing techniques that make the execution of monitors faster when they are needed, and (3) developing the theoretical foundations that allow monitors to be incorporated into "real time" systems for which correctness is judged not only by calculating the expected answer, but by doing so in given amount of time.  As an application of these ideas, we have incorporated our monitoring techniques into a device that is capable of gathering data on the migratory behavior of Cranes.   This system has been used to monitor the migration of a small number of Sandhill Cranes and in the coming years many more birds will be equipped with this device.  The monitoring software on board the device will help to ensure that the devices operates correctly and transmits data back to ecologists concerned with Crane behavior, habitat, and survival.       Last Modified: 03/19/2012       Submitted by: Matthew Dwyer]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

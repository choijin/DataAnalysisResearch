<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:    Behavior-Based Coordination for Open Distributed Real-Time and Embedded Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>320000.00</AwardTotalIntnAmount>
<AwardAmount>422900</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The proliferation of embedded devices and significant advances of wireless network technologies have led to the emergence of Open Distributed Real-time and Embedded (ODRE) systems and applications which further the expansion of our society's digital backbone.  These applications involve an increasingly large number of small dynamic concurrent objects that must together satisfy multiple types of QoS requirements.  As such, the need for a new paradigm to reduce the complexity and ease the development of these systems is growing.&lt;br/&gt;&lt;br/&gt;Viewing ODRE systems as compositions of coordination and concurrent computation decouples the two concerns and allows higher levels of abstractions.  However, these advantages can only be fully realized if the following fundamental requirements are met. First, it is essential to have a coordination model that focuses on coordination under QoS constraints, and is decentralized, exogenous, scalable and stable.&lt;br/&gt;Second, in order to reason about QoS constraints, a formal model that uniformly represents these different types of constraints must be provided. Third, tools that support coordination abstractions must be available to facilitate the development of ODRE applications.  This project is devoted to meeting these requirements.&lt;br/&gt;&lt;br/&gt;Collaborating with industry and laboratories and progressively evaluating research results in real-world application settings are two additional key facets of this project.  This ensures that the results are relevant and usable in improving the robustness of critical software.  In addition, the collaboration and role models from industry enrich the students? learning environment and provide them the support needed for successful careers in real-time embedded computing.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/22/2008</MinAmdLetterDate>
<MaxAmdLetterDate>05/31/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0746643</AwardID>
<Investigator>
<FirstName>Shangping</FirstName>
<LastName>Ren</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Shangping Ren</PI_FULL_NAME>
<EmailAddress>sren@sdsu.edu</EmailAddress>
<PI_PHON>6195946191</PI_PHON>
<NSF_ID>000308327</NSF_ID>
<StartDate>01/22/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Illinois Institute of Technology</Name>
<CityName>Chicago</CityName>
<ZipCode>606163717</ZipCode>
<PhoneNumber>3125673035</PhoneNumber>
<StreetAddress>10 West 35th Street</StreetAddress>
<StreetAddress2><![CDATA[Suite 7D71]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042084434</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>ILLINOIS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042084434</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Illinois Institute of Technology]]></Name>
<CityName>Chicago</CityName>
<StateCode>IL</StateCode>
<ZipCode>606163717</ZipCode>
<StreetAddress><![CDATA[10 West 35th Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>01S8</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~160000</FUND_OBLG>
<FUND_OBLG>2010~94900</FUND_OBLG>
<FUND_OBLG>2011~80000</FUND_OBLG>
<FUND_OBLG>2012~80000</FUND_OBLG>
<FUND_OBLG>2013~8000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>As modern computer system advances, more and more distributed applications with multiple QoS requirements are emerging, such as waste water and natural water monitoring and control. It has become an urgent need to develop techniques that guarantee applications' QoS constraints and decrease the complexity of implementing such systems. Through this project, we have developed a new paradigm that utilizes the separation of concern design principle to simplify the design and development of distributed real-time applications. In particular, the developed design and implementation paradigm separates coordination among distributed objects from the functionalities of the objects themselves. We have also developed a set of effective methods and techniques to maintain deployed real-time application's QoS requirements.</p> <p><br />We have addressed the challenge of developing and implementing distributed real-time applications in open environment from both system implementation simplification and multi-QoS guarantee perspectives. For system implementation simplification, we have developed a hierarchical Actor-Role-Coordinator (ARC) programming model to simplify the system design and implementation. We have also developed a concept lattice based event model for high level semantic reasoning and a eUML-ARC model for concurrency programming to further reduce the system implementation complexity and improve development efficiency. For multi-dimensional QoS guarantees, we have developed a similarity based measurement to quantify the satisfaction of multi-dimensional QoS requirements. We have also developed information hiding and voting algorithms to guarantee system's availability, reliability in open distributed environment. &nbsp;In addition, &nbsp;a profit-penalty aware scheduling algorithm to maximize system profit while guaranteeing application's QoS requirements, a minimal slack time and minimal distance scheduling algorithm to minimize the cost for guaranteeing real-time application's timing constraint in cloud environment have been developed.&nbsp;</p> <p><br />In addition to system level implementation simplification and scheduling algorithm development, we have also addressed the QoS guaranteeing problem from considering resource performance change perspective. &nbsp;Traditionally, system resources are considered as constant and they do not change over their life time. &nbsp;Such assumptions are not valid for real-time applications which often operate for long time. &nbsp;In fact, resource performance degrades overtime, which is evidenced by all computer users' own experiences --- our computers get slower if they have been running for long time without a reboot. &nbsp;Software aging is identified as one of the main causes of resource performance degradation, software rejuvenation is a commonly used effective technique to combat performance degradations. &nbsp;We have developed a novel resource model, i.e., the $P^2$ resource model, that takes into consideration of performance-degradation and periodic-rejuvenation. &nbsp;The $P^2$ resource model generalizes traditional resource models existed in the literature. Based on the $P^2$ resource model, we have developed a set of theory and scheduling algorithm to ensure real-time guarantees for real-time applications.&nbsp;</p> <p><br />We have also studied large amount of virtual machine launch data obtained through collaboration with Fermilab on FermiCloud. &nbsp;The analysis of these data indicates that there are large variations when launching a virtual machine both &nbsp;on a private and a public cloud. &nbsp;Based on over &nbsp;three months &nbsp;data collected on both private and public clouds, we have developed a cloud resource performance variation model that allows us to predict the resource startup overhead. &nbsp;The reference model is a small but an important step forward to pave the road for deploying real-time app...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ As modern computer system advances, more and more distributed applications with multiple QoS requirements are emerging, such as waste water and natural water monitoring and control. It has become an urgent need to develop techniques that guarantee applications' QoS constraints and decrease the complexity of implementing such systems. Through this project, we have developed a new paradigm that utilizes the separation of concern design principle to simplify the design and development of distributed real-time applications. In particular, the developed design and implementation paradigm separates coordination among distributed objects from the functionalities of the objects themselves. We have also developed a set of effective methods and techniques to maintain deployed real-time application's QoS requirements.   We have addressed the challenge of developing and implementing distributed real-time applications in open environment from both system implementation simplification and multi-QoS guarantee perspectives. For system implementation simplification, we have developed a hierarchical Actor-Role-Coordinator (ARC) programming model to simplify the system design and implementation. We have also developed a concept lattice based event model for high level semantic reasoning and a eUML-ARC model for concurrency programming to further reduce the system implementation complexity and improve development efficiency. For multi-dimensional QoS guarantees, we have developed a similarity based measurement to quantify the satisfaction of multi-dimensional QoS requirements. We have also developed information hiding and voting algorithms to guarantee system's availability, reliability in open distributed environment.  In addition,  a profit-penalty aware scheduling algorithm to maximize system profit while guaranteeing application's QoS requirements, a minimal slack time and minimal distance scheduling algorithm to minimize the cost for guaranteeing real-time application's timing constraint in cloud environment have been developed.    In addition to system level implementation simplification and scheduling algorithm development, we have also addressed the QoS guaranteeing problem from considering resource performance change perspective.  Traditionally, system resources are considered as constant and they do not change over their life time.  Such assumptions are not valid for real-time applications which often operate for long time.  In fact, resource performance degrades overtime, which is evidenced by all computer users' own experiences --- our computers get slower if they have been running for long time without a reboot.  Software aging is identified as one of the main causes of resource performance degradation, software rejuvenation is a commonly used effective technique to combat performance degradations.  We have developed a novel resource model, i.e., the $P^2$ resource model, that takes into consideration of performance-degradation and periodic-rejuvenation.  The $P^2$ resource model generalizes traditional resource models existed in the literature. Based on the $P^2$ resource model, we have developed a set of theory and scheduling algorithm to ensure real-time guarantees for real-time applications.    We have also studied large amount of virtual machine launch data obtained through collaboration with Fermilab on FermiCloud.  The analysis of these data indicates that there are large variations when launching a virtual machine both  on a private and a public cloud.  Based on over  three months  data collected on both private and public clouds, we have developed a cloud resource performance variation model that allows us to predict the resource startup overhead.  The reference model is a small but an important step forward to pave the road for deploying real-time applications on computer clouds.    The developed models, algorithms, methodologies, and techniques are steps made toward reducing the complexity of developing and deploying dist...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

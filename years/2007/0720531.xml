<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR-AES: Optimizations for Optimistic Parallelization Systems</AwardTitle>
<AwardEffectiveDate>08/01/2007</AwardEffectiveDate>
<AwardExpirationDate>07/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>300000.00</AwardTotalIntnAmount>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>D. Helen Gill</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Most current general-purpose processors have two to four cores, and &lt;br/&gt;the number of cores on processor chips is expected to double every &lt;br/&gt;one and half years. Applications run efficiently on such processors &lt;br/&gt;only if they exploit coarse-grain parallelism. However, parallel programming&lt;br/&gt;has so far been successful only for applications that deal with structured data&lt;br/&gt;such as arrays and relations; unfortunately, most general-purpose applications deal with unstructured data such as graphs and trees. This project is focused&lt;br/&gt;on the exploitation of a particular kind of data parallelism in irregular&lt;br/&gt;applications that arises from the use of unordered and ordered worklists. Optimistic parallelization is the key mechanism for obtaining parallelism in such applications. A runtime system is used to manage the optimistic parallelism, and compiler analyses are used to optimize parallel execution. Finally, programs are further optimized using dynamic code specialization as the program executes. To investigate the scalability of this approach, the project uses multicore hardware prototypes based on field-programmable gate-arrays. If successful, the project will go a long way towards solving the pressing problem of writing software for multicore processors. &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;  &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/21/2007</MinAmdLetterDate>
<MaxAmdLetterDate>07/22/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0720531</AwardID>
<Investigator>
<FirstName>Guang</FirstName>
<LastName>Gao</LastName>
<EmailAddress>ggao@udel.edu</EmailAddress>
<StartDate>08/21/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Delaware</Name>
<CityName>Newark</CityName>
<ZipCode>197160099</ZipCode>
<PhoneNumber>3028312136</PhoneNumber>
<StreetAddress>210 Hullihen Hall</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Delaware</StateName>
<StateCode>DE</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:    Active Block Layer Extensions:    A Foundation for Building Self-Managing Storage Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2008</AwardEffectiveDate>
<AwardExpirationDate>01/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>476000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Thyagarajan Nandagopal</SignBlockName>
<PO_EMAI>tnandago@nsf.gov</PO_EMAI>
<PO_PHON>7032924550</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Storage systems are rapidly increasing in both complexity and size. There is a general consensus among both researchers and practitioners that self-management is a critical next step in their evolution. Self-managing storage systems will automatically adapt to changes in the operational environment and the application workload characteristics, to meet administrator-specified system goals. However, such systems are extremely hard to build and deploy correctly due to the complexities of the programming environment itself - the operating system, as well as the poorly understood behavioral, correctness, and interaction properties of self-management extensions. As a consequence, the pace of innovation of reliable, self-management extensions is far from adequate to meet current needs. The Active Block Layer Extensions (ABLE) project develops a library of core block layer primitives, a reasoning engine that analyzes individual and collective service behavior, and accompanying reasoning, testing, and configuration tools. The ABLE project also develops self-management solutions targeting power management, performance, scalability, and security, that serve as development examples and help refine the software infrastructure. The project will produce an OS infrastructure API and several self-management extensions as software artifacts. These will simplify and standardize block layer service development and deployment by reducing developer error, accelerating the development cycle, and providing reasoning and configuration tools to the administrator that aid robust deployment. The ABLE project will also provide cutting-edge research experience to students at Florida International University, a minority institution. All ABLE software will be open-source and made available through the project web-site.</AbstractNarration>
<MinAmdLetterDate>01/24/2008</MinAmdLetterDate>
<MaxAmdLetterDate>05/06/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0747038</AwardID>
<Investigator>
<FirstName>Raju</FirstName>
<LastName>Rangaswami</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Raju Rangaswami</PI_FULL_NAME>
<EmailAddress>raju@cs.fiu.edu</EmailAddress>
<PI_PHON>3053486230</PI_PHON>
<NSF_ID>000488807</NSF_ID>
<StartDate>01/24/2008</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Florida International University</Name>
<CityName>Miami</CityName>
<ZipCode>331990001</ZipCode>
<PhoneNumber>3053482494</PhoneNumber>
<StreetAddress>11200 SW 8TH ST</StreetAddress>
<StreetAddress2><![CDATA[MARC 430]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<StateCode>FL</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>FL26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>071298814</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>FLORIDA INTERNATIONAL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>159621697</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Florida International University]]></Name>
<CityName>Miami</CityName>
<StateCode>FL</StateCode>
<ZipCode>331990001</ZipCode>
<StreetAddress><![CDATA[11200 SW 8TH ST]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>FL26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramElement>
<Code>7363</Code>
<Text>Networking Technology and Syst</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7363</Code>
<Text>RES IN NETWORKING TECH &amp; SYS</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2008~80000</FUND_OBLG>
<FUND_OBLG>2009~172000</FUND_OBLG>
<FUND_OBLG>2010~16000</FUND_OBLG>
<FUND_OBLG>2011~96000</FUND_OBLG>
<FUND_OBLG>2012~96000</FUND_OBLG>
<FUND_OBLG>2013~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Storage stacks are becoming increasingly complex with many layers of built-in services to choose from and combine as necessary into a well-suited storage system. This task is currently difficult and the complexity increases as the number of services sought increases.</p> <p><br />The currently available theories do not allow reasoning about multiple storage extensions (or features) when used in concert. For instance, the Windows stack has over 18 such features available to be used including deduplication, encryption, replication, etc. &nbsp;The Active Block Layer Extensions (ABLE) project addresses this core gap. The theory of dominance and effectiveness when multiple block-layer extensions are used in concert add to the existing knowledge base by providing key frameworks for reasoning about the overall behavior of the storage stack. In particular, the dominance theory allows reliabile, automatic, administrator-guided, reasoning about how a storage stack performs relative to specific system level goals. The complementary theory of effectiveness highlights the limits of applicability of a dominance-only theory and provides additional reasoning capability that suggest subtle reasoning of storage stack behavior. We anticipate this work to be a critical and valuable tool in the storage administrator's tool-chain that will enable him to deploy systems are are better suited to meet the workload requirements.&nbsp;</p><br> <p>            Last Modified: 04/23/2014<br>      Modified by: Raju&nbsp;Rangaswami</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Storage stacks are becoming increasingly complex with many layers of built-in services to choose from and combine as necessary into a well-suited storage system. This task is currently difficult and the complexity increases as the number of services sought increases.   The currently available theories do not allow reasoning about multiple storage extensions (or features) when used in concert. For instance, the Windows stack has over 18 such features available to be used including deduplication, encryption, replication, etc.  The Active Block Layer Extensions (ABLE) project addresses this core gap. The theory of dominance and effectiveness when multiple block-layer extensions are used in concert add to the existing knowledge base by providing key frameworks for reasoning about the overall behavior of the storage stack. In particular, the dominance theory allows reliabile, automatic, administrator-guided, reasoning about how a storage stack performs relative to specific system level goals. The complementary theory of effectiveness highlights the limits of applicability of a dominance-only theory and provides additional reasoning capability that suggest subtle reasoning of storage stack behavior. We anticipate this work to be a critical and valuable tool in the storage administrator's tool-chain that will enable him to deploy systems are are better suited to meet the workload requirements.        Last Modified: 04/23/2014       Submitted by: Raju Rangaswami]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

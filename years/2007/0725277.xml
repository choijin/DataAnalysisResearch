<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SoD: Supporting Cased-Based Design for Packaged Software Implementations</AwardTitle>
<AwardEffectiveDate>07/15/2007</AwardEffectiveDate>
<AwardExpirationDate>06/30/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>315942</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anita La Salle</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This project focuses on Case-Based Design (CBD). CBD addresses the lack of an organized design theory for the class of software identified as packaged software. CBD reuses existing design knowledge to create new design knowledge, thus relying on a continuous cycle of knowledge creation. CBD profits from this project through the creation of a theoretical framework of case-based design as an organizational knowledge creation process as well as from an innovative tool to support CBD in packaged software implementations. The tool allows users to collaboratively create, edit and classify design cases. Users are able to explore complex design spaces along multiple user-evolved facets. The tool systematically recommends existing designs for reuse in new situations by utilizing user classifications and recommendation efforts. The fundamental belief is that by utilizing the collective power of a large group of people, better designs can be achieved at lower costs with lower risks. &lt;br/&gt;&lt;br/&gt;The motivations for this project are the problems imposed by the increasing trend in information systems to use large software packages such as ERP (Enterprise Resource Planning) software. Particularly problematical are large system implementation complexities and on-going maintenance. These software systems are rarely used as packaged. Rather, they are customized, redesigned, enhanced, expanded, and integrated into other existing and evolving systems. Design in packaged software implementation (PSI) is the process of solving business problems by customizing and integrating the off-the-shelf software package. Design in PSI focuses on the add-on software components or modifications to the out-of-box software package. Effective and efficient designs can bring substantial returns and lower implementation costs and may eventually lead to wider adoption of packaged software. This benefits not only the software vendors but also society by lowering custom software development efforts of reinventing the wheel. However, there has been a lack of common design methodologies and CASE (Computer Aided Software Engineering) tools for PSI. Designs in PSI rely heavily on previous design experience. In fact, PSI experts frequently practice case-based design (CBD) when facing a new problem situation. They explore the past design cases, find a similar case, and reuse the design for that case in the new problem situation. As the same software package is being deployed in many implementations, CBD can significantly improve the quality, reduce the cost and lower the risks of designs. However, CBD can only be as good as the knowledge base of design cases. One of the challenges to utilizing CBD is the lack of CASE tools that support growing the design knowledge base. Consequently, this project develops and evaluates an open-source tool to support case-based design (CBD) in packaged software implementations (PSI). If used effectively with a large design knowledge base, case-based design can significantly reduce the cost, lower the risks and improve the quality of designs.</AbstractNarration>
<MinAmdLetterDate>07/11/2007</MinAmdLetterDate>
<MaxAmdLetterDate>07/30/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0725277</AwardID>
<Investigator>
<FirstName>Harris</FirstName>
<LastName>Wu</LastName>
<EmailAddress>hwu@odu.edu</EmailAddress>
<StartDate>07/11/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Old Dominion University Research Foundation</Name>
<CityName>Norfolk</CityName>
<ZipCode>235082561</ZipCode>
<PhoneNumber>7576834293</PhoneNumber>
<StreetAddress>4111 Monarch Way</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramElement>
<Code>7652</Code>
<Text>SCIENCE OF DESIGN</Text>
</ProgramElement>
<ProgramReference>
<Code>7652</Code>
<Text>SCIENCE OF DESIGN</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle> New Handles on Program Correctness</AwardTitle>
<AwardEffectiveDate>09/01/2007</AwardEffectiveDate>
<AwardExpirationDate>08/31/2011</AwardExpirationDate>
<AwardAmount>300000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Balasubramanian Kalyanasundaram</SignBlockName>
</ProgramOfficer>
<AbstractNarration>One of the main challenges of software engineering is verifying the correctness of software. In the eighties the methodology of program `result checking' and `result correcting' was introduced.  This approach focuses on correctness of the code  per input rather than full program verification.&lt;br/&gt;The current investigation will revisit the result checking and correcting methodology, emphasizing a general complexity theoretic approach rather than the function specific approach pursued earlier.&lt;br/&gt;The intellectual merit of the project is that it will broaden our understanding of how to design general purpose program checkers and correctors, teach methods to exploit fast heuristics without sacrificing correctness, and study, in depth, the relation between the property testing field and program checking and correcting. The project promises to have broad impact on the reliability of&lt;br/&gt;software.&lt;br/&gt;&lt;br/&gt;This research involves, the following directions:&lt;br/&gt;1. Characterize general {\it classes} of functions which posses efficient checkers and correctors.&lt;br/&gt;2. Introduce a new model for program checking and correcting in which the checker and corrector&lt;br/&gt;have access to a short advice string in addition to the program to be checked and corrected. The advice-string is computed off-line ahead of on-line checking of programs. Such model allows treating more general function families than previously done. In particular, it allows the design of a single checker and corrector for many functions, where each individual function is associated with a different advice string.&lt;br/&gt;3. Pursue new measures of efficiency for program checkers and correctors which will circumvent some of the challenges which arise in the field.  In the advice model, the length of the advice will be incorporated into the complexity of the checking procedure and may be traded with the number of on-line calls of the checker to the program to be checked.&lt;br/&gt;4. Harness the remarkable progress made in the field of property testing to the testing and correcting of programs.&lt;br/&gt;5. Explore how the notions of program testers and correctors may enable the convertion of fast heuristics into correct programs with improved average case running time.&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/07/2007</MinAmdLetterDate>
<MaxAmdLetterDate>09/07/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0729011</AwardID>
<Investigator>
<FirstName>Shafrira</FirstName>
<LastName>Goldwasser</LastName>
<EmailAddress>shafi.goldwasser@berkeley.edu</EmailAddress>
<StartDate>09/07/2007</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2860</Code>
<Text>THEORY OF COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR---AES: Runtime Monitoring and Model Checking for High-Confidence System Software</AwardTitle>
<AwardEffectiveDate>07/01/2005</AwardEffectiveDate>
<AwardExpirationDate>06/30/2010</AwardExpirationDate>
<AwardAmount>830000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Mohamed G. Gouda</SignBlockName>
</ProgramOfficer>
<AbstractNarration>System software, such as operating system (OS) kernels and middleware for distributed systems, is quite difficult to develop and maintain because it is: (1) asynchronous and event-driven in nature; (2) often written in the type-unsafe C programming language; and (3) complicated by numerous data structures, caches, locks, and reference counts, all intended to improve performance. System software also provides the critical infrastructure on which all other applications must run, and should therefore elicit a sense of high confidence from its developers and users. Static analysis techniques have matured to the point where they can catch a number of misuse errors (e.g., incorrect usage of an API), and model checking has proven effective in catching more insidious data-dependent bugs.&lt;br/&gt;&lt;br/&gt;The goal of this project is to develop advanced model-checking techniques, coupled with OS code instrumentation, to achieve always-on monitoring of system software.  The proposed effort will result in the development of compiler and model-checking tools that allow formal modeling and verification to be applied to complex software packages. Embedded in the tools will be heuristics to quantify confidence levels for software components, and methods to balance confidence levels with the intensity of runtime checking. Techniques will be developed to explore models and produce actual test cases from CCMs, possibly feeding results back into model updates, until an equilibrium is reached. Finally, the formal verification of an embedded Linux kernel, which is used in numerous critical systems around the world, will be conducted.&lt;br/&gt; &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/22/2005</MinAmdLetterDate>
<MaxAmdLetterDate>04/23/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0509230</AwardID>
<Investigator>
<FirstName>Scott</FirstName>
<LastName>Smolka</LastName>
<EmailAddress>sas@cs.stonybrook.edu</EmailAddress>
<StartDate>06/22/2005</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Yanhong</FirstName>
<LastName>Liu</LastName>
<EmailAddress>liu@cs.stonybrook.edu</EmailAddress>
<StartDate>06/22/2005</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Scott</FirstName>
<LastName>Stoller</LastName>
<EmailAddress>stoller@cs.stonybrook.edu</EmailAddress>
<StartDate>06/22/2005</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Radu</FirstName>
<LastName>Grosu</LastName>
<EmailAddress>grosu@cs.sunysb.edu</EmailAddress>
<StartDate>06/22/2005</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Erez</FirstName>
<LastName>Zadok</LastName>
<EmailAddress>ezk@cs.stonybrook.edu</EmailAddress>
<StartDate>06/22/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Stony Brook</Name>
<CityName>Stony Brook</CityName>
<ZipCode>117940001</ZipCode>
<PhoneNumber>6316329949</PhoneNumber>
<StreetAddress>WEST 5510 FRK MEL LIB</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>Computer Systems Research (CSR</Text>
</ProgramElement>
<ProgramReference>
<Code>2884</Code>
<Text>NEXT GENERATION SOFTWARE PROGR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

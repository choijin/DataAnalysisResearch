<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Towards Virtual Distributed Environments in a Shared Distributed Infrastructure</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2006</AwardEffectiveDate>
<AwardExpirationDate>01/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Krishna Kant</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Despite the rapid growth of distributed shared infrastructures such as PlanetLab and the Grid, a gap exists between the current practice and their full potential. Especially, many users wish to obtain their "own space" with full privilege in a shared infrastructure to run arbitrary distributed applications. This research introduces the concept of "virtual distributed environments" (VDEs) as a new sharing paradigm for distributed infrastructures. Based on virtualization technologies, VDEs are autonomic, mutually isolated entities, providing individual users with privileged, customized, and confined distributed environments. To realize this vision, the following new research challenges are being addressed: (1) distributed environment virtualization and logistics, (2) shepherded self-adaptation of virtual distributed environments, and (3) trusted monitoring and logging of virtual distributed environments. Solutions to these challenges are evaluated in a number of real-world application scenarios, including computer system emulation for education, e-Science service for the nanotechnology research community, and virtual playgrounds for Internet worm observation, investigation, and defense. In particular, the research and education activities of this work are closely related. Leveraging the research results, an education platform is being developed for distributed and network systems emulation. It provides students with hands-on system experience that would otherwise require expensive, dedicated equipment. This research will open the door to new opportunities for application/service deployment and distributed system experimentation. The realization of VDE will  encourage public use of the emerging cyberinfrastructure by accommodating a wide range of science and engineering activities including education and research portals, virtual collaboratories, and cyber-defense testing grounds.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/23/2006</MinAmdLetterDate>
<MaxAmdLetterDate>03/04/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0546173</AwardID>
<Investigator>
<FirstName>Dongyan</FirstName>
<LastName>Xu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dongyan Xu</PI_FULL_NAME>
<EmailAddress>dxu@cs.purdue.edu</EmailAddress>
<PI_PHON>7654946182</PI_PHON>
<NSF_ID>000295392</NSF_ID>
<StartDate>01/23/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<StreetAddress2><![CDATA[155 S Grant Street]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>072051394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>PURDUE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>072051394</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Purdue University]]></Name>
<CityName>West Lafayette</CityName>
<StateCode>IN</StateCode>
<ZipCode>479072114</ZipCode>
<StreetAddress><![CDATA[Young Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>2876</Code>
<Text>DISTRIBUTED SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0106</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2006~75729</FUND_OBLG>
<FUND_OBLG>2007~86572</FUND_OBLG>
<FUND_OBLG>2008~97453</FUND_OBLG>
<FUND_OBLG>2009~68812</FUND_OBLG>
<FUND_OBLG>2010~71434</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This research addresses the problem of efficient, effective, and secure utilization of shared cyber infrastructures such as clouds, grids, and compute clusters. In particular, it responds to many users&rsquo; need to obtain their &ldquo;own workspaces&rdquo; in a shared infrastructure, with full administrative privilege, customized software, and system resource share. To meet such requirements, we propose the concept of Virtual Distributed Environments (VDEs) as a new sharing paradigm for &ldquo;slicing up&rdquo; a physical distributed infrastructure, with each &ldquo;slice&rdquo; being a VDE. As a &ldquo;first-class&rdquo; entity in the shared infrastructure, the VDE consists of multiple virtual machines (VMs) connected by its own virtual network.</p> <p>Based on virtualization technologies, VDEs achieve mutual isolation between each other, providing their respective users (or user groups) with privileged, confined, and customized distributed environments to run and interact with their applications (including legacy applications) or experiments.</p> <p>This research has addressed challenges in multiple aspects of VDEs, including enabling virtualization techniques, resource management, security, and reliability.</p> <ul> <li>Distributed virtualization: We have developed a software system called VIOLIN, as an instantiation of the VDE concept. VIOLIN is among the first to realize distributed virtualization of computing infrastructures, not just individual machines. VIOLIN supports the execution of unmodified parallel/distributed applications with customized software and system configuration. A VIOLIN can be migrated live from one network domain to another, without interrupting the applications running inside. The resource allocation, scale, and topology of a VIOLIN can be dynamically adjusted in response to application needs. &nbsp;</li> </ul> <ul> <li>Adaptive resource provisioning: One unique feature of VIOLIN is its autonomic resource provisioning capability. In conventional scenarios, applications adapt to underlying infrastructural resource changes; whereas in VIOLIN, the (virtual) infrastructure adapts to changes of application resource demands. To prevent untrusted applications from abusing such capability, a shepherded resource adaptation mechanism was developed to observe application behavior from outside the VIOLIN. Such observation will then be used to justify and approve VIOLIN adaptation requests (e.g., increasing a VM&rsquo;s CPU share, migrating VMs to new locations, etc.) </li> </ul> <ul> <li>Security and accountability: We set up two lines of defense for VIOLIN against malware attacks. As the first line of defense, a system service randomization mechanism was developed to randomly shuffle the system/library call interface of a VM, so that the multiple VMs in the same VIOLIN will exhibit different system service interfaces. As a result, a malware attack assuming the &ldquo;default&rdquo; interface is likely to fail. Even if it succeeds with one VM, it will not be able to compromise other VMs because of their interface diversity. As the second line of defense, a &ldquo;color&rdquo;-based logging mechanism was developed to visualize the information flows between application processes (including those malicious ones) running in a VIOLIN. Such a mechanism helps detect an attack, pinpoint its &ldquo;break-in&rdquo; point (namely, a vulnerable program that let the attack in), and reveal all damages inflicted by the attack. &nbsp;&nbsp;</li> </ul> <ul> <li>Reliability and replayability: Another interesting capability developed for VIOLIN is live snapshot. This capability allows a snapshot of a VIOLIN to be taken, live, while it is running. The snapshot includes the execution, communication, and storage states of the VIOLIN and can be used to restart its execution in the future. Such capability is useful for failure recovery, debugging, and forensics for a VI...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This research addresses the problem of efficient, effective, and secure utilization of shared cyber infrastructures such as clouds, grids, and compute clusters. In particular, it responds to many usersÆ need to obtain their "own workspaces" in a shared infrastructure, with full administrative privilege, customized software, and system resource share. To meet such requirements, we propose the concept of Virtual Distributed Environments (VDEs) as a new sharing paradigm for "slicing up" a physical distributed infrastructure, with each "slice" being a VDE. As a "first-class" entity in the shared infrastructure, the VDE consists of multiple virtual machines (VMs) connected by its own virtual network.  Based on virtualization technologies, VDEs achieve mutual isolation between each other, providing their respective users (or user groups) with privileged, confined, and customized distributed environments to run and interact with their applications (including legacy applications) or experiments.  This research has addressed challenges in multiple aspects of VDEs, including enabling virtualization techniques, resource management, security, and reliability.  Distributed virtualization: We have developed a software system called VIOLIN, as an instantiation of the VDE concept. VIOLIN is among the first to realize distributed virtualization of computing infrastructures, not just individual machines. VIOLIN supports the execution of unmodified parallel/distributed applications with customized software and system configuration. A VIOLIN can be migrated live from one network domain to another, without interrupting the applications running inside. The resource allocation, scale, and topology of a VIOLIN can be dynamically adjusted in response to application needs.     Adaptive resource provisioning: One unique feature of VIOLIN is its autonomic resource provisioning capability. In conventional scenarios, applications adapt to underlying infrastructural resource changes; whereas in VIOLIN, the (virtual) infrastructure adapts to changes of application resource demands. To prevent untrusted applications from abusing such capability, a shepherded resource adaptation mechanism was developed to observe application behavior from outside the VIOLIN. Such observation will then be used to justify and approve VIOLIN adaptation requests (e.g., increasing a VMÆs CPU share, migrating VMs to new locations, etc.)    Security and accountability: We set up two lines of defense for VIOLIN against malware attacks. As the first line of defense, a system service randomization mechanism was developed to randomly shuffle the system/library call interface of a VM, so that the multiple VMs in the same VIOLIN will exhibit different system service interfaces. As a result, a malware attack assuming the "default" interface is likely to fail. Even if it succeeds with one VM, it will not be able to compromise other VMs because of their interface diversity. As the second line of defense, a "color"-based logging mechanism was developed to visualize the information flows between application processes (including those malicious ones) running in a VIOLIN. Such a mechanism helps detect an attack, pinpoint its "break-in" point (namely, a vulnerable program that let the attack in), and reveal all damages inflicted by the attack.      Reliability and replayability: Another interesting capability developed for VIOLIN is live snapshot. This capability allows a snapshot of a VIOLIN to be taken, live, while it is running. The snapshot includes the execution, communication, and storage states of the VIOLIN and can be used to restart its execution in the future. Such capability is useful for failure recovery, debugging, and forensics for a VIOLIN.        This research has generated the following broader impacts:  Contribution to research field: This research has advanced the fields of cloud computing and virtualization. The concept of VDE was proposed even before the wide adoption of "Inf...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

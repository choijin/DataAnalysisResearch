<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: CT-CS: A Center for Correct, Usable, Reliable, Auditable, and Transparent Elections (ACCURATE)</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2005</AwardEffectiveDate>
<AwardExpirationDate>09/30/2011</AwardExpirationDate>
<AwardTotalIntnAmount>669818.00</AwardTotalIntnAmount>
<AwardAmount>803782</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>&lt;br/&gt;Abstract&lt;br/&gt;&lt;br/&gt;Voting systems require end-to-end trustworthiness, commencing with blank ballots and registration lists and concluding with the correct and auditable tallies of the marked ballots, reflecting the choices of the voters. This ballot round trip must resist well financed and organized adversaries that may include the very people who develop, maintain, or deploy the election machinery, and the process must be accessible to all citizens regardless of their disabilities or native language. The center's research investigates software architectures, tamper-resistant hardware, cryptographic protocols, and the role that various verification systems (e.g. paper, audio, cryptographic) can play in electronic voting systems. The center also examines system usability and studies how public policy and administrative procedures can, in combination with technology, better safeguard voting systems.  &lt;br/&gt;&lt;br/&gt;The voting system integrity problem is a paradigmatic hard Cyber Trust problem, requiring trustworthy system architectures, security, integrity, privacy, anonymity, high assurance, and human-machine interfaces. Voting systems must preserve a voter's privacy and anonymity, to reduce risks of voter coercion and bribery, yet they must be sufficiently auditable and transparent to allow for mistakes and errors to be identified and reconciled. This center's research develops a deeper understanding of how to organize, develop, and evaluate not only voting systems, but a wide range of other systems with end-to-end trustworthiness requirements.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>08/16/2005</MinAmdLetterDate>
<MaxAmdLetterDate>07/20/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0524391</AwardID>
<Investigator>
<FirstName>Douglas</FirstName>
<LastName>Jones</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Douglas W Jones</PI_FULL_NAME>
<EmailAddress>douglas-w-jones@uiowa.edu</EmailAddress>
<PI_PHON>3193350740</PI_PHON>
<NSF_ID>000323680</NSF_ID>
<StartDate>08/16/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Iowa</Name>
<CityName>IOWA CITY</CityName>
<ZipCode>522421320</ZipCode>
<PhoneNumber>3193352123</PhoneNumber>
<StreetAddress>2 GILMORE HALL</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<StateCode>IA</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IA02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>062761671</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF IOWA, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>062761671</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Iowa]]></Name>
<CityName>IOWA CITY</CityName>
<StateCode>IA</StateCode>
<ZipCode>522421320</ZipCode>
<StreetAddress><![CDATA[2 GILMORE HALL]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IA02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1640</Code>
<Text>Information Technology Researc</Text>
</ProgramElement>
<ProgramElement>
<Code>7371</Code>
<Text>CYBER TRUST</Text>
</ProgramElement>
<ProgramElement>
<Code>7456</Code>
<Text>ITR-CYBERTRUST</Text>
</ProgramElement>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramReference>
<Code>7254</Code>
<Text>CYBER SECURITY ACT PROPOSALS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0105</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0106</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2005~124273</FUND_OBLG>
<FUND_OBLG>2006~128818</FUND_OBLG>
<FUND_OBLG>2007~416727</FUND_OBLG>
<FUND_OBLG>2010~133964</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The Iowa group affiliated with ACCURATE focused on 3 sub-projects:&nbsp; First, we investigated data diodes -- one-way data links between larger networks, focusing on how they can be used to protect election management systems from hacking while still allowing data export to the Internet.&nbsp; Our solution has potential applications to a wide variety of critical infrastructure protection problems.</p> <p>Our second (and much larger) effort involved an exploration of event logging in voting systems.&nbsp; The ccepted practice in secure computing is to log all critical events in the history of the system.&nbsp; The primary purpose of these logs is to allow auditing and retrospective investigation of problems.&nbsp; We found that existing voting systems log insufficient information.&nbsp; This was driven home in 2006 when several investigations of anomalous results in a congressional election in Sarasota found insufficient evidence to explain what had happened.</p> <p>The default approach to logging in much of the computer industry is to log everything.&nbsp; This would have allowed complete reconstruction of what happened in Sarasota.&nbsp; Unfortunately, this default cannot be used in voting systems.&nbsp; Logging every keypress and screen touch would violate the voter's right to a secret ballot,&nbsp; exposing voters to the risk of bribery or coercion.</p> <p>We designed a logging system for a touch-screen voting system that captures a considerable amount of information about the voter's interaction without recording the voter's actual candidate selections.&nbsp; We then built a voting machine (using an off-the shelf touch-screen laptop computer) that incorporated our logging system and rigged the machine to simulate a number of problems -- touch screen improperly calibrated, insensitive touch screen, deliberate poor ballot design and outright dishonesty.&nbsp; We also allowed the machine to function correctly 1/5 of the time.</p> <p>We conducted an experiment on this machine using the ballot from the 2008 general election in Johnson County Iowa, with 100 subjects ranging in age from 18 to over 80, all of whom had voted in the 2008 election.&nbsp; Each voter was faced with just one type of misbehavior, selected at random, with about 20 subjects serving as a control group by using a machine that did not misbehave.</p> <p>We hypothesized that we could identify, from our enhanced event logs, the nature of the misbehavior (if any).&nbsp; Touch-screen miscalibration was easy to identify.&nbsp; First, we recorded "background touches" in our audit logs.&nbsp; Voters on miscalibrated machines made many more background touches than on well calibrated machines because they missed the "buttons" they were aiming for.&nbsp; Second, when voters do touch "buttons" on the screen, they touch them, on average, somewhat below center,&nbsp; We logged the touch position within a "button", without logging what button was touched (the latter information was recorded only in the electronic "ballot" record).&nbsp; When the average touch position was significantly above center or near the bottom edge of the "button", we could tell that something was amiss.</p> <p>To detect touch-screen insensitivity, we recorded the length of time that subjects pressed the screen.&nbsp; We found that people usually tap a touch screen, letting their finger bounce, but when the system does not respond instantly, they press ( sometimes quite hard).&nbsp; We found that a delay of 1/10 second does not bother voters, but at a delay 1/4 second, we could see a significant increase in the fraction of all touches that were hard presses instead of quick finger bounces.</p> <p>Only one experimenhtal subject was thoroughly stymied by our poor ballot design, so we can speak anecdotally about that, but cannot draw quantitative conclusions.</p> <p>Our dishonest voting machine switched the subject's presidential vote, so a...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The Iowa group affiliated with ACCURATE focused on 3 sub-projects:  First, we investigated data diodes -- one-way data links between larger networks, focusing on how they can be used to protect election management systems from hacking while still allowing data export to the Internet.  Our solution has potential applications to a wide variety of critical infrastructure protection problems.  Our second (and much larger) effort involved an exploration of event logging in voting systems.  The ccepted practice in secure computing is to log all critical events in the history of the system.  The primary purpose of these logs is to allow auditing and retrospective investigation of problems.  We found that existing voting systems log insufficient information.  This was driven home in 2006 when several investigations of anomalous results in a congressional election in Sarasota found insufficient evidence to explain what had happened.  The default approach to logging in much of the computer industry is to log everything.  This would have allowed complete reconstruction of what happened in Sarasota.  Unfortunately, this default cannot be used in voting systems.  Logging every keypress and screen touch would violate the voter's right to a secret ballot,  exposing voters to the risk of bribery or coercion.  We designed a logging system for a touch-screen voting system that captures a considerable amount of information about the voter's interaction without recording the voter's actual candidate selections.  We then built a voting machine (using an off-the shelf touch-screen laptop computer) that incorporated our logging system and rigged the machine to simulate a number of problems -- touch screen improperly calibrated, insensitive touch screen, deliberate poor ballot design and outright dishonesty.  We also allowed the machine to function correctly 1/5 of the time.  We conducted an experiment on this machine using the ballot from the 2008 general election in Johnson County Iowa, with 100 subjects ranging in age from 18 to over 80, all of whom had voted in the 2008 election.  Each voter was faced with just one type of misbehavior, selected at random, with about 20 subjects serving as a control group by using a machine that did not misbehave.  We hypothesized that we could identify, from our enhanced event logs, the nature of the misbehavior (if any).  Touch-screen miscalibration was easy to identify.  First, we recorded "background touches" in our audit logs.  Voters on miscalibrated machines made many more background touches than on well calibrated machines because they missed the "buttons" they were aiming for.  Second, when voters do touch "buttons" on the screen, they touch them, on average, somewhat below center,  We logged the touch position within a "button", without logging what button was touched (the latter information was recorded only in the electronic "ballot" record).  When the average touch position was significantly above center or near the bottom edge of the "button", we could tell that something was amiss.  To detect touch-screen insensitivity, we recorded the length of time that subjects pressed the screen.  We found that people usually tap a touch screen, letting their finger bounce, but when the system does not respond instantly, they press ( sometimes quite hard).  We found that a delay of 1/10 second does not bother voters, but at a delay 1/4 second, we could see a significant increase in the fraction of all touches that were hard presses instead of quick finger bounces.  Only one experimenhtal subject was thoroughly stymied by our poor ballot design, so we can speak anecdotally about that, but cannot draw quantitative conclusions.  Our dishonest voting machine switched the subject's presidential vote, so a voter for McCain saw Obama on the summary screen, and visa versa.  As previous experiments at Rice University led us to predict, many voters did not proofread their summary screens and did not notice this switch.  ...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

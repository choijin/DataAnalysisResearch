<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>Persistent Turing Machines: Beyond the Turing Thesis</AwardTitle>
    <AwardEffectiveDate>09/01/2005</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2006</AwardExpirationDate>
    <AwardAmount>49928</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Dmitry Maslov</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>According to the interactive view of computation, communication happens during the computation, not before or after it. This approach, distinct from concurrency theory and the theory of computation, represents a paradigm shift that changes our understanding of what is computation and how it is modeled. Interaction machines extend Turing machines with interaction to capture the behavior of concurrent systems, promising to bridge these two fields.&lt;br/&gt;&lt;br/&gt;In the November 2004 issue of "Information and Computation", the Principal Investigator and others presented persistent Turing machines (PTMs), an extension to the Turing machine model that is both interactive and persistent. A PTM is a nondeterministic 3-tape Turing machine with a read-only input tape, a read/write work tape, and a write-only output tape. A PTM performs persistent computations in the sense that a notion of ``memory'' (work-tape contents) is maintained from one interaction (computation) step to the next. PTM computations are shown to be more expressive than Turing machine computations. As an analogue of the Church-Turing Thesis, it is hypothesized that PTMs capture the intuitive notion of sequential interactive computation; that is, any sequential interactive computation can be performed by a persistent Turing machine. &lt;br/&gt;&lt;br/&gt;Intellectual Merit.&lt;br/&gt;PTMs capture sequential interaction, which is a limited form of concurrency. This proposal seeks to build on the PTM work, by developing the Theory of Sequential Interactive Computation. In particular, we believe that Sequential Interactive Computation is as robust a notion of computation as the traditional one based on Turing machines, admitting notions analogous to computational complexity, logic, and recursive functions.&lt;br/&gt;&lt;br/&gt;Specifically, we propose to develop complexity measures for PTM computations. For each associated PTM complexity class, we plan to identify sample interactive computations that characterize the class and determine if any of the identified computations are complete for their class. In this manner, we will round out the theory of sequential interactive computation, corresponding to PTM computations, by supplementing its automata-theoretic and transition-system approaches with a complexity-based approach.&lt;br/&gt;&lt;br/&gt;Broader Impact.&lt;br/&gt;It is time to recognize that today's computing applications, such as web services, intelligent agents, operating systems, and graphical user interfaces, cannot be modeled by Turing machines; alternative models are needed. &lt;br/&gt;&lt;br/&gt;The resulting theory of interactive computation will bridge the gap between the historically disjoint fields of the theory of computation and concurrency theory. By identifying the salient features of interaction, our work will enable interactive applications to be written more quickly and more reliably.&lt;br/&gt;&lt;br/&gt;Our findings will be submitted for publication in a timely fashion and presented in seminars in the United States and abroad. Graduate and undergraduate students at the University of Connecticut will be engaged in the research activity.</AbstractNarration>
    <MinAmdLetterDate>08/22/2005</MinAmdLetterDate>
    <MaxAmdLetterDate>08/22/2005</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0545489</AwardID>
    <Investigator>
      <FirstName>Dina</FirstName>
      <LastName>Goldin</LastName>
      <EmailAddress>dqg@engr.uconn.edu</EmailAddress>
      <StartDate>08/22/2005</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Connecticut</Name>
      <CityName>Storrs</CityName>
      <ZipCode>062691133</ZipCode>
      <PhoneNumber>8604863622</PhoneNumber>
      <StreetAddress>438 Whitney Road Ext.</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Connecticut</StateName>
      <StateCode>CT</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
  </Award>
</rootTag>

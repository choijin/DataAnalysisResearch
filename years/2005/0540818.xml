<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Interface-Oriented Programming</AwardTitle>
<AwardEffectiveDate>07/01/2006</AwardEffectiveDate>
<AwardExpirationDate>06/30/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>329237</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Abstract&lt;br/&gt;--------&lt;br/&gt;&lt;br/&gt;CCF-0540818&lt;br/&gt;Matthias Felleisen&lt;br/&gt;Northeastern University&lt;br/&gt;&lt;br/&gt;Interface-Oriented Programming&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Conventional wisdom in the software community demands that software engineers program to interfaces just like engineers in physical disciplines construct artifacts from off-the-rack components with well-defined interfaces.  Empirical data shows, however, that programmers do not use interfaces even in programming languages (such as C# and Java) that support them with explicit syntax.&lt;br/&gt;&lt;br/&gt;The objective of this project is to investigate a radical approach to interface-oriented programming. The PI and his students will design and implement a programming language in which programmers must program to interfaces. Time permitting, they will also explore the construction of supportive software tools for refactoring existing programs into interface-oriented code.  Based on these first steps, they will then explore how (student) programmers work in such a radically interface-oriented context and what effects it has on software design.   The lessons learned from this investigation will have a broader impact than just the immediate academic research community. It will help the designers of programming languages with the next&lt;br/&gt;generation of OOP languages; it will suggest how programming environments can assist programmers with software tools to achieve certain standards; and it will provide guidance to software engineering educators who wish to teach interface-oriented programming.</AbstractNarration>
<MinAmdLetterDate>04/18/2006</MinAmdLetterDate>
<MaxAmdLetterDate>05/07/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0540818</AwardID>
<Investigator>
<FirstName>Matthias</FirstName>
<LastName>Felleisen</LastName>
<EmailAddress>matthias@ccs.neu.edu</EmailAddress>
<StartDate>04/18/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northeastern University</Name>
<CityName>BOSTON</CityName>
<ZipCode>021155005</ZipCode>
<PhoneNumber>6173733004</PhoneNumber>
<StreetAddress>360 HUNTINGTON AVE</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>2880</Code>
<Text>SOFTWARE ENGINEERING AND LANGU</Text>
</ProgramElement>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

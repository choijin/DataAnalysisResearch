<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ST-CRTS:    Collaborative:   Delivering on Atomic Actions:    Unlocking Concurrency for Ordinary Programmers</AwardTitle>
<AwardEffectiveDate>02/01/2006</AwardEffectiveDate>
<AwardExpirationDate>01/31/2010</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>291999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Background &lt;br/&gt;&lt;br/&gt;Widely recognized problems of programming with threads and locks include race conditions, &lt;br/&gt;priority inversion, and deadlock, problems notoriously difficult both to avoid and to diagnose. &lt;br/&gt;We need better abstractions for ordinary programmers to use to exploit concurrency. A promising &lt;br/&gt;direction that solves the problems with locks is the various forms of atomic action (AA). &lt;br/&gt;An AA is a collection of computational actions that are guaranteed to appear to occur: either &lt;br/&gt;entirely or not at all, and in a definite order with respect to other AAs. Atom-like notions &lt;br/&gt;have enjoyed great success in database applications. &lt;br/&gt;&lt;br/&gt;Intellectual Merit &lt;br/&gt;&lt;br/&gt;-A precise programming model for AAs, with a focus on closed and open nesting. &lt;br/&gt;- Overheads of alternative AA implementations on existing hardware. &lt;br/&gt;- Performance benefits of AAs resulting from increased parallelism, despite their overheads. &lt;br/&gt;- Hardware-assist for AAs: hardware interfaces (APIs) and virtualization to mask hardware limits. &lt;br/&gt;- AAs vis-a-vis non-transactional activities such as I/O, networking, etc. &lt;br/&gt;- AAs vis-a-vis run-time services such as garbage collection (GC), exceptions, and traps. &lt;br/&gt;- Tools for profiling and tuning performance of AAs, and their refinement re: bottlenecks. &lt;br/&gt;&lt;br/&gt;Broader Impact &lt;br/&gt;&lt;br/&gt;Delivering on AAs will lead to significant economic and security benefits &lt;br/&gt;through improved robustness and performance of applications for new commodity hardware. AAs &lt;br/&gt;will make it possible to increase concurrency, and thus performance, of software while also increasing &lt;br/&gt;reliability and simplifying tuning and maintenance. Ordinary programmers will more readily exploit &lt;br/&gt;thread-level parallelism on the desktop, writing programs they could not write, and get to work, before. &lt;br/&gt;The project will benefit the hardware industry by exploiting their new offerings, and the software &lt;br/&gt;industry by increasing the robustness of concurrent software, while also contributing to economic and &lt;br/&gt;national security. All project results and tools will be available to the public, and the project will train &lt;br/&gt;graduates in important high-demand skills, and thus contribute to the technical work-force. &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/18/2006</MinAmdLetterDate>
<MaxAmdLetterDate>04/22/2008</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0540866</AwardID>
<Investigator>
<FirstName>Antony</FirstName>
<LastName>Hosking</LastName>
<EmailAddress>hosking@cs.umass.edu</EmailAddress>
<StartDate>01/18/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7329</Code>
<Text>COMPILERS</Text>
</ProgramElement>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramReference>
<Code>7329</Code>
<Text>COMPILERS</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

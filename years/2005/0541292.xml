<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>ON-Core: Single-thread Performance via Multi-core Aggregation</AwardTitle>
<AwardEffectiveDate>05/01/2006</AwardEffectiveDate>
<AwardExpirationDate>04/30/2009</AwardExpirationDate>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Chitaranjan Das</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Current technology trends predict continued transistor shrinking but less improvement in switching speeds and energy efficiency. These trends have led industrial and academic computer architects to abandon their traditional staples of single-thread performance and high-clock rate designs and to rally around multi-core designs as the best hope for continued exponential improvements in performance and power efficiency. Traditional multi-core designs are effective at providing throughput for workloads with abundant explicit thread-level parallelism, but the vast majority of current programs have few or no explicit programmer-visible threads and thus do not observe substantial benefits. &lt;br/&gt;&lt;br/&gt;This proposal describes ON-Core (short for Operand Network Core and pronounced "encore"), a new multi-core design that provides increased single-thread performance by the transparent aggregation of multiple cores. Inspired by both the pioneering speculative multithreading work and recent advances in the scaling of traditional single-core designs, ON-Core abandons the philosophy of adding only minimal speculative multithreading hardware support to an existing multi-core design. Instead, ON-Core uses a new microarchitecture that is specifically designed to support segmentation/aggregation. An ON-Core chip can flexibly act as either a traditional multi-core for high multithreaded throughput or as a tightly integrated speculatively multithreaded multi-core that provides high single-thread performance without compiler support. &lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>04/07/2006</MinAmdLetterDate>
<MaxAmdLetterDate>03/01/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0541292</AwardID>
<Investigator>
<FirstName>Amir</FirstName>
<LastName>Roth</LastName>
<EmailAddress>amir@cis.upenn.edu</EmailAddress>
<StartDate>04/07/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Milo</FirstName>
<LastName>Martin</LastName>
<EmailAddress>milom@cis.upenn.edu</EmailAddress>
<StartDate>04/07/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Pennsylvania</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191046205</ZipCode>
<PhoneNumber>2158987293</PhoneNumber>
<StreetAddress>Research Services</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

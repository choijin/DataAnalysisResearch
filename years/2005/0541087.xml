<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Test Generation and Coverage for Database Applications</AwardTitle>
<AwardEffectiveDate>05/01/2006</AwardEffectiveDate>
<AwardExpirationDate>05/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>318000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Proposal number: 0541087&lt;br/&gt;PI: Phyllis Gail Frankl&lt;br/&gt;Polytechnic University of New York&lt;br/&gt;&lt;br/&gt;TITLE: Test Generation and Coverage for Database Applications&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Database application programs play a central role in our information based society. Given the ubiquitous and, in many cases, critical nature of these systems, testing whether they behave correctly is of great importance. Until recently, there has been little research focused on how to do this effectively. This research project aims to enhance and evaluate a set of testing techniques for database applications.&lt;br/&gt;&lt;br/&gt;Challenges in testing such systems include the large number of database states that must be considered and the need to check whether applications modify the database state correctly. This research builds on previous work, in which tools were developed to generate database states suitable for testing, generate inputs to the application, and check the results of executing the application on those inputs. The first phase of the research &lt;br/&gt;focuses on improving the input generation technique, further automating analysis of the application code, and developing new measures of  test data adequacy. The second phase focuses on empirical evaluation of how &lt;br/&gt;effectively these techniques detect faults in database applications.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>04/03/2006</MinAmdLetterDate>
<MaxAmdLetterDate>06/22/2009</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0541087</AwardID>
<Investigator>
<FirstName>Phyllis Gail</FirstName>
<LastName>Frankl</LastName>
<EmailAddress>pfrankl@nyu.edu</EmailAddress>
<StartDate>04/03/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Polytechnic University of New York</Name>
<CityName>Brooklyn</CityName>
<ZipCode>112013826</ZipCode>
<PhoneNumber>7182603360</PhoneNumber>
<StreetAddress>15 Metrotech Center</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramElement>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramElement>
<ProgramReference>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research:    A Programmable, Efficient, and Dynamic Architecture and Compilation Framework for Networking Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2005</AwardEffectiveDate>
<AwardExpirationDate>08/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>0.00</AwardTotalIntnAmount>
<AwardAmount>309975</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>William H Tranter</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>A Programmable, Efficient, and Dynamic Architecture and Compilation Framework for Networking Applications&lt;br/&gt;Abstract&lt;br/&gt;&lt;br/&gt;The research addresses two closely related concurrent execution models based on coarse-grained and fine-grained multithreading in the context of networking applications. The research will result in multithreaded architecture and execution models to handle the needs for programmability, scalability, dynamic workload handling, and storage intensive features of applications in this domain. In addition, appropriate compilation methods and tools under the proposed architecture execution models will be developed. &lt;br/&gt;&lt;br/&gt; With increasing availability of multithreaded and multicore chip architectures the need for fundamental understanding of application decomposition, performance and programmability is a significant problem. The project will identify architectures, execution models, and software tools that address these issues based on a demanding set of networking applications.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>09/09/2005</MinAmdLetterDate>
<MaxAmdLetterDate>09/15/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0541403</AwardID>
<Investigator>
<FirstName>Jean-Luc</FirstName>
<LastName>Gaudiot</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jean-Luc Gaudiot</PI_FULL_NAME>
<EmailAddress>gaudiot@uci.edu</EmailAddress>
<PI_PHON>9498249748</PI_PHON>
<NSF_ID>000465406</NSF_ID>
<StartDate>09/09/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Irvine</Name>
<CityName>Irvine</CityName>
<ZipCode>926977600</ZipCode>
<PhoneNumber>9498247295</PhoneNumber>
<StreetAddress>160 Aldrich Hall</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>45</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA45</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>046705849</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, IRVINE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Irvine]]></Name>
<CityName>Irvine</CityName>
<StateCode>CA</StateCode>
<ZipCode>926977600</ZipCode>
<StreetAddress><![CDATA[160 Aldrich Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>45</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA45</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>4715</Code>
<Text>COMPUTER SYSTEMS ARCHITECTURE</Text>
</ProgramElement>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0105</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0106</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2005~76340</FUND_OBLG>
<FUND_OBLG>2006~148659</FUND_OBLG>
<FUND_OBLG>2009~44976</FUND_OBLG>
<FUND_OBLG>2010~40000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp;&nbsp;&nbsp; Award Title: Collaborative Research: A Programmable, Efficient, and Dynamic Architecture and Compilation Framework for Networking Applications</p> <p>&nbsp;&nbsp;&nbsp; Federal Award ID: 0541403</p> <p>&nbsp;&nbsp;&nbsp; Report Submission Period: 09/01/2010 to 08/31/2011</p> <p>&nbsp;</p> <p>The original intent of the work, which has been followed through the several years of the project, has been to study the performance of multithreaded models of computing in the context of networking applications. To this end, we have applied a multi-pronged approach to our work and have studied the related issues of application characteristics, models of computation, and compilation strategies. We have started with two styles of multithreaded execution models and their architecture support - the Simultaneous Multithreading (SMT) model and the fine-grain multithreading model such as EARTH (Efficient Architecture for Running THreads) and investigated how to extend and refine them for network applications.</p> <p>Last year, we received supplemental funding to study various implications of the programmability issues associated with the arrival of multicore chips on the commercial scene.&nbsp; We had previously found that existing benchmarks may not possess sufficient parallelism and that there was potential in value prediction techniques to improve on this crucial aspect of parallel processing.&nbsp; We have since pursued work along these lines and studying a variety of network applications.&nbsp; Our analysis results indicate that fine-grain value prediction has a great potential in boosting performance of modern many-core machines.</p> <p>When multiple threads compete for resources, our results indicate that a certain degree of resource sharing control can ensure the on-chip resources are utilized more efficiently, reduce the degree of pipeline clogging due to cache misses, hence boost the performance in SMT micro-architecture. This applies equally to future multi-thread multi-core network processor design.</p><br> <p>            Last Modified: 08/31/2011<br>      Modified by: Jean-Luc&nbsp;Gaudiot</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[     Award Title: Collaborative Research: A Programmable, Efficient, and Dynamic Architecture and Compilation Framework for Networking Applications      Federal Award ID: 0541403      Report Submission Period: 09/01/2010 to 08/31/2011     The original intent of the work, which has been followed through the several years of the project, has been to study the performance of multithreaded models of computing in the context of networking applications. To this end, we have applied a multi-pronged approach to our work and have studied the related issues of application characteristics, models of computation, and compilation strategies. We have started with two styles of multithreaded execution models and their architecture support - the Simultaneous Multithreading (SMT) model and the fine-grain multithreading model such as EARTH (Efficient Architecture for Running THreads) and investigated how to extend and refine them for network applications.  Last year, we received supplemental funding to study various implications of the programmability issues associated with the arrival of multicore chips on the commercial scene.  We had previously found that existing benchmarks may not possess sufficient parallelism and that there was potential in value prediction techniques to improve on this crucial aspect of parallel processing.  We have since pursued work along these lines and studying a variety of network applications.  Our analysis results indicate that fine-grain value prediction has a great potential in boosting performance of modern many-core machines.  When multiple threads compete for resources, our results indicate that a certain degree of resource sharing control can ensure the on-chip resources are utilized more efficiently, reduce the degree of pipeline clogging due to cache misses, hence boost the performance in SMT micro-architecture. This applies equally to future multi-thread multi-core network processor design.       Last Modified: 08/31/2011       Submitted by: Jean-Luc Gaudiot]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>The Component Substitution Problem for Software Systems</AwardTitle>
<AwardEffectiveDate>06/01/2006</AwardEffectiveDate>
<AwardExpirationDate>05/31/2011</AwardExpirationDate>
<AwardTotalIntnAmount>348290.00</AwardTotalIntnAmount>
<AwardAmount>348290</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Proposal Number:  CCF-0541245 &lt;br/&gt;PI : Edmund M. Clarke&lt;br/&gt;Carnegie Mellon University&lt;br/&gt; &lt;br/&gt;Title: The Component Substitution Problem for Software Systems&lt;br/&gt;&lt;br/&gt;Component technologies are gaining acceptance in the software systems engineering community as effective tools for quickly assembling complex software systems. Verification during initial deployment and, more importantly,  after each "component substitution" is crucial. &lt;br/&gt; &lt;br/&gt;Component-based software systems naturally allow scope for applying compositional formal verification techniques, e.g., assume-guarantee reasoning (AGR). The prime bottleneck in applying AGR to industrial systems is the difficulty of manually generating these assumptions. The research will focus on developing a new model checking-based framework that allows designers to replace components on-demand and locally re-verify the correctness of the new assembly. This framework will automatically generate assumptions for  AGR and efficiently reuse the verification results from the previous assembly.  AGR techniques will be developed to handle components interacting via general modes of communication like message-passing and shared memory. Industrial benchmarks will be used to evaluate our research accomplishments. By &lt;br/&gt;exploiting the compositionality of the proposed method, the verification techniques will be able to scale to larger component-based designs.   &lt;br/&gt;&lt;br/&gt;Broader impacts of our research include improvement in dependability of component-based software via efficient verification methods and dissemination of research results in academic courses and publications and publicly available tools.&lt;br/&gt; &lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>05/19/2006</MinAmdLetterDate>
<MaxAmdLetterDate>05/19/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0541245</AwardID>
<Investigator>
<FirstName>Edmund</FirstName>
<LastName>Clarke</LastName>
<EmailAddress>emc@cs.cmu.edu</EmailAddress>
<StartDate>05/19/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramReference>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

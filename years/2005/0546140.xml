<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:  Parallel, Scalable, and Efficient I/O for Network Servers</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/01/2006</AwardEffectiveDate>
<AwardExpirationDate>03/31/2012</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>420000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ahmed Louri</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Networking has become an integral part of modern computer systems, so the architecture of the network subsystem is a critical design consideration. In the past, the performance of the network subsystem has kept up with network bandwidth growth because of the exponential rate of improvement in processor performance. However, to counteract the increasing complexity and wire-limited nature of modern uniprocessors, chip multiprocessing and simultaneous multithreading have emerged as dominant microprocessor architectures. These architectures sacrifice uniprocessor performance growth in favor of increased parallelism, so current network subsystems that rely on single-thread performance will be unable to saturate the network in future systems. This project will develop new network subsystem architectures to efficiently utilize next generation microprocessors and maximize network performance. This research will improve networking parallelism and scalability by considering all levels of the network subsystem, including the operating system's network stack, network device drivers, the I/O system, and network interface hardware. This will result in a restructuring of the hardware and software interfaces within the network subsystem to provide mechanisms for parallel communication and collaborative processing between microprocessors and network interfaces. This project will also be used to expose students to system-level networking issues in both undergraduate and graduate computer systems and architecture courses. &lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>03/08/2006</MinAmdLetterDate>
<MaxAmdLetterDate>06/02/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0546140</AwardID>
<Investigator>
<FirstName>Scott</FirstName>
<LastName>Rixner</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Scott Rixner</PI_FULL_NAME>
<EmailAddress>rixner@rice.edu</EmailAddress>
<PI_PHON>7133486353</PI_PHON>
<NSF_ID>000102366</NSF_ID>
<StartDate>03/08/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>William Marsh Rice University</Name>
<CityName>Houston</CityName>
<ZipCode>770051827</ZipCode>
<PhoneNumber>7133484820</PhoneNumber>
<StreetAddress>6100 MAIN ST</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>050299031</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WILLIAM MARSH RICE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>050299031</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[William Marsh Rice University]]></Name>
<CityName>Houston</CityName>
<StateCode>TX</StateCode>
<ZipCode>770051827</ZipCode>
<StreetAddress><![CDATA[6100 MAIN ST]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7352</Code>
<Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
</ProgramElement>
<ProgramElement>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0106</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2006~80000</FUND_OBLG>
<FUND_OBLG>2007~92000</FUND_OBLG>
<FUND_OBLG>2008~80000</FUND_OBLG>
<FUND_OBLG>2009~80000</FUND_OBLG>
<FUND_OBLG>2010~88000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Network servers, which provide web, email, and other critical network services, are an integral part of the Internet infrastructure.&nbsp; These servers are often virtualized, meaning that a single physical machine might be running multiple, independent network services at the same time.&nbsp; This leads to a significant amount of parallelism, as there are multiple services operating on the same machine and each service typically handles large numbers of simultaneous requests.&nbsp; However, there are significant memory and parallelization bottlenecks that these servers face, which this research has helped to address.</p> <p>The goals of this project were to increase the parallelism, scalability, and efficiency of future network subsystems.&nbsp; There were three main thrusts of this project to achieve these goals.&nbsp; First and foremost, we rearchitected the interfaces between the network interface, the operating system, and the virtualization layer that exists on modern systems.&nbsp; This will increase the parallelism, scalability, and efficiency of future network systems.&nbsp; Second, we developed a programmable and reconfigurable network interface for research and education, called RiceNIC.&nbsp; This network interface facilitated this and&nbsp; other research projects at other institutions.&nbsp; Finally, we exposed students to these types of system architecture issues in the classroom.</p> <p>The activities, findings, and publications of this project come together to form a more complete view of the state of modern network server architectures.&nbsp; This work has shown the impact of physical and virtual hardware and software on parallelism, scalability, and efficiency of network systems. The work has shown that these different components must be considered in concert when designing modern network subsystems.&nbsp; The results of this work show the performance of hardware-only, software-only, and combined hardware/software solutions to improve the network subsystem, making the trade-offs, advantages, and disadvantages of these approaches clear.</p> <p>Furthermore, in addition to the impact on research and education, this research has resulted in three tangible impacts on the current state-of-the-art in network server design.&nbsp; First, our work on network virtualization architectures culminated in our concurrent, direct network access (CDNA) architecture.&nbsp; The CDNA architecture was one early proposal for what has become the SR-IOV standard for direct-access network interfaces in virtualization.&nbsp;Second, the results of our work on I/O scheduling, led to updates in the Xen hypervisor, which were subsequently merged into the Linux kernel at version 2.6.39 in May, 2011.&nbsp; Finally, some of our ideas on network stack parallelization have been adopted into the FreeBSD network stack.&nbsp; Our research in this area is cited as the inspiration and basis for the implementation of connection-level parallelism in FreeBSD.&nbsp;These changes were committed to FreeBSD in June, 2011.&nbsp; While connection-level parallelism is not currently enabled by default in the kernel, it can be turned on with a compile time switch.</p> <p>We also developed and released RiceNIC, a reconfigurable and programmable Gigabit Ethernet network interface card (NIC).&nbsp; RiceNIC is an open platform meant for research and education into network interface design.&nbsp; RiceNIC provides significant computation and storage resources that are largely unutilized when performing the basic tasks of a network interface.&nbsp; The remaining processing and storage resources are available to customize the behavior of RiceNIC.&nbsp; This capability and flexibility makes RiceNIC a valuable platform for research and education into current and future network interface architectures.&nbsp; We have distributed the RiceNIC design to researchers at several institutions.</p> <p>During the cours...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Network servers, which provide web, email, and other critical network services, are an integral part of the Internet infrastructure.  These servers are often virtualized, meaning that a single physical machine might be running multiple, independent network services at the same time.  This leads to a significant amount of parallelism, as there are multiple services operating on the same machine and each service typically handles large numbers of simultaneous requests.  However, there are significant memory and parallelization bottlenecks that these servers face, which this research has helped to address.  The goals of this project were to increase the parallelism, scalability, and efficiency of future network subsystems.  There were three main thrusts of this project to achieve these goals.  First and foremost, we rearchitected the interfaces between the network interface, the operating system, and the virtualization layer that exists on modern systems.  This will increase the parallelism, scalability, and efficiency of future network systems.  Second, we developed a programmable and reconfigurable network interface for research and education, called RiceNIC.  This network interface facilitated this and  other research projects at other institutions.  Finally, we exposed students to these types of system architecture issues in the classroom.  The activities, findings, and publications of this project come together to form a more complete view of the state of modern network server architectures.  This work has shown the impact of physical and virtual hardware and software on parallelism, scalability, and efficiency of network systems. The work has shown that these different components must be considered in concert when designing modern network subsystems.  The results of this work show the performance of hardware-only, software-only, and combined hardware/software solutions to improve the network subsystem, making the trade-offs, advantages, and disadvantages of these approaches clear.  Furthermore, in addition to the impact on research and education, this research has resulted in three tangible impacts on the current state-of-the-art in network server design.  First, our work on network virtualization architectures culminated in our concurrent, direct network access (CDNA) architecture.  The CDNA architecture was one early proposal for what has become the SR-IOV standard for direct-access network interfaces in virtualization. Second, the results of our work on I/O scheduling, led to updates in the Xen hypervisor, which were subsequently merged into the Linux kernel at version 2.6.39 in May, 2011.  Finally, some of our ideas on network stack parallelization have been adopted into the FreeBSD network stack.  Our research in this area is cited as the inspiration and basis for the implementation of connection-level parallelism in FreeBSD. These changes were committed to FreeBSD in June, 2011.  While connection-level parallelism is not currently enabled by default in the kernel, it can be turned on with a compile time switch.  We also developed and released RiceNIC, a reconfigurable and programmable Gigabit Ethernet network interface card (NIC).  RiceNIC is an open platform meant for research and education into network interface design.  RiceNIC provides significant computation and storage resources that are largely unutilized when performing the basic tasks of a network interface.  The remaining processing and storage resources are available to customize the behavior of RiceNIC.  This capability and flexibility makes RiceNIC a valuable platform for research and education into current and future network interface architectures.  We have distributed the RiceNIC design to researchers at several institutions.  During the course of this project, we also expanded students' educational exposure to network systems architectures.  We created a course on network systems architectures to educate students in many aspects of computer engineeri...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

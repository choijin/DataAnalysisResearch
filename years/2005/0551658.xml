<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRI: A Computational Infrastructure for Experimentation on Relaxed Concurrency Abstractions and their Applications</AwardTitle>
<AwardEffectiveDate>03/01/2006</AwardEffectiveDate>
<AwardExpirationDate>02/29/2008</AwardExpirationDate>
<AwardTotalIntnAmount>99979.00</AwardTotalIntnAmount>
<AwardAmount>99979</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rita Rodriguez</SignBlockName>
</ProgramOfficer>
<AbstractNarration>This project, procuring a small cluster of shared-memory parallel machines built with multicore processor engines, aims at exploring approaches to increase concurrency and reduce overheads by relaxing constraints while preserving program semantics. The work &lt;br/&gt;-Explores novel approaches to concurrent and parallel programming,&lt;br/&gt;-Motivates new classes of loosely synchronous parallel algorithms, and&lt;br/&gt;-Spurs future developments in programming paradigms with real applications.&lt;br/&gt;&lt;br/&gt;The project brings together researchers in compiler design and programming languages, runtime environments, and parallel algorithms and applications. The infrastructure creates new synergies by exploring state-of-the-art programming principles and concepts in the context of real applications and motivating novel algorithmic classes capable of tolerating large discrepancies in data access latencies.&lt;br/&gt;The problems of writing concurrent programs effectively and safely in languages like Java or C#, which provide integral support for multithreading, even on existing single processor platforms, become exacerbated when the execution platform supports true parallelism (e.g., on parallel system based on recently developed multi-core processor designs). This work looks at techniques that permit overspecified safety invariants in concurrent programs to be relaxed automatically and dynamically whenever the invariants are not compromised. This investigation leverages work on transaction-based concurrency control and safe speculative execution that permit logically concurrent access to shared regions of code, but which ensure that such accesses do not violate intended serialization invariants. The project studies different transactional and speculative models in a programming language context, explores tradeoffs among these models with respect to safety and performance, and investigates the scalability characteristics of the abstractions developed on the proposed multicluster platform.&lt;br/&gt;&lt;br/&gt;Broader Impact: The work leads to a better understanding of concurrent program construction, and consequently, improved implementations. The project supports a variety of educational related activities, including classroom instruction and workshops. Addressing foundational technologies for many emerging application needs, the project also interacts with industry and contributes to train graduate students. Minority students will be attracted using seminars.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>02/23/2006</MinAmdLetterDate>
<MaxAmdLetterDate>02/23/2006</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0551658</AwardID>
<Investigator>
<FirstName>Antony</FirstName>
<LastName>Hosking</LastName>
<EmailAddress>hosking@cs.umass.edu</EmailAddress>
<StartDate>02/23/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Ananth</FirstName>
<LastName>Grama</LastName>
<EmailAddress>ayg@cs.purdue.edu</EmailAddress>
<StartDate>02/23/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jan</FirstName>
<LastName>Vitek</LastName>
<EmailAddress>j.vitek@neu.edu</EmailAddress>
<StartDate>02/23/2006</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Suresh</FirstName>
<LastName>Jagannathan</LastName>
<EmailAddress>suresh@cs.purdue.edu</EmailAddress>
<StartDate>02/23/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7359</Code>
<Text>CCRI-CISE Cmnty Rsrch Infrstrc</Text>
</ProgramElement>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR --- PDOS: Monitoring and Controlling Multithreaded Distributed Software</AwardTitle>
<AwardEffectiveDate>07/01/2005</AwardEffectiveDate>
<AwardExpirationDate>06/30/2009</AwardExpirationDate>
<AwardAmount>315000</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Krishna Kant</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Failures of computers or an unexpected order of messages leads to subtle bugs in distributed programs. This project is investigating algorithmic and implementation issues in monitoring and controlling multithreaded distributed computations. The techniques in this project are useful for testing distributed Java programs and for fault-tolerance during their execution. The project is investigating techniques in four areas: slicing, dependency tracking, global predicate detection and controlling a computation. Computation slicing is useful in reducing the size of the computation that needs to be analyzed. The project is developing online and distributed algorithms for slicing. Dependency tracking is required for online monitoring of global predicates and is currently done using vector clocks of dimension equal to the number of processes and threads in the system. The project is investigating a technique calledchain clocks that can track dependency in a scalable way even for a large-scale system. Global predicate detection is required to detect bugs during testing or runtime.  The project is investigating detection of temporal logic predicates interpreted over the lattice of global states of a computation. Controlling a computation is useful during the testing phase to steer the computation toward software bugs and during the operation phase to steer it away from any existing software bugs.&lt;br/&gt;&lt;br/&gt;The project is implementing a framework in Java and it will result in theoretical and practical advances in monitoring and testing of concurrent programs. The project is expected to significantly improve the quality and fault-tolerance of distributed software.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>07/08/2005</MinAmdLetterDate>
<MaxAmdLetterDate>03/29/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0509024</AwardID>
<Investigator>
<FirstName>Vijay</FirstName>
<LastName>Garg</LastName>
<EmailAddress>garg@ece.utexas.edu</EmailAddress>
<StartDate>07/08/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at Austin</Name>
<CityName>Austin</CityName>
<ZipCode>787595316</ZipCode>
<PhoneNumber>5124716424</PhoneNumber>
<StreetAddress>3925 W Braker Lane, Ste 3.340</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>7354</Code>
<Text>Computer Systems Research (CSR</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

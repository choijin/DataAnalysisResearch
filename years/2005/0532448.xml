<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:    Streamlining Data Communication in Network Servers</AwardTitle>
<AwardEffectiveDate>05/15/2005</AwardEffectiveDate>
<AwardExpirationDate>04/30/2009</AwardExpirationDate>
<AwardAmount>382796</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Chitaranjan Das</SignBlockName>
</ProgramOfficer>
<AbstractNarration>The growth of the Internet has led to rapid developments in network servers for services such as web content, streaming media, and networked storage. Network servers provide data in many different forms to end-users. Thus their input/output (I/O) units are critical to performance. However, there is a bottleneck in the communication interfaces between the host CPU and the I/O. This causes inefficiencies at both the hardware and software levels. The goal of this research is to improve these communication interfaces to allow server performance to scale with network links of 10 Gigabits per second and beyond.&lt;br/&gt;&lt;br/&gt;This approach utilizes network processors and programmable network interfaces to streamline data communication in network servers. While modern host CPUs have exploited instruction-level parallelism (ILP) and data caches to improve performance, tasks such as TCP/IP networking are not known to be well suited to these techniques. In contrast, the streaming data and connection-level concurrency of TCP/IP maps naturally to the cacheless, multithreaded and multiprocessor cores of network processors, motivating the offloading of a high-performance TCP/IP network stack to such devices. Cooperative computation and storage between the host CPU and the network interface also allows for copy-avoidance on network receive and for reducing costly interrupts by offloading TCP protocol processing from the host to the network interface. The new workloads developed during this research also motivate system-level architectural enhancements for both the host processor and the network processor.&lt;br/&gt;&lt;br/&gt;All software and tools produced through this research will be transferred to the community through open-source distribution. The results of the research are being introduced into courses targeted at freshmen and sophomores to introduce systems-level concepts in computer engineering starting from basics such as bits and transistors and culminating in micro-architecture and systems topics.&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>06/20/2005</MinAmdLetterDate>
<MaxAmdLetterDate>04/12/2007</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>0532448</AwardID>
<Investigator>
<FirstName>Vijay</FirstName>
<LastName>Pai</LastName>
<EmailAddress>vpai@purdue.edu</EmailAddress>
<StartDate>06/20/2005</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Purdue University</Name>
<CityName>West Lafayette</CityName>
<ZipCode>479072114</ZipCode>
<PhoneNumber>7654941055</PhoneNumber>
<StreetAddress>Young Hall</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
</Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4715</Code>
<Text>COMPUTER SYSTEMS ARCHITECTURE</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER: FACULTY EARLY CAR DEV</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>4715</Code>
<Text>COMPUTER SYSTEMS ARCHITECTURE</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
</Award>
</rootTag>

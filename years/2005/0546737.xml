<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER:  VIVA - Vertically Integrated VirtualizAtion:  Automatic, Full System, Specialization for High-End Computing</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2006</AwardEffectiveDate>
<AwardExpirationDate>02/28/2011</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Krishna Kant</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Virtualization has emerged as a key system design technology for reducing the complexity of modern hardware, software systems, and applications, through abstract layering that simplifies reasoning about, and making use of, resources and system services by applications. The benefits of virtualization (e.g. generality, portability, extensibility, and simplifying application debugging, deployment, and development) however, come at a cost in performance since the number, depth, and complexity of layers is increasing. Deep layering introduces additional levels of indirection, additional redundant computation, and increasingly inefficient cross-layer communication. To reduce the overhead of virtualization many developers of high-end systems and services attempt to specialize the layers to the needs of the application by removing or penetrating the layer interfaces. The application and system code are then co-mingled and optimized together, thereby improving performance at the expense of generality, portability, and extensibility. This specialization, at present, is performed almost exclusively by hand in an ad-hoc fashion.  The project will develop new methods and approaches to automate and advance the specialization process under programmatic control through Vertical Integration of Virtualization layers (VIVA). &lt;br/&gt;&lt;br/&gt;The key to the proposed approach is to exploit the increasingly popular trend of isolating entire application, middleware, and operating system (OS) stacks using virtual machine monitors (VMMs) so that each execution instance can employ the layered software it uniquely requires.   VIVA takes advantage of the isolation that such systems provide to aggressively customize and optimize all layers of a system according to the requirements of an executing application eliminating all services that are unused by the program, e.g., OS services for resource sharing and security. Moreover, since  program behavior changes over time and is increasingly data driven, the techniques to be developed will be both dynamic and adaptive.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</AbstractNarration>
<MinAmdLetterDate>01/25/2006</MinAmdLetterDate>
<MaxAmdLetterDate>02/08/2010</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>0546737</AwardID>
<Investigator>
<FirstName>Chandra</FirstName>
<LastName>Krintz</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Chandra Krintz</PI_FULL_NAME>
<EmailAddress>ckrintz@cs.ucsb.edu</EmailAddress>
<PI_PHON>8058934321</PI_PHON>
<NSF_ID>000288955</NSF_ID>
<StartDate>01/25/2006</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of California-Santa Barbara</Name>
<CityName>Santa Barbara</CityName>
<ZipCode>931062050</ZipCode>
<PhoneNumber>8058934188</PhoneNumber>
<StreetAddress>Office of Research</StreetAddress>
<StreetAddress2><![CDATA[Rm 3227 Cheadle Hall]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>24</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA24</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>094878394</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, SANTA BARBARA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>071549000</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of California-Santa Barbara]]></Name>
<CityName>Santa Barbara</CityName>
<StateCode>CA</StateCode>
<ZipCode>931062050</ZipCode>
<StreetAddress><![CDATA[Office of Research]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>24</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA24</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<FoaInformation>
<Code>0000912</Code>
<Name>Computer Science</Name>
</FoaInformation>
<ProgramElement>
<Code>4090</Code>
<Text>ADVANCED NET INFRA &amp; RSCH</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>2884</Code>
<Text>NEXT GENERATION SOFTWARE PROGR</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0106</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0107</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>490100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0108</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0109</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2006~73515</FUND_OBLG>
<FUND_OBLG>2007~75291</FUND_OBLG>
<FUND_OBLG>2008~87283</FUND_OBLG>
<FUND_OBLG>2009~80097</FUND_OBLG>
<FUND_OBLG>2010~83814</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><strong>Project Outcomes Report</strong><strong>:</strong> CAREER: VIVA -- Vertically Integrated VirtualizAtion: Automatic, Full-System, Specialization for High-End Computing    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PI: Chandra Krintz, UC Santa Barbara</p> <p>&nbsp;</p> <p><strong>Intellectual Merit</strong>: Virtualization has emerged as a key system design technology for reducing the complexity of modern hardware, software systems, and applications, through abstract layering that simplifies reasoning about, and making use of, resources and system services by applications.&nbsp; The benefits of virtualization (e.g. generality, portability, extensibility, and simplifying application debugging, deployment, and development) however, come at a cost in performance since the number, depth, and complexity of layers is increasing.&nbsp; Deep layering introduces additional levels of indirection, additional redundant computation, and increasingly inefficient cross-layer communication. To reduce the overhead of virtualization, our work attempts to <em>specialize</em> the layers to the needs of the application by removing or penetrating the layer interfaces.&nbsp; The application and system code are then co-mingled and optimized together, thereby improving performance at the expense of generality, portability, and extensibility. Our approach, called <strong><em>Vertical Integration of VirtualizAtion layers (VIVA</em></strong>), takes advantage of increasing layers that provide isolation to aggressively customize and optimize <em>all layers</em> of a system according to the requirements of an executing application. Moreover, since program behavior changes over time and is increasingly data driven, our techniques are both dynamic and adaptive.</p> <p>Our work has lead to a wide range of scientific advances in the area of programming language runtime and distributed systems. In particular, we have designed and developed novel profiling systems, techniques that better exploit available multi-core processors, integrated runtime and operating system optimizations, and high-performance multi-language runtime interoperation.&nbsp; The software artifacts we contribute include in new technologies for full-system profiling and performance tracking across software revisions, efficient parallel and concurrent application and workload execution, hardware-software coordination and interoperation for profile-directed instruction prefetching, OS/Runtime support for memory management, and OS/Runtime support for cross-runtime and cross-language shared memory (XMem and CoLoRS). Recently, we have expanded these activities to target distributed cluster systems (as opposed to individual computers) and we combine and distribute our technologies as open source as part of AppScale &ndash; the first open source distributed runtime system for cloud computing applications and services. &nbsp;All of our results and software artifacts provide significant reductions in program execution time (up to orders of magnitude in some cases), simplify extant software systems, and advance parallel and concurrent programming systems.</p> <p><strong>Broad Impact: </strong>VIVA preserves the benefits of virtualization and layering for design, software engineering, portability, and generality, while easing the maintenance burden implied by specialized implementation. Our work, thus, makes automatic, full-system, customization of applications accessible to a large developer base.&nbsp; In addition, this project has provided us with the opportunity to develop the expertise necessary to improve our CS curriculum and to perform outreach that positively affects students from underrepresented groups in different ways. Our novel curricular directions in the CS department at UCSB include new lectures and projects on virtualization and full-s...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Project Outcomes Report: CAREER: VIVA -- Vertically Integrated VirtualizAtion: Automatic, Full-System, Specialization for High-End Computing                          PI: Chandra Krintz, UC Santa Barbara     Intellectual Merit: Virtualization has emerged as a key system design technology for reducing the complexity of modern hardware, software systems, and applications, through abstract layering that simplifies reasoning about, and making use of, resources and system services by applications.  The benefits of virtualization (e.g. generality, portability, extensibility, and simplifying application debugging, deployment, and development) however, come at a cost in performance since the number, depth, and complexity of layers is increasing.  Deep layering introduces additional levels of indirection, additional redundant computation, and increasingly inefficient cross-layer communication. To reduce the overhead of virtualization, our work attempts to specialize the layers to the needs of the application by removing or penetrating the layer interfaces.  The application and system code are then co-mingled and optimized together, thereby improving performance at the expense of generality, portability, and extensibility. Our approach, called Vertical Integration of VirtualizAtion layers (VIVA), takes advantage of increasing layers that provide isolation to aggressively customize and optimize all layers of a system according to the requirements of an executing application. Moreover, since program behavior changes over time and is increasingly data driven, our techniques are both dynamic and adaptive.  Our work has lead to a wide range of scientific advances in the area of programming language runtime and distributed systems. In particular, we have designed and developed novel profiling systems, techniques that better exploit available multi-core processors, integrated runtime and operating system optimizations, and high-performance multi-language runtime interoperation.  The software artifacts we contribute include in new technologies for full-system profiling and performance tracking across software revisions, efficient parallel and concurrent application and workload execution, hardware-software coordination and interoperation for profile-directed instruction prefetching, OS/Runtime support for memory management, and OS/Runtime support for cross-runtime and cross-language shared memory (XMem and CoLoRS). Recently, we have expanded these activities to target distributed cluster systems (as opposed to individual computers) and we combine and distribute our technologies as open source as part of AppScale &ndash; the first open source distributed runtime system for cloud computing applications and services.  All of our results and software artifacts provide significant reductions in program execution time (up to orders of magnitude in some cases), simplify extant software systems, and advance parallel and concurrent programming systems.  Broad Impact: VIVA preserves the benefits of virtualization and layering for design, software engineering, portability, and generality, while easing the maintenance burden implied by specialized implementation. Our work, thus, makes automatic, full-system, customization of applications accessible to a large developer base.  In addition, this project has provided us with the opportunity to develop the expertise necessary to improve our CS curriculum and to perform outreach that positively affects students from underrepresented groups in different ways. Our novel curricular directions in the CS department at UCSB include new lectures and projects on virtualization and full-system specialization as part of undergraduate classes (e.g. on the hardware/software interface and programming languages) and as part of graduate classes on the implementations of programming languages.  These efforts have significantly improved the technical skills of all students involved.  Our key outreach contributions include proje...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

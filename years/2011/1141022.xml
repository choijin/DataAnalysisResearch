<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Preparing Computer Science Students for the Multicore Era: Teaching Parallel Computing in the Undergraduate Curriculum Early and Often</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2012</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>149118.00</AwardTotalIntnAmount>
<AwardAmount>149118</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Paul Tymann</SignBlockName>
<PO_EMAI>ptymann@nsf.gov</PO_EMAI>
<PO_PHON>7032922832</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The widespread deployment of multicore-based computer systems over the last decade has brought about drastic changes in the software and hardware landscape. However, most undergraduate computer science (CS) curricula have not embraced the pervasiveness of parallel computing. In their first years, CS undergraduates are typically exclusively trained to think and program sequentially. However, too firm a root in sequential thinking can be a non-trivial barrier for parallel thinking and computing. Thus, there is an urgent need to teach multicore and parallel computing concepts earlier and often in CS programs.&lt;br/&gt;&lt;br/&gt;This project addresses the rapidly widening gap between highly parallel computer architectures and the sequential programming approach taught in traditional CS courses. It proposes to systematically integrate parallel computing into current undergraduate curricula. Specifically, its goals are to develop course modules and projects for introducing parallel computing concepts in several early computer science courses, to design an upper-level multicore programming course that serves as a capstone for parallel computing concepts, and to promote this model by making all relevant material freely available.&lt;br/&gt;&lt;br/&gt;The enhanced curriculum equips CS students with skills that are highly sought after by the computing industry. The planned outreach activities help broaden the participation of female and Hispanic student groups in STEM education. The free teaching modules and the active dissemination encourage the building of a community of educators interested in introducing parallel computing in the undergraduate curriculum. Finally, the developed teaching material is contributing to ACM/IEEE's model CS undergraduate curriculum.</AbstractNarration>
<MinAmdLetterDate>08/15/2012</MinAmdLetterDate>
<MaxAmdLetterDate>08/15/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1141022</AwardID>
<Investigator>
<FirstName>Dan</FirstName>
<LastName>Tamir</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Dan E Tamir</PI_FULL_NAME>
<EmailAddress>dt19@txstate.edu</EmailAddress>
<PI_PHON>5122455728</PI_PHON>
<NSF_ID>000483202</NSF_ID>
<StartDate>08/15/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Wuxu</FirstName>
<LastName>Peng</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Wuxu Peng</PI_FULL_NAME>
<EmailAddress>wp01@txstate.edu</EmailAddress>
<PI_PHON>5122453874</PI_PHON>
<NSF_ID>000205512</NSF_ID>
<StartDate>08/15/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Hongchi</FirstName>
<LastName>Shi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Hongchi Shi</PI_FULL_NAME>
<EmailAddress>hs15@txstate.edu</EmailAddress>
<PI_PHON>5122453409</PI_PHON>
<NSF_ID>000181975</NSF_ID>
<StartDate>08/15/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Apan</FirstName>
<LastName>Qasem</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Apan Qasem</PI_FULL_NAME>
<EmailAddress>apan@txstate.edu</EmailAddress>
<PI_PHON>5122452314</PI_PHON>
<NSF_ID>000531766</NSF_ID>
<StartDate>08/15/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Martin</FirstName>
<LastName>Burtscher</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Martin Burtscher</PI_FULL_NAME>
<EmailAddress>burtscher@txstate.edu</EmailAddress>
<PI_PHON>5122452314</PI_PHON>
<NSF_ID>000572212</NSF_ID>
<StartDate>08/15/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Texas State University - San Marcos</Name>
<CityName>San Marcos</CityName>
<ZipCode>786664616</ZipCode>
<PhoneNumber>5122452314</PhoneNumber>
<StreetAddress>601 University Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>28</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX28</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>074602368</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TEXAS STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>101405814</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Texas State University - San Marcos]]></Name>
<CityName>San Marcos</CityName>
<StateCode>TX</StateCode>
<ZipCode>786664684</ZipCode>
<StreetAddress><![CDATA[601 University Dr.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>35</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX35</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7513</Code>
<Text>TUES-Type 1 Project</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0412</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~149118</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The widespread deployment of multicore-based computer systems over the last decade has brought about major changes in the software and hardware landscape. However, most undergraduate computer science curricula have not embraced the pervasiveness of parallel computing. In their first years, undergraduates are typically exclusively trained to think and program sequentially. However, too firm a root in sequential thinking can be a non-trivial barrier for parallel thinking and computing. Thus, there is an urgent need to teach multicore and parallel computing concepts earlier and often in computer science programs. &nbsp;</p> <p>This sponsored project addresses the rapidly widening gap between highly parallel computer architectures and the sequential programming approach taught in traditional computer science courses and establishes a systematic approach to integrating parallel computing into the undergraduate curriculum.&nbsp;Specifically, the project developed a series of nine course modules covering a range of parallel computing topics and a new upper-level multicore programming course that focuses on modern topics and serves as a capstone for parallel computing concepts. The developed modules are self-contained and designed for easy adoption across institutions. Each module contains all required material for&nbsp;teaching including lecture slides, code examples, exam questions and solutions, and pedagogical notes. The modules use parallel context in existing curriculums to reduce the amount of time required to introduce new parallel computing concepts in lower division courses. The modules have been made publicly available on the project web site at the http://tues.cs.txstate.edu and in the NSF Ensemble collection. &nbsp;</p> <p>Over the course of two academic years, the modules were introduced in various courses at Texas State University. In each course where a module was introduced student learning outcomes were evaluated through exam questions. External evaluations were conducted to measure changes in students' confidence and interest in computer science, as well as students' perceptions of their classroom learning experiences. &nbsp;The evaluation results show that students developed a good understanding of parallel computing concepts through these modules. Evaluation of student engagement shows a significant&nbsp;increase in student interest and confidence, with 92% of students reporting that the modules increased their confidence that they could succeed in computer science. Over 350 undergraduates were enrolled in the courses where these modules were introduced. A substantial number of students were female (22%) and Hispanic (24%), two groups traditionally underrepresented in STEM fields.</p> <p>Another important outcome of this project is a complete mapping of the ACM/IEEE curricular recommendations on parallel and distributed computing (PDC) topics to an undergraduate computer science curriculum. The mapping provides coverage of all Tier 1 hours and 80% of Tier 2 hours within the required courses. This coverage can be achieved without the addition or deletion of courses in a typical undergraduate curriculum.</p> <p>The investigators provided training to Texas State faculty not experienced in teaching parallel computing to undergraduates. A workshop was organized to introduce the module-based approach and provide training to faculty at higher educational institutions in the Central Texas region. &nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 09/16/2015<br>      Modified by: Apan&nbsp;Qasem</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The widespread deployment of multicore-based computer systems over the last decade has brought about major changes in the software and hardware landscape. However, most undergraduate computer science curricula have not embraced the pervasiveness of parallel computing. In their first years, undergraduates are typically exclusively trained to think and program sequentially. However, too firm a root in sequential thinking can be a non-trivial barrier for parallel thinking and computing. Thus, there is an urgent need to teach multicore and parallel computing concepts earlier and often in computer science programs.    This sponsored project addresses the rapidly widening gap between highly parallel computer architectures and the sequential programming approach taught in traditional computer science courses and establishes a systematic approach to integrating parallel computing into the undergraduate curriculum. Specifically, the project developed a series of nine course modules covering a range of parallel computing topics and a new upper-level multicore programming course that focuses on modern topics and serves as a capstone for parallel computing concepts. The developed modules are self-contained and designed for easy adoption across institutions. Each module contains all required material for teaching including lecture slides, code examples, exam questions and solutions, and pedagogical notes. The modules use parallel context in existing curriculums to reduce the amount of time required to introduce new parallel computing concepts in lower division courses. The modules have been made publicly available on the project web site at the http://tues.cs.txstate.edu and in the NSF Ensemble collection.    Over the course of two academic years, the modules were introduced in various courses at Texas State University. In each course where a module was introduced student learning outcomes were evaluated through exam questions. External evaluations were conducted to measure changes in students' confidence and interest in computer science, as well as students' perceptions of their classroom learning experiences.  The evaluation results show that students developed a good understanding of parallel computing concepts through these modules. Evaluation of student engagement shows a significant increase in student interest and confidence, with 92% of students reporting that the modules increased their confidence that they could succeed in computer science. Over 350 undergraduates were enrolled in the courses where these modules were introduced. A substantial number of students were female (22%) and Hispanic (24%), two groups traditionally underrepresented in STEM fields.  Another important outcome of this project is a complete mapping of the ACM/IEEE curricular recommendations on parallel and distributed computing (PDC) topics to an undergraduate computer science curriculum. The mapping provides coverage of all Tier 1 hours and 80% of Tier 2 hours within the required courses. This coverage can be achieved without the addition or deletion of courses in a typical undergraduate curriculum.  The investigators provided training to Texas State faculty not experienced in teaching parallel computing to undergraduates. A workshop was organized to introduce the module-based approach and provide training to faculty at higher educational institutions in the Central Texas region.            Last Modified: 09/16/2015       Submitted by: Apan Qasem]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

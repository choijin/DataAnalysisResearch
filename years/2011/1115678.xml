<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>RI: Small: Ultra-Sparsifiers for Fast and Scalable Mapping and 3D Reconstruction on Mobile Robots</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2011</AwardEffectiveDate>
<AwardExpirationDate>06/30/2015</AwardExpirationDate>
<AwardTotalIntnAmount>448645.00</AwardTotalIntnAmount>
<AwardAmount>448645</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Gregory Chirikjian</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project develops and realizes efficient and large scale mapping and 3D reconstruction on mobile robots. We develop a new optimization paradigm which combines the advantages of both direct and iterative methods by (1) investigating a novel class of optimization methods for robot mapping problems: subgraph-preconditioned conjugate gradients (SPCG) that combine the advantages of direct and iterative methods while minimizing the disadvantages, (2) investigating subgraph preconditioner selection and quality analysis, (3) applying the above techniques to large-scale 3D reconstruction problem mobile robots, and (4) investigating on-line versions of these algorithms. We adapt the SPCG for this setting by incrementally building the graph sparsifier that gives us a good preconditioner.&lt;br/&gt;&lt;br/&gt;Beyond robotics and vision, we show that similar bounds can be derived for the general problem of approximating distributions. A concrete deliverable of the proposed work is a software package that embeds the new hybrid approach to solving the mapping/reconstruction non-linear optimization problem, and is easily deployable to a wide range of mobile robotic platforms: terrestrial, aerial, underwater, or underground, acting individually or in teams. The robotics research community has access to this technology, which provides great improvement over the capabilities of current mapping/reconstruction software, both in terms of the size of the problem, as well as in terms of speed and online applicability. Finally, at a more local level, this research impacts education of both graduate and undergraduate students at Georgia Tech.</AbstractNarration>
<MinAmdLetterDate>06/29/2011</MinAmdLetterDate>
<MaxAmdLetterDate>06/29/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1115678</AwardID>
<Investigator>
<FirstName>Frank</FirstName>
<LastName>Dellaert</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Frank Dellaert</PI_FULL_NAME>
<EmailAddress>dellaert@cc.gatech.edu</EmailAddress>
<PI_PHON>4043852923</PI_PHON>
<NSF_ID>000274425</NSF_ID>
<StartDate>06/29/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia Tech Research Corporation</Name>
<CityName>Atlanta</CityName>
<ZipCode>303320420</ZipCode>
<PhoneNumber>4048944819</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>GA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>097394084</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGIA TECH RESEARCH CORPORATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>097394084</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Georgia Institute of Technology]]></Name>
<CityName>Atlanta</CityName>
<StateCode>GA</StateCode>
<ZipCode>303320002</ZipCode>
<StreetAddress><![CDATA[225 NORTH AVE NW]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>GA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7495</Code>
<Text>Robust Intelligence</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~448645</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In computer vision, an important computational problem is that of 3D reconstruction from many images. For example, this allows the creation of 3D models of prominent landmarks from thousands of photos uploaded&nbsp; to the web by tourists. A similar, almost identical problem arises in mobile robotics: here the goal is to reconstruct the environment from sensor measurements taken by the robot(s), often at very high data rates. Hence, it is important to find fast algorithms for reconstruction, both batch-versions (more common in computer vision), as well as online, incremental versions (as more applicable to robotics).</p> <p>We investigated a class of hybrid algorithms that combine the advantages of two earlier paradigms: direct and iterative solvers. In 3D reconstruction, the key problem is computing the solution to a &ldquo;graph&rdquo; of constraints, where nodes in the graph represent variables such as the location of a camera, robot, or 3D points, and the edges in the graph represent the constraints. A simple toy example of such a graph is shown in the Figure, sub-panel (a).&nbsp;</p> <p>The need for a hybrid solution is because both reigning paradigms have complimentary properties. So-called &ldquo;direct&rdquo; solvers solve for one variable at a time, but get stuck very quickly if the graph of constraints is too dense. On the other hand, &ldquo;iterative&rdquo; solvers try to update all variables at the same time, but are very slow to converge unless extra knowledge about the problem can be injected into the solution.&nbsp;</p> <p>Our hybrid solver creates a &ldquo;sparsified&rdquo; version of the constraint graph where a direct solver is very fast, and uses the direct solution as the extra knowledge that enables very fast convergence of the iterative solver. This is done via a mathematical technique called preconditioning. Some possible sparse versions of the graph in panel (a) are shown in panels (b-d). This core idea of using a sparser graph in order to speed up iterative solvers has also been explored in theoretical computer science, and we worked with mathematicians in that field to tailor and apply those methods in the fields of computer vision and robotics.</p> <p>We also investigated a number of other aspects of these large optimization problems. One technique that stands out and is particularly intuitive is the idea of identifying &ldquo;fragments&rdquo; of 3D structure, like the copula of the large building in Figure 2. To identify these fragments, we used data mining techniques originally developed for the retail industry to identify which products are often purchased together. Rather than reducing the <em>number </em>of iterations as in our hybrid method, this approach reduces the complexity of <em>each </em>iteration. We made several other exciting advances in initializing these large problems using convex optimization, which allows the optimization to start from a good initial estimate and thereby reducing the amount of work once more.</p> <p>In all, the project was very successful from a technical point of view and yielded in one doctoral dissertation &ndash; by Yong Dian Jian- and several papers, including many by a post-doctoral researcher, Luca Carlone, who has generated many great follow-up ideas on the research funded by this award.</p><br> <p>            Last Modified: 12/11/2015<br>      Modified by: Frank&nbsp;Dellaert</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/im...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In computer vision, an important computational problem is that of 3D reconstruction from many images. For example, this allows the creation of 3D models of prominent landmarks from thousands of photos uploaded  to the web by tourists. A similar, almost identical problem arises in mobile robotics: here the goal is to reconstruct the environment from sensor measurements taken by the robot(s), often at very high data rates. Hence, it is important to find fast algorithms for reconstruction, both batch-versions (more common in computer vision), as well as online, incremental versions (as more applicable to robotics).  We investigated a class of hybrid algorithms that combine the advantages of two earlier paradigms: direct and iterative solvers. In 3D reconstruction, the key problem is computing the solution to a "graph" of constraints, where nodes in the graph represent variables such as the location of a camera, robot, or 3D points, and the edges in the graph represent the constraints. A simple toy example of such a graph is shown in the Figure, sub-panel (a).   The need for a hybrid solution is because both reigning paradigms have complimentary properties. So-called "direct" solvers solve for one variable at a time, but get stuck very quickly if the graph of constraints is too dense. On the other hand, "iterative" solvers try to update all variables at the same time, but are very slow to converge unless extra knowledge about the problem can be injected into the solution.   Our hybrid solver creates a "sparsified" version of the constraint graph where a direct solver is very fast, and uses the direct solution as the extra knowledge that enables very fast convergence of the iterative solver. This is done via a mathematical technique called preconditioning. Some possible sparse versions of the graph in panel (a) are shown in panels (b-d). This core idea of using a sparser graph in order to speed up iterative solvers has also been explored in theoretical computer science, and we worked with mathematicians in that field to tailor and apply those methods in the fields of computer vision and robotics.  We also investigated a number of other aspects of these large optimization problems. One technique that stands out and is particularly intuitive is the idea of identifying "fragments" of 3D structure, like the copula of the large building in Figure 2. To identify these fragments, we used data mining techniques originally developed for the retail industry to identify which products are often purchased together. Rather than reducing the number of iterations as in our hybrid method, this approach reduces the complexity of each iteration. We made several other exciting advances in initializing these large problems using convex optimization, which allows the optimization to start from a good initial estimate and thereby reducing the amount of work once more.  In all, the project was very successful from a technical point of view and yielded in one doctoral dissertation &ndash; by Yong Dian Jian- and several papers, including many by a post-doctoral researcher, Luca Carlone, who has generated many great follow-up ideas on the research funded by this award.       Last Modified: 12/11/2015       Submitted by: Frank Dellaert]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Collaborative Research: Autonomous Failure Detection and Recovery in Networked Embedded Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>75000.00</AwardTotalIntnAmount>
<AwardAmount>75000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Developers of networked embedded systems often find it difficult to diagnose bugs. A key observation is that in such systems, it can be beneficial to exploit domain knowledge about events in the physical world to detect failures. For example, in a sensor network deployment, knowing that the received signal strength of a radio transmission will normally decrease over distance, the application developer can enforce runtime checks to detect faulty nodes based on their relative distances to the source and the orderings of their received signal strength.&lt;br/&gt;&lt;br/&gt;Based on this intuition, this project addresses the challenge of developing correct, resilient, and reliable networked embedded systems by (i) proposing, developing, and evaluating a methodology of using physical events to detect software bugs, (ii) developing software libraries and APIs to facilitate easy access to physical event constraints by application developers, and (iii) evaluating the effectiveness of the software libraries using real-world applications. &lt;br/&gt;&lt;br/&gt;The completed framework could significantly reduce the debugging and maintenance costs for complicated networked embedded systems, and improve their reliability.  Beyond such direct social and economic benefits, the broader impacts of this work include: (i) improving curriculum with hands-on debugging sessions; (ii) raising interest in technology among high school seniors through a Pre-Collegiate Research Scholars Program; (iii) supporting talented female and under-represented minority PhD students to successfully accomplish their doctoral studies; (iv) disseminating research results through high-quality publications, high-profile tutorials, and open-source sites.</AbstractNarration>
<MinAmdLetterDate>08/17/2011</MinAmdLetterDate>
<MaxAmdLetterDate>08/17/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1117438</AwardID>
<Investigator>
<FirstName>Tian</FirstName>
<LastName>He</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tian He</PI_FULL_NAME>
<EmailAddress>tianhe@cs.umn.edu</EmailAddress>
<PI_PHON>6126245599</PI_PHON>
<NSF_ID>000244200</NSF_ID>
<StartDate>08/17/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Minnesota-Twin Cities</Name>
<CityName>Minneapolis</CityName>
<ZipCode>554552070</ZipCode>
<PhoneNumber>6126245599</PhoneNumber>
<StreetAddress>200 OAK ST SE</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Minnesota</StateName>
<StateCode>MN</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MN05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>555917996</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>REGENTS OF THE UNIVERSITY OF MINNESOTA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>117178941</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Minnesota-Twin Cities]]></Name>
<CityName>Minneapolis</CityName>
<StateCode>MN</StateCode>
<ZipCode>554552070</ZipCode>
<StreetAddress><![CDATA[200 OAK ST SE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Minnesota</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MN05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~75000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>Embedded systems represent a class of computers that are highly</span><br /><span>resource constrained, and tightly integrated with other components to</span><br /><span>interact with the physical world. This project aims to address several</span><br /><span>unique challenges related to embedded systems, as developers often</span><br /><span>find it difficult to diagnose bugs in such systems, and to program</span><br /><span>them for application purposes.&nbsp; A key observation is that in such</span><br /><span>systems, it can be beneficial to exploit domain knowledge about events</span><br /><span>in the physical world to detect failures. For example, in a sensor</span><br /><span>network deployment, knowing that the received signal strength of a</span><br /><span>radio transmission will normally decrease over distance, the</span><br /><span>application developer can enforce runtime checks to detect faulty</span><br /><span>nodes based on their relative distances to the source and the</span><br /><span>orderings of their received signal strength.</span><br /><br /><span>Based on this intuition, this project addresses the challenge of</span><br /><span>developing correct, resilient, and reliable networked embedded</span><br /><span>systems. The outcomes of this project is listed in two categories:</span><br /><span>research findings and outreach activities.</span><br /><br /><span>In the category of research findings, the main outcome is that,</span><br /><span>through collaboration of UMN and UTK, we complete a debugging protocol</span><br /><span>design called FIND, which addresses the detection of various types of</span><br /><span>bugs, not only including functional faults, where individual nodes may</span><br /><span>crash, but also data faults, in which a node behaves normally in all</span><br /><span>aspects except for its sensing results, leading to either significant</span><br /><span>biased or random errors. To deal with the data faults, we develop the</span><br /><span>FIND protocol that works as follows: after the nodes in a network</span><br /><span>detect a natural event, FIND ranks the nodes based on their sensing</span><br /><span>readings as well as their physical distances from the event. A node is</span><br /><span>considered faulty if there is a significant mismatch between the</span><br /><span>sensor data rank and the distance rank. In the end of the run, FIND</span><br /><span>provides a blacklist containing all possible faulty nodes. With such a</span><br /><span>list, further recovery processes become possible. This is the first</span><br /><span>faulty node detection method that assumes no a priori knowledge about</span><br /><span>the underlying distribution of sensed events/phenomena.&nbsp; This work has</span><br /><span>been accepted to ACM Transaction on Wireless Sensor Networks in 2014.</span><br /><br /><span>In addition to the FIND protocol, the PIs also investigated other</span><br /><span>possible ways to improve the performance, reliability, and robustness</span><br /><span>of embedded platforms. For example, the PI Cao investigated compact</span><br /><span>data structures for key-value (k-v) storage that is particularly</span><br /><span>suitable for programming embedded platforms. The PI He has started a</span><br /><span>new&nbsp; direction on studying the Safe Charging Problem (SCP) of</span><br /><span>scheduling power chargers so that more energy can be received while no</span><br /><span>location in the field has electromagnetic radiation (EMR) exceeding a</span><br /><span>given threshold R. Finally, the co-PI Wang has mainly focused on the</span><br /><span>detection of energy bugs in system configuration files. These studies</span><br /><span>have led to more than 10 publications in top conferences and journals.</span><br /><br /><span>On the side of outreach and education activities, the materials</span><br />...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Embedded systems represent a class of computers that are highly resource constrained, and tightly integrated with other components to interact with the physical world. This project aims to address several unique challenges related to embedded systems, as developers often find it difficult to diagnose bugs in such systems, and to program them for application purposes.  A key observation is that in such systems, it can be beneficial to exploit domain knowledge about events in the physical world to detect failures. For example, in a sensor network deployment, knowing that the received signal strength of a radio transmission will normally decrease over distance, the application developer can enforce runtime checks to detect faulty nodes based on their relative distances to the source and the orderings of their received signal strength.  Based on this intuition, this project addresses the challenge of developing correct, resilient, and reliable networked embedded systems. The outcomes of this project is listed in two categories: research findings and outreach activities.  In the category of research findings, the main outcome is that, through collaboration of UMN and UTK, we complete a debugging protocol design called FIND, which addresses the detection of various types of bugs, not only including functional faults, where individual nodes may crash, but also data faults, in which a node behaves normally in all aspects except for its sensing results, leading to either significant biased or random errors. To deal with the data faults, we develop the FIND protocol that works as follows: after the nodes in a network detect a natural event, FIND ranks the nodes based on their sensing readings as well as their physical distances from the event. A node is considered faulty if there is a significant mismatch between the sensor data rank and the distance rank. In the end of the run, FIND provides a blacklist containing all possible faulty nodes. With such a list, further recovery processes become possible. This is the first faulty node detection method that assumes no a priori knowledge about the underlying distribution of sensed events/phenomena.  This work has been accepted to ACM Transaction on Wireless Sensor Networks in 2014.  In addition to the FIND protocol, the PIs also investigated other possible ways to improve the performance, reliability, and robustness of embedded platforms. For example, the PI Cao investigated compact data structures for key-value (k-v) storage that is particularly suitable for programming embedded platforms. The PI He has started a new  direction on studying the Safe Charging Problem (SCP) of scheduling power chargers so that more energy can be received while no location in the field has electromagnetic radiation (EMR) exceeding a given threshold R. Finally, the co-PI Wang has mainly focused on the detection of energy bugs in system configuration files. These studies have led to more than 10 publications in top conferences and journals.  On the side of outreach and education activities, the materials developed by this project has been used in multiple courses: the CS560 (advanced operating systems) the PI Cao developed and taught at UTK, CSCI4970W Advanced Project Laboratory the PI He taught for undergraduate students, and a graduate-level seminar course CSCI 8211/8910 the PI He developed, in which students are required to read, present and conduct research on related topics.  The PIs have given a few talks in universities, workshop and conferences to disseminate the concept of robust embedded programming and its related technologies. Finally, the PI He has hosted a few visiting scholar/postdoc who work on related topics.  The project has also been used to generate interest among high school students, through a pre-college summer high school student program offered at UTK, where the PI Cao taught a group of high school students on writing correct programs on embedded platforms.  This program received very po...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

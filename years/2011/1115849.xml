<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: New Approaches to Fundamental Problems in Network Design</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2011</AwardEffectiveDate>
<AwardExpirationDate>06/30/2015</AwardExpirationDate>
<AwardTotalIntnAmount>449999.00</AwardTotalIntnAmount>
<AwardAmount>449999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Networks, of all kinds, surround us in our modern existence. Telecommunications networks, road networks, social networks, flight connections, and even the circuits in the microprocessors in our computers and cellphones are just a few examples. Some fundamental network problems appear again and again in a variety of these settings, and better algorithms - and more importantly, keener insights - into these problems are needed. Many of these problems are algorithmically hard optimization problems, and we cannot expect optimal solutions in reasonable time. Instead, approximations must be accepted, and the aim is to provide the best possible guarantee efficiently.&lt;br/&gt;&lt;br/&gt;The goal of this project is to explore new approaches and techniques for fundamental optimization problems, both new and old, in network design. The problems to be investigated include the classical traveling salesman problem, the problem of finding a tour of minimum length visiting all the nodes in a network, and the Steiner tree problem, which asks for the cheapest tree connecting some collection of terminals within a network. These problems have been intensively studied, but recently there has been some exciting progress.  Two main techniques underlying this progress are the study of "thin" spanning trees, and advances in the design of strong rounding algorithms.  In this project, the PIs aim to continue investigation in these directions with the hope of further breakthroughs. Another class of problems we consider relates to the quite practical issue of provisioning a network to handle varied and uncertain demands. This context has already demonstrated a combination of beautiful mathematical structure and important practical implications, and one of the goals of this project is to expand the class of such network design problems that can be efficiently solved.&lt;br/&gt;&lt;br/&gt;Due to their fundamental nature, progress on these problems would have an immediate impact on the field, driving even further progress.  There would also be a broader impact, with theoretical advancements aiding and guiding practical improvements in industry. In particular, part of the project will focus on recent models of demand patterns and capacity requirements in telecommunication networks. As bandwidth requirements increase rapidly, with the dramatic increase in video and multimedia, ways need to be found to more efficiently utilize network resources. Another central aspect of this project with broader impact is the training and mentoring of graduate students and junior researchers.</AbstractNarration>
<MinAmdLetterDate>06/09/2011</MinAmdLetterDate>
<MaxAmdLetterDate>11/05/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1115849</AwardID>
<Investigator>
<FirstName>Michel</FirstName>
<LastName>Goemans</LastName>
<PI_MID_INIT>X</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michel X Goemans</PI_FULL_NAME>
<EmailAddress>goemans@math.mit.edu</EmailAddress>
<PI_PHON>6172532688</PI_PHON>
<NSF_ID>000100157</NSF_ID>
<StartDate>06/09/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Neil</FirstName>
<LastName>Olver</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Neil Olver</PI_FULL_NAME>
<EmailAddress>olver@math.mit.edu</EmailAddress>
<PI_PHON>6173352063</PI_PHON>
<NSF_ID>000582645</NSF_ID>
<StartDate>06/09/2011</StartDate>
<EndDate>06/04/2014</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Rico</FirstName>
<LastName>Zenklusen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rico Zenklusen</PI_FULL_NAME>
<EmailAddress>ricoz@math.mit.edu</EmailAddress>
<PI_PHON>6172531000</PI_PHON>
<NSF_ID>000582646</NSF_ID>
<StartDate>06/09/2011</StartDate>
<EndDate>11/05/2014</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<StreetAddress2><![CDATA[NE18-901]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MA07</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001425594</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MASSACHUSETTS INSTITUTE OF TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001425594</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Massachusetts Institute of Technology]]></Name>
<CityName>Cambridge</CityName>
<StateCode>MA</StateCode>
<ZipCode>021394301</ZipCode>
<StreetAddress><![CDATA[77 MASSACHUSETTS AVE]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>07</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MA07</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7796</Code>
<Text>ALGORITHMIC FOUNDATIONS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~449999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Combinatorial optimization problems arise in many areas of science and technology, and consists of minimizing (or maximizing) an objective function over a discrete set of alternatives. Combinatorial optimization problems come in two flavors. The "easy" (or tractable) ones admit efficient algorithms for solving them exactly, where efficient means that their running time grows reasonably (or polynomially) with the size of the instance. For the computationally "hard" ones on the other hand, no such algorithm is believed to exist, and one approach for algorithm designers is to design "approximation algorithms", which are efficient algorithms delivering solutions which are guaranteed to be close to optimum.<br /><br />The research carried under this proposal has lead to a number of results regarding both easy and hard combinatorial optimization problems. In this Project Outcomes Report, we will focus on the results which answer major open questions that had been unanswered for decades.<br /><br />1) In the bin packing problem, the goal is to pack items of various sizes in identical bins so as to minimize the total number of bins. Variants of this problem have applications to transportation and manufacturing. As part of this project, we found an algorithm which requires a small number of bins compared to the optimum packing, where small approximately means logarithmic in the optimum number of bins. The previous best result due to Karmarkar and Karp from 35 years ago required the square of this number of additional bins, a much larger quantity. For the binpacking problem, we also provided the first efficient algorithm that solves exactly the problem for the situation in which we have only a small, but arbitrary number of items of different sizes. This is also a longstanding open question. <br /><br />2) In the Steiner tree problem, we are given a set of points to connect in a large network, and the goal is to minimize the total cost of the edges/connections used. For example, think of to build/lease a communication network that connects the various offices of a company. We have proved that a recent approximation algorithm, due to Byrka et al, returns a solution guaranteed to be less than 40% away from a linear programming relaxation of the problem. This is the best known gauarantee. Linear programming is the class of easy-solvable linear optimization problems, and has been used extensively for the design and analysis of approximation algorithms, but not for the Steiner tree problem.<br /><br />3) For combinatorial optimization problems, the use of linear programming techniques leads to a polytope, a geometric object in high dimensions, and the characterization of this polytope is of central importance. A question that had been outstanding for several decades was which of these polytopes admit a small representation, and which do not. We have shown that for the matching polytope, corresponding to the celebrated easy matching problem, no small representation exists, despite the fact that efficient algorithms exist. This is quite surprising and answers a question raised by Yannakakis 35 years ago.</p> <p>Many other results have also been obtained, but the ones just described are the flagship results that came out of this project.<br /><br />This project has involved (partially) three postdoctoral research associates and two graduate students, and has been instrumental in their educational training. The three postdocs and one of the students have received tenure-track faculty positions in top schools, and the last student is expected to graduate in the coming year.</p><br> <p>            Last Modified: 06/12/2017<br>      Modified by: Michel&nbsp;X&nbsp;Goemans</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Combinatorial optimization problems arise in many areas of science and technology, and consists of minimizing (or maximizing) an objective function over a discrete set of alternatives. Combinatorial optimization problems come in two flavors. The "easy" (or tractable) ones admit efficient algorithms for solving them exactly, where efficient means that their running time grows reasonably (or polynomially) with the size of the instance. For the computationally "hard" ones on the other hand, no such algorithm is believed to exist, and one approach for algorithm designers is to design "approximation algorithms", which are efficient algorithms delivering solutions which are guaranteed to be close to optimum.  The research carried under this proposal has lead to a number of results regarding both easy and hard combinatorial optimization problems. In this Project Outcomes Report, we will focus on the results which answer major open questions that had been unanswered for decades.  1) In the bin packing problem, the goal is to pack items of various sizes in identical bins so as to minimize the total number of bins. Variants of this problem have applications to transportation and manufacturing. As part of this project, we found an algorithm which requires a small number of bins compared to the optimum packing, where small approximately means logarithmic in the optimum number of bins. The previous best result due to Karmarkar and Karp from 35 years ago required the square of this number of additional bins, a much larger quantity. For the binpacking problem, we also provided the first efficient algorithm that solves exactly the problem for the situation in which we have only a small, but arbitrary number of items of different sizes. This is also a longstanding open question.   2) In the Steiner tree problem, we are given a set of points to connect in a large network, and the goal is to minimize the total cost of the edges/connections used. For example, think of to build/lease a communication network that connects the various offices of a company. We have proved that a recent approximation algorithm, due to Byrka et al, returns a solution guaranteed to be less than 40% away from a linear programming relaxation of the problem. This is the best known gauarantee. Linear programming is the class of easy-solvable linear optimization problems, and has been used extensively for the design and analysis of approximation algorithms, but not for the Steiner tree problem.  3) For combinatorial optimization problems, the use of linear programming techniques leads to a polytope, a geometric object in high dimensions, and the characterization of this polytope is of central importance. A question that had been outstanding for several decades was which of these polytopes admit a small representation, and which do not. We have shown that for the matching polytope, corresponding to the celebrated easy matching problem, no small representation exists, despite the fact that efficient algorithms exist. This is quite surprising and answers a question raised by Yannakakis 35 years ago.  Many other results have also been obtained, but the ones just described are the flagship results that came out of this project.  This project has involved (partially) three postdoctoral research associates and two graduate students, and has been instrumental in their educational training. The three postdocs and one of the students have received tenure-track faculty positions in top schools, and the last student is expected to graduate in the coming year.       Last Modified: 06/12/2017       Submitted by: Michel X Goemans]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

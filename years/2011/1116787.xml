<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Designing Mechanisms for Resource Allocation in Competitive Real-Time Open Environments</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2011</AwardEffectiveDate>
<AwardExpirationDate>07/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>250000.00</AwardTotalIntnAmount>
<AwardAmount>250000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Recent trends in computing systems, such as cloud computing, virtual execution environments, and grid computing, have been away from centralized designs towards highly extensible, open, and distributed systems comprising multiple independently-developed and operated subsystems.  Such systems present a fundamental design challenge for applications that require real-time guarantees, due to the reliance upon all subsystem owners and developers to truthfully express their resource requirements.  Currently, no real-time open system environment framework prevents a user from obtaining an ``unfair'' allocation of system resources by simply misrepresenting their subsystem's resource requirements. A solution is needed, that formally guarantees an efficient/equitable resource allocation among subsystems. The approach taken here is to apply a novel combination of real-time scheduling and game theory (i.e., algorithmic mechanism design) techniques, to design truth-inducing allocation mechanisms for shared real-time processing platforms.  These techniques are proven and evaluated by developing a middleware implementation and a grid simulation for a real-time setting.&lt;br/&gt;&lt;br/&gt;A trustworthy scheme for allocating time-critical resources among independently developed subsystems is a key to reducing development and operational costs, and increasing the reliability of the complex computing systems upon which our society and economy increasingly depend.  Beyond direct benefits of the technology, this project furthers educational goals by actively involving undergraduate and underrepresented students in research.</AbstractNarration>
<MinAmdLetterDate>08/07/2011</MinAmdLetterDate>
<MaxAmdLetterDate>08/07/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1116787</AwardID>
<Investigator>
<FirstName>Daniel</FirstName>
<LastName>Grosu</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Daniel Grosu</PI_FULL_NAME>
<EmailAddress>dgrosu@wayne.edu</EmailAddress>
<PI_PHON>3135775171</PI_PHON>
<NSF_ID>000491960</NSF_ID>
<StartDate>08/07/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Nathan</FirstName>
<LastName>Fisher</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Nathan W Fisher</PI_FULL_NAME>
<EmailAddress>fishern@wayne.edu</EmailAddress>
<PI_PHON>3135775421</PI_PHON>
<NSF_ID>000500321</NSF_ID>
<StartDate>08/07/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Wayne State University</Name>
<CityName>Detroit</CityName>
<ZipCode>482023622</ZipCode>
<PhoneNumber>3135772424</PhoneNumber>
<StreetAddress>5057 Woodward</StreetAddress>
<StreetAddress2><![CDATA[6th Floor]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>001962224</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>WAYNE STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001962224</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Wayne State University]]></Name>
<CityName>Detroit</CityName>
<StateCode>MI</StateCode>
<ZipCode>482023622</ZipCode>
<StreetAddress><![CDATA[5057 Woodward]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~250000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The current trend in the design of computer systems has recently shifted away from closed, centralized systems towards more open and distributed systems. These design goals present a fundamental challenge for systems and organizations which require real-time guarantees. Examples of such applications infrastructure include cloud computing, virtual execution environment (<span><span>VEE</span></span>) technologies, and grid computing. Organizations are already developing infrastructure for such large-scale processing infrastructure. However, the current frameworks that support guarantees upon shared systems rely upon the clients to truthfully express their resource requirements.&nbsp; Currently, no real-time open system environment framework prevents an organization from obtaining an "unfair" allocation of system resources by simply misrepresenting their subsystem's resource requirements. It is essential to develop mechanisms and open system environment frameworks that ensure a fair allocation of resources among subsystems by accounting for organization behavior and providing incentives for a <em>truthful</em><em> </em>expression of resource requirements.</p> <p><strong>Intellectual</strong><strong> </strong><strong>Merit:</strong>&nbsp; We were the first to formulate the problem of competitive real-time open environments.&nbsp; As a starting point, we considered the setting where multiple clients with real-time requirements are competing for the use of a single processing resource.&nbsp; For this initial setting, we developed and implemented algorithms for determining the selection of clients that are granted access to the processing resource.&nbsp; Our algorithms ensured two important properties that are desirable in competitive environments: 1) the clients that value the resource most receive it (called &ldquo;optimal&rdquo;), and 2) no client has an incentive to lie about his/her real-time requirements or valuation of the resource (called &ldquo;strategy-proof&rdquo;).&nbsp; Unfortunately, the problem of obtaining a strategy-proof, optimal algorithm can be formally shown to be difficult to compute efficiently.&nbsp; Thus, our project also proposed approximation algorithms that guarantee a strategy-proof, near-optimal solution using a more time-efficient computation.&nbsp; From this starting point, we extended this setting to address the problem where each client has multiple computational modes and expresses a preference ordering over those modes.&nbsp; The challenges that this project addressed for this multi-mode setting were: 1) obtaining analytical techniques for ensuring that real-time requirements are met when modes are changed; 2) developing client selection algorithms and associated game-theoretic analysis to handle the multiple preferences being expressed by each client; 3) developing control-theoretic techniques to adapt to the energy/thermal constraints from performing computation for the system's clients; and 4) developing techniques to account for the interference between clients&rsquo; applications due to contention in the system's memory hierarchy.</p> <p>We have also obtained solutions for numerous allocation and scheduling problems in non-hard-real-time cloud/grid computing environments.&nbsp; One of the central challenges of managing such large-scale data-intensive systems is efficient and fair provisioning of resources such as CPUs, memory, storage, and the energy required to run these systems.&nbsp; In this project, we provided both optimal and provably near-optimal, strategy-proof algorithms for ensuring a fair, equitable, and efficient allocation of these cloud/grid resources to clients that also ensure revenue is maximized for the cloud/grid-service provider.&nbsp; In particular, our research addressed the following challenges: 1) adaptation to dynamically changing client demands for resources; 2) the formation of larger virtual organizatio...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The current trend in the design of computer systems has recently shifted away from closed, centralized systems towards more open and distributed systems. These design goals present a fundamental challenge for systems and organizations which require real-time guarantees. Examples of such applications infrastructure include cloud computing, virtual execution environment (VEE) technologies, and grid computing. Organizations are already developing infrastructure for such large-scale processing infrastructure. However, the current frameworks that support guarantees upon shared systems rely upon the clients to truthfully express their resource requirements.  Currently, no real-time open system environment framework prevents an organization from obtaining an "unfair" allocation of system resources by simply misrepresenting their subsystem's resource requirements. It is essential to develop mechanisms and open system environment frameworks that ensure a fair allocation of resources among subsystems by accounting for organization behavior and providing incentives for a truthful expression of resource requirements.  Intellectual Merit:  We were the first to formulate the problem of competitive real-time open environments.  As a starting point, we considered the setting where multiple clients with real-time requirements are competing for the use of a single processing resource.  For this initial setting, we developed and implemented algorithms for determining the selection of clients that are granted access to the processing resource.  Our algorithms ensured two important properties that are desirable in competitive environments: 1) the clients that value the resource most receive it (called "optimal"), and 2) no client has an incentive to lie about his/her real-time requirements or valuation of the resource (called "strategy-proof").  Unfortunately, the problem of obtaining a strategy-proof, optimal algorithm can be formally shown to be difficult to compute efficiently.  Thus, our project also proposed approximation algorithms that guarantee a strategy-proof, near-optimal solution using a more time-efficient computation.  From this starting point, we extended this setting to address the problem where each client has multiple computational modes and expresses a preference ordering over those modes.  The challenges that this project addressed for this multi-mode setting were: 1) obtaining analytical techniques for ensuring that real-time requirements are met when modes are changed; 2) developing client selection algorithms and associated game-theoretic analysis to handle the multiple preferences being expressed by each client; 3) developing control-theoretic techniques to adapt to the energy/thermal constraints from performing computation for the system's clients; and 4) developing techniques to account for the interference between clientsÆ applications due to contention in the system's memory hierarchy.  We have also obtained solutions for numerous allocation and scheduling problems in non-hard-real-time cloud/grid computing environments.  One of the central challenges of managing such large-scale data-intensive systems is efficient and fair provisioning of resources such as CPUs, memory, storage, and the energy required to run these systems.  In this project, we provided both optimal and provably near-optimal, strategy-proof algorithms for ensuring a fair, equitable, and efficient allocation of these cloud/grid resources to clients that also ensure revenue is maximized for the cloud/grid-service provider.  In particular, our research addressed the following challenges: 1) adaptation to dynamically changing client demands for resources; 2) the formation of larger virtual organizations by a number of grid service providers; 3) minimizing energy consumption for standard parallel programming models; 4) designing efficient auctions of system resources; 5) efficiently computing the economic properties of these market-based systems; and 6) en...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

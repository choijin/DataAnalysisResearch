<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Explicit Loop Architectures for Efficiently Exploiting Instruction- and Data-Level Parallelism</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2012</AwardEffectiveDate>
<AwardExpirationDate>01/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>499654.00</AwardTotalIntnAmount>
<AwardAmount>499654</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sankar Basu</SignBlockName>
<PO_EMAI>sabasu@nsf.gov</PO_EMAI>
<PO_PHON>7032927843</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Systems across the computing spectrum, from cellphones to supercomputers, are increasingly using a heterogeneous mix of general-purpose multicores augmented with programmable graphics processing units (GPUs). General-purpose multicores are easier to program but often less energy and area efficient, while GPUs are harder to program but more efficient on specific applications. Unfortunately, the two kinds of processors have radically different programming methodologies, instruction sets, microarchitectures, and VLSI implementations, and this heterogeneity significantly increases complexity at all levels of the computing stack. The tension between programmability, efficiency, and complexity is one of the key research challenges in computer engineering today. Overcoming this challenge will help ensure the continued increase in computational capability which has enabled tremendous advances in all corners of society.&lt;br/&gt;While there have been some modest steps towards tighter integration between general-purpose multicores and GPUs, this project is developing a truly convergent architecture that elegantly unifies these two types of processors. At the heart of the project is a new explicit loop (XL) architectural design pattern that is based on the concept of explicitly encoding and executing a loop iteration space. The project is using a vertically integrated approach to investigate: (1) XL programming frameworks, compilers, and runtimes; (2) XL instruction sets that provide an effective software/hardware interface for expressing explicit loops; (3) XL microarchitectures that are either optimized for instruction-level parallelism (ILP) or for data-level parallelism (DLP), as well as hybrid microarchitectures that can dynamically reconfigure the same underlying hardware resources to be either ILP or DLP focused; and (4) XL VLSI implementations that will enable accurate design-space exploration of performance, area, and energy implications.&lt;br/&gt;This project can broadly impact the field of computer architecture by offering a novel approach for designing future computer systems that is able to improve programmability and efficiency while reducing both software and hardware complexity. The project also includes an ambitious educational outreach plan to increase high-school-student participation and undergraduate-student retention in computer engineering.</AbstractNarration>
<MinAmdLetterDate>01/18/2012</MinAmdLetterDate>
<MaxAmdLetterDate>05/23/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1149464</AwardID>
<Investigator>
<FirstName>Christopher</FirstName>
<LastName>Batten</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Christopher Batten</PI_FULL_NAME>
<EmailAddress>cbatten@cornell.edu</EmailAddress>
<PI_PHON>6072552672</PI_PHON>
<NSF_ID>000539036</NSF_ID>
<StartDate>01/18/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY23</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>872612445</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CORNELL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002254837</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Cornell University]]></Name>
<CityName>Ithaca</CityName>
<StateCode>NY</StateCode>
<ZipCode>148533801</ZipCode>
<StreetAddress><![CDATA[323 Rhodes Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY23</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7941</Code>
<Text>COMPUTER ARCHITECTURE</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~205497</FUND_OBLG>
<FUND_OBLG>2014~117869</FUND_OBLG>
<FUND_OBLG>2015~99207</FUND_OBLG>
<FUND_OBLG>2016~77081</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Systems across the computing spectrum, from cellphones to supercomputers, are increasingly using a heterogeneous mix of general-purpose multicores augmented with programmable graphics processing units (GPUs). General-purpose multicores are easier to program but often less energy and area efficient, while GPUs are harder to program but more efficient on specific applications. Unfortunately, the two kinds of processors have radically different programming methodologies, instruction sets, microarchitectures, and VLSI implementations, and this heterogeneity significantly increases complexity at all levels of the computing stack. The tension between programmability, efficiency, and complexity is one of the key research challenges in computer engineering today. Overcoming this challenge will help ensure the continued increase in computational capability which has enabled tremendous advances in all corners of society.</p> <p>This project involved designing, implementing, and evaluating three novel architectures which serve as a promising start towards unifying these two types of processors. At the heart of all three architectures is a new explicit loop (XL) architectural design pattern that is based on the concept of explicitly encoding and executing a loop iteration space. Our first architecture was more "GPU-like" and focused on efficiently executing data-level parallelism (DLP) in explicit loops, while our second architecture was more "multicore-like" and focused on efficiently executing instruction-level parallelism (ILP) in explicit loops. Our final hybrid architecture included the ability to be reconfigured at design time to be more DLP or ILP focused based on the architect's target workload and overall area, energy, and performance goals. We used a vertically integrated research methodology spanning programming models, runtimes, compilers, instruction set design, microarchitecture, and VLSI implementations. Our results demonstrate that these new architectures improve performance by multiple factors at similar energy compared to a simple general-purpose processor and improve energy efficiency multiple factors at similar performance compared to complex general-purpose processor.</p> <p>As part of this project's educational outreach plan, the PI led the week-long design experience for the CURIE Academy in 2014. The CURIE Academy is organized by the Office of Diversity Programming in Engineering at Cornell University; it is a one-week summer residential program for high-school girls who excel in math and science, enjoy solving problems, and want to learn more about careers in engineering. CURIE scholars spend their mornings learning about the various fields within engineering, and spend their afternoons working on the design project. The design experience the PI developed was titled "Exploring an Internet of Things" and included 44 high-school girls from across the country. The week began with three laboratory sessions. In the first lab, scholars learned about computer engineering from the hardware perspective by incrementally building a simple calculator out of basic logic gates. In the second lab, scholars learned about computer engineering from the software perspective by incrementally building a mobile robot control application using the popular Arduino micro-controller. In the third lab, scholars put hardware and software together to create their first basic IoT system: an internet-connected "smart door". After these three laboratory sessions, scholars worked in groups on an IoT system centered around several themes including: smart home, early disaster warning, wearable health monitoring, wildlife tracking, and smart electrical power grids.</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/09/2017<br>      Modified by: Christopher&nbsp;Batten</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Systems across the computing spectrum, from cellphones to supercomputers, are increasingly using a heterogeneous mix of general-purpose multicores augmented with programmable graphics processing units (GPUs). General-purpose multicores are easier to program but often less energy and area efficient, while GPUs are harder to program but more efficient on specific applications. Unfortunately, the two kinds of processors have radically different programming methodologies, instruction sets, microarchitectures, and VLSI implementations, and this heterogeneity significantly increases complexity at all levels of the computing stack. The tension between programmability, efficiency, and complexity is one of the key research challenges in computer engineering today. Overcoming this challenge will help ensure the continued increase in computational capability which has enabled tremendous advances in all corners of society.  This project involved designing, implementing, and evaluating three novel architectures which serve as a promising start towards unifying these two types of processors. At the heart of all three architectures is a new explicit loop (XL) architectural design pattern that is based on the concept of explicitly encoding and executing a loop iteration space. Our first architecture was more "GPU-like" and focused on efficiently executing data-level parallelism (DLP) in explicit loops, while our second architecture was more "multicore-like" and focused on efficiently executing instruction-level parallelism (ILP) in explicit loops. Our final hybrid architecture included the ability to be reconfigured at design time to be more DLP or ILP focused based on the architect's target workload and overall area, energy, and performance goals. We used a vertically integrated research methodology spanning programming models, runtimes, compilers, instruction set design, microarchitecture, and VLSI implementations. Our results demonstrate that these new architectures improve performance by multiple factors at similar energy compared to a simple general-purpose processor and improve energy efficiency multiple factors at similar performance compared to complex general-purpose processor.  As part of this project's educational outreach plan, the PI led the week-long design experience for the CURIE Academy in 2014. The CURIE Academy is organized by the Office of Diversity Programming in Engineering at Cornell University; it is a one-week summer residential program for high-school girls who excel in math and science, enjoy solving problems, and want to learn more about careers in engineering. CURIE scholars spend their mornings learning about the various fields within engineering, and spend their afternoons working on the design project. The design experience the PI developed was titled "Exploring an Internet of Things" and included 44 high-school girls from across the country. The week began with three laboratory sessions. In the first lab, scholars learned about computer engineering from the hardware perspective by incrementally building a simple calculator out of basic logic gates. In the second lab, scholars learned about computer engineering from the software perspective by incrementally building a mobile robot control application using the popular Arduino micro-controller. In the third lab, scholars put hardware and software together to create their first basic IoT system: an internet-connected "smart door". After these three laboratory sessions, scholars worked in groups on an IoT system centered around several themes including: smart home, early disaster warning, wearable health monitoring, wildlife tracking, and smart electrical power grids.          Last Modified: 06/09/2017       Submitted by: Christopher Batten]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>New Directions in Random Walk</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2012</AwardEffectiveDate>
<AwardExpirationDate>05/31/2017</AwardExpirationDate>
<AwardTotalIntnAmount>339252.00</AwardTotalIntnAmount>
<AwardAmount>339252</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tomek Bartoszynski</SignBlockName>
<PO_EMAI>tbartosz@nsf.gov</PO_EMAI>
<PO_PHON>7032924885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The PI will open and pursue several new areas of research in random walks on graphs. Among them are expected time for a random walk or Brownian particle to cover all the edges of a network; coupling of random walks in order to avoid collisions; strategies for searching and patrolling graphs; and some new ideas on "mixing time," that is, the time required for a random walk to reach a random state.  &lt;br/&gt;&lt;br/&gt;The random walk on a graph has been a fundamental construction in discrete probability.  The concept has numerous applications in computer science and statistical physics, and a strong connection to the theory of electrical networks.  The proposed work has additional possible applications to disparate fields such as software design and policing; it brings game theory, as well as combinatorics and probability, into the random walk picture.</AbstractNarration>
<MinAmdLetterDate>04/24/2012</MinAmdLetterDate>
<MaxAmdLetterDate>05/18/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1162172</AwardID>
<Investigator>
<FirstName>Peter</FirstName>
<LastName>Winkler</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Peter Winkler</PI_FULL_NAME>
<EmailAddress>peter.winkler@dartmouth.edu</EmailAddress>
<PI_PHON>6036463468</PI_PHON>
<NSF_ID>000192910</NSF_ID>
<StartDate>04/24/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Dartmouth College</Name>
<CityName>HANOVER</CityName>
<ZipCode>037551421</ZipCode>
<PhoneNumber>6036463007</PhoneNumber>
<StreetAddress>OFFICE OF SPONSORED PROJECTS</StreetAddress>
<StreetAddress2><![CDATA[11 ROPE FERRY RD #6210]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Hampshire</StateName>
<StateCode>NH</StateCode>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NH02</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041027822</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF DARTMOUTH COLLEGE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041027822</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Dartmouth College]]></Name>
<CityName>Hanover</CityName>
<StateCode>NH</StateCode>
<ZipCode>037553551</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Hampshire</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NH02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1263</Code>
<Text>PROBABILITY</Text>
</ProgramElement>
<ProgramElement>
<Code>7970</Code>
<Text>Combinatorics</Text>
</ProgramElement>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0115</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~113084</FUND_OBLG>
<FUND_OBLG>2013~113084</FUND_OBLG>
<FUND_OBLG>2015~113084</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The simplest kind of random walk is a process that begins at the point 0 on the number line and at each tick of a clock, flips a coin and takes a step right (toward the next higher integer) or left.&nbsp; Already there are many questions that can be asked, for example: How far from the origin do you expect to get after n steps?&nbsp; Questions about random walk occur in many parts of mathematics and the Intellectual Merit of this work lies in these connections.<br /><br />Another type of random walk takes place on a finite graph, stepping at each tick to an adjacent vertex.&nbsp; We have been particularly interested in two questions: (1) How long does it take before the walk's location is (roughly) as unpredictable as it will ever get; and (2) Can two random walks be arranged so that they don't collide?&nbsp; Each of these was the central question in a PhD thesis completed during the grant period, and each has Broader Impact in computer science.<br /><br />Question (1) lies at the heart of many modern approximation algorithms.&nbsp; The idea is to use random walk to sample from the vertices of the graph, then draw statistical inferences from those samples.&nbsp; In order to do that efficiently, we need to know that the walk gets random rapidly; we were able to show that this is so for certain kinds of graphs.<br /><br />Question (2) is a very new one that can arise in computer security, where there may be several defenses each of which wants to use randomness to prevent an adversary from anticipating its action.&nbsp;&nbsp; If these defenses are mutually exclusive, it may be necessary to keep them from colliding; can they somehow be made to avoid one another yet still be random?&nbsp; We show that in some situations that is indeed the case.</p><br> <p>            Last Modified: 08/15/2017<br>      Modified by: Peter&nbsp;Winkler</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The simplest kind of random walk is a process that begins at the point 0 on the number line and at each tick of a clock, flips a coin and takes a step right (toward the next higher integer) or left.  Already there are many questions that can be asked, for example: How far from the origin do you expect to get after n steps?  Questions about random walk occur in many parts of mathematics and the Intellectual Merit of this work lies in these connections.  Another type of random walk takes place on a finite graph, stepping at each tick to an adjacent vertex.  We have been particularly interested in two questions: (1) How long does it take before the walk's location is (roughly) as unpredictable as it will ever get; and (2) Can two random walks be arranged so that they don't collide?  Each of these was the central question in a PhD thesis completed during the grant period, and each has Broader Impact in computer science.  Question (1) lies at the heart of many modern approximation algorithms.  The idea is to use random walk to sample from the vertices of the graph, then draw statistical inferences from those samples.  In order to do that efficiently, we need to know that the walk gets random rapidly; we were able to show that this is so for certain kinds of graphs.  Question (2) is a very new one that can arise in computer security, where there may be several defenses each of which wants to use randomness to prevent an adversary from anticipating its action.   If these defenses are mutually exclusive, it may be necessary to keep them from colliding; can they somehow be made to avoid one another yet still be random?  We show that in some situations that is indeed the case.       Last Modified: 08/15/2017       Submitted by: Peter Winkler]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

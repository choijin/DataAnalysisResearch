<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Multivalued Decision Diagrams in Optimization</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>324963.00</AwardTotalIntnAmount>
<AwardAmount>324963</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07030000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>CMMI</Abbreviation>
<LongName>Div Of Civil, Mechanical, &amp; Manufact Inn</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>george hazelrigg</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The objective of the research is to develop multivalued decision diagrams (MDDs) as a novel tool for discrete optimization.  MDDs, and binary decision diagrams in particular, are well known as a technique for circuit verification and product configuration.  They also present an attractive approach to optimization, because they combine strengths of mathematical programming and constraint programming.  Mathematical programming relies heavily on linear and other continuous relaxations of the problem.  MDDs likewise provide easily solved relaxations, but the relaxations are discrete and do not require linearity or inequality form.  They can also be strengthened in a process analogous to cutting plane generation.  Like the constraint store in constraint programming, MDDs allow domain filtering to reduce the solution space, but the filtering is more effective because it operates on a richer data structure.  The research therefore aims to develop MDD-based relaxation and filtering techniques.&lt;br/&gt;&lt;br/&gt;This work is part of a larger research program that attempts to unify optimization methods.  The eventual goal is to develop a general-purpose solver that seamlessly combines techniques from mathematical and constraint programming, and perhaps global optimization and local search, by viewing them as special cases of an overarching solution methodology.  Unification would bring optimization technology under one roof and make it more attractive to users, who would no longer be obliged to move from one solver to another to try different approaches.  More importantly, recent research suggests that unification can yield orders-of-magnitude speedups in solution speed by exploiting complementary strengths of the various methods.  Because MDDs knit together key concepts from mathematical and constraint programming, they fit naturally into this research program and could become a component of the next generation of solvers.</AbstractNarration>
<MinAmdLetterDate>08/29/2011</MinAmdLetterDate>
<MaxAmdLetterDate>08/29/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1130012</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Hooker</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME>Jr.</PI_SUFX_NAME>
<PI_FULL_NAME>John Hooker</PI_FULL_NAME>
<EmailAddress>jh38@andrew.cmu.edu</EmailAddress>
<PI_PHON>4122687589</PI_PHON>
<NSF_ID>000347933</NSF_ID>
<StartDate>08/29/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Willem-Jan</FirstName>
<LastName>van Hoeve</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Willem-Jan van Hoeve</PI_FULL_NAME>
<EmailAddress>vanhoeve@andrew.cmu.edu</EmailAddress>
<PI_PHON>4122689527</PI_PHON>
<NSF_ID>000568207</NSF_ID>
<StartDate>08/29/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Carnegie-Mellon University</Name>
<CityName>PITTSBURGH</CityName>
<ZipCode>152133815</ZipCode>
<PhoneNumber>4122688746</PhoneNumber>
<StreetAddress>5000 Forbes Avenue</StreetAddress>
<StreetAddress2><![CDATA[WQED Building]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>PA18</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>052184116</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CARNEGIE MELLON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>052184116</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Carnegie-Mellon University]]></Name>
<CityName>Pittsburgh</CityName>
<StateCode>PA</StateCode>
<ZipCode>152133815</ZipCode>
<StreetAddress><![CDATA[5000 Forbes Ave]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>18</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>PA18</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5514</Code>
<Text>OPERATIONS RESEARCH</Text>
</ProgramElement>
<ProgramReference>
<Code>072E</Code>
<Text>NETWORKS &amp; QUEUING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>073E</Code>
<Text>OPTIMIZATION &amp; DECISION MAKING</Text>
</ProgramReference>
<ProgramReference>
<Code>077E</Code>
<Text>SIMULATION MODELS</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~324963</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Binary and multivalued decision diagrams have been applied to logic circuit design and product configuration for decades.&nbsp; They represent, in a graphical way, complex relationships between decisions and other variables, showing which combinations of decisions are possible.&nbsp;</p> <p>Our research develops these same diagrams as a new tool for optimization; that is, as a tool for making the best decisions subject to constraints on what is feasible.&nbsp; The decision diagram encodes the decisions that are jointly possible, and path lengths within the diagram represent the cost or value of each set of decisions.&nbsp;</p> <p>Unfortunately, the decision diagrams that represent real-world problems can grow exponentially.&nbsp; We deal with this by building a smaller diagram that represents an approximation of the problem (actually, a "relaxation," meaning that all possible solutions are represented, along with some others).&nbsp; Path lengths in the relaxed diagram provide bounds on the optimal solution value, bounds that are very useful when searching for an optimal soluton.&nbsp; We conduct a search in a completely novel way by enumerating nodes in a relaxed diagam at a level where relaxation has not yet occurred, and constructing new relaxed diagrams at each of these nodes.</p> <p>We have already applied this general-purpose optimization method to a number of problems that we can solve faster than the existing state of the art.&nbsp; In some cases, we solved problems that were insoluble even by methods designed explicitly for those problems.&nbsp; These include task sequencing problems, for example, in which one must decide in which order tasks should be performed, subject to time restrictions on the time at which each task can be performed.&nbsp;</p> <p>Decision diagram also provide a new approach to sequential decision making, as for example when one decides at what points to reorder and ship items in a supply chain.&nbsp; These problems are normally solved by enumerating or approximating a huge "state space" of possible solutions, but decision diagrams allow them to be solved by a branching method similar to that used very successfully to solve other kinds of optimization problems.</p> <p>Finally, we discovered that optimization based on decision diagrams can be very effectively carried out in a distributed computing environment, for example by assigning computational tasks to 256 computer processors working in parallel.&nbsp; Decision-diagram-based optimization in fact parallelizes much more effectively than conventional optimization methods.&nbsp; This and other factors suggest that decision diagrams may be able to solve huge real-world problem instances that are beyond the reach of existing methods.</p><br> <p>            Last Modified: 02/13/2016<br>      Modified by: John&nbsp;Hooker</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Image         </div> <div class="galControls onePhoto" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation onePhoto" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2016/1130012/1130012_10127595_1455380673866_BDDimage--rgov-214x142.jpg" original="/por/images/Reports/POR/2016/1130012/1130012_10127595_1455380673866_BDDimage--rgov-800width.jpg" title="A decision diagram"><img src="/por/images/Reports/POR/2016/1130012/1130012_10127595_1455380673866_BDDimage--rgov-66x44.jpg" alt="A decision diagram"></a> <div class="imageCaptionContainer"> <div class="imageCaption">A small decision diagram in which each circle represents a decision variable.  A solid outgoing line indicates a "yes" and a dashed line a "no."  Paths from x1 to 1 represent joint decisions that are po...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Binary and multivalued decision diagrams have been applied to logic circuit design and product configuration for decades.  They represent, in a graphical way, complex relationships between decisions and other variables, showing which combinations of decisions are possible.   Our research develops these same diagrams as a new tool for optimization; that is, as a tool for making the best decisions subject to constraints on what is feasible.  The decision diagram encodes the decisions that are jointly possible, and path lengths within the diagram represent the cost or value of each set of decisions.   Unfortunately, the decision diagrams that represent real-world problems can grow exponentially.  We deal with this by building a smaller diagram that represents an approximation of the problem (actually, a "relaxation," meaning that all possible solutions are represented, along with some others).  Path lengths in the relaxed diagram provide bounds on the optimal solution value, bounds that are very useful when searching for an optimal soluton.  We conduct a search in a completely novel way by enumerating nodes in a relaxed diagam at a level where relaxation has not yet occurred, and constructing new relaxed diagrams at each of these nodes.  We have already applied this general-purpose optimization method to a number of problems that we can solve faster than the existing state of the art.  In some cases, we solved problems that were insoluble even by methods designed explicitly for those problems.  These include task sequencing problems, for example, in which one must decide in which order tasks should be performed, subject to time restrictions on the time at which each task can be performed.   Decision diagram also provide a new approach to sequential decision making, as for example when one decides at what points to reorder and ship items in a supply chain.  These problems are normally solved by enumerating or approximating a huge "state space" of possible solutions, but decision diagrams allow them to be solved by a branching method similar to that used very successfully to solve other kinds of optimization problems.  Finally, we discovered that optimization based on decision diagrams can be very effectively carried out in a distributed computing environment, for example by assigning computational tasks to 256 computer processors working in parallel.  Decision-diagram-based optimization in fact parallelizes much more effectively than conventional optimization methods.  This and other factors suggest that decision diagrams may be able to solve huge real-world problem instances that are beyond the reach of existing methods.       Last Modified: 02/13/2016       Submitted by: John Hooker]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

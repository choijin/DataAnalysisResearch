<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Solving Polynomial Systems by the Polyhedral Homotopy</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/15/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>240000.00</AwardTotalIntnAmount>
<AwardAmount>240000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Junping Wang</SignBlockName>
<PO_EMAI>jwang@nsf.gov</PO_EMAI>
<PO_PHON>7032924488</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A group led by the PI has successfully developed a software package, HOM4PS-2.0, implementing the  "polyhedral homotopy continuation" method for solving polynomial systems. The solver leads existing software packages for solving polynomial systems in speed by a large margin. The essence of the proposed project is the further development in all aspects of the solver HOM4PS-2.0. In particular, for the need of solving larger polynomial systems, a major aspect of the project is the advanced development of the parallel version of the solver. The landscape of computation hardware is quite different from even a decade ago. Developments in new processor design and network technology have allowed supercomputers and computer clusters to grow larger and faster than ever, including new ideas such as cycle scavenging, grid computing, virtual supercomputers, multiple cores, and GPUs (graphics processing units). The proposed project will investigate and implement versions of HOM4PS-2.0 that take optimum advantage of heterogeneous computing platforms, with special emphasis on clusters, cloud computing, multicore and GPUs. In addition we plan to find ways to implement highly serial parts of the original algorithm, such as mixed volume computation and path-jumping detection on parallel architectures. The proposed project intends to fully incorporate all the cutting-edge parallel computing technologies in our solver for solving larger and larger polynomial systems. &lt;br/&gt;&lt;br/&gt;The problem of solving polynomial systems arises very frequently in various fields of science and engineering, such as, formula construction, geometric intersection, inverse kinematics, robotics, computer vision and the computation of equilibrium states of chemical reaction equations, etc. Science and engineering problems pose an increasing demand for solving larger and larger polynomial systems. To deal with such large systems, more computing resources are needed to greatly enlarge the capability of our solver, HOM4PS-2.0. For this purpose the parallelization of the original algorithms becomes inevitably essential. Computational technology is experiencing a major sea change in which one either rides the wave or goes under. To embrace this challenge, the core of the project is to fully incorporate the cutting-edge parallel computing technologies for solving larger and larger polynomial systems. The ultimate goal is a more powerful suite of high-quality software package which will provide the scientific community a reliable source for solving polynomial systems in practice.</AbstractNarration>
<MinAmdLetterDate>09/06/2011</MinAmdLetterDate>
<MaxAmdLetterDate>09/06/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1115587</AwardID>
<Investigator>
<FirstName>Tien-Yien</FirstName>
<LastName>Li</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Tien-Yien Li</PI_FULL_NAME>
<EmailAddress>li@math.msu.edu</EmailAddress>
<PI_PHON>5173533836</PI_PHON>
<NSF_ID>000232513</NSF_ID>
<StartDate>09/06/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Michigan State University</Name>
<CityName>East Lansing</CityName>
<ZipCode>488242600</ZipCode>
<PhoneNumber>5173555040</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[426 Administration Bldg, Rm2]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<StateCode>MI</StateCode>
<CONGRESSDISTRICT>08</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MI08</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>193247145</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>MICHIGAN STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>053343976</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Michigan State University]]></Name>
<CityName>East Lansing</CityName>
<StateCode>MI</StateCode>
<ZipCode>488242600</ZipCode>
<StreetAddress><![CDATA[Office of Sponsored Programs]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Michigan</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>08</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MI08</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1271</Code>
<Text>COMPUTATIONAL MATHEMATICS</Text>
</ProgramElement>
<ProgramReference>
<Code>9263</Code>
<Text>COMPUTATIONAL SCIENCE &amp; ENGING</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~240000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The problem of solving polynomial systems has been, and will continue to be, one of the most important subjects in both pure and applied mathematics. The need to solve systems of polynomial equations arises very frequently in various fields of science and engineering, such as, formula construction, geometric intersection, inverse kinematics, robotics, vision and the computation of equilibrium states of chemical reaction equations, etc. Many of those applications have been well documented. Solving polynomial systems is an area where numerical computations arise almost naturally. Given the complexity of the problem, we must use standard machine arithmetic to develop efficient algorithms. Moreover, by Galois theory explicit formulas for the solutions are unlikely to exist. We are concerned with the robustness of our methods and want to be sure that all isolated solutions are obtained, i.e., we want exhaustive methods. These criteria are met by homotopy continuation methods. In 1977, Garcia and Zangwill&nbsp; and Drexler independently presented theorems suggesting that homotopy continuation methods could be used to find the full set of isolated solutions of<em> n</em> polynomial equations in <em>n</em> variables numerically. Afterwards, with few decades of developments, this method has advanced to a most powerful and widely used procedure in approximating all isolated zeros of a polynomial system. Along the way, a new discipline "Numerical Algebraic Geometry " has emerged.</p> <p><br />While the natural setting for studying polynomial systems is the product of complex (or projective) spaces, in practice, polynomial systems almost always appear with real coefficients, and most importantly, almost always only real solutions are on the wish list. One may, of course, find all solutions in the complex setting first, and then filter out all the non-real solutions. However, to deal with those systems in real spaces directly would certainly be beneficial numerically. In this project, we had paid a special attention in solving real polynomial systems by real homotopies. Though they may not be able to obtain all the isolated solutions of a polynomial system, their usefulness is not to be scoffed at, as certain applications may not require all the isolated real solutions of the systems in the first place.</p> <p><br />There is no shortage of the demand of solving larger and larger polynomial systems in applications. To attain more computing resources for solving large polynomial systems, the parallelization of the homotopy method becomes inevitably essential. The biggest advantage of the homotopy continuation method in solving polynomial systems is perhaps its natural parallelism in the sense that each isolated zero is computed totally independent of the others. In this respect, it stands in contrast to the highly serial algebraic elimination methods&nbsp; which use resultants or Grobner bases. The landscape of computation hardware has seen an extremely active development in recent years making a wide spectrum of exciting new technologies available. First, developments in new processor design and network technology have allowed supercomputers and computer clusters to grow larger and faster than ever. Second, new ideas such as cycle scavenging and grid computing has led to the creation of virtual supercomputers out of large numbers of individual computers around the globe. Another exciting development is the advent of parallel computing on GPUs (Graphical Processing Units). While originally designed for rendering graphics rendering only, over the years GPUs has become sufficiently sophisticated to handle a much wider range of problems. Highly parallel by design, GPUs are more efficient than general purpose CPUs in carrying out a range of complex algorithms. In this&nbsp;project, we adapted&nbsp;the homotopy continuation algorithms to a variety of parallel computation environments....]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The problem of solving polynomial systems has been, and will continue to be, one of the most important subjects in both pure and applied mathematics. The need to solve systems of polynomial equations arises very frequently in various fields of science and engineering, such as, formula construction, geometric intersection, inverse kinematics, robotics, vision and the computation of equilibrium states of chemical reaction equations, etc. Many of those applications have been well documented. Solving polynomial systems is an area where numerical computations arise almost naturally. Given the complexity of the problem, we must use standard machine arithmetic to develop efficient algorithms. Moreover, by Galois theory explicit formulas for the solutions are unlikely to exist. We are concerned with the robustness of our methods and want to be sure that all isolated solutions are obtained, i.e., we want exhaustive methods. These criteria are met by homotopy continuation methods. In 1977, Garcia and Zangwill  and Drexler independently presented theorems suggesting that homotopy continuation methods could be used to find the full set of isolated solutions of n polynomial equations in n variables numerically. Afterwards, with few decades of developments, this method has advanced to a most powerful and widely used procedure in approximating all isolated zeros of a polynomial system. Along the way, a new discipline "Numerical Algebraic Geometry " has emerged.   While the natural setting for studying polynomial systems is the product of complex (or projective) spaces, in practice, polynomial systems almost always appear with real coefficients, and most importantly, almost always only real solutions are on the wish list. One may, of course, find all solutions in the complex setting first, and then filter out all the non-real solutions. However, to deal with those systems in real spaces directly would certainly be beneficial numerically. In this project, we had paid a special attention in solving real polynomial systems by real homotopies. Though they may not be able to obtain all the isolated solutions of a polynomial system, their usefulness is not to be scoffed at, as certain applications may not require all the isolated real solutions of the systems in the first place.   There is no shortage of the demand of solving larger and larger polynomial systems in applications. To attain more computing resources for solving large polynomial systems, the parallelization of the homotopy method becomes inevitably essential. The biggest advantage of the homotopy continuation method in solving polynomial systems is perhaps its natural parallelism in the sense that each isolated zero is computed totally independent of the others. In this respect, it stands in contrast to the highly serial algebraic elimination methods  which use resultants or Grobner bases. The landscape of computation hardware has seen an extremely active development in recent years making a wide spectrum of exciting new technologies available. First, developments in new processor design and network technology have allowed supercomputers and computer clusters to grow larger and faster than ever. Second, new ideas such as cycle scavenging and grid computing has led to the creation of virtual supercomputers out of large numbers of individual computers around the globe. Another exciting development is the advent of parallel computing on GPUs (Graphical Processing Units). While originally designed for rendering graphics rendering only, over the years GPUs has become sufficiently sophisticated to handle a much wider range of problems. Highly parallel by design, GPUs are more efficient than general purpose CPUs in carrying out a range of complex algorithms. In this project, we adapted the homotopy continuation algorithms to a variety of parallel computation environments. Of course, we can only adapt the most current parallel computing technologies for solving very large polynomial systems. ...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

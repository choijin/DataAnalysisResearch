<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: The Traveling Salesman Problem and Lightweight Approximation Algorithms</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>12/31/2016</AwardExpirationDate>
<AwardTotalIntnAmount>349999.00</AwardTotalIntnAmount>
<AwardAmount>349999</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rahul Shah</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The traveling salesman problem (TSP) is easily the most famous problem in discrete optimization.  Given a set of n cities and the costs c(i,j) of traveling from city i to city j for all i and j, the goal of the problem is to find the least expensive tour that visits each city exactly once and returns to its starting point. A linear programming relaxation of the problem called the subtour LP is known to give extremely good lower bounds on the length of an optimal tour in practice.  Nevertheless, the subtour LP bound is poorly understood from a theoretical point of view.  For 30 years it has been known that it is always at least 2/3 times the length of an optimal tour, and it is known that there are instances such that it is at most 3/4 times the length of an optimal tour, but no progress has been made in tightening these bounds. It has been conjectured that the subtour LP is always at least 3/4 times the length of the optimal tour. The goal of this research is to resolve this conjecture.  Because this goal is very ambitious, a number of intermediate goals have been proposed.&lt;br/&gt; &lt;br/&gt;Theoretical computer scientists have intensively studied approximation algorithms for NP-hard problems; these are polynomial-time algorithms that always provide solutions that are provably close to optimal (in terms of some performance guarantee).  The main issue driving theoretical work has been improvements in performance guarantee rather than whether the algorithms are implementable or practical.  While understanding the limits of approximability is and should be one of the issues that theoretical work advances, one can also explore whether those limits can be reached with algorithms that are less computationally intensive than the ones currently in the literature.  We call this the creation of lightweight versions of approximation algorithms. This exploration advances the potential impact of approximation algorithm on practice without losing the &lt;br/&gt;theoretical rigor of the field.&lt;br/&gt;&lt;br/&gt;The intellectual merit of the proposal lies in the possibility of making substantial progress in resolving outstanding problems related to the subtour LP for the traveling salesman problem, and also in making practical some of the outstanding theoretical work in approximation algorithms. The goal of this research lies in moving theoretical and practical studies of optimization problems closer to each other.  In the case of the traveling salesman problem, we have a bound that is very good in practice, but we do not understand its theoretical properties.  In the case of approximation algorithms, we have some very good theoretical algorithms, but they are often not practical.  We would like to understand the theoretical properties of the subtour LP bound for the traveling salesman problem, and to make practical some of the good theoretical work in approximation algorithms.</AbstractNarration>
<MinAmdLetterDate>06/20/2011</MinAmdLetterDate>
<MaxAmdLetterDate>06/20/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1115256</AwardID>
<Investigator>
<FirstName>David</FirstName>
<LastName>Williamson</LastName>
<PI_MID_INIT>P</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>David P Williamson</PI_FULL_NAME>
<EmailAddress>davidpwilliamson@cornell.edu</EmailAddress>
<PI_PHON>6072554883</PI_PHON>
<NSF_ID>000474139</NSF_ID>
<StartDate>06/20/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NY23</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>872612445</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CORNELL UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002254837</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Cornell University]]></Name>
<CityName>Ithaca</CityName>
<StateCode>NY</StateCode>
<ZipCode>148502820</ZipCode>
<StreetAddress><![CDATA[373 Pine Tree Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>23</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NY23</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~349999</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This project was designed to work in two different areas. &nbsp;The first is on the well-known traveling salesman problem (TSP). &nbsp;There is a well-studied linear programming lower bound on the value of the optimal solution to the TSP, but it is unknown exactly how far away this bound can be from the optimal solution in the worst-case. &nbsp;In our research, we were able to resolve a related conjecture by Boyd and Carr on the quality of this bound, and we were able to narrow the known gap on the bound in a very special case. &nbsp;We also performed some computational experiments on recently introduced algorithms for the TSP; the experiments suggest particular algorithms on which further theoretical study should be concentrated.</p> <p>&nbsp;</p> <p>The second area was on simple approximation algorithms for problems in discrete optimization. &nbsp;We studied a problem called the maximum satisifiability problem that gets used in circuit verification and database consistency. &nbsp;We devised a very fast deterministic algorithm for the problem that is provably comes within at least 75% of the optimal solution. &nbsp;We did computational experiments that show that the algorithm is very fast and performs extremely well compared to many known local search heuristics for the problem. &nbsp;We hope that we can stimulate further research into very fast algorithms with provable performance that also work very well in practice.</p><br> <p>            Last Modified: 01/20/2017<br>      Modified by: David&nbsp;P&nbsp;Williamson</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This project was designed to work in two different areas.  The first is on the well-known traveling salesman problem (TSP).  There is a well-studied linear programming lower bound on the value of the optimal solution to the TSP, but it is unknown exactly how far away this bound can be from the optimal solution in the worst-case.  In our research, we were able to resolve a related conjecture by Boyd and Carr on the quality of this bound, and we were able to narrow the known gap on the bound in a very special case.  We also performed some computational experiments on recently introduced algorithms for the TSP; the experiments suggest particular algorithms on which further theoretical study should be concentrated.     The second area was on simple approximation algorithms for problems in discrete optimization.  We studied a problem called the maximum satisifiability problem that gets used in circuit verification and database consistency.  We devised a very fast deterministic algorithm for the problem that is provably comes within at least 75% of the optimal solution.  We did computational experiments that show that the algorithm is very fast and performs extremely well compared to many known local search heuristics for the problem.  We hope that we can stimulate further research into very fast algorithms with provable performance that also work very well in practice.       Last Modified: 01/20/2017       Submitted by: David P Williamson]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

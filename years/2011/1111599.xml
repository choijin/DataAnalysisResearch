<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>TC: Large: Collaborative Research: Practical Secure Two-Party Computation: Techniques, Tools, and Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2011</AwardEffectiveDate>
<AwardExpirationDate>07/31/2018</AwardExpirationDate>
<AwardTotalIntnAmount>1000000.00</AwardTotalIntnAmount>
<AwardAmount>1000000</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Many compelling applications involve computations that require sensitive data from two or more individuals. For example, as the cost of personal genome sequencing rapidly plummets many genetics applications will soon be within reach of individuals such as comparing one?s genome with the genomes of different groups of participants in a study to determine which treatment is likely to be most effective. Such comparisons could have tremendous value, but are currently infeasible because of the privacy concerns both for the individual and study participants. What is needed is a way to produce the result of the comparison without exposing either party's private inputs. The ultimate aim of this project is to make privacy-preserving computation practical and accessible enough to be used routinely in applications such as personalized genetics, medical research, and privacy-preserving biometrics.&lt;br/&gt;&lt;br/&gt;Theoretical solutions to this problem, known as secure multi-party computation, have been known for several decades, including a general solution developed by Andrew Yao based on garbled circuits. Because of its extensive memory use and computational cost, however, the garbled circuits approach has traditionally been considered more of a theoretical curiosity than a practical mechanism for building privacy-preserving applications. Recent developments in cryptographic techniques and new implementation approaches are beginning to change this, however, and admit the possibility of scalable, practical secure computation. This project is designing methods for avoiding the memory bottleneck associated with garbled circuit evaluation by aggressively pipelining circuit generation and evaluation, and exploring a variety of techniques for reducing the size of garbled circuits. Another issue the limits the use of secure computation in practice is the need for standard protocols to assume an honest-but-curious adversary who always follows the specified protocol. This project is developing new techniques for dealing with malicious adversaries, improving the standard cut-and-choose and commit-and-prove approaches by using new cryptographic tools and exploring an alternate model in which a verifiable trusted party generates the circuit but is not trusted with any private data. The project is also developing techniques to audit the information that can be inferred from the result of a secure computation.  Another goal is to make secure computation more accessible to developers by developing programming tools for defining secure computations at a high level, based on information-flow analysis and program partitioning.</AbstractNarration>
<MinAmdLetterDate>08/08/2011</MinAmdLetterDate>
<MaxAmdLetterDate>08/14/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1111599</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Hicks</LastName>
<PI_MID_INIT>W</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael W Hicks</PI_FULL_NAME>
<EmailAddress>mwh@cs.umd.edu</EmailAddress>
<PI_PHON>3014052710</PI_PHON>
<NSF_ID>000116426</NSF_ID>
<StartDate>08/08/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jonathan</FirstName>
<LastName>Katz</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jonathan Katz</PI_FULL_NAME>
<EmailAddress>jkatz@cs.umd.edu</EmailAddress>
<PI_PHON>3014051226</PI_PHON>
<NSF_ID>000148714</NSF_ID>
<StartDate>08/08/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Maryland, College Park</Name>
<CityName>College Park</CityName>
<ZipCode>207425141</ZipCode>
<PhoneNumber>3014056269</PhoneNumber>
<StreetAddress>3112 LEE BLDG 7809 Regents Drive</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<StateCode>MD</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>MD05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>790934285</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF MARYLAND, COLLEGE PARK</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>003256088</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Maryland, College Park]]></Name>
<CityName>College Park</CityName>
<StateCode>MD</StateCode>
<ZipCode>207425141</ZipCode>
<StreetAddress><![CDATA[3112 LEE BLDG 7809 Regents Drive]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Maryland</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>MD05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7795</Code>
<Text>TRUSTWORTHY COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>7925</Code>
<Text>LARGE PROJECT</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~168195</FUND_OBLG>
<FUND_OBLG>2012~194758</FUND_OBLG>
<FUND_OBLG>2013~637047</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p id="docs-internal-guid-bd82bae3-7fff-37ff-16e3-e54891cef8bf" style="line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;" dir="ltr"><span style="font-size: 10.5pt; font-family: Arial; color: #f5690d; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">Secure multi-party computation enables two or more data owners to collaboratively compute a function of all their data, while ensuring privacy of their individual data. Although protocols for secure multi-party computation have been known since the 1980s, until recently they were only of theoretical interest. This project focused on making secure multi-party computation more practical in terms of efficiency, scalability, and usability. Work done as part of our project, in combination with results from other research groups, has reduced the cost of secure computation by two to four orders of magnitude, increased the scale of the largest MPC applications 10,000-fold, and resulted in open-source software artifacts that non-exerts can use to develop privacy-preserving applications.</span></p> <p style="line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;" dir="ltr"><span style="font-size: 10.5pt; font-family: Arial; color: #f5690d; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">Intellectual Merit: Particular theoretical innovations resulting from our work include the half-gates garbling technique, which provides a significant improvement applicable to all garbled-circuit protocols; a series of improvements in the malicious setting which enable malicious secure computation at only a small multiple of the cost for semi-honest secure computation; and the development of several new methods for RAM-based secure computation. &nbsp;We have also developed several privacy-preserving applications that have extended the range of what is feasible with multi-party computation, with applications to distributed machine learning, stable matching, and processor simulation. </span></p> <p style="line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;" dir="ltr"><span style="font-size: 10.5pt; font-family: Arial; color: #f5690d; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;">Broader Impacts: All of the tools and applications we developed have been released as open-source software, including the EMC, Obliv-C, and Wysteria toolkits for implementing secure-computation protocols. These tools are now widely used by other research groups and industry. The project has resulted in several publications including a (soon-to-be-published) book that introduces researchers and practitioners to MPC. Many of the graduate students involved in the project have gone on to successful careers as independent researchers, including several now in tenure-track faculty positions. The PIs have presented multi-party computation in outreach events to middle-school students, high-school teachers, and undergraduates, as well as to potential adopters in government and industry.</span></p><br> <p>            Last Modified: 09/05/2018<br>      Modified by: Jonathan&nbsp;Katz</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[Secure multi-party computation enables two or more data owners to collaboratively compute a function of all their data, while ensuring privacy of their individual data. Although protocols for secure multi-party computation have been known since the 1980s, until recently they were only of theoretical interest. This project focused on making secure multi-party computation more practical in terms of efficiency, scalability, and usability. Work done as part of our project, in combination with results from other research groups, has reduced the cost of secure computation by two to four orders of magnitude, increased the scale of the largest MPC applications 10,000-fold, and resulted in open-source software artifacts that non-exerts can use to develop privacy-preserving applications. Intellectual Merit: Particular theoretical innovations resulting from our work include the half-gates garbling technique, which provides a significant improvement applicable to all garbled-circuit protocols; a series of improvements in the malicious setting which enable malicious secure computation at only a small multiple of the cost for semi-honest secure computation; and the development of several new methods for RAM-based secure computation.  We have also developed several privacy-preserving applications that have extended the range of what is feasible with multi-party computation, with applications to distributed machine learning, stable matching, and processor simulation.  Broader Impacts: All of the tools and applications we developed have been released as open-source software, including the EMC, Obliv-C, and Wysteria toolkits for implementing secure-computation protocols. These tools are now widely used by other research groups and industry. The project has resulted in several publications including a (soon-to-be-published) book that introduces researchers and practitioners to MPC. Many of the graduate students involved in the project have gone on to successful careers as independent researchers, including several now in tenure-track faculty positions. The PIs have presented multi-party computation in outreach events to middle-school students, high-school teachers, and undergraduates, as well as to potential adopters in government and industry.       Last Modified: 09/05/2018       Submitted by: Jonathan Katz]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CSR: Small: Model Exploration for Cyber-Physical Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>375000.00</AwardTotalIntnAmount>
<AwardAmount>390998</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Cyber-Physical Systems (CPS) tightly integrate computation and communication to control a physical system.  Examples of computer-controlled systems include medical devices, airplanes, and automobiles.  Such systems are too complex for the designers to completely understand their behavior in every detail.  On the other hand, understanding the high-level properties of such systems is of paramount importance since most are safety-critical.&lt;br/&gt;&lt;br/&gt;This project seeks to improve model exploration techniques for control systems in two distinct directions.  First, it investigates formal languages that partially specify the properties of a system.  The goal is to make those specifications more concrete, in a way that they demonstrate what are precisely the properties satisfied by the system. Second, it studies the temporal logic revision problem.  Namely, if automatic analysis shows that a desired system specification cannot be satisfied, how can tools propose an alternative specification which can be satisfied and is as close as possible to the originally intended one?  The research project will adopt and adapt ideas from temporal logic queries, vacuity and coverage to the CPS setting.&lt;br/&gt;&lt;br/&gt;Expected results of the project include tools for (i) the model based exploration of control systems and (ii) the debugging of control system synthesis tools.  As a result, the developed techniques will be readily available to designers of embedded control systems to help them explore and better understand their systems. Additionally, the practical and theoretical results of this research will be disseminated to undergraduate and graduate students as well as engineers in local industries through a number of advanced courses and seminars that the PI is teaching.</AbstractNarration>
<MinAmdLetterDate>08/20/2011</MinAmdLetterDate>
<MaxAmdLetterDate>05/31/2013</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1116136</AwardID>
<Investigator>
<FirstName>Georgios</FirstName>
<LastName>Fainekos</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Georgios Fainekos</PI_FULL_NAME>
<EmailAddress>fainekos@asu.edu</EmailAddress>
<PI_PHON>4809655479</PI_PHON>
<NSF_ID>000542660</NSF_ID>
<StartDate>08/20/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Arizona State University</Name>
<CityName>TEMPE</CityName>
<ZipCode>852816011</ZipCode>
<PhoneNumber>4809655479</PhoneNumber>
<StreetAddress>ORSPA</StreetAddress>
<StreetAddress2><![CDATA[660 South Mill Avenue, Suite 310]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<StateCode>AZ</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>AZ09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>943360412</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>ARIZONA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>806345658</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Arizona State University]]></Name>
<CityName>TEMPE</CityName>
<StateCode>AZ</StateCode>
<ZipCode>852816011</ZipCode>
<StreetAddress><![CDATA[ORSPA]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>AZ09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7354</Code>
<Text>COMPUTER SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~375000</FUND_OBLG>
<FUND_OBLG>2013~15998</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Nowadays, embedded computing devices can be found in a variety of new systems that interact with the physical world. Automobiles, locomotives, aerospace systems, medical devices, manufacturing systems and robotics are all prime examples of such systems which are usually referred to as Cyber-Physical Systems (CPS). The benefits of embedding computational intelligence in our critical infrastructure and devices are overwhelming: improved levels of system efficiency, safety, cost reduction, customization and usability. These smart devices are becoming a reality through complex software. As the embedded intelligence increases so does the complexity of the software. As the complexity of the software increases so do the design and programming errors.&nbsp;</p> <p><br />CPS pose additional challenges over traditional software/hardware based systems. That is, humans cannot easily predict how the complex software/hardware interacts with the physical environment. The consequences are ominous. Both the automotive and the medical device industries issue multiple software-related recalls on a yearly basis. Many of these recalls can lead to life threatening situations. Examples range from cruise control systems that do not disengage under certain operating conditions to infusion pumps that may overdose patients. The situation is expected to become more complicated as autonomous vehicles and other robotic systems become a commodity.&nbsp;</p> <p><br />In this project, we support the view that safety critical systems, for example, autonomous cars, should at all times observe and respect high level safety requirements. For example, a human user should be able to command a robot to perform certain tasks and it should be guaranteed that the robot will not violate the user instructions and any state or federal laws. Similarly, engineers should be able to specify and verify that a car engine can never stall and shut down due to design errors when the vehicle is driving on the freeway. The foundational challenge in either case is how can we guarantee that the requirements themselves are correct (non-contradicting)? &nbsp;Moreover, if the requirements are found to be incorrect, how can we fix them using the system information? &nbsp;</p> <p><br />This project has developed theoretical results, practical algorithms and software tools to address this important problem in a variety of scenarios. From the end-user perspective, in human-robot interaction, our methods provide feedback to the user when the user requests cannot be executed by the robot. Such failures could be due to conflicting user requirements and preferences or due to inherent system constraints, e.g., not enough battery power to achieve all user goals. In such cases, the user should be able to understand why not all the tasks can be accomplished and what can be actually accomplished by the robot under the given constraints. Our investigation also looked into how to visually and graphically represent complex spatio-temporal requirements. This is an important step so that non-expert users can control robots and so that robots can provide feedback to the user.&nbsp;</p> <p><br />From the system development perspective, this project focused on the model/property exploration problem for CPS. The main impact of the CPS specification mining work to the discipline of CPS is a fundamentally new approach to the problem. Namely, we have reformulated the verification / specification mining problems into optimization problems that can be solved using off-the-self optimization methods. At the current stage, our Model Based Development (MBD) analysis tools for CPS, namely S-TaLiRo, enables the formal requirements analysis as well as system behavior exploration at the early design stages of a new system. Thus, system design errors can be detected and corrected early. Our open source tools help researches across the world to easily analyze pr...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Nowadays, embedded computing devices can be found in a variety of new systems that interact with the physical world. Automobiles, locomotives, aerospace systems, medical devices, manufacturing systems and robotics are all prime examples of such systems which are usually referred to as Cyber-Physical Systems (CPS). The benefits of embedding computational intelligence in our critical infrastructure and devices are overwhelming: improved levels of system efficiency, safety, cost reduction, customization and usability. These smart devices are becoming a reality through complex software. As the embedded intelligence increases so does the complexity of the software. As the complexity of the software increases so do the design and programming errors.    CPS pose additional challenges over traditional software/hardware based systems. That is, humans cannot easily predict how the complex software/hardware interacts with the physical environment. The consequences are ominous. Both the automotive and the medical device industries issue multiple software-related recalls on a yearly basis. Many of these recalls can lead to life threatening situations. Examples range from cruise control systems that do not disengage under certain operating conditions to infusion pumps that may overdose patients. The situation is expected to become more complicated as autonomous vehicles and other robotic systems become a commodity.    In this project, we support the view that safety critical systems, for example, autonomous cars, should at all times observe and respect high level safety requirements. For example, a human user should be able to command a robot to perform certain tasks and it should be guaranteed that the robot will not violate the user instructions and any state or federal laws. Similarly, engineers should be able to specify and verify that a car engine can never stall and shut down due to design errors when the vehicle is driving on the freeway. The foundational challenge in either case is how can we guarantee that the requirements themselves are correct (non-contradicting)?  Moreover, if the requirements are found to be incorrect, how can we fix them using the system information?     This project has developed theoretical results, practical algorithms and software tools to address this important problem in a variety of scenarios. From the end-user perspective, in human-robot interaction, our methods provide feedback to the user when the user requests cannot be executed by the robot. Such failures could be due to conflicting user requirements and preferences or due to inherent system constraints, e.g., not enough battery power to achieve all user goals. In such cases, the user should be able to understand why not all the tasks can be accomplished and what can be actually accomplished by the robot under the given constraints. Our investigation also looked into how to visually and graphically represent complex spatio-temporal requirements. This is an important step so that non-expert users can control robots and so that robots can provide feedback to the user.    From the system development perspective, this project focused on the model/property exploration problem for CPS. The main impact of the CPS specification mining work to the discipline of CPS is a fundamentally new approach to the problem. Namely, we have reformulated the verification / specification mining problems into optimization problems that can be solved using off-the-self optimization methods. At the current stage, our Model Based Development (MBD) analysis tools for CPS, namely S-TaLiRo, enables the formal requirements analysis as well as system behavior exploration at the early design stages of a new system. Thus, system design errors can be detected and corrected early. Our open source tools help researches across the world to easily analyze properties of their systems ranging from new medical devices to new avionics. The outcomes of this research can provide better system...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

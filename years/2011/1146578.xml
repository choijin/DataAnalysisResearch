<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EAGER: Integrating Chip Reliability in Designing Energy-Saving Scheduling Algorithms</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>69872.00</AwardTotalIntnAmount>
<AwardAmount>69872</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Balasubramanian Kalyanasundaram</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The substantial increase of energy consumption has brought up many serious engineering problems and economic concerns to our society. Many energy-saving scheduling algorithms have been proposed in the past decade to manage power consumption. However, energy-saving algorithms' impact on chip lifetime reliability, an important factor affecting overall system sustainability, has not been carefully examined by computer science theorists.&lt;br/&gt;&lt;br/&gt;The goal of this EAGER proposal is to explore the theoretical groundwork of incorporating chip reliability in designing energy efficient scheduling algorithms for modern computing facilities. The PI proposes a new model that augments the existing energy-aware schedulers by enforcing additional chip lifetime reliability constraints which are modeled as functions of processor frequency changes. Novel scheduling algorithm design and analysis techniques are investigated to solve this problem.&lt;br/&gt;&lt;br/&gt;The project outcome may potentially be transformative to a spectrum of related scheduling problems. In addition to studying the proposed theoretical problems, the PI empirically measures the performance of the developed algorithms by utilizing the FreeBSD operating system. This research suggests that through operating system kernel development, the practical implications of theoretical findings can be demonstrated.</AbstractNarration>
<MinAmdLetterDate>07/27/2011</MinAmdLetterDate>
<MaxAmdLetterDate>07/27/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1146578</AwardID>
<Investigator>
<FirstName>Fei</FirstName>
<LastName>Li</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Fei Li</PI_FULL_NAME>
<EmailAddress>lifei@cs.gmu.edu</EmailAddress>
<PI_PHON>7039931540</PI_PHON>
<NSF_ID>000504086</NSF_ID>
<StartDate>07/27/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>George Mason University</Name>
<CityName>FAIRFAX</CityName>
<ZipCode>220304422</ZipCode>
<PhoneNumber>7039932295</PhoneNumber>
<StreetAddress>4400 UNIVERSITY DR</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<StateCode>VA</StateCode>
<CONGRESSDISTRICT>11</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>VA11</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>077817450</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGE MASON UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>077817450</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[George Mason University]]></Name>
<CityName/>
<StateCode>VA</StateCode>
<ZipCode>220304422</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Virginia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>11</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>VA11</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~69872</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The substantial increase of energy consumption has brought up many serious engineering problems and economic concerns to our society. Many power-saving scheduling algorithms have beenproposed in the past decade to manage power consumptions for computing chips. However, these algorithms' impact on chip lifetime reliability, an important factor affecting the overallsystem sustainability, has not been carefully examined by computer science theorists.</p> <p>This EAGER proposal is to explore the theoretical groundwork of incorporating chip reliability in designing energy-efficient scheduling algorithms for modern computing facilities. In this project, the PI and his group focused on a temperature-induced intrinsic hard failure mechanism called thermal cycling. Note that energy-efficient scheduling algorithms adjust a computing chip's running frequency in a dynamic manner and potentially, they create cracks and fatigue failures by repeated heating and cooling of the processor.</p> <p>In this project, two computing chip settings, the continuous-speed setting and the discrete-speed setting, were investigated. For the continuous-speed setting, the PI proposed a new model that augments the existing energy-efficient schedulers by enforcing additional chip lifetime reliability constraints which were modeled as functions of processor frequency changes. Optimal scheduling algorithms using convex programming techniques were designed and analyzed. In the discrete-speed setting, a special case was studied by the PI and his colleagues. In this case, the number of idle periods (gaps) in which no jobs are running on the processor is minimized. In minimizing the number of gaps of schedules, a fast 2-approximation algorithm was proposed. This algorithm has a low overhead and is easy to implement. Algorithms for the general case are being conducted by the PI and his colleagues.</p> <p>The practical implications of the above theoretical findings have been demonstrated partially through modifying the Linux operating system. In the current Linux operating system, the computing chip's running frequency is adjusted by the workload in the system. A few pre-defined thresholds determine when to switch running speeds. The PI and his students implemented an adaptive thresholds algorithm which saves the number of speed changes (and hence enhances the chip's lifetime reliability) and power consumption at the same time.</p><br> <p>            Last Modified: 09/30/2013<br>      Modified by: Fei&nbsp;Li</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The substantial increase of energy consumption has brought up many serious engineering problems and economic concerns to our society. Many power-saving scheduling algorithms have beenproposed in the past decade to manage power consumptions for computing chips. However, these algorithms' impact on chip lifetime reliability, an important factor affecting the overallsystem sustainability, has not been carefully examined by computer science theorists.  This EAGER proposal is to explore the theoretical groundwork of incorporating chip reliability in designing energy-efficient scheduling algorithms for modern computing facilities. In this project, the PI and his group focused on a temperature-induced intrinsic hard failure mechanism called thermal cycling. Note that energy-efficient scheduling algorithms adjust a computing chip's running frequency in a dynamic manner and potentially, they create cracks and fatigue failures by repeated heating and cooling of the processor.  In this project, two computing chip settings, the continuous-speed setting and the discrete-speed setting, were investigated. For the continuous-speed setting, the PI proposed a new model that augments the existing energy-efficient schedulers by enforcing additional chip lifetime reliability constraints which were modeled as functions of processor frequency changes. Optimal scheduling algorithms using convex programming techniques were designed and analyzed. In the discrete-speed setting, a special case was studied by the PI and his colleagues. In this case, the number of idle periods (gaps) in which no jobs are running on the processor is minimized. In minimizing the number of gaps of schedules, a fast 2-approximation algorithm was proposed. This algorithm has a low overhead and is easy to implement. Algorithms for the general case are being conducted by the PI and his colleagues.  The practical implications of the above theoretical findings have been demonstrated partially through modifying the Linux operating system. In the current Linux operating system, the computing chip's running frequency is adjusted by the workload in the system. A few pre-defined thresholds determine when to switch running speeds. The PI and his students implemented an adaptive thresholds algorithm which saves the number of speed changes (and hence enhances the chip's lifetime reliability) and power consumption at the same time.       Last Modified: 09/30/2013       Submitted by: Fei Li]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

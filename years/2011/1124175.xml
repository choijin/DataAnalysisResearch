<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EXP: CTSiM: Fostering Computational Thinking in Middle Schools through Scientific Modeling and Simulation</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>550279.00</AwardTotalIntnAmount>
<AwardAmount>570779</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Janet L. Kolodner</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>This project's investigation is at the nexus between scientific thinking, computational thinking, modeling as an investigative endeavor, and visual programming tools. The PIs are infusing middle-school science with efforts to promote computational thinking, doing that through making modeling a more significant part of science activities. The modeling experiences learners have become progressively more complex throughout each module and more complex across modules, with the increases in complexity informed by complexities of becoming a computational thinker. Modeling and computational thinking are foregrounded in each module, with each becoming more fluid over time as a result of the repetition of increasingly complex modeling experiences in a variety of situations, all of which build on each other. The mental model building, computational thinking, modeling, and science education literatures all inform the endeavor. The technological innovation includes creating and refining a modeling environment appropriate to middle schoolers, including an appropriate visual programming language. Research questions address issues in learning computational thinking in the context of learning to model and use models for investigation (and vice versa) and trajectories towards competency in computational thinking and modeling as their research questions.&lt;br/&gt;&lt;br/&gt;Computational thinking is becoming a more and more important required expertise of scientists -- both those who work at the high levels of computational science and engineering and those who support them and apply computational science. In addition, as computation becomes more and more ubiquitous in a whole variety of disciplines and workplace responsibilities, the rest of the population, too, needs to be more expert at computational thinking and at using computational tools. Infusing computational thinking and the use of computational tools into the curriculum in appropriate ways is the right way to promote this cross-cutting expertise. Science is one place in the curriculum where computational thinking can easily be integrated, and doing so not only holds the promise for readying more of the population for careers and jobs that require computational thinking and use of computational tools but also making  middle school science more exciting to more of the population.</AbstractNarration>
<MinAmdLetterDate>08/31/2011</MinAmdLetterDate>
<MaxAmdLetterDate>05/09/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1124175</AwardID>
<Investigator>
<FirstName>Gautam</FirstName>
<LastName>Biswas</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Gautam Biswas</PI_FULL_NAME>
<EmailAddress>gautam.biswas@vanderbilt.edu</EmailAddress>
<PI_PHON>6153436204</PI_PHON>
<NSF_ID>000110341</NSF_ID>
<StartDate>08/31/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Douglas</FirstName>
<LastName>Clark</LastName>
<PI_MID_INIT>B</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Douglas B Clark</PI_FULL_NAME>
<EmailAddress>doug.clark@vanderbilt.edu</EmailAddress>
<PI_PHON>4803292827</PI_PHON>
<NSF_ID>000336921</NSF_ID>
<StartDate>08/31/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Pratim</FirstName>
<LastName>Sengupta</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Pratim Sengupta</PI_FULL_NAME>
<EmailAddress>pratim.sengupta@Vanderbilt.Edu</EmailAddress>
<PI_PHON>6153222631</PI_PHON>
<NSF_ID>000548930</NSF_ID>
<StartDate>08/31/2011</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Vanderbilt University</Name>
<CityName>Nashville</CityName>
<ZipCode>372350002</ZipCode>
<PhoneNumber>6153222631</PhoneNumber>
<StreetAddress>Sponsored Programs Administratio</StreetAddress>
<StreetAddress2><![CDATA[PMB 407749 2301 Vanderbilt Place]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<StateCode>TN</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TN05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>965717143</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>VANDERBILT UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>004413456</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Vanderbilt University]]></Name>
<CityName>Nashville</CityName>
<StateCode>TN</StateCode>
<ZipCode>372122328</ZipCode>
<StreetAddress><![CDATA[1025 16th Avenue South]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Tennessee</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TN05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7444</Code>
<Text>NATIONAL SMETE DIGITAL LIBRARY</Text>
</ProgramElement>
<ProgramElement>
<Code>8020</Code>
<Text>Cyberlearn &amp; Future Learn Tech</Text>
</ProgramElement>
<ProgramReference>
<Code>7218</Code>
<Text>RET SUPP-Res Exp for Tchr Supp</Text>
</ProgramReference>
<ProgramReference>
<Code>7444</Code>
<Text>NATIONAL SMETE DIGITAL LIBRARY</Text>
</ProgramReference>
<ProgramReference>
<Code>8045</Code>
<Text>Cyberlearn &amp; Future Learn Tech</Text>
</ProgramReference>
<ProgramReference>
<Code>8841</Code>
<Text>Exploration Projects</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0411</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~550279</FUND_OBLG>
<FUND_OBLG>2012~20500</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span style="font-family: Times New Roman;">&nbsp;</span>The project is driven by the needs of a 21st century workforce, where improving science education in K-12 classrooms has been a&nbsp;topic of growing importance. The core science and engineering practices required in a K-12 science curriculum now include the use of Computational Thinking (CT) concepts along with practices like developing and using models, planning and carrying out investigations, analyzing and interpreting data, constructing explanations and designing solutions. In spite of the known synergies between CT and science education, few attempts have been made to leverage this synergy, especially at the middle school level. Relatively little was known about students&rsquo; conceptual understanding and developmental processes in curricula that involve learning programming and computational modeling in conjunction with scientific concepts when we started this research project.</p> <p>In this project we have developed CTSiM (Computational Thinking in Simulation and Modeling) &ndash; a learning environment for K-12 science that is based on a computational thinking approach. CTSiM adopts a learning by design paradigm, where students iteratively design, deploy and revise conceptual and computational (i.e., simulation) models of scientific phenomena. Student model building and learning is scaffolded by (1) an agent-based modeling paradigm, where the term &ldquo;agent&rdquo; indicates an individual computational object or actor (e.g., a roller coaster car or a fish in a fish tank), which carries out actions based on simple rules (e.g., moving forward, changing directions, etc.), and these rules can be assigned or controlled by the user; (2) visual programming as the mode of programming to enable students to represent phenomena computationally without having to learn the syntax of a programming language. This makes understanding computational structures and programming more accessible to novices; and (3) the use of integrated domain-specific science primitives and domain-general computational abstractions that exploit the synergy between science concepts and computational thinking constructs. The current version of CTSiM includes learning modules in (1) kinematics for learning about Newton&rsquo;s laws of motion and the relations between distance, speed, and acceleration, and (2) ecology, where students learn about ecological processes for sustaining fish in a fish tank ecosystem.</p> <p>We have run a set of studies in 6<sup>th</sup> grade science classrooms and analysis of the data has provided strong evidence of student learning. In more detail:</p> <ol> <li>Model building, testing, and verification in the CTSiM environment helped students learn both science content and computational thinking skills synergistically.&nbsp;Students worked&nbsp;on the kinematics and ecology units in the CTSiM system. Analysis of the student data showed that students understanding and ability to use science concepts to answer questions showed significant increases along with their understanding of computational constructs and ability to use these constructs&nbsp;to build models of science phenomena.</li> <li>More detailed&nbsp;analysis of student work on the system has helped us document the different types of modeling, programming, and science content related challenges that middle school students face while working on CTSiM, and the nature of the support needed to help them successfully overcome these challenges. In general, the number of challenges students faced decreased and their ability to build correct models improved as they worked through&nbsp;the two&nbsp;units, another indication that students were learning and becoming better modelers as they worked on the system. </li> <li>We have also developed analytic measures that help us track the evolution of the students&rsquo; models as they work on the system. In the fu...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  The project is driven by the needs of a 21st century workforce, where improving science education in K-12 classrooms has been a topic of growing importance. The core science and engineering practices required in a K-12 science curriculum now include the use of Computational Thinking (CT) concepts along with practices like developing and using models, planning and carrying out investigations, analyzing and interpreting data, constructing explanations and designing solutions. In spite of the known synergies between CT and science education, few attempts have been made to leverage this synergy, especially at the middle school level. Relatively little was known about studentsÆ conceptual understanding and developmental processes in curricula that involve learning programming and computational modeling in conjunction with scientific concepts when we started this research project.  In this project we have developed CTSiM (Computational Thinking in Simulation and Modeling) &ndash; a learning environment for K-12 science that is based on a computational thinking approach. CTSiM adopts a learning by design paradigm, where students iteratively design, deploy and revise conceptual and computational (i.e., simulation) models of scientific phenomena. Student model building and learning is scaffolded by (1) an agent-based modeling paradigm, where the term "agent" indicates an individual computational object or actor (e.g., a roller coaster car or a fish in a fish tank), which carries out actions based on simple rules (e.g., moving forward, changing directions, etc.), and these rules can be assigned or controlled by the user; (2) visual programming as the mode of programming to enable students to represent phenomena computationally without having to learn the syntax of a programming language. This makes understanding computational structures and programming more accessible to novices; and (3) the use of integrated domain-specific science primitives and domain-general computational abstractions that exploit the synergy between science concepts and computational thinking constructs. The current version of CTSiM includes learning modules in (1) kinematics for learning about NewtonÆs laws of motion and the relations between distance, speed, and acceleration, and (2) ecology, where students learn about ecological processes for sustaining fish in a fish tank ecosystem.  We have run a set of studies in 6th grade science classrooms and analysis of the data has provided strong evidence of student learning. In more detail:  Model building, testing, and verification in the CTSiM environment helped students learn both science content and computational thinking skills synergistically. Students worked on the kinematics and ecology units in the CTSiM system. Analysis of the student data showed that students understanding and ability to use science concepts to answer questions showed significant increases along with their understanding of computational constructs and ability to use these constructs to build models of science phenomena. More detailed analysis of student work on the system has helped us document the different types of modeling, programming, and science content related challenges that middle school students face while working on CTSiM, and the nature of the support needed to help them successfully overcome these challenges. In general, the number of challenges students faced decreased and their ability to build correct models improved as they worked through the two units, another indication that students were learning and becoming better modelers as they worked on the system.  We have also developed analytic measures that help us track the evolution of the studentsÆ models as they work on the system. In the future, we will combine these measures with our knowledge of the specific challenges students face to develop adaptive feedback that is tailored to helping individual students succeed in their modeling and  learning tasks.    A highlight ...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: SMART: Scalable Adaptive Runtime Management Algorithms and Toolkit for Large-Scale Dynamic Scientific Applications</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2010</AwardEffectiveDate>
<AwardExpirationDate>02/28/2017</AwardExpirationDate>
<AwardTotalIntnAmount>406546.00</AwardTotalIntnAmount>
<AwardAmount>406546</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Emerging general-purpose high performance computing and storage resources provide great opportunities to tackle grand challenge problems in science and engineering.   However, most systems do not have adequate support to meet special requirements of a number of ultra-scale dynamic scientific applications due to lack of application-awareness. These computation and data intensive applications are aimed to model and investigate highly dynamic and sometimes drastically changing phenomena in science and engineering, such as interacting black holes, global and regional high-resolution weather forecasting, combustion and detonation simulation, and many others. Furthermore, it is challenging and time-consuming for scientists/engineers to develop their large-scale parallel and distributed scientific applications from scratch.&lt;br/&gt;&lt;br/&gt;This project fills the gap and aims to (1) create an integrated framework of scalable adaptive runtime management algorithms, libraries, and toolkit (called SMART) with friendly programming models so that scientists can write sequential programs to achieve automatic parallelism and high performance and throughput; (2) design a suite of application-aware adaptive algorithms to holistically address various issues in computation, communication, data, and energy management in systems with thousands of processors (such as clusters, grids, and clouds); and (3) enable high-impact real-world large-scale scientific applications with additional tools for simulation and visualization.</AbstractNarration>
<MinAmdLetterDate>03/10/2011</MinAmdLetterDate>
<MaxAmdLetterDate>04/04/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1128805</AwardID>
<Investigator>
<FirstName>Xiaolin</FirstName>
<LastName>Li</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xiaolin Li</PI_FULL_NAME>
<EmailAddress>andyli@ece.ufl.edu</EmailAddress>
<PI_PHON>3523922651</PI_PHON>
<NSF_ID>000201278</NSF_ID>
<StartDate>03/10/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Florida</Name>
<CityName>GAINESVILLE</CityName>
<ZipCode>326112002</ZipCode>
<PhoneNumber>3523923516</PhoneNumber>
<StreetAddress>1 UNIVERSITY OF FLORIDA</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<StateCode>FL</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>FL03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>969663814</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF FLORIDA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>159621697</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Florida]]></Name>
<CityName>Gainesville</CityName>
<StateCode>FL</StateCode>
<ZipCode>326112002</ZipCode>
<StreetAddress><![CDATA[1 University of Florida]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>FL03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1045</Code>
<Text>CAREER: FACULTY EARLY CAR DEV</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>1187</Code>
<Text>PECASE- eligible</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9218</Code>
<Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0110</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2010~222250</FUND_OBLG>
<FUND_OBLG>2013~90358</FUND_OBLG>
<FUND_OBLG>2014~93938</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>In this project, we have designed a suite of algorithms and software packages (collectively called SMART) to enable scientific discovery in multidisciplinary applications on modern high performance and cloud computing environments. Representative applications include astronomy, high energy physics, smart grid, severe weather forecasting, and computational biology. With SMART, domain scientists can focus on their scientific discovery without being distracted by complex data, computing, and software components. Through careful engineering following software design principles, our programming models and runtime systems not only boost the execution time of large-scale and complicated scientific applications but also provide a deverloper-friendly and thoroughly tested and evaluated substrate to avoid error-prone ad-hoc software design by individual domain scientists.</p> <p>We designed efficient runtime job and resource management algorithms. To address large-scale data analytics in scientific applications, we designed Mammoth algorithms and system to handle local data and fetching remote data in real time to balance workloads among hundreds of computing nodes. We designed MyCloud so that we can instantiate a new cloud instance of multiple virtual machines/containers after being allocated resources by high-performance computing (HPC) platforms. It accommodates both conventional HPC environments and modern cloud flexibility and provide cloud on demand for scientific applications that may need tremendous efforts for configuring many related packages and libraries. We designed intelligent algorithms and platforms for high-impact applications such as astronomy and smart grid. DeepSky yields expert-level results based on astronomy data and deep learning. We designed adaptive partitioning and load balancing algorithms for state-transition applications that involve drastic changes in time and space, such as severe weather and shock wave formulations and simulations. For block-oriented scientific applications, we designed MapReduce algorithms and platforms that address severe skews and load imbalance in large-scale scientific simulations and migrate processes and schedule resources to accommodate dynamic data distribution and workload dynamics. For more distributed environments, to achieve better load balancing and adaptively overlap communication and computation, we designed prefetching mechisms and algorithms so that we can minimize the execution time of the overall job and reduce the negative impact of rare stragglers among hundreds of nodes.</p> <p>Our research has won best paper awards inthe ACM Cloud and Autonomic Computing Conference (CAC 2013), the 13<sup>th</sup> IEEE International Conference on Sensing, Communication and Networking (SECON 2016), and&nbsp;the 15th IEEE International Conference on Machine Learning and Applications (ICMLA 2016). We also won the Internet2 Innnovative Application Award for our work on large-scale distributed multi-site environments. We have open-sourced code to the community.</p><br> <p>            Last Modified: 08/24/2017<br>      Modified by: Xiaolin&nbsp;Li</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ In this project, we have designed a suite of algorithms and software packages (collectively called SMART) to enable scientific discovery in multidisciplinary applications on modern high performance and cloud computing environments. Representative applications include astronomy, high energy physics, smart grid, severe weather forecasting, and computational biology. With SMART, domain scientists can focus on their scientific discovery without being distracted by complex data, computing, and software components. Through careful engineering following software design principles, our programming models and runtime systems not only boost the execution time of large-scale and complicated scientific applications but also provide a deverloper-friendly and thoroughly tested and evaluated substrate to avoid error-prone ad-hoc software design by individual domain scientists.  We designed efficient runtime job and resource management algorithms. To address large-scale data analytics in scientific applications, we designed Mammoth algorithms and system to handle local data and fetching remote data in real time to balance workloads among hundreds of computing nodes. We designed MyCloud so that we can instantiate a new cloud instance of multiple virtual machines/containers after being allocated resources by high-performance computing (HPC) platforms. It accommodates both conventional HPC environments and modern cloud flexibility and provide cloud on demand for scientific applications that may need tremendous efforts for configuring many related packages and libraries. We designed intelligent algorithms and platforms for high-impact applications such as astronomy and smart grid. DeepSky yields expert-level results based on astronomy data and deep learning. We designed adaptive partitioning and load balancing algorithms for state-transition applications that involve drastic changes in time and space, such as severe weather and shock wave formulations and simulations. For block-oriented scientific applications, we designed MapReduce algorithms and platforms that address severe skews and load imbalance in large-scale scientific simulations and migrate processes and schedule resources to accommodate dynamic data distribution and workload dynamics. For more distributed environments, to achieve better load balancing and adaptively overlap communication and computation, we designed prefetching mechisms and algorithms so that we can minimize the execution time of the overall job and reduce the negative impact of rare stragglers among hundreds of nodes.  Our research has won best paper awards inthe ACM Cloud and Autonomic Computing Conference (CAC 2013), the 13th IEEE International Conference on Sensing, Communication and Networking (SECON 2016), and the 15th IEEE International Conference on Machine Learning and Applications (ICMLA 2016). We also won the Internet2 Innnovative Application Award for our work on large-scale distributed multi-site environments. We have open-sourced code to the community.       Last Modified: 08/24/2017       Submitted by: Xiaolin Li]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

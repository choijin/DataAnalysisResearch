<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>FRP:Collaborative Project: QoS-Assured Service Composition and Execution</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2014</AwardExpirationDate>
<AwardTotalIntnAmount>98295.00</AwardTotalIntnAmount>
<AwardAmount>98295</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Raffaella Montelli</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Netcentric Software and Systems Center&lt;br/&gt;Proposal  #1128344&lt;br/&gt;Proposal  #1128270&lt;br/&gt;&lt;br/&gt;This proposal seeks funding for the Netcentric Software and Systems Center sites at the University of North Texas and the University of Texas ? Dallas.  Funding Requests for Fundamental Research are authorized by an NSF approved solicitation, NSF 10-601.  The solicitation invites I/UCRCs to submit proposals for support of industry-defined fundamental research. &lt;br/&gt;&lt;br/&gt;Software development is increasingly achieved via Service Oriented Architectures (SOAs) served through web-based services, Quality of Service (QoS) is an important issue yet major gaps exist in the QoS paradigm. The proposed work looks at the composition approach where QoS properties are known at the individual web component level and used to determine an overall global QoS understanding. The proposed work seeks to establish a comprehensive framework for QoS-assured service composition and execution using a A QoS-reconfigurable service paradigm, compositional security and reliability analysis recently developed by the group, and a three phase composition algorithm to rapidly arrive at candidate compositions that meet QoA requirements. &lt;br/&gt;&lt;br/&gt;The outcomes of the proposed work have the potential for significant impact in the area of software development and application and the SOA community.  The work is supported by the Industry Advisory Board as well as individual industry members of the center.  The effort has the potential to extend the center?s portfolio through further development and application of the QoS framework developed. The PI plans to develop Network Centric Operations Industry Consortium (NCOIC) patterns from the work and post these for public access. The center will involve graduate students in the work.</AbstractNarration>
<MinAmdLetterDate>08/23/2011</MinAmdLetterDate>
<MaxAmdLetterDate>08/23/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1128344</AwardID>
<Investigator>
<FirstName>Krishna</FirstName>
<LastName>Kavi</LastName>
<PI_MID_INIT>M</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Krishna M Kavi</PI_FULL_NAME>
<EmailAddress>krishna.kavi@unt.edu</EmailAddress>
<PI_PHON>9403697216</PI_PHON>
<NSF_ID>000374348</NSF_ID>
<StartDate>08/23/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of North Texas</Name>
<CityName>Denton</CityName>
<ZipCode>762035017</ZipCode>
<PhoneNumber>9405653940</PhoneNumber>
<StreetAddress>1155 Union Circle #305250</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX26</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>614168995</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF NORTH TEXAS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>064117963</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of North Texas]]></Name>
<CityName>Denton</CityName>
<StateCode>TX</StateCode>
<ZipCode>762035017</ZipCode>
<StreetAddress><![CDATA[1155 Union Circle, #311366]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>26</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX26</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1714</Code>
<Text>Special Projects - CNS</Text>
</ProgramElement>
<ProgramReference>
<Code>5761</Code>
<Text>INDUSTRY/UNIV COOP RES CENTERS</Text>
</ProgramReference>
<ProgramReference>
<Code>7609</Code>
<Text>IUCRC FUNDAMENTAL RESEARCH</Text>
</ProgramReference>
<ProgramReference>
<Code>8039</Code>
<Text>Information, Communication &amp; Computing</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~98295</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>We extended WSDL to permit specification of non-functional property elements with services. Each web service can optionally describe QoS properties along with functional properties, in order to distinguish itself from other services providing similar functionality. QoS properties can include performance, reliability, security or other quality metrics. The framework is compatible with traditional SOA for either standard or quality-aware service publication, selection and interactions.</p> <p>In parallel to QoS aware service composition framework described above, we have also explored on how to detect performance antipatterns in composed web services and how to eliminate or mitigate these performance problems.</p> <p>A novel framework that assists in performance debugging of distributed software systems is described in this work. To alleviate the obstacles of applying performance antipatterns in the software development life cycles, real performance indices are made available in the framework by proposed tools. Real performance baselines can be established so that the performance of the designed system can be compared for any performance deficiencies. With the established facilities, contexts of performance antipatterns can be documented in the format with practical metrics. It will assist practitioners to match, detect, and apply solutions toperformance antipatterns. For each system or sub-component being evaluated, the framework creates profiles in what is called suggestive profiling, where different types of profiling are suggested for different types of systems. When used during the development life cycle, it provides a realistic means both for antipattern detection and application of suggested solutions during the refactoring phase of a performance debugging process. Information regarding the root causes of the detected performance problem can be used to assist the redesign efforts. An effective solution can be devised and used to eliminate the identified performance anomaly.</p><br> <p>            Last Modified: 10/06/2014<br>      Modified by: Krishna&nbsp;M&nbsp;Kavi</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ We extended WSDL to permit specification of non-functional property elements with services. Each web service can optionally describe QoS properties along with functional properties, in order to distinguish itself from other services providing similar functionality. QoS properties can include performance, reliability, security or other quality metrics. The framework is compatible with traditional SOA for either standard or quality-aware service publication, selection and interactions.  In parallel to QoS aware service composition framework described above, we have also explored on how to detect performance antipatterns in composed web services and how to eliminate or mitigate these performance problems.  A novel framework that assists in performance debugging of distributed software systems is described in this work. To alleviate the obstacles of applying performance antipatterns in the software development life cycles, real performance indices are made available in the framework by proposed tools. Real performance baselines can be established so that the performance of the designed system can be compared for any performance deficiencies. With the established facilities, contexts of performance antipatterns can be documented in the format with practical metrics. It will assist practitioners to match, detect, and apply solutions toperformance antipatterns. For each system or sub-component being evaluated, the framework creates profiles in what is called suggestive profiling, where different types of profiling are suggested for different types of systems. When used during the development life cycle, it provides a realistic means both for antipattern detection and application of suggested solutions during the refactoring phase of a performance debugging process. Information regarding the root causes of the detected performance problem can be used to assist the redesign efforts. An effective solution can be devised and used to eliminate the identified performance anomaly.       Last Modified: 10/06/2014       Submitted by: Krishna M Kavi]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

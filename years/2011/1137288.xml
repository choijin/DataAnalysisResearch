<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Many-body quantum chemistry on graphics processing units</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>10/01/2011</AwardEffectiveDate>
<AwardExpirationDate>09/30/2014</AwardExpirationDate>
<AwardTotalIntnAmount>200000.00</AwardTotalIntnAmount>
<AwardAmount>200000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>03090000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>CHE</Abbreviation>
<LongName>Division Of Chemistry</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Katharine Covert</SignBlockName>
<PO_EMAI>kcovert@nsf.gov</PO_EMAI>
<PO_PHON>7032924950</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The Division of Chemistry supports Albert DePrince of the Georgia Institute of Technology as an American Competitiveness in Chemistry Fellow.  Dr. DePrince will work on developing new ab initio computational chemistry methods and software to work on newer computer architecture, taking advantage of the computing power of graphical processing units (GPU).  The resulting software will be incorporated in open access software.  The PI will collaborate with scientists at Oak Ridge National Laboratory to implement his work on the next-generation super computers (the Keeneland and Titan systems) that will be housed there.  The ultimate goal of this research is to develop improved methods for computational chemistry.  For his plan for broadening participation, Dr. DePrince will develop IntercalationDiscovery@home to allow the public to engage in computational chemistry experiments to help screen potential anti-cancer drugs.  In addition, DePrince will develop computational chemistry lab experiments for use by high-school chemistry students to illustrate chemistry concepts (e.g. VSEPR theory). &lt;br/&gt;&lt;br/&gt;Research like that of Dr. DePrince is aimed at developing new methods for the computation of chemical and physical properties of matter.  Work like this enables scientists to do experiments "in silico" to help guide scientific research.  The project that Dr. DePrince is working on will be disseminated through a widely-used open-access software package, as well as being incorporated into the software of next-generation supercomputers that will be housed at Oak Ridge National Laboratory - a Department of Energy laboratory.   The efforts at broadening participation being pursued by Dr. DePrince are aimed at giving a broad population of students and the public exposure to an emerging area of the chemical sciences.</AbstractNarration>
<MinAmdLetterDate>09/20/2011</MinAmdLetterDate>
<MaxAmdLetterDate>09/20/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1137288</AwardID>
<Investigator>
<FirstName>Albert</FirstName>
<LastName>DePrince</LastName>
<PI_MID_INIT>E</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Albert E DePrince</PI_FULL_NAME>
<EmailAddress>deprince@chem.fsu.edu</EmailAddress>
<PI_PHON>8506451291</PI_PHON>
<NSF_ID>000590711</NSF_ID>
<StartDate>09/20/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Georgia Tech Research Corporation</Name>
<CityName>Atlanta</CityName>
<ZipCode>303320420</ZipCode>
<PhoneNumber>4048944819</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<StateCode>GA</StateCode>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>GA05</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>097394084</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>GEORGIA TECH RESEARCH CORPORATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>097394084</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Georgia Institute of Technology]]></Name>
<CityName>Atlanta</CityName>
<StateCode>GA</StateCode>
<ZipCode>303320400</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Georgia</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>05</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>GA05</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7792</Code>
<Text>AMER COMPETITIVENESS FELLOWS</Text>
</ProgramElement>
<ProgramReference>
<Code>9164</Code>
<Text>SINGLE DIVISION/UNIVERSITY - GOVT LAB</Text>
</ProgramReference>
<ProgramReference>
<Code>9215</Code>
<Text>HIGH PERFORMANCE COMPUTING SYSTEMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9216</Code>
<Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
</ProgramReference>
<ProgramReference>
<Code>9263</Code>
<Text>COMPUTATIONAL SCIENCE &amp; ENGING</Text>
</ProgramReference>
<ProgramReference>
<Code>AMPP</Code>
<Text>ADVANCED MATERIALS &amp; PROCESSING PROGRAM</Text>
</ProgramReference>
<ProgramReference>
<Code>HPCC</Code>
<Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~200000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p style="text-align: left;"><strong>Many-body quantum chemistry on graphics processing units</strong><br /><br />&nbsp;&nbsp;&nbsp; The coupled-cluster through perturbative triples [CCSD(T)] method is generally considered to be the &ldquo;gold standard&rdquo; in quantum chemistry because, in many cases, it can describe reaction energies, intermolecular interactions, and molecular properties with predictive accuracy.&nbsp; However, the steep computational scaling of the method precludes its application to large molecular systems. Our goal is to develop an efficient implementation of the CCSD(T) method for use in computing environments consisting of a many-core CPU and at least one graphics processing unit (GPU).&nbsp; The majority of the computational cost of coupled-cluster methods takes the form of tensor contractions which can be implemented on a computer as matrix multiplications using efficient linear algebra libraries.&nbsp; The Cublas (GPU) implementation of matrix multiplication is quite efficient, so developing a coupled-cluster code for GPUs may seem straight forward.&nbsp; The most naive approach would involve copying data to the device (GPU), performing a tensor contraction, and copying the result back to the host (CPU).&nbsp; This strategy, however, is limited by the high cost of data transfers between the host and the device and the limited global memory available on the device.&nbsp; Hence, our strategy in developing a GPU-accelerated CCSD(T) algorithm is to reduce the amount of data required for a typical CCSD(T) computation.&nbsp; <br /><br />&nbsp;&nbsp;&nbsp; To this end, we have developed an efficient implementation of the CCSD(T) method that exploits density fitting (DF) / Cholesky decomposition (CD) and frozen natural orbital (FNO) approximations [ J. Chem. Theory Comput. <strong>9</strong>, 293 (2013), J. Chem. Theory Comput. <strong>9</strong>, 2687 (2013) ]. In general, we found that DF/CD errors in coupled-cluster theory are negligible, and the approximations can be coupled to FNO approximations without sacrificing the quality of the method.&nbsp; The algorithm we developed is competitive with commercial implementations of CCSD(T), and in some cases, the DF/CD and FNO approximations lead significant computational savings.&nbsp; For example, this algorithm facilitated a definitive study of the contribution of three-body dispersion effects to the lattice energy of crystalline benzene [J. Chem. Phys. <strong>140</strong>, 121104 (2014)].&nbsp; We have made these codes available to the public in the free and open-source Psi4 electronic structure package.<br /><br />&nbsp;&nbsp;&nbsp; FNO and DF/CD approximations can drastically reduce the number of coupled-cluster amplitudes and electron-repulsion integrals required for CCSD(T) computations.&nbsp; This reduction mitigates the cost of data transfers between the host and device in a GPU-accelerated CCSD(T) algorithm.&nbsp; We developed an efficient GPU-accelerated FNO-DF/CD-CCSD algorithm as a plugin to the Psi4 electronic structure package.&nbsp; The algorithm maximizes efficiency by simultaneously utilizing both CPU and GPU resources.&nbsp; The distribution of work between the CPU and GPU is straightforward; the most computationally demanding diagram (the double-particle ladder diagram) is evaluated on the GPU while all other diagrams are evaluated on the CPU.&nbsp; If the GPU finishes its work before the CPU, the GPU can steal tasks from the list of diagrams designated as CPU work.&nbsp; We have generalized our algorithm to utilize multiple GPUs.&nbsp; We assessed the performance of this algorithm for systems with up to 822 basis functions (a uracil dimer, described by the aug-cc-pVTZ basis set, while using a conservative 10<sup>-5</sup> FNO threshold).&nbsp; When using either one NVIDIA Kepler K20c GPU or two NVIDIA Fermi C2070 GPUs, we observe a 2.5x acceleration over our optimized CPU impleme...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[Many-body quantum chemistry on graphics processing units      The coupled-cluster through perturbative triples [CCSD(T)] method is generally considered to be the "gold standard" in quantum chemistry because, in many cases, it can describe reaction energies, intermolecular interactions, and molecular properties with predictive accuracy.  However, the steep computational scaling of the method precludes its application to large molecular systems. Our goal is to develop an efficient implementation of the CCSD(T) method for use in computing environments consisting of a many-core CPU and at least one graphics processing unit (GPU).  The majority of the computational cost of coupled-cluster methods takes the form of tensor contractions which can be implemented on a computer as matrix multiplications using efficient linear algebra libraries.  The Cublas (GPU) implementation of matrix multiplication is quite efficient, so developing a coupled-cluster code for GPUs may seem straight forward.  The most naive approach would involve copying data to the device (GPU), performing a tensor contraction, and copying the result back to the host (CPU).  This strategy, however, is limited by the high cost of data transfers between the host and the device and the limited global memory available on the device.  Hence, our strategy in developing a GPU-accelerated CCSD(T) algorithm is to reduce the amount of data required for a typical CCSD(T) computation.        To this end, we have developed an efficient implementation of the CCSD(T) method that exploits density fitting (DF) / Cholesky decomposition (CD) and frozen natural orbital (FNO) approximations [ J. Chem. Theory Comput. 9, 293 (2013), J. Chem. Theory Comput. 9, 2687 (2013) ]. In general, we found that DF/CD errors in coupled-cluster theory are negligible, and the approximations can be coupled to FNO approximations without sacrificing the quality of the method.  The algorithm we developed is competitive with commercial implementations of CCSD(T), and in some cases, the DF/CD and FNO approximations lead significant computational savings.  For example, this algorithm facilitated a definitive study of the contribution of three-body dispersion effects to the lattice energy of crystalline benzene [J. Chem. Phys. 140, 121104 (2014)].  We have made these codes available to the public in the free and open-source Psi4 electronic structure package.      FNO and DF/CD approximations can drastically reduce the number of coupled-cluster amplitudes and electron-repulsion integrals required for CCSD(T) computations.  This reduction mitigates the cost of data transfers between the host and device in a GPU-accelerated CCSD(T) algorithm.  We developed an efficient GPU-accelerated FNO-DF/CD-CCSD algorithm as a plugin to the Psi4 electronic structure package.  The algorithm maximizes efficiency by simultaneously utilizing both CPU and GPU resources.  The distribution of work between the CPU and GPU is straightforward; the most computationally demanding diagram (the double-particle ladder diagram) is evaluated on the GPU while all other diagrams are evaluated on the CPU.  If the GPU finishes its work before the CPU, the GPU can steal tasks from the list of diagrams designated as CPU work.  We have generalized our algorithm to utilize multiple GPUs.  We assessed the performance of this algorithm for systems with up to 822 basis functions (a uracil dimer, described by the aug-cc-pVTZ basis set, while using a conservative 10-5 FNO threshold).  When using either one NVIDIA Kepler K20c GPU or two NVIDIA Fermi C2070 GPUs, we observe a 2.5x acceleration over our optimized CPU implementation using 6 cores of an Intel Core i7-3930k CPU [Mol. Phys. 112, 844 (2014)].  This implementation of GPU-accelerated FNO-DF/CD-CCSD(T) is available for download for free from github (https://github.com/edeprince3/gpu_dfcc).       Last Modified: 12/25/2014       Submitted by: Albert E Deprince]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

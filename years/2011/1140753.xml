<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Learning Algorithm Design: A Project-Based Curriculum</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>05/01/2012</AwardEffectiveDate>
<AwardExpirationDate>04/30/2017</AwardExpirationDate>
<AwardTotalIntnAmount>143690.00</AwardTotalIntnAmount>
<AwardAmount>143690</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11040200</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DUE</Abbreviation>
<LongName>Division Of Undergraduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Stephanie August</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>Rowan University is developing, evaluating, disseminating and supporting the broad adoption of a project-based curriculum to help all computer science undergraduate students understand and apply classic algorithm design techniques for solving intractable problems.  This novel, award winning curriculum is a sequence of laboratory projects comprising increasingly sophisticated solvers for a single intractable problem.  To facilitate broad adoption, this award funds the development of three sets of projects based on intractable problems from different domains: Satisfiability, Traveling Salesperson and Sequence Alignment.  This project makes a significant contribution to computer science education by establishing the effectiveness of project-based learning in the study of algorithm design techniques for intractable problems.  The project has the potential for national adoption, for a direct impact on computer science educational practices, and for advancing knowledge in the discipline.&lt;br/&gt;&lt;br/&gt;To encourage adoption, an extensive faculty guide is being developed and disseminated. The project funds the attendance of potential adopters at a training workshop as well as the development of an online community of adopters.  Adopters will have the opportunity to publish and present an experience paper at a national conference.</AbstractNarration>
<MinAmdLetterDate>04/22/2012</MinAmdLetterDate>
<MaxAmdLetterDate>04/22/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1140753</AwardID>
<Investigator>
<FirstName>Ganesh</FirstName>
<LastName>Baliga</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ganesh R Baliga</PI_FULL_NAME>
<EmailAddress>baliga@rowan.edu</EmailAddress>
<PI_PHON>8562563890</PI_PHON>
<NSF_ID>000238659</NSF_ID>
<StartDate>04/22/2012</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Andrea</FirstName>
<LastName>Lobo</LastName>
<PI_MID_INIT>F</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Andrea F Lobo</PI_FULL_NAME>
<EmailAddress>lobo@rowan.edu</EmailAddress>
<PI_PHON>8562563815</PI_PHON>
<NSF_ID>000238626</NSF_ID>
<StartDate>04/22/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Rowan University</Name>
<CityName>Glassboro</CityName>
<ZipCode>080281701</ZipCode>
<PhoneNumber>8562564057</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[201 Mullica Hill Road]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NJ01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>139203145</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>ROWAN UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>139203145</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Rowan University]]></Name>
<CityName>Glassboro</CityName>
<StateCode>NJ</StateCode>
<ZipCode>080281700</ZipCode>
<StreetAddress><![CDATA[201 Mullica Hill Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NJ01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1536</Code>
<Text>S-STEM-Schlr Sci Tech Eng&amp;Math</Text>
</ProgramElement>
<ProgramElement>
<Code>7513</Code>
<Text>TUES-Type 1 Project</Text>
</ProgramElement>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0412</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>13XX</Code>
<Name>H-1B FUND, EHR, NSF</Name>
<APP_SYMB_ID>045176</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~143690</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>&nbsp; &nbsp; &nbsp;Computational Complexity is fundamental to Computer Science (CS). The most recent recommendations from ACM/IEEE-CS in their 2013 Computer Science Curricula list Tier-2 learning outcomes on P, NP and NP-Completeness, and Elective learning outcomes on NP-Complete problems and proofs of NP-Completeness. The goals of this grant project were to develop, evaluate, disseminate and support the adoption of a project-based curriculum that targets all these learning outcomes and would be accessible to all Computer Science undergraduate students. The curriculum consists of a sequence of projects centered on a single NP-Complete problem, that could be integrated into existing courses on algorithm design and analysis, advanced data structures, or theory of computing. The original version of the curriculum, centered on the Satisfiability problem, won the Best Paper Award at the at the Eleventh Annual Northeastern Conference of the Consortium for Computing Sciences in Colleges in 2006.</p> <p>&nbsp; &nbsp; &nbsp;The National Science Foundation awarded this grant in 2012 to further develop, evaluate and disseminate the project-based curriculum for NP-Completeness. Three versions of the curriculum were developed, each centered on a different NP-Complete problem, namely Traveling Salesperson, Satisfiability and Sudoku. Each version of the curriculum has a set of laboratory projects that apply multiple algorithm design strategies, such as brute force, backtracking, heuristics, random walk, simulated annealing, and probabilistic. The set of projects for each problem can be combined into numerous one-semester project sequences that emphasize systematic exploration of the search space, exposure to a variety of strategies, use of published literature and application of the scientific method to CS, or advanced algorithm design strategies.</p> <p>&nbsp; &nbsp; &nbsp;The NSF grant funded the creation of instructional materials for 28 different projects: 11 centered on Traveling Salesperson, 10 on Satisfiability and 7 Sudoku. To facilitate adoption, the projects on each problem can be combined into many one-term project sequences. The instructional materials include rubrics for student outcomes, project descriptions, input sets, dozens of recommended project sequences, and solutions written in Java. These materials are available from the project website and will be archived for future access.</p> <p>&nbsp; &nbsp; &nbsp;Assessment data was collected between 2013 and 2017 from adoptions of the curriculum in 12 sections of a one-semester, junior-level course on Design and Analysis of Algorithms at the PIs&rsquo; institution. One semester project sequences from each of the three versions of the curriculum were adopted using laboratory assignments that were completed by the students outside of class. Additionally, for comparison purposes in the spring semester of 2017, the principal investigators adopted the curriculum in three sections of the same course with an alternative educational approach: A flipped classroom with in-class discussions of a sequence of projects. Direct assessment data on the effectiveness of the curriculum were obtained from rubrics and submitted products of student work&mdash;quizzes, lab reports, analysis and design documents, and closed-book final exams. Indirect assessment data were obtained from an end-of-semester, anonymous student survey.</p> <p>&nbsp; &nbsp; &nbsp;External consultants made recommendations on the development of the curriculum and the evaluation plan. An external consultant evaluated the curriculum using student surveys, student performance on in-class evaluations, and faculty interviews. This evaluation included vertical item analysis and horizontal respondent analysis, and concluded that the curriculum is effective at enabling students to &ldquo;master NP-Completeness knowledge and skills at the level of CC 2013 Core-Tier2 and Elective recommendations.&rdquo; Additionally, the evaluation concluded that &ldquo;the curriculum can be taught with solid results in either a lab-based or a discussion approach. More importantly, the role of the instructor is critical in the matter of encouraging students to integrate new and prior knowledge and skills; to consider the class within the future context of professional practice; and to take an active role in developing and trusting their programming skills.&rdquo;</p> <p>&nbsp; &nbsp; &nbsp;The results from the grant project were disseminated nationally to the Computer Science Education community via the publication of three double-blind peer-reviewed journal papers, workshops and invited presentations at seven conferences that were attended by dozens of CS faculty members, and a project website tagged with metadata. The project-based curriculum has helped over 300 undergraduate Computer Science students learn about NP-Completeness.</p><br> <p>            Last Modified: 10/10/2017<br>      Modified by: Andrea&nbsp;F&nbsp;Lobo</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[      Computational Complexity is fundamental to Computer Science (CS). The most recent recommendations from ACM/IEEE-CS in their 2013 Computer Science Curricula list Tier-2 learning outcomes on P, NP and NP-Completeness, and Elective learning outcomes on NP-Complete problems and proofs of NP-Completeness. The goals of this grant project were to develop, evaluate, disseminate and support the adoption of a project-based curriculum that targets all these learning outcomes and would be accessible to all Computer Science undergraduate students. The curriculum consists of a sequence of projects centered on a single NP-Complete problem, that could be integrated into existing courses on algorithm design and analysis, advanced data structures, or theory of computing. The original version of the curriculum, centered on the Satisfiability problem, won the Best Paper Award at the at the Eleventh Annual Northeastern Conference of the Consortium for Computing Sciences in Colleges in 2006.       The National Science Foundation awarded this grant in 2012 to further develop, evaluate and disseminate the project-based curriculum for NP-Completeness. Three versions of the curriculum were developed, each centered on a different NP-Complete problem, namely Traveling Salesperson, Satisfiability and Sudoku. Each version of the curriculum has a set of laboratory projects that apply multiple algorithm design strategies, such as brute force, backtracking, heuristics, random walk, simulated annealing, and probabilistic. The set of projects for each problem can be combined into numerous one-semester project sequences that emphasize systematic exploration of the search space, exposure to a variety of strategies, use of published literature and application of the scientific method to CS, or advanced algorithm design strategies.       The NSF grant funded the creation of instructional materials for 28 different projects: 11 centered on Traveling Salesperson, 10 on Satisfiability and 7 Sudoku. To facilitate adoption, the projects on each problem can be combined into many one-term project sequences. The instructional materials include rubrics for student outcomes, project descriptions, input sets, dozens of recommended project sequences, and solutions written in Java. These materials are available from the project website and will be archived for future access.       Assessment data was collected between 2013 and 2017 from adoptions of the curriculum in 12 sections of a one-semester, junior-level course on Design and Analysis of Algorithms at the PIs? institution. One semester project sequences from each of the three versions of the curriculum were adopted using laboratory assignments that were completed by the students outside of class. Additionally, for comparison purposes in the spring semester of 2017, the principal investigators adopted the curriculum in three sections of the same course with an alternative educational approach: A flipped classroom with in-class discussions of a sequence of projects. Direct assessment data on the effectiveness of the curriculum were obtained from rubrics and submitted products of student work&mdash;quizzes, lab reports, analysis and design documents, and closed-book final exams. Indirect assessment data were obtained from an end-of-semester, anonymous student survey.       External consultants made recommendations on the development of the curriculum and the evaluation plan. An external consultant evaluated the curriculum using student surveys, student performance on in-class evaluations, and faculty interviews. This evaluation included vertical item analysis and horizontal respondent analysis, and concluded that the curriculum is effective at enabling students to "master NP-Completeness knowledge and skills at the level of CC 2013 Core-Tier2 and Elective recommendations." Additionally, the evaluation concluded that "the curriculum can be taught with solid results in either a lab-based or a discussion approach. More importantly, the role of the instructor is critical in the matter of encouraging students to integrate new and prior knowledge and skills; to consider the class within the future context of professional practice; and to take an active role in developing and trusting their programming skills."       The results from the grant project were disseminated nationally to the Computer Science Education community via the publication of three double-blind peer-reviewed journal papers, workshops and invited presentations at seven conferences that were attended by dozens of CS faculty members, and a project website tagged with metadata. The project-based curriculum has helped over 300 undergraduate Computer Science students learn about NP-Completeness.       Last Modified: 10/10/2017       Submitted by: Andrea F Lobo]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

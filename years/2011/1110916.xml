<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>HCC: Large: Collaborative Research: Large-Scale Human-Centered Coordination Systems to Support Interdependent Tasks in Context</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
<AwardExpirationDate>08/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>251936.00</AwardTotalIntnAmount>
<AwardAmount>267936</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>William Bainbridge</SignBlockName>
<PO_EMAI>wbainbri@nsf.gov</PO_EMAI>
<PO_PHON>7032928930</PO_PHON>
</ProgramOfficer>
<AbstractNarration>In the face of the vast scale of software-intensive systems needed today, modern development environments fail dramatically, typically leading to information overload, an inability to deal with the highly dynamic nature of both the systems and the organizations that develop them, and failure to support collaboration across organizational boundaries.  The overarching aim of this project is to provide a scientific foundation for human-centered environments that make large-scale and distributed project awareness, communication, and coordination as effortless as in a small team.  It accomplishes this by (a) performing empirical studies of real-world large-scale high-complexity software projects to understand how task coordination occurs in and contributes to organizational context, (b) developing an underlying theory of coordination in context, which will motivate and guide (c) the design of new coordination technology that explicitly addresses information overload, dynamism, and organizational boundaries. &lt;br/&gt;&lt;br/&gt;Intellectual merit: The research will result in four contributions: (a) a sound theoretical basis that captures how task coordination and organizational context interplay at scale; (b) theory-driven empirical studies of in-context coordination; (c) knowledge about how to achieve improvements in productivity, quality, and development speed; and (d) a suite of design principles, tool prototypes, and interaction techniques for collaboration at a very large scale. These outcomes will transform the landscape of coordination technology by squarely addressing the issue of scale, moving from coordination within a team to coordination across many developers, across many teams, and across multiple geographical and organizational boundaries.&lt;br/&gt;&lt;br/&gt;Broader Impacts: As society enters the era of "ultra large scale" software-intensive systems, coordination at such scales is a major unsolved problem, persistently hampering development and advances in vital domains such as healthcare, security, defense, eGovernment, and energy. The outcomes of this project will not only provide major economic benefits, but also major societal benefits in the form of the new systems that now can be developed. Through close collaboration with industry partners, the results will quickly find their way into practice.  The project will also increase involvement of women in computer science through workshops and mentoring activities.</AbstractNarration>
<MinAmdLetterDate>08/15/2011</MinAmdLetterDate>
<MaxAmdLetterDate>03/27/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1110916</AwardID>
<Investigator>
<FirstName>Anita</FirstName>
<LastName>Sarma</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Anita Sarma</PI_FULL_NAME>
<EmailAddress>anita.sarma@oregonstate.edu</EmailAddress>
<PI_PHON>5417375985</PI_PHON>
<NSF_ID>000518767</NSF_ID>
<StartDate>08/15/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Nebraska-Lincoln</Name>
<CityName>Lincoln</CityName>
<ZipCode>685031435</ZipCode>
<PhoneNumber>4024723171</PhoneNumber>
<StreetAddress>151 Prem S. Paul Research Center</StreetAddress>
<StreetAddress2><![CDATA[2200 Vine St]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Nebraska</StateName>
<StateCode>NE</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NE01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>555456995</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>BOARD OF REGENTS OF THE UNIVERSITY OF NEBRASKA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>068662618</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Nebraska-Lincoln]]></Name>
<CityName>Lincoln</CityName>
<StateCode>NE</StateCode>
<ZipCode>685031435</ZipCode>
<StreetAddress><![CDATA[151 Prem S. Paul Research Center]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Nebraska</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NE01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7367</Code>
<Text>HCC-Human-Centered Computing</Text>
</ProgramElement>
<ProgramReference>
<Code>7367</Code>
<Text>Cyber-Human Systems</Text>
</ProgramReference>
<ProgramReference>
<Code>7925</Code>
<Text>LARGE PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~251936</FUND_OBLG>
<FUND_OBLG>2012~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>We focused on the problems around collaboration and coordination in large, distributed, software development. We made significant progress developing theories, doing empirical studies, and building software support tools. These three aspects are interrelated. Empirical studies provide real&shy;world evidence for developing theoretical knowledge and evaluating tools. Theories drive empirical studies and tool design. And tool design, in turn, leads to new opportunities for empirical study to understand impact. (See accompanying figure 1.)</p> <p><strong>Intellectual Merit </strong></p> <p>Theory</p> <p>We have developed theories about how quality of work is perceived in an online contribution site and the effects of reputation in determining quality. Nowadays with the success of open source programming and the trend towards Internet of Things, more and more users are developing programs and contributing to projects. An understanding of how quality of contributions are evaluated and how the social standing of the contributor impacts this evaluation has far reaching implications for many of these communities.</p> <p>We have also developed a theory of conflict minimization in the context of parallel software development. The formalization of constraints across tasks and algorithms for scheduling these tasks to minimize scheduling tasks that are constrained can be generalized for identifying constraints across more general resources and their scheduling, which can be applicable to management and operations research. Further, the team has started on creating a typology of software conflicts arising from parallel software development and the amount of effort required to resolve conflicts.</p> <p><em>Empirical Studies </em></p> <p>We spent a great deal of effort on empirical studies to ensure our research is relevant to real world practice. For instance, we analyzed several large open source projects, Q&amp;A sites, and performed user studies with professionals to understand the activity traces that are evaluated for judging quality of contributions. We also analyzed several large open source projects to identify and formalize constraints across tasks.</p> <p><em>Tool Development </em></p> <p>Three tools were designed and implemented in this project: Cassandra, Visual Resume, Dominoes.</p> <p>Cassandra is a task-scheduling tool that minimizes the incidence of parallel tasks that can conflict leading to software conflicts and coordination failures. Cassandra uses data mining techniques to identify potential files that are likely to change, uses this data to identify constraints across tasks, and then solves the constraint space to identify tasks that can be performed in parallel without an incidence of conflicts.</p> <p>Visual Resume is a tool that aggregates activity traces of developers across different types of online contribution sites into a single developer profile. Visual Resume creates profiles that not only provide overviews of activity summaries, but also (1) allow deeper exploration of contributions that are contextualized and easy to access, and (2) allow side-by-side comparisons across candidate profiles (see figure 2).</p> <p>Dominoes is an data exploration tool that support automated exploration of relationships amongst software project elements, where users have the flexibility to explore on the fly the numerous types of project relationships. The proposed approach allows for fast and efficient processing of a large volume of data by using a highly parallel architecture, such as GPUs.</p> <p><em>Broader Impacts </em></p> <p>The project&rsquo;s contributions regarding collaboration and coordination in large teams can help globally distributed organizations better perform projects and achieve organizational goals. The tools (Cassandra, Visual Resume, Dominoes) are able to improve coordination among developers by allowing interactive project exploration, schedul...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ We focused on the problems around collaboration and coordination in large, distributed, software development. We made significant progress developing theories, doing empirical studies, and building software support tools. These three aspects are interrelated. Empirical studies provide real&shy;world evidence for developing theoretical knowledge and evaluating tools. Theories drive empirical studies and tool design. And tool design, in turn, leads to new opportunities for empirical study to understand impact. (See accompanying figure 1.)  Intellectual Merit   Theory  We have developed theories about how quality of work is perceived in an online contribution site and the effects of reputation in determining quality. Nowadays with the success of open source programming and the trend towards Internet of Things, more and more users are developing programs and contributing to projects. An understanding of how quality of contributions are evaluated and how the social standing of the contributor impacts this evaluation has far reaching implications for many of these communities.  We have also developed a theory of conflict minimization in the context of parallel software development. The formalization of constraints across tasks and algorithms for scheduling these tasks to minimize scheduling tasks that are constrained can be generalized for identifying constraints across more general resources and their scheduling, which can be applicable to management and operations research. Further, the team has started on creating a typology of software conflicts arising from parallel software development and the amount of effort required to resolve conflicts.  Empirical Studies   We spent a great deal of effort on empirical studies to ensure our research is relevant to real world practice. For instance, we analyzed several large open source projects, Q&amp;A sites, and performed user studies with professionals to understand the activity traces that are evaluated for judging quality of contributions. We also analyzed several large open source projects to identify and formalize constraints across tasks.  Tool Development   Three tools were designed and implemented in this project: Cassandra, Visual Resume, Dominoes.  Cassandra is a task-scheduling tool that minimizes the incidence of parallel tasks that can conflict leading to software conflicts and coordination failures. Cassandra uses data mining techniques to identify potential files that are likely to change, uses this data to identify constraints across tasks, and then solves the constraint space to identify tasks that can be performed in parallel without an incidence of conflicts.  Visual Resume is a tool that aggregates activity traces of developers across different types of online contribution sites into a single developer profile. Visual Resume creates profiles that not only provide overviews of activity summaries, but also (1) allow deeper exploration of contributions that are contextualized and easy to access, and (2) allow side-by-side comparisons across candidate profiles (see figure 2).  Dominoes is an data exploration tool that support automated exploration of relationships amongst software project elements, where users have the flexibility to explore on the fly the numerous types of project relationships. The proposed approach allows for fast and efficient processing of a large volume of data by using a highly parallel architecture, such as GPUs.  Broader Impacts   The projectÆs contributions regarding collaboration and coordination in large teams can help globally distributed organizations better perform projects and achieve organizational goals. The tools (Cassandra, Visual Resume, Dominoes) are able to improve coordination among developers by allowing interactive project exploration, scheduling, and evaluation of contribution, which in turn can help improve software quality.  The evidence we collected in the empirical studies can be used as educational materials to allow softwa...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

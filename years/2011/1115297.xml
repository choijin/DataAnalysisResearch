<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Sparse Direct Methods on High-Performance Heterogeneous Architectures</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/15/2011</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>310000.00</AwardTotalIntnAmount>
<AwardAmount>310000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Junping Wang</SignBlockName>
<PO_EMAI>jwang@nsf.gov</PO_EMAI>
<PO_PHON>7032924488</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Sparse direct methods form the backbone of many applications in&lt;br/&gt;computational science, but the methods are not keeping pace with advances&lt;br/&gt;in heterogeneous computing architectures.  High end systems can be built to&lt;br/&gt;contain multiple general-purpose CPU cores, coupled with one or more&lt;br/&gt;Graphics Processing Units (GPUs) each with hundreds of simple yet fast&lt;br/&gt;computational cores.  This project develops high-performance parallel&lt;br/&gt;sparse direct methods that can exploit GPU-based architectures to achieve&lt;br/&gt;orders of magnitude gains in computational performance.  The focus is&lt;br/&gt;single and multiple GPU algorithms for multifrontal sparse QR&lt;br/&gt;factorization.  QR factorization has wide applicability, is numerically&lt;br/&gt;very stable and is useful in many application areas.  The nonuniform and&lt;br/&gt;hierarchical structure of sparse QR factorization along with the unique&lt;br/&gt;features of the GPU  requires the development of novel algorithms.&lt;br/&gt;These include managing the simultaneous mix of regular computations inside&lt;br/&gt;the frontal matrix, and irregular computations in the assembly process&lt;br/&gt;between nodes in the computational tree and between concurrent subtrees.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;An efficient sparse QR factorization is an essential kernel in many&lt;br/&gt;problems in computational science.  It can be used to find solutions to&lt;br/&gt;sparse linear systems, sparse linear least squares problems, eigenvalue&lt;br/&gt;problems, rank and null-space determination, and many other mathematical&lt;br/&gt;problems in numerical linear algebra.  Application areas that can exploit&lt;br/&gt;the result of this research include structural engineering, computational&lt;br/&gt;fluid dynamics, electromagnetics, semiconductor devices, thermodynamics,&lt;br/&gt;materials, acoustics, computer graphics/vision, robotics/kinematics,&lt;br/&gt;optimization, circuit simulation, economic and financial modeling, chemical&lt;br/&gt;process simulation, text/document networks, and many other areas.  QR&lt;br/&gt;factorization is representative of many other sparse direct methods, with&lt;br/&gt;both irregular coarse-grain parallelism and regular fine-grain parallelism,&lt;br/&gt;and methodologies developed are very relevant for these other&lt;br/&gt;methods.  The work has broad impact on computational linear&lt;br/&gt;algebra, optimization, and related application areas.  The PI's research extends beyond these specific applications of numerical linear algebra, demonstrating how problems with a mixture of irregular and regular computation can be performed on the challenging yet promising landscape of GPU computing, and opens the door to many other kinds of applications.  The investigator and his colleagues plan on producing and distributing high-quality software as a result of this work, for which they have a 20-year track record.</AbstractNarration>
<MinAmdLetterDate>08/10/2011</MinAmdLetterDate>
<MaxAmdLetterDate>05/04/2015</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1115297</AwardID>
<Investigator>
<FirstName>Sanjay</FirstName>
<LastName>Ranka</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sanjay Ranka</PI_FULL_NAME>
<EmailAddress>ranka@cise.ufl.edu</EmailAddress>
<PI_PHON>3525144213</PI_PHON>
<NSF_ID>000381796</NSF_ID>
<StartDate>05/04/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Sanjay</FirstName>
<LastName>Ranka</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sanjay Ranka</PI_FULL_NAME>
<EmailAddress>ranka@cise.ufl.edu</EmailAddress>
<PI_PHON>3525144213</PI_PHON>
<NSF_ID>000381796</NSF_ID>
<StartDate>08/10/2011</StartDate>
<EndDate>05/04/2015</EndDate>
<RoleCode>Former Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Timothy</FirstName>
<LastName>Davis</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Timothy A Davis</PI_FULL_NAME>
<EmailAddress>davis@tamu.edu</EmailAddress>
<PI_PHON>9798454094</PI_PHON>
<NSF_ID>000292409</NSF_ID>
<StartDate>05/04/2015</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Timothy</FirstName>
<LastName>Davis</LastName>
<PI_MID_INIT>A</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Timothy A Davis</PI_FULL_NAME>
<EmailAddress>davis@tamu.edu</EmailAddress>
<PI_PHON>9798454094</PI_PHON>
<NSF_ID>000292409</NSF_ID>
<StartDate>08/10/2011</StartDate>
<EndDate>05/04/2015</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Florida</Name>
<CityName>GAINESVILLE</CityName>
<ZipCode>326112002</ZipCode>
<PhoneNumber>3523923516</PhoneNumber>
<StreetAddress>1 UNIVERSITY OF FLORIDA</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<StateCode>FL</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>FL03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>969663814</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF FLORIDA</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>159621697</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Florida]]></Name>
<CityName>GAINESVILLE</CityName>
<StateCode>FL</StateCode>
<ZipCode>326112002</ZipCode>
<StreetAddress><![CDATA[1 UNIVERSITY OF FLORIDA]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Florida</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>FL03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>1271</Code>
<Text>COMPUTATIONAL MATHEMATICS</Text>
</ProgramElement>
<ProgramElement>
<Code>6892</Code>
<Text>CI REUSE</Text>
</ProgramElement>
<ProgramReference>
<Code>7569</Code>
<Text>CYBERINFRASTRUCTURE/SCIENCE</Text>
</ProgramReference>
<ProgramReference>
<Code>9263</Code>
<Text>COMPUTATIONAL SCIENCE &amp; ENGING</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~310000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>GPU are accelerators that can speed up software by order to two orders of magnitude faster than traditional CPU cores. The goal of this project was to create new algorithms for exploiting the GPU for sparse direct methods, and to deliver those algorithms via scholarly software submissions to encourage their widespread use.</p> <p>We have &nbsp;created a new algorithm for sparse multifrontal QR factorization algorithm on the GPU. A single-GPU version has been finished as a highly-optimized software package that shows a significant improvement over traditional CPU core. The actual improvement in performance is upto an order of magnitude and depends on the sparsity strucure and size of the matrix.</p> <p>The resulting software is released in the SuiteSparse meta-package, and has been submitted as a Collected Algorithm of the ACM. Some frontal matrices are too large to factorize on a single GPU. For these matrices, we developed a prototype algorithm for multiple GPUs. We do this with a dynamic scheduling algorithm, with one CPU thread per GPU. The CPU threads acquire subtrees to factorize, and then they coordinate its factorization with their corresponding GPU.In recognition of this work, our research group has been designated as a CUDA Research Center by NVIDIA. &nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/02/2015<br>      Modified by: Sanjay&nbsp;Ranka</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ GPU are accelerators that can speed up software by order to two orders of magnitude faster than traditional CPU cores. The goal of this project was to create new algorithms for exploiting the GPU for sparse direct methods, and to deliver those algorithms via scholarly software submissions to encourage their widespread use.  We have  created a new algorithm for sparse multifrontal QR factorization algorithm on the GPU. A single-GPU version has been finished as a highly-optimized software package that shows a significant improvement over traditional CPU core. The actual improvement in performance is upto an order of magnitude and depends on the sparsity strucure and size of the matrix.  The resulting software is released in the SuiteSparse meta-package, and has been submitted as a Collected Algorithm of the ACM. Some frontal matrices are too large to factorize on a single GPU. For these matrices, we developed a prototype algorithm for multiple GPUs. We do this with a dynamic scheduling algorithm, with one CPU thread per GPU. The CPU threads acquire subtrees to factorize, and then they coordinate its factorization with their corresponding GPU.In recognition of this work, our research group has been designated as a CUDA Research Center by NVIDIA.            Last Modified: 12/02/2015       Submitted by: Sanjay Ranka]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

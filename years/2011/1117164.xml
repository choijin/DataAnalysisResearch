<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small:Methodologies and Tools For Verification of Nano-Pipelined Circuits and Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2011</AwardEffectiveDate>
<AwardExpirationDate>07/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>177223.00</AwardTotalIntnAmount>
<AwardAmount>193223</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
<PO_EMAI>namla@nsf.gov</PO_EMAI>
<PO_PHON>7032927991</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The continuing and accelerated advancement of nanotechnology promises a future in which computing will be truly ubiquitous.  The ability to develop minuscule Integrated Chips that implement exceedingly complex systems will impact all aspects of human development ranging from medicine to space exploration.  A majority of these applications will be safety critical applications in which the cost of failure will result in loss of human life and exceedingly high economic costs. Scalable verification technology at the nanoscale for developing reliable and bug-free designs is therefore a requirement for the growth and impact of digital systems in the nano-era.  One of the key optimizations used extensively in digital design is hardware pipelining, which is similar in operation to the pipelined automotive assembly line. Pipeline implementations at the nanoscale are very complex and prone to errors. &lt;br/&gt;&lt;br/&gt;This research seeks to develop solutions to enable efficient and scalable verification of pipelined circuits and systems at the nanoscale. The verification solutions are based on refinement, a notion of equivalence used to compare systems defined at very disparate levels of abstraction. The overall approach is to use high-level refinement-based transformations to reduce the nano-pipelined circuit/system to be verified, in incremental steps, to a functionally equivalent non-pipelined synchronous machine. The non-pipelined machine can then be easily compared with high-level specifications using existing verification techniques.</AbstractNarration>
<MinAmdLetterDate>06/30/2011</MinAmdLetterDate>
<MaxAmdLetterDate>12/16/2014</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1117164</AwardID>
<Investigator>
<FirstName>Sudarshan</FirstName>
<LastName>Srinivasan</LastName>
<PI_MID_INIT>K</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sudarshan K Srinivasan</PI_FULL_NAME>
<EmailAddress>sudarshan.srinivasan@ndsu.edu</EmailAddress>
<PI_PHON>7012317217</PI_PHON>
<NSF_ID>000503857</NSF_ID>
<StartDate>06/30/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Dakota State University Fargo</Name>
<CityName>FARGO</CityName>
<ZipCode>581086050</ZipCode>
<PhoneNumber>7012318045</PhoneNumber>
<StreetAddress>Dept 4000 - PO Box 6050</StreetAddress>
<StreetAddress2><![CDATA[1735 Research Park Drive]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Dakota</StateName>
<StateCode>ND</StateCode>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>ND00</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>803882299</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTH DAKOTA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>803882299</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[North Dakota State University Fargo]]></Name>
<CityName>FARGO</CityName>
<StateCode>ND</StateCode>
<ZipCode>581086050</ZipCode>
<StreetAddress><![CDATA[Dept 4000 - PO Box 6050]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Dakota</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>ND00</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramElement>
<Code>9150</Code>
<Text>EPSCoR Co-Funding</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>7945</Code>
<Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~177223</FUND_OBLG>
<FUND_OBLG>2012~16000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><div><span>Our key contribution in this project was to the area of formal equivalence checking.&nbsp;</span>The problem of equivalence checking is as follows. In commercial design cycles in the semiconductor industry, large circuits are often constantly modified and tinkered. Rather than re-verifying the circuit after each modification, the updated circuits are checked for equivalence with one of the initial versions of the circuit that was thoroughly verified. This technique is called equivalence checking. If the modifications involve sequential elements (such as registers and flip-flops), then sequential equivalence checking is required. Current state-of-the-art sequential equivalence checkers turn the problem essentially into a model checking problem, a verification technology where the shared structure of the two circuits is not directly exploited by the verification algorithms. We developed the first refinement-based equivalence checker for certain type of digital circuits called elastic circuits. Refinement-based verification is based on the construction of refinement maps, which are functions that map states of the modified circuit onto states of the original circuit. As such, refinement-based verification directly exploits the shared structure of the two circuits. Using our equivalence checker, we were able to handle circuits with as many as 0.5 million gates in very efficient time. The <span style="text-decoration: underline;"><em>intellectual merit</em></span> of the research work was that, it showed that efficient and scalable sequential equivalence checking is possible using refinement-based verification. The <span style="text-decoration: underline;"><em>broader impact</em></span> of the research work was that it opens up a whole new pathway for advances in sequential equivalence checking, which has been found to be a very hard problem. Our second significant contribution in this project was towards the verification of asynchronous circuits. Synchronous design is predominantly used in the semiconductor industry for Integrated Chip (IC) design. Synchronous design requires the use of a clock signal that is used to synchronize the various storage elements in the circuit. With increasing complexity of ICs, there are various challenges associated with the clock that have emerged. Asynchronous circuits do not use a global clock and provide solutions to many of the clock-based problems and have several other alluring properties. Hence, the use of asynchronous circuits in commercial design is continuously increasing. One major challenge is that the verification of asynchronous circuits is quite complex, because the lack of a global clock (which acted as a global synchronizer) introduces a high-degree of nondeterminism. We extended the idea of refinement-based equivalence verification to several types of asynchronous circuits. The <span style="text-decoration: underline;"><em>intellectual merit</em></span> of the research work was that, it introduced novel asynchronous design techniques (called design-for-verification) that were targeted at making verification tractable. The <span style="text-decoration: underline;"><em>broader impact </em></span>of the research work was that, the development of tractable asynchronous verification techniques opens up the possibility of more widespread use of asynchronous circuits in commercial design.</div> <p>&nbsp;</p><br> <p>            Last Modified: 12/06/2015<br>      Modified by: Sudarshan&nbsp;K&nbsp;Srinivasan</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[Our key contribution in this project was to the area of formal equivalence checking. The problem of equivalence checking is as follows. In commercial design cycles in the semiconductor industry, large circuits are often constantly modified and tinkered. Rather than re-verifying the circuit after each modification, the updated circuits are checked for equivalence with one of the initial versions of the circuit that was thoroughly verified. This technique is called equivalence checking. If the modifications involve sequential elements (such as registers and flip-flops), then sequential equivalence checking is required. Current state-of-the-art sequential equivalence checkers turn the problem essentially into a model checking problem, a verification technology where the shared structure of the two circuits is not directly exploited by the verification algorithms. We developed the first refinement-based equivalence checker for certain type of digital circuits called elastic circuits. Refinement-based verification is based on the construction of refinement maps, which are functions that map states of the modified circuit onto states of the original circuit. As such, refinement-based verification directly exploits the shared structure of the two circuits. Using our equivalence checker, we were able to handle circuits with as many as 0.5 million gates in very efficient time. The intellectual merit of the research work was that, it showed that efficient and scalable sequential equivalence checking is possible using refinement-based verification. The broader impact of the research work was that it opens up a whole new pathway for advances in sequential equivalence checking, which has been found to be a very hard problem. Our second significant contribution in this project was towards the verification of asynchronous circuits. Synchronous design is predominantly used in the semiconductor industry for Integrated Chip (IC) design. Synchronous design requires the use of a clock signal that is used to synchronize the various storage elements in the circuit. With increasing complexity of ICs, there are various challenges associated with the clock that have emerged. Asynchronous circuits do not use a global clock and provide solutions to many of the clock-based problems and have several other alluring properties. Hence, the use of asynchronous circuits in commercial design is continuously increasing. One major challenge is that the verification of asynchronous circuits is quite complex, because the lack of a global clock (which acted as a global synchronizer) introduces a high-degree of nondeterminism. We extended the idea of refinement-based equivalence verification to several types of asynchronous circuits. The intellectual merit of the research work was that, it introduced novel asynchronous design techniques (called design-for-verification) that were targeted at making verification tractable. The broader impact of the research work was that, the development of tractable asynchronous verification techniques opens up the possibility of more widespread use of asynchronous circuits in commercial design.          Last Modified: 12/06/2015       Submitted by: Sudarshan K Srinivasan]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

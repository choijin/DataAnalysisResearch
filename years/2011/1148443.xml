<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SI2-SSE: Enhancement and Support of Swift Parallel Scripting</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/01/2012</AwardEffectiveDate>
<AwardExpirationDate>03/31/2015</AwardExpirationDate>
<AwardTotalIntnAmount>499135.00</AwardTotalIntnAmount>
<AwardAmount>499135</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05090000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>OAC</Abbreviation>
<LongName>Office of Advanced Cyberinfrastructure (OAC)</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Rajiv Ramnath</SignBlockName>
<PO_EMAI/>
<PO_PHON/>
</ProgramOfficer>
<AbstractNarration>The Swift parallel scripting language enables scientists, engineers, and data analysts to express and coordinate parallel invocations of application programs on distributed and parallel computing platforms: one of the dominant modes of performing computation in science and engineering.  Swift runs on a variety of HPC clusters and clouds, and enables users to move their application scripts between computing environments with relative ease.&lt;br/&gt;&lt;br/&gt;Swift comprises a programming model, scripting language, and runtime engine.  Its implicitly parallel programming model allows users with minimal programming expertise to transparently utilize parallel and distributed systems. The scripting language is simple, minimal and standalone; the programming model has also been embedded into the Python and R languages.&lt;br/&gt;&lt;br/&gt;Swift is employed in many diverse domains, including biochemistry, neuroscience, climate model analysis, earthquake simulation, hydrology, energy forecasting, economics modeling, mass media analysis, materials science, and astronomy.&lt;br/&gt;&lt;br/&gt;This project makes usability and programmatic expressiveness enhancements to Swift, broadens its utility library, performs the testing and hardening needed to serve a large-scale national and global community, and extends existing documentation and training material in a manner that will create and serve a broad user base. It also develops enhancements in configuration, script debugging, exception handling, parallel collection processing, and data typing and mapping to make Swift increasingly productive.&lt;br/&gt;&lt;br/&gt;Swift enables users with little or no experience in parallel programming to leverage parallel and distributed computing environments ranging in scale from desktops to petascale supercomputers. It opens up powerful cyberinfrastructure like XSEDE, Open Science Grid, FutureGrid, and Blue Waters to a wide range and scale of scientific user communities, thus broadening participation in high performance computing.</AbstractNarration>
<MinAmdLetterDate>04/16/2012</MinAmdLetterDate>
<MaxAmdLetterDate>04/16/2012</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1148443</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Wilde</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michael Wilde</PI_FULL_NAME>
<EmailAddress>wilde@uchicago.edu</EmailAddress>
<PI_PHON>7082039548</PI_PHON>
<NSF_ID>000314122</NSF_ID>
<StartDate>04/16/2012</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Chicago</Name>
<CityName>Chicago</CityName>
<ZipCode>606372612</ZipCode>
<PhoneNumber>7737028669</PhoneNumber>
<StreetAddress>6054 South Drexel Avenue</StreetAddress>
<StreetAddress2><![CDATA[Suite 300]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL01</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>005421136</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CHICAGO, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>005421136</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Chicago]]></Name>
<CityName>Chicago</CityName>
<StateCode>IL</StateCode>
<ZipCode>606375418</ZipCode>
<StreetAddress><![CDATA[5735 South Ellis]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>01</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL01</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8005</Code>
<Text>Scientific Software Elements</Text>
</ProgramReference>
<Appropriation>
<Code>0112</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2012~499135</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>The Swift parallel scripting language is used by scientists and engineers to express and run large and potentially complex parallel invocation patterns of application programs or library functions on parallel clusters, clouds, grids and supercomputers. It facilitates the pervasive task of performing computational studies &mdash; often called &ldquo;workflow&rdquo; &mdash; in science and engineering.</p> <p>Swift&rsquo;s implicitly parallel programming language is minimal and compact. Users can chose between two implementations &mdash; one highly portable and scalable to thousands of cores, and one for extreme-scale systems. It provides a facility for embedding other scripting languages (current Python, R, Julia and Tcl) into its runtime environment.</p> <p>This SI2-SSE project has grown and sustained the Swift user community through enhanced documentation, new training materials, and significant effort for user support and community engagement.<em> </em>In addition, it supported additional testing and hardening, and further developed an extreme-scale version of Swift (&ldquo;Swift/T&rdquo;, named after its &ldquo;Turbine&rdquo; high performance workflow engine), and extended existing troubleshooting and inter-language facilities. As a result of this project, Swift is now a mature software element with a growing user base that spans most NSF disciplines.</p> <p>Swift is a simple scripting language that can run many copies of ordinary application programs (apps), concurrently, on local or remote computing resources. "Resources" can include your local computer (desktop,laptop, login host), distributed computers (grid, cloud), and parallel computers (cluster, HPC). Swift can use the resources you give it to run the copies at the same time (in parallel).</p> <p>A key part of most Swift scripts is the parallel loop statement&nbsp;<strong>foreach</strong>, which looks like this:</p> <p><strong>&nbsp;&nbsp;&nbsp; foreach protein, i in proteinList {<br /> &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;output[i] = runSimulation(protein); <br /> &nbsp;&nbsp;&nbsp; }</strong></p> <p>Swift acts like a high-level structured "shell" language. A Swift script just says what needs to be done: what are the apps, what are their inputs and outputs, and in what pattern should they be run. Swift then determines what can run in parallel, what can run when, and what can run where.</p> <p>Programs run as soon as their inputs are available. They run on the resources you provide. And they run in parallel if possible, based on when the data they depend on is available. This makes Swift scripts very portable. The same script can run on a laptop, a cloud, or a collection of HPC systems, with little or no change. The way in which Swift runs applications on local and remote resources is shown in the accompanying figure.</p> <p>Swift has increased scientific productivity in many diverse domains, including biochemistry, materials science, earth systems, economics, sustainability, neuroscience, and text analysis. It can run the same application script on laptops, clusters, clouds and supercomputers. As systems across this scale range become increasingly parallel, Swift enables users to leverage this parallel power implicitly and largely automatically, with little or no experience in parallel programming. It thus broadens the scientific user base for cyberinfrastructure like XSEDE, Open Science Grid, and public clouds.</p> <p>This project&rsquo;s intellectual merit stems from the observation that the need for Swift is pervasive across computational science and both research and commercial engineering and product modeling domains. Significant user demand has been demonstrated and is growing, and Swift has proven its ability to address the needs of diverse applications. No known alternative addresses the needs of this large user base in a manner that similarly lowers the barriers to computing on rapidly evolving ...]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ The Swift parallel scripting language is used by scientists and engineers to express and run large and potentially complex parallel invocation patterns of application programs or library functions on parallel clusters, clouds, grids and supercomputers. It facilitates the pervasive task of performing computational studies &mdash; often called "workflow" &mdash; in science and engineering.  SwiftÃ†s implicitly parallel programming language is minimal and compact. Users can chose between two implementations &mdash; one highly portable and scalable to thousands of cores, and one for extreme-scale systems. It provides a facility for embedding other scripting languages (current Python, R, Julia and Tcl) into its runtime environment.  This SI2-SSE project has grown and sustained the Swift user community through enhanced documentation, new training materials, and significant effort for user support and community engagement. In addition, it supported additional testing and hardening, and further developed an extreme-scale version of Swift ("Swift/T", named after its "Turbine" high performance workflow engine), and extended existing troubleshooting and inter-language facilities. As a result of this project, Swift is now a mature software element with a growing user base that spans most NSF disciplines.  Swift is a simple scripting language that can run many copies of ordinary application programs (apps), concurrently, on local or remote computing resources. "Resources" can include your local computer (desktop,laptop, login host), distributed computers (grid, cloud), and parallel computers (cluster, HPC). Swift can use the resources you give it to run the copies at the same time (in parallel).  A key part of most Swift scripts is the parallel loop statement foreach, which looks like this:      foreach protein, i in proteinList {         output[i] = runSimulation(protein);       }  Swift acts like a high-level structured "shell" language. A Swift script just says what needs to be done: what are the apps, what are their inputs and outputs, and in what pattern should they be run. Swift then determines what can run in parallel, what can run when, and what can run where.  Programs run as soon as their inputs are available. They run on the resources you provide. And they run in parallel if possible, based on when the data they depend on is available. This makes Swift scripts very portable. The same script can run on a laptop, a cloud, or a collection of HPC systems, with little or no change. The way in which Swift runs applications on local and remote resources is shown in the accompanying figure.  Swift has increased scientific productivity in many diverse domains, including biochemistry, materials science, earth systems, economics, sustainability, neuroscience, and text analysis. It can run the same application script on laptops, clusters, clouds and supercomputers. As systems across this scale range become increasingly parallel, Swift enables users to leverage this parallel power implicitly and largely automatically, with little or no experience in parallel programming. It thus broadens the scientific user base for cyberinfrastructure like XSEDE, Open Science Grid, and public clouds.  This projectÃ†s intellectual merit stems from the observation that the need for Swift is pervasive across computational science and both research and commercial engineering and product modeling domains. Significant user demand has been demonstrated and is growing, and Swift has proven its ability to address the needs of diverse applications. No known alternative addresses the needs of this large user base in a manner that similarly lowers the barriers to computing on rapidly evolving new architectures. Published user experience indicates that SwiftÃ†s usage and impact has been be broadened by this community engagement-focused effort.  In terms of broader impact, this project has made valuable contributions to training and education in parallel computing. From it...]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

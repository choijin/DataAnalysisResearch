<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Application Robustification</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/01/2011</AwardEffectiveDate>
<AwardExpirationDate>07/31/2013</AwardExpirationDate>
<AwardTotalIntnAmount>98565.00</AwardTotalIntnAmount>
<AwardAmount>98565</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>All of computing today relies on an abstraction where software expects the hardware to behave flawlessly for all inputs under all conditions. However, for emerging circuits/devices, the cost of maintaining the abstraction of flawless hardware will be prohibitive due to variations and we may need to rethink the correctness contract between hardware and software. &lt;br/&gt; &lt;br/&gt; The primary focus of the project is application robustification ? fundamental algorithmic methodologies to transform arbitrary applications such that they can continue to make forward progress in spite of errors produced by the hardware. In this project, our preliminary research effort is focused on a) techniques to convert different classes of application kernels into robust, efficiently solvable stochastic optimization problems that can tolerate hardware errors, b) techniques based on Krylov subspace methods, gradient projection, quasi-Newton approaches, stochastic approximation theory-based approaches, preconditioning techniques, and intelligent step sizing to reduce the cost of robustness for different forms of hardware variations, and c)  low overhead checksum-based techniques robustifying sparse linear algebra libraries and graph algorithms. Broader impact of this project includes development of a potentially promising approach to ride Moore's Law and training students in both the hardware and software aspects of computing in face of errors. Broader education will also be achieved through research artifacts (e.g., library of error tolerant kernels) that will be made available for research and education.</AbstractNarration>
<MinAmdLetterDate>02/02/2011</MinAmdLetterDate>
<MaxAmdLetterDate>02/02/2011</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1118391</AwardID>
<Investigator>
<FirstName>Rakesh</FirstName>
<LastName>Kumar</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Rakesh Kumar</PI_FULL_NAME>
<EmailAddress>rakeshk@uiuc.edu</EmailAddress>
<PI_PHON>2173335955</PI_PHON>
<NSF_ID>000490483</NSF_ID>
<StartDate>02/02/2011</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Illinois at Urbana-Champaign</Name>
<CityName>Champaign</CityName>
<ZipCode>618207406</ZipCode>
<PhoneNumber>2173332187</PhoneNumber>
<StreetAddress>1901 South First Street</StreetAddress>
<StreetAddress2><![CDATA[Suite A]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<StateCode>IL</StateCode>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IL13</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>041544081</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF ILLINOIS</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>041544081</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Illinois at Urbana-Champaign]]></Name>
<CityName>Champaign</CityName>
<StateCode>IL</StateCode>
<ZipCode>618207406</ZipCode>
<StreetAddress><![CDATA[1901 South First Street]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Illinois</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>13</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IL13</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<Appropriation>
<Code>0111</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2011~98565</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>As late-CMOS process scaling leads to increasingly variable circuits/logic and as most post-CMOS technologies in sight appear to have largely stochastic characteristics, hardware reliability has become a first order design concern.&nbsp;&nbsp; This research focuses on making applications robust to hardware errors.&nbsp; One of the major goals for this project was the investigation of general methodologies for taking arbitrary applications and converting them it into more error-resilient forms.&nbsp; Another major goal of this project was the investigation of application-specific methodologies for improving error resilience by leveraging inherent application and algorithm characteristics (e.g. natural error resilience, spatial and temporal reuse, and fault containment).These approaches include a) application-specific techniques for low-overhead fault detection, which was the first work to focus on algorithmic error tolerance and were shown to yield up to 2x reductions in the performance overhead over traditional checks, b) an algorithmic approach for error correction using localization, which was shown to improve performance of the conjugate gradient solver by 3x-4x and increased the probability that the solver completes successfully with a maximum iteration limit by up to 60% as the fault rates increased, and c) a numerical optimization-based methodology for converting applications into a more error tolerant form, which was shown to be applicable to a large class of applications, since linear programming, which is P-complete, can be implemented in this way, all applications in class P may employ the proposed approach.&nbsp; This numerical optimization based approach showed significant robustness benefits over the baseline, e.g. the optimization formulation achieved 100% correctness with even up to error rates of 50%. For some application classes, the approach was shown to provide benefits larger than 1 order of magnitude in energy savings by exploiting hardware power/accuracy tradeoffs.&nbsp; This research shows that application and algorithm-awareness can significantly increase the robustness of computing systems, while also reducing the cost of meeting reliability targets.</p> <p>&nbsp;</p><br> <p>            Last Modified: 08/21/2013<br>      Modified by: Rakesh&nbsp;Kumar</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ As late-CMOS process scaling leads to increasingly variable circuits/logic and as most post-CMOS technologies in sight appear to have largely stochastic characteristics, hardware reliability has become a first order design concern.   This research focuses on making applications robust to hardware errors.  One of the major goals for this project was the investigation of general methodologies for taking arbitrary applications and converting them it into more error-resilient forms.  Another major goal of this project was the investigation of application-specific methodologies for improving error resilience by leveraging inherent application and algorithm characteristics (e.g. natural error resilience, spatial and temporal reuse, and fault containment).These approaches include a) application-specific techniques for low-overhead fault detection, which was the first work to focus on algorithmic error tolerance and were shown to yield up to 2x reductions in the performance overhead over traditional checks, b) an algorithmic approach for error correction using localization, which was shown to improve performance of the conjugate gradient solver by 3x-4x and increased the probability that the solver completes successfully with a maximum iteration limit by up to 60% as the fault rates increased, and c) a numerical optimization-based methodology for converting applications into a more error tolerant form, which was shown to be applicable to a large class of applications, since linear programming, which is P-complete, can be implemented in this way, all applications in class P may employ the proposed approach.  This numerical optimization based approach showed significant robustness benefits over the baseline, e.g. the optimization formulation achieved 100% correctness with even up to error rates of 50%. For some application classes, the approach was shown to provide benefits larger than 1 order of magnitude in energy savings by exploiting hardware power/accuracy tradeoffs.  This research shows that application and algorithm-awareness can significantly increase the robustness of computing systems, while also reducing the cost of meeting reliability targets.          Last Modified: 08/21/2013       Submitted by: Rakesh Kumar]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

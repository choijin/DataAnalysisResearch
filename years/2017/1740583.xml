<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative Research: The Automata Programming Paradigm for Genomic Analysis</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>03/01/2017</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>234744.00</AwardTotalIntnAmount>
<AwardAmount>234744</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Almadena Chtchelkanova</SignBlockName>
<PO_EMAI>achtchel@nsf.gov</PO_EMAI>
<PO_PHON>7032927498</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Inferring knowledge from genetic data will drive future advances in the life sciences.  However, DNA sequences are being generated faster than they can be analyzed with existing computing technologies and algorithms. The core computations performed by many genomic applications involve pattern matching. This operation is normally implemented using automata-based algorithms and can be efficiently mapped onto non-general purpose platforms such as Field Programmable Gate Arrays (FPGA) and Micron?s recently announced Automata Processor (AP). However, the lack of high-level programming interfaces for these devices hampers their adoption in the bioinformatics community.&lt;br/&gt;&lt;br/&gt;This project fills this gap by developing novel programmatic descriptions of several genomic analyses and mapping them onto these two non-traditional architectures. The work advances the state-of-the-art in several ways. At an algorithmic level, new methods to address the biological problems of genome-scale orthology inference and regulatory motif search are being developed. At a computational abstraction level, the researchers are designing an extended finite automaton abstraction suitable to support diverse computations, and are mapping new and existing computational kernels onto it. At a hardware mapping level, automatic tuning techniques for the effective deployment of automata-based computations on FPGA and Micron?s AP are being developed. &lt;br/&gt;&lt;br/&gt; This interdisciplinary project will facilitate the adoption of FPGA and Micron?s Automata Processor by biologists by providing a new library of pattern matching routines and a high-level automata-based programming interface for these platforms. In addition, the researchers are developing instructional material in a variety of topics, such as genomic analysis, pattern matching, automata processing and high-performance computing. Finally, this project provides research opportunities and access to pre-production hardware to undergraduate and graduate students, interdisciplinary training, and technology transfer to industry. The results of this research will be made available through the release of software tools and publication in international conferences and journals.</AbstractNarration>
<MinAmdLetterDate>05/04/2017</MinAmdLetterDate>
<MaxAmdLetterDate>05/04/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1740583</AwardID>
<Investigator>
<FirstName>Michela</FirstName>
<LastName>Becchi</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Michela Becchi</PI_FULL_NAME>
<EmailAddress>mbecchi@ncsu.edu</EmailAddress>
<PI_PHON>9195152440</PI_PHON>
<NSF_ID>000573363</NSF_ID>
<StartDate>05/04/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Carolina State University</Name>
<CityName>Raleigh</CityName>
<ZipCode>276957514</ZipCode>
<PhoneNumber>9195152444</PhoneNumber>
<StreetAddress>2601 Wolf Village Way</StreetAddress>
<StreetAddress2><![CDATA[Admin. III, STE 240]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NC04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>042092122</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>NORTH CAROLINA STATE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>142363428</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[North Carolina State University]]></Name>
<CityName/>
<StateCode>NC</StateCode>
<ZipCode>276957003</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>02</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NC02</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0114</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2014~234744</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Many established and emerging applications perform at their core some form of pattern matching, a computation that maps naturally onto <em>finite automata</em> abstractions. In biology, for example, several genomics tasks, such as motif discovery, orthology inference, shotgun and de novo assembly, involve string-matching operations on genomics data. In turn, advances in DNA sequencing technology have led to increasingly large volumes of data available for these applications, resulting in a significant increase in their computational requirements. This project focuses on high-speed automata processing and makes contributions in two domains: parallel computing and biology.</p> <p>In the field of parallel computing, this project has enhanced our understanding of automata processing, and it has contributed with algorithmic optimizations and hardware mapping schemes to allow high-speed automata processing for large datasets on a variety of hardware platforms. From a practical perspective, it has allowed the design and implementation of a software stack for the effective and seamless deployment of <em>non-deterministic finite automata</em> (one kind of finite automata, briefly known as NFA) on GPU, Intel Knights Corner, Knights Landing and Skylake processors, FPGA, and Micron's Automata Processor. This toolchain has also allowed an apples-to-apples comparison between these parallel platforms, touching performance, resource utililization, preprocessing time and power consumption. The toolchain, illustrated in Fig. 1, includes automata-level and platform-specific optimizations, as well as a novel NFA partitioning algorithm that minimizes the number of state replications required to maintain functional equivalence with an unpartitioned NFA. Additionally, we have proposed a novel memory-efficient NFA implementation suitable for SIMD platforms. Fig. 2 illustrates our compiler toolchain for this SIMD-friendly design. The toolchain maps large datasets consisting of fixed-topology NFA (corresponding to patterns with the same structure) onto GPU, Intel processors and coprocessors equipped with vector units, and FPGA. Furthermore, we have proposed a hash-based pattern matching implementation for GPU, and we have used this tool to perform several genomics analyses.</p> <p>In the field of biology, the project has supported research on two topics. The <em>first project </em>involved computational modeling of how doubled genomes evolve. Many species, including humans, descend from an ancestor that was the result of a hybridization event between two different species that gave rise to a new daughter species whose doubled genome had two copies of every gene. We studied two groups of organisms with such an event in their history: a group of roundworms that attack crop plants, and bony fish. In Fig. 3, we show a region of 8 fish genomes that show this doubled pattern, even though many of the doubled genes have been lost over evolutionary time. With the tools developed in this project, we have shown that genome doubling probably gave rise to a new form of retina in these fishes that has some innovative features lacking even in humans. We have also put the resulting software on a public website so that anyone in the world may use it free of charge. In our <em>second project</em>, we studied the gut <em>microbiome</em> of animals like cattle, sheep and deer (known as ruminants). The microbiome consists of all the microorganisms that live in a particular environment, like the intestinal tract of an animal. Ruminants, unlike humans, are able to digest tough plant material like grass because they play host to a large group of microbes that do the difficult chemical work of digesting that material. It is now possible to use DNA sequencing to capture all of the microbial genes present in such an environment. Over the course of this project, we developed fast computational tools to infer the chemical transformations that the microbiome was conducting from these sequences. In Fig. 4, we show an example of our results: we can connect the chemical processes seen in the microbes (right) with those in the host animal (left) and ask how changing the kind of food the animal eats alters the chemistry the microbes perform. In this case, we found that feeding sheep a maize-based diet caused their microbes to perform chemistry that was more similar to the host chemistry than when the animals were feed grasses.</p> <p>This research is at the core of the dissertations of two Ph.D. students and the theses of two M.S. students. In addition, we have involved several undergraduate students in research projects related to this work.</p><br> <p>            Last Modified: 12/19/2019<br>      Modified by: Michela&nbsp;Becchi</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576788390909_toolchain--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576788390909_toolchain--rgov-800width.jpg" title="Toolchain"><img src="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576788390909_toolchain--rgov-66x44.jpg" alt="Toolchain"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Fig. 1: Compiler toolchain that maps large NFA onto various hardware platforms, including GPUs, Intel many-core processors and coprocessors, Micron's Automata Processor and FPGA.</div> <div class="imageCredit">Michela Becchi</div> <div class="imageSubmitted">Michela&nbsp;Becchi</div> <div class="imageTitle">Toolchain</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576784740516_Figure1--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576784740516_Figure1--rgov-800width.jpg" title="Inferred doubled genomes in bony fish"><img src="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576784740516_Figure1--rgov-66x44.jpg" alt="Inferred doubled genomes in bony fish"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Fig. 3: Two regions of eight fish genomes that were doubled in an ancient hybridization 300 million years ago. The evolutionary tree on the left shows how the species are related and indicates the number of doubled genes lost at each stage of the species� evolution.</div> <div class="imageCredit">Gavin Conant</div> <div class="imageSubmitted">Michela&nbsp;Becchi</div> <div class="imageTitle">Inferred doubled genomes in bony fish</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576788356971_SIMD-NFA--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576788356971_SIMD-NFA--rgov-800width.jpg" title="SIMD-NFA toolchain"><img src="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576788356971_SIMD-NFA--rgov-66x44.jpg" alt="SIMD-NFA toolchain"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Fig. 2: Compiler toolchain that deploys our SIMD-friendly NFA implementation on GPU, Intel processors equipped with vector units, and FPGA.</div> <div class="imageCredit">Michela Becchi</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Michela&nbsp;Becchi</div> <div class="imageTitle">SIMD-NFA toolchain</div> </div> </li> <li> <a href="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576784561237_Figure2crop_CCF--rgov-214x142.jpg" original="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576784561237_Figure2crop_CCF--rgov-800width.jpg" title="Effects of diet change on sheep microbial ecology"><img src="/por/images/Reports/POR/2019/1740583/1740583_10322292_1576784561237_Figure2crop_CCF--rgov-66x44.jpg" alt="Effects of diet change on sheep microbial ecology"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Fig. 4: The relationship between the chemical reactions (circles) carried out by the microbes living in sheep intestines (right) and the chemical reactions that the sheep itself can carry out (left).</div> <div class="imageCredit">Gavin Conant</div> <div class="imagePermisssions">Copyrighted</div> <div class="imageSubmitted">Michela&nbsp;Becchi</div> <div class="imageTitle">Effects of diet change on sheep microbial ecology</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Many established and emerging applications perform at their core some form of pattern matching, a computation that maps naturally onto finite automata abstractions. In biology, for example, several genomics tasks, such as motif discovery, orthology inference, shotgun and de novo assembly, involve string-matching operations on genomics data. In turn, advances in DNA sequencing technology have led to increasingly large volumes of data available for these applications, resulting in a significant increase in their computational requirements. This project focuses on high-speed automata processing and makes contributions in two domains: parallel computing and biology.  In the field of parallel computing, this project has enhanced our understanding of automata processing, and it has contributed with algorithmic optimizations and hardware mapping schemes to allow high-speed automata processing for large datasets on a variety of hardware platforms. From a practical perspective, it has allowed the design and implementation of a software stack for the effective and seamless deployment of non-deterministic finite automata (one kind of finite automata, briefly known as NFA) on GPU, Intel Knights Corner, Knights Landing and Skylake processors, FPGA, and Micron's Automata Processor. This toolchain has also allowed an apples-to-apples comparison between these parallel platforms, touching performance, resource utililization, preprocessing time and power consumption. The toolchain, illustrated in Fig. 1, includes automata-level and platform-specific optimizations, as well as a novel NFA partitioning algorithm that minimizes the number of state replications required to maintain functional equivalence with an unpartitioned NFA. Additionally, we have proposed a novel memory-efficient NFA implementation suitable for SIMD platforms. Fig. 2 illustrates our compiler toolchain for this SIMD-friendly design. The toolchain maps large datasets consisting of fixed-topology NFA (corresponding to patterns with the same structure) onto GPU, Intel processors and coprocessors equipped with vector units, and FPGA. Furthermore, we have proposed a hash-based pattern matching implementation for GPU, and we have used this tool to perform several genomics analyses.  In the field of biology, the project has supported research on two topics. The first project involved computational modeling of how doubled genomes evolve. Many species, including humans, descend from an ancestor that was the result of a hybridization event between two different species that gave rise to a new daughter species whose doubled genome had two copies of every gene. We studied two groups of organisms with such an event in their history: a group of roundworms that attack crop plants, and bony fish. In Fig. 3, we show a region of 8 fish genomes that show this doubled pattern, even though many of the doubled genes have been lost over evolutionary time. With the tools developed in this project, we have shown that genome doubling probably gave rise to a new form of retina in these fishes that has some innovative features lacking even in humans. We have also put the resulting software on a public website so that anyone in the world may use it free of charge. In our second project, we studied the gut microbiome of animals like cattle, sheep and deer (known as ruminants). The microbiome consists of all the microorganisms that live in a particular environment, like the intestinal tract of an animal. Ruminants, unlike humans, are able to digest tough plant material like grass because they play host to a large group of microbes that do the difficult chemical work of digesting that material. It is now possible to use DNA sequencing to capture all of the microbial genes present in such an environment. Over the course of this project, we developed fast computational tools to infer the chemical transformations that the microbiome was conducting from these sequences. In Fig. 4, we show an example of our results: we can connect the chemical processes seen in the microbes (right) with those in the host animal (left) and ask how changing the kind of food the animal eats alters the chemistry the microbes perform. In this case, we found that feeding sheep a maize-based diet caused their microbes to perform chemistry that was more similar to the host chemistry than when the animals were feed grasses.  This research is at the core of the dissertations of two Ph.D. students and the theses of two M.S. students. In addition, we have involved several undergraduate students in research projects related to this work.       Last Modified: 12/19/2019       Submitted by: Michela Becchi]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

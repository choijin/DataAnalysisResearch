<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Making Type Error Debugging Work</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2018</AwardEffectiveDate>
<AwardExpirationDate>01/31/2023</AwardExpirationDate>
<AwardTotalIntnAmount>506060.00</AwardTotalIntnAmount>
<AwardAmount>444115</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A type system is part of a programming language to catch programming errors. Encouraged by their success, modern programming languages increasingly employ ever more sophisticated type systems to provide guarantees about the safety and correctness of programs. To make type systems convenient to use, languages usually rely on type inference to automatically determine types, thus saving programmers from tedious and manual type annotations. When type inference fails to compute a program's type, the error messages produced by existing compilers are often imprecise and difficult to understand, making it hard for programmers to fix a program. The goal of this research is to make type systems more usable, and thereby to assist programmers in fixing errors quickly and reliably. The intellectual merits of this research are a series of techniques and theories for generating informative messages for fixing type errors in advanced type systems, and a unified representation of error reparation for integrating various debugging techniques. The developed techniques are driven by insights gained from a large-scale empirical study and a usability study. The project's broader significance and importance is to make languages with advanced type systems and type inference more usable, leading to improved programming productivity and increased adoption of languages for constructing more reliable software. A reduced learning curve will specifically increase the adoption of such languages in both K-12 and higher education.&lt;br/&gt;&lt;br/&gt;The conceptual and technical development of the proposed research is backed by variational typing, a typing discipline that supports the reuse of computations, and that encodes type uncertainties with sound underlying theories and efficient implementations. The ability to reuse type information allows efficient exploration of large spaces of potential error fixes, the efficient location of errors, and the generation of informative error messages. While the proposed research targets Haskell, a type system laboratory with numerous advanced features, the techniques and theories developed by systematically studying the interactions of variational types and other typing features are applicable to a wide range of programming languages.</AbstractNarration>
<MinAmdLetterDate>12/01/2017</MinAmdLetterDate>
<MaxAmdLetterDate>09/09/2019</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1750886</AwardID>
<Investigator>
<FirstName>Sheng</FirstName>
<LastName>Chen</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Sheng Chen</PI_FULL_NAME>
<EmailAddress>chen@louisiana.edu</EmailAddress>
<PI_PHON>3374825807</PI_PHON>
<NSF_ID>000705249</NSF_ID>
<StartDate>12/01/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Louisiana at Lafayette</Name>
<CityName>Lafayette</CityName>
<CountyName>LAFAYETTE</CountyName>
<ZipCode>705032014</ZipCode>
<PhoneNumber>3374825811</PhoneNumber>
<StreetAddress>104 E University Ave</StreetAddress>
<StreetAddress2><![CDATA[FG Mouton Suite 307]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Louisiana</StateName>
<StateCode>LA</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>LA03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>799451273</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF LOUISIANA AT LAFAYETTE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>787047901</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Louisiana at Lafayette]]></Name>
<CityName>Lafayette</CityName>
<CountyName>LAFAYETTE</CountyName>
<StateCode>LA</StateCode>
<ZipCode>705032701</ZipCode>
<StreetAddress><![CDATA[104 University Circle]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Louisiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>LA03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2018~127622</FUND_OBLG>
<FUND_OBLG>2019~316493</FUND_OBLG>
</Award>
</rootTag>

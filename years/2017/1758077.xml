<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Medium: Collaborative Research: FRP for Real</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2017</AwardEffectiveDate>
<AwardExpirationDate>09/30/2018</AwardExpirationDate>
<AwardTotalIntnAmount>27716.00</AwardTotalIntnAmount>
<AwardAmount>27716</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Functional Reactive Programming, or FRP, is a declarative programming paradigm based on two fundamental abstractions: a continuous (functional) modeling of time-varying behaviors, and a discrete (reactive) calculus of user and process interaction.  FRP provides a novel and effective approach to solving problems in which there is a combination of both continuous and discrete entities such as found in computer animation, robotics, control systems, GUIs, and interactive multimedia.  FRP's broader impact is seen in its adoption by several other research projects, and its use in several applications different from those at Yale.  The proposed work will strengthen these existing projects, and further broaden the applicability of FRP.  The proposed improvements in implementation will make FRP more suitable for compute-intensive applications, such as interactive 3D graphics and real-time audio processing.  It will also benefit the modeling and simulation community, which often uses declarative approaches to specifying and solving problems.&lt;br/&gt; &lt;br/&gt;Previous research at Yale helped to establish the foundations of FRP, and demonstrated its utility in several application domains.  Despite this preliminary success, more work is needed to make "FRP for real."  That is, to develop a system that facilitates writing natural and concise descriptions of reactive behaviors, responds well enough to satisfy most common real-time constraints, reifies real-world objects as first-class signal functions, runs efficiently through program optimization and parallel execution on multicore architectures, and has been validated in a real-world application domain, specifically audio signal processing.  The proposed research will advance the overall FRP methodology in three areas: Language Design (type system extensions to capture resource constraints, a redesign of the mediation between the discrete and continuous, and a better syntax to capture the essence of FRP); Language Implementation (program optimizations, multicore execution, asynchronous sub-processes); and Validation and Testing (with a focus on real-time audio signal processing).</AbstractNarration>
<MinAmdLetterDate>08/31/2017</MinAmdLetterDate>
<MaxAmdLetterDate>08/31/2017</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1758077</AwardID>
<Investigator>
<FirstName>Ruzica</FirstName>
<LastName>Piskac</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ruzica Piskac</PI_FULL_NAME>
<EmailAddress>ruzica.piskac@yale.edu</EmailAddress>
<PI_PHON>2034328001</PI_PHON>
<NSF_ID>000655841</NSF_ID>
<StartDate>08/31/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Yale University</Name>
<CityName>New Haven</CityName>
<ZipCode>065208327</ZipCode>
<PhoneNumber>2037854689</PhoneNumber>
<StreetAddress>Office of Sponsored Projects</StreetAddress>
<StreetAddress2><![CDATA[P.O. Box 208327]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<StateCode>CT</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CT03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>043207562</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>YALE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>043207562</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Yale University]]></Name>
<CityName>New Haven</CityName>
<StateCode>CT</StateCode>
<ZipCode>065208285</ZipCode>
<StreetAddress><![CDATA[AKWatson Hall]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Connecticut</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CT03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramElement>
<ProgramReference>
<Code>7924</Code>
<Text>MEDIUM PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<Appropriation>
<Code>0113</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2013~27716</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>This award is the PI transfer from Award 1302230. In Award 1302230 Paul Hudak and John Peterson originally proposed to make "FRP for real". Functional Reactive Programming, or FRP, is a declarative programming paradigm based on two fundamental abstractions: a continuous (functional) modeling of time-varying behaviors, and a discrete (reactive) calculus of user and process interaction.<br /><br />The main focus of John Peterson's work at the&nbsp; Western State Colorado University was the language design. Specifically, an exploration of FRP in the context of 2-D graphics. His group was building an interactive 2-D graphics library that runs on the JVM using previously developed FRP library. This library should allow novice programmers to develop interactive graphical applications in a natural way. They also developed a new library to support music education. Although this library does not yet involve reactivity it provides a framework into which interaction can later be added. This library has been used successfully in a general education music class and as a K12 enrichment activity.<br /><br />Unfortunately, Dr. Peterson passed away suddenly on March 5th, 2017. Before his untimely death, he was working on the use of declarative languages in music education, with an emphasis of the integration of reactive programming into the current library. He was also working on a final version of the 2-D reactive library.<br /><br />Following in the footsteps of Dr. Peterson's high level of engagement with undergraduates in research, we worked with two undergraduates to publish a paper on FRP-style program synthesis for audio. The goal of this work was to introduce the problem of digital signal processing programming by example (DSP-PBE), where users specify input and output audio files, and a tool automatically synthesizes a reactive program that transforms the input to the output. This program can then be applied to new wave files, giving users a new way to interact with audio and program code. In this work, we involved Yale undergraduates (Aeden Lombardo and Kate Rogers) in formally defining the problem of DSP-PBE, and providing a first implementation of a solution that can handle synthesis over commutative filters in digital signal processing. Digital signal processing is a domain of reactive systems that uses an FRP-like model to describe program, and as such, provided valuable insight into the effectiveness of FRP for a wide range of domains. This paper was published at the FARM workshop at ICFP.</p><br> <p>            Last Modified: 02/24/2019<br>      Modified by: Ruzica&nbsp;Piskac</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ This award is the PI transfer from Award 1302230. In Award 1302230 Paul Hudak and John Peterson originally proposed to make "FRP for real". Functional Reactive Programming, or FRP, is a declarative programming paradigm based on two fundamental abstractions: a continuous (functional) modeling of time-varying behaviors, and a discrete (reactive) calculus of user and process interaction.  The main focus of John Peterson's work at the  Western State Colorado University was the language design. Specifically, an exploration of FRP in the context of 2-D graphics. His group was building an interactive 2-D graphics library that runs on the JVM using previously developed FRP library. This library should allow novice programmers to develop interactive graphical applications in a natural way. They also developed a new library to support music education. Although this library does not yet involve reactivity it provides a framework into which interaction can later be added. This library has been used successfully in a general education music class and as a K12 enrichment activity.  Unfortunately, Dr. Peterson passed away suddenly on March 5th, 2017. Before his untimely death, he was working on the use of declarative languages in music education, with an emphasis of the integration of reactive programming into the current library. He was also working on a final version of the 2-D reactive library.  Following in the footsteps of Dr. Peterson's high level of engagement with undergraduates in research, we worked with two undergraduates to publish a paper on FRP-style program synthesis for audio. The goal of this work was to introduce the problem of digital signal processing programming by example (DSP-PBE), where users specify input and output audio files, and a tool automatically synthesizes a reactive program that transforms the input to the output. This program can then be applied to new wave files, giving users a new way to interact with audio and program code. In this work, we involved Yale undergraduates (Aeden Lombardo and Kate Rogers) in formally defining the problem of DSP-PBE, and providing a first implementation of a solution that can handle synthesis over commutative filters in digital signal processing. Digital signal processing is a domain of reactive systems that uses an FRP-like model to describe program, and as such, provided valuable insight into the effectiveness of FRP for a wide range of domains. This paper was published at the FARM workshop at ICFP.       Last Modified: 02/24/2019       Submitted by: Ruzica Piskac]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

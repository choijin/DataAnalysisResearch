<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Taming the Side-Channel Hazards in the Shielded Execution Paradigm</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/01/2018</AwardEffectiveDate>
<AwardExpirationDate>12/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>292149</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Intel's Software Guard Extension (SGX) is a hardware extension available in recent Intel processors, which provides software applications with shielded execution environments, called enclaves, to protect their confidentiality and integrity against compromised operating systems. The wide adoption of SGX will foster a shielded execution paradigm for enhancing software security in situations where the operating systems are not entirely trusted, such as public clouds. However, recent studies have suggested that SGX is vulnerable to side-channel threats, in which the system software measures the enclaves' use of system resources or micro-architectural resources to infer their secrets. Such a threat will significantly imperil the potential positive impacts that SGX could bring to the society, such as protecting software intellectual property and securely distributing and processing secret data.&lt;br/&gt;&lt;br/&gt;This research aims to address the side-channel hazards in SGX and advance the field in two aspects: First, it will develop novel principles and techniques to detect vulnerabilities in enclave programs, by modeling side-channel vulnerabilities and differentially analyzing their memory access patterns according to the model specification. Second, it will enhance enclave programs to thwart side-channel attacks at runtime by leveraging novel Timed Execution techniques and/or Address Space Layout Obfuscation mechanisms. The research will not only push forward the frontier of side-channel studies, but have broader societal impacts in the following aspects: First, because side-channels are major security concerns of security-critical applications to which shielded execution is the most valuable, the project will accelerate the broader acceptance of the shielded execution paradigm and the SGX technology. Second, through a set of educational tasks, the project will promote awareness of side-channel hazards to students, researchers, industry partners, and the general public, and hence motivate the adoption of the side-channel defense techniques in real-world applications.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>03/22/2018</MinAmdLetterDate>
<MaxAmdLetterDate>04/12/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1750809</AwardID>
<Investigator>
<FirstName>Yinqian</FirstName>
<LastName>Zhang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Yinqian Zhang</PI_FULL_NAME>
<EmailAddress>yinqian@cse.ohio-state.edu</EmailAddress>
<PI_PHON>6142923805</PI_PHON>
<NSF_ID>000680043</NSF_ID>
<StartDate>03/22/2018</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Ohio State University</Name>
<CityName>Columbus</CityName>
<ZipCode>432101016</ZipCode>
<PhoneNumber>6146888735</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[1960 Kenny Road]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>832127323</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OHIO STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001964634</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Ohio State University]]></Name>
<CityName>Columbus</CityName>
<StateCode>OH</StateCode>
<ZipCode>432101016</ZipCode>
<StreetAddress><![CDATA[1960 Kenny Road]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>025Z</Code>
<Text>SaTC: Secure and Trustworthy Cyberspace</Text>
</ProgramReference>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<Appropriation>
<Code>0118</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2018~101860</FUND_OBLG>
<FUND_OBLG>2019~95805</FUND_OBLG>
<FUND_OBLG>2020~94483</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Intel SGX is an extension of modern Intel CPUs that provides instructions for software applications to create isolated and encrypted memory regions (i.e., enclaves) to protect its secret data and sensitive code from untrusted operating systems (OS). An adversary taking control over the OS is not able to access the enclave memory or inspect the execution of the enclave code directly. However, the isolation mechanisms offered by SGX cannot defeat side-channel attacks.</p> <p>&nbsp;</p> <p>Side-channel attacks leverage adversary-observable events from an isolated system to exfiltrate sensitive information. Prior works have shown various side channels for SGX enclaves, including patterns of page faults, access patterns of CPU caches, execution time of instructions, etc. Due to the nature of these side channels, hardware solutions are unlikely to be incorporated in the CPU design. Software solutions to side channel are required for SGX to be broadly adopted in practice.</p> <p>&nbsp;</p> <p>To advance the state-of-the-art of side-channel defenses for SGX, this project aims to design and develop novel principles and techniques to (i) detect vulnerabilities in enclave programs that may lead to side-channel exploits, and (ii) enhance enclave programs to thwart side-channel attacks at runtime. These solutions are motivated by the following insights:</p> <p>&nbsp;</p> <p>First, side-channel vulnerabilities are caused by secret-dependent memory access patterns, which include both the relative order and timing of these memory accesses. Therefore, side-channel vulnerabilities can be detected by systematically executing enclave programs with different secrets while differentially analyzing the resulting memory access patterns. In this project, the goal of detecting side-channel vulnerabilities in enclave programs is fulfilled using a combination of program analysis techniques, such as fuzzing, symbolic execution, and dynamic analysis with Intel Processor Trace. The idea is realized in a system that we call ANABLEPS, which can automate the analysis of side-channel vulnerabilities for enclave programs.</p> <p>&nbsp;</p> <p>Second, side-channel attacks have pre-conditions (i.e., key assumptions that are required to perform the attacks) and post-conditions (i.e., inevitable trails of the attacks). Therefore, side-channel attacks, in principle, can be detected by monitoring their post-conditions or be prevented by nullifying the pre-conditions. These two ideas have been explored in this project and resulted in two prototype systems, HyperRace and OBFUSCURO. HyperRace is a compiler-assisted software tool, which automatically instruments enclave programs such that they will detect by themselves side-channel attacks conducted from a HyperThread sharing the same physical CPU core. The key idea behind HyperRace is that the outcome of contrived data races exhibits different behaviors when performed on two HyperThreads sharing the same physical CPU core and two that do not. HyperRace detects side-channel attacks by detecting inevitable trails of the attacks, and thus is difficult to be circumvented. OBFUSCURO is a compiler-assisted tool that transforms the regular program layout into a side-channel secure and ORAM-compatible layout. OBFUSCURO ensures that its ORAM controller performs data oblivious accesses in order to protect itself from all memory-based side-channels. Furthermore, OBFUSCURO ensures that the program is secure from timing attacks by ensuring that the program always runs for a pre-configured time interval. By eliminating adversary-observable events using the idea of ORAM, OBFUSCURO successfully demonstrates the effectiveness of thwarting side-channel attacks by nullifying the pre-conditions of these attacks.</p> <p>&nbsp;</p> <p>Broader impacts of the project are two-fold. First, several high-quality research papers have been published under the support of the project. Specifically, ANABLEPS is published at RAID 2019 (Wang et al., &ldquo;Time and Order: Towards Automatically Identifying Side-Channel Vulnerabilities in Enclave Binaries&rdquo;), HyperRace is published at IEEE S&amp;P 2018 (Chen et al. &ldquo;Racing in Hyperspace: Closing Hyper-Threading Side Channels on SGX with Contrived Data Races&rdquo;), OBFUSCURO is published at NDSS 2018 (Ahmad et al., &ldquo;OBFUSCURO: A Commodity Obfuscation Engine on Intel SGX&rdquo;). The project also supported several other research papers in the more general direction of system security, which have been disseminated to the research community via oral presentation and paper publication. Second, the results of the project have been disseminated to industry practitioners at Intel through a series of talks hosted by Intel. Some of the results of the projects, such as SGXPECTRE, which is a study of transient execution attacks against SGX enclaves, have been reported by mainstream IT media. Therefore, the project has also promoted public awareness of side-channel threats to SGX.</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/27/2021<br>      Modified by: Yinqian&nbsp;Zhang</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[ Intel SGX is an extension of modern Intel CPUs that provides instructions for software applications to create isolated and encrypted memory regions (i.e., enclaves) to protect its secret data and sensitive code from untrusted operating systems (OS). An adversary taking control over the OS is not able to access the enclave memory or inspect the execution of the enclave code directly. However, the isolation mechanisms offered by SGX cannot defeat side-channel attacks.     Side-channel attacks leverage adversary-observable events from an isolated system to exfiltrate sensitive information. Prior works have shown various side channels for SGX enclaves, including patterns of page faults, access patterns of CPU caches, execution time of instructions, etc. Due to the nature of these side channels, hardware solutions are unlikely to be incorporated in the CPU design. Software solutions to side channel are required for SGX to be broadly adopted in practice.     To advance the state-of-the-art of side-channel defenses for SGX, this project aims to design and develop novel principles and techniques to (i) detect vulnerabilities in enclave programs that may lead to side-channel exploits, and (ii) enhance enclave programs to thwart side-channel attacks at runtime. These solutions are motivated by the following insights:     First, side-channel vulnerabilities are caused by secret-dependent memory access patterns, which include both the relative order and timing of these memory accesses. Therefore, side-channel vulnerabilities can be detected by systematically executing enclave programs with different secrets while differentially analyzing the resulting memory access patterns. In this project, the goal of detecting side-channel vulnerabilities in enclave programs is fulfilled using a combination of program analysis techniques, such as fuzzing, symbolic execution, and dynamic analysis with Intel Processor Trace. The idea is realized in a system that we call ANABLEPS, which can automate the analysis of side-channel vulnerabilities for enclave programs.     Second, side-channel attacks have pre-conditions (i.e., key assumptions that are required to perform the attacks) and post-conditions (i.e., inevitable trails of the attacks). Therefore, side-channel attacks, in principle, can be detected by monitoring their post-conditions or be prevented by nullifying the pre-conditions. These two ideas have been explored in this project and resulted in two prototype systems, HyperRace and OBFUSCURO. HyperRace is a compiler-assisted software tool, which automatically instruments enclave programs such that they will detect by themselves side-channel attacks conducted from a HyperThread sharing the same physical CPU core. The key idea behind HyperRace is that the outcome of contrived data races exhibits different behaviors when performed on two HyperThreads sharing the same physical CPU core and two that do not. HyperRace detects side-channel attacks by detecting inevitable trails of the attacks, and thus is difficult to be circumvented. OBFUSCURO is a compiler-assisted tool that transforms the regular program layout into a side-channel secure and ORAM-compatible layout. OBFUSCURO ensures that its ORAM controller performs data oblivious accesses in order to protect itself from all memory-based side-channels. Furthermore, OBFUSCURO ensures that the program is secure from timing attacks by ensuring that the program always runs for a pre-configured time interval. By eliminating adversary-observable events using the idea of ORAM, OBFUSCURO successfully demonstrates the effectiveness of thwarting side-channel attacks by nullifying the pre-conditions of these attacks.     Broader impacts of the project are two-fold. First, several high-quality research papers have been published under the support of the project. Specifically, ANABLEPS is published at RAID 2019 (Wang et al., "Time and Order: Towards Automatically Identifying Side-Channel Vulnerabilities in Enclave Binaries"), HyperRace is published at IEEE S&amp;P 2018 (Chen et al. "Racing in Hyperspace: Closing Hyper-Threading Side Channels on SGX with Contrived Data Races"), OBFUSCURO is published at NDSS 2018 (Ahmad et al., "OBFUSCURO: A Commodity Obfuscation Engine on Intel SGX"). The project also supported several other research papers in the more general direction of system security, which have been disseminated to the research community via oral presentation and paper publication. Second, the results of the project have been disseminated to industry practitioners at Intel through a series of talks hosted by Intel. Some of the results of the projects, such as SGXPECTRE, which is a study of transient execution attacks against SGX enclaves, have been reported by mainstream IT media. Therefore, the project has also promoted public awareness of side-channel threats to SGX.          Last Modified: 06/27/2021       Submitted by: Yinqian Zhang]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

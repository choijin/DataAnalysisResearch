<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Analysis and Repair of Build Scripts for DevOps Software Practice</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/01/2019</AwardEffectiveDate>
<AwardExpirationDate>03/31/2024</AwardExpirationDate>
<AwardTotalIntnAmount>492358.00</AwardTotalIntnAmount>
<AwardAmount>307393</AwardAmount>
<AwardInstrument>
<Value>Continuing Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
<PO_EMAI>sgreensp@nsf.gov</PO_EMAI>
<PO_PHON>7032927841</PO_PHON>
</ProgramOfficer>
<AbstractNarration>DevOps is a software development methodology that combines software development (Dev) with information technology operations (Ops). The goal of DevOps is to enhance software productivity and reliability by shortening the software development life cycle while delivering features, fixes, and updates in close alignment with business objectives. The key to adopt the DevOps methodology is to automate the whole process of software configuration, build, testing, and deployment, so that they can be performed after any software code changes. Such automation requires developers to write comprehensive and complicated build scripts and maintain them frequently. Since build scripts often consist of heterogeneous code components and have significant dependency and impact on system environments, they raise unique challenges to traditional code analysis, defect detection, and repair techniques. This project targets an integrated suite of techniques supporting maintenance and quality assurance of build scripts, so that developers may have a similar level of confidence on their build scripts as on their source code. If successful, the project will lead to higher-quality build scripts, more productive build script maintenance, fewer delays in software integration process, as well as more robust software products, especially for those supporting different system environments and configurations. The project will also develop set-up tutorials for popular software frameworks based on analysis of their build scripts to help novice software developers learning the frameworks. &lt;br/&gt;&lt;br/&gt;To overcome the challenges on analyzing and repairing build scripts, the project will develop (1) concolic analysis of build scripts which enables executions of build process under different system environments and configurations, (2) partial static analyses based on data collected during concolic analysis to detect defects in unexplored paths, and (3) techniques to repair build failures by learning script revisions from software projects with similar build configurations. During the development of above techniques, the project is expected to advance knowledge boundary in four ways. First, it will lead to better understanding of software build practice and common failures. Second, to address system-environment dependencies and impacts, the project will provide comprehensive knowledge on how build scripts interact with system environments, and develop novel symbolic operators, constraint solvers, and abstractions to support system-environment states in concolic and static analyses. Third, to address code heterogeneity, the project will reveal common correlation patterns among different components of build scripts and develop novel algorithms to transfer symbolic expressions and static analysis results across script boundaries via dynamic analyses. Fourth, the project will study the redundancy among build scripts revisions, system environments, configurations, and build logs from different projects, and develop techniques on summarizing common repair templates.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>03/31/2019</MinAmdLetterDate>
<MaxAmdLetterDate>05/25/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1846467</AwardID>
<Investigator>
<FirstName>Xiaoyin</FirstName>
<LastName>Wang</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xiaoyin Wang</PI_FULL_NAME>
<EmailAddress>Xiaoyin.Wang@UTSA.EDU</EmailAddress>
<PI_PHON>2104584340</PI_PHON>
<NSF_ID>000653136</NSF_ID>
<StartDate>03/31/2019</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Texas at San Antonio</Name>
<CityName>San Antonio</CityName>
<ZipCode>782491644</ZipCode>
<PhoneNumber>2104584340</PhoneNumber>
<StreetAddress>One UTSA Circle</StreetAddress>
<StreetAddress2><![CDATA[Grants, Contracts & Ind. Agr.]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX20</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>800189185</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF TEXAS AT SAN ANTONIO, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>042000273</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Texas at San Antonio]]></Name>
<CityName>San Antonio</CityName>
<StateCode>TX</StateCode>
<ZipCode>782491644</ZipCode>
<StreetAddress><![CDATA[One UTSA Circle]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>20</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX20</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0121</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2019~105207</FUND_OBLG>
<FUND_OBLG>2020~92160</FUND_OBLG>
<FUND_OBLG>2021~110026</FUND_OBLG>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>Collaborative Research: CDS&amp;E-MSS: Exact Homological Algebra for Computational Topology</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2019</AwardEffectiveDate>
<AwardExpirationDate>04/30/2021</AwardExpirationDate>
<AwardTotalIntnAmount>78155.00</AwardTotalIntnAmount>
<AwardAmount>10016</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>03040000</Code>
<Directorate>
<Abbreviation>MPS</Abbreviation>
<LongName>Direct For Mathematical &amp; Physical Scien</LongName>
</Directorate>
<Division>
<Abbreviation>DMS</Abbreviation>
<LongName>Division Of Mathematical Sciences</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Michelle Manes</SignBlockName>
<PO_EMAI>mmanes@nsf.gov</PO_EMAI>
<PO_PHON>7032924870</PO_PHON>
</ProgramOfficer>
<AbstractNarration>A central problem in data-driven scientific inquiry is how to interpret structures in large data sets uncovered by modern tools. The field of topological data analysis provides a potential solution via the language of homology, which encodes features of interest as cycles. These, in principle, can be located and understood as generators, which reveal explicit structure in the original data. However, fundamental mathematical and computational challenges have restricted most topological analyses to the study of persistence diagrams, numerical summaries that omit generators and, thus, dramatically limit modeling power and explainability. This project draws on diverse ideas from the mathematical domains of algebraic topology, numerical linear algebra, category and order-lattice theory, computation, and combinatorics, and from the scientific and engineering domains of biological aggregations, brain, and medical imaging. It provides ample opportunities for training mathematical scientists for the mastery of these tools, and for developing new, exploratory methods in STEM teaching and learning.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;The ExHACT project will provide the tools needed to realize the full modeling and explanatory capability of generating cycles by creating a unified theoretical and computational tool set for persistent homological algebra. Recent results in the fields of matroid theory and exact categories (from which the project draws its name) developed by one of the PIs provide the foundation for efficiently performing the necessary computations using well-understood matrix manipulations. The PIs will capitalize on this new opportunity by developing theoretical and computational tools for the study of persistent generators, induced homomorphisms of persistence modules, exact and spectral sequences, and relative persistent homology, among other methods. They will augment this computational core with data visualization capabilities to facilitate graphical exploration of homological data in an intuitive fashion for scientists without extensive mathematical background, and provide new tools for existing research groups that currently apply topological methods in materials science, neuroscience, biochemistry, and biological aggregations. ExHACT will also enable custom functionality and workflows to be built by more experienced users, providing a stable community platform for the development of new methodologies in topological data analysis. All software functionality will be extensively documented, including both technical specifications and detailed use cases, in order to make a full suite of computation and visualization capabilities accessible to a broad audience.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>06/10/2019</MinAmdLetterDate>
<MaxAmdLetterDate>04/20/2021</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.049</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1854748</AwardID>
<Investigator>
<FirstName>Jonathan</FirstName>
<LastName>Cohen</LastName>
<PI_MID_INIT>D</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jonathan D Cohen</PI_FULL_NAME>
<EmailAddress>jdc@princeton.edu</EmailAddress>
<PI_PHON>6092582696</PI_PHON>
<NSF_ID>000122692</NSF_ID>
<StartDate>11/13/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Gregory</FirstName>
<LastName>Henselman-Petrusek</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Gregory Henselman-Petrusek</PI_FULL_NAME>
<EmailAddress>gh10@princeton.edu</EmailAddress>
<PI_PHON>5039300153</PI_PHON>
<NSF_ID>000786690</NSF_ID>
<StartDate>06/10/2019</StartDate>
<EndDate>11/13/2020</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Princeton University</Name>
<CityName>Princeton</CityName>
<ZipCode>085442020</ZipCode>
<PhoneNumber>6092583090</PhoneNumber>
<StreetAddress>Off. of Research &amp; Proj. Admin.</StreetAddress>
<StreetAddress2><![CDATA[P.O. Box 36]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>NJ12</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>002484665</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>TRUSTEES OF PRINCETON UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>002484665</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Princeton University]]></Name>
<CityName>Princeton</CityName>
<StateCode>NJ</StateCode>
<ZipCode>085442020</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>12</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>NJ12</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8069</Code>
<Text>CDS&amp;E-MSS</Text>
</ProgramElement>
<ProgramReference>
<Code>9263</Code>
<Text>COMPUTATIONAL SCIENCE &amp; ENGING</Text>
</ProgramReference>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2019~10015</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-99a0e344-7fff-beef-0a16-86b1e0a361e0"> </span></p> <p><span id="docs-internal-guid-0e79dc16-7fff-41b3-bd04-2206e5a81c9e"> </span></p> <p dir="ltr"><span>The goal of the ExHACT project is to enable modern researchers to develop novel, disruptive, and high-performance software in computational topology.&nbsp; In particular, we focus on scientific applications of generators in persistent homology.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>The core obstacle we seek to address is the current absence of flexible, performant software libraries for low-level mathematical operations involving very large matrices (hundreds of billions of rows or columns) coming from homological algebra.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>This domain demands new tools because its underlying problems and data types differ significantly from currently established sparse linear algebra libraries such as LAPACK</span></p> <ul> <li dir="ltr"> <p dir="ltr"><span>exact rank calculations (without numerical error) are crucial</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>coefficients in general abstract rings are required</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>transpose operations are highly efficient for several of the most common compressed matrix data structures</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>most arrays are not asymmetric and highly singular</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>order matters in computation; dynamic recording is severely restricted</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>most scientific users work in research and academic departments with limited access to high performance computing resources</span></p> </li> </ul> <p>&nbsp;</p> <p dir="ltr"><span>The ExHACT project addresses this problem with two contributions:</span></p> <ul> <li dir="ltr"> <p dir="ltr"><span>A theoretical programming framework with formal guarantees both for expressibility (&ldquo;most&rdquo; calculations in homological algebra with field coefficients can be formulated in this framework) and for implementation (every problem that can be formulated in this framework can be automatically transposed into a standard form and solved efficiently by a universal solver).</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>A performant implementation of this programming framework in the Rust programming language, with high-level interface wrappers in Python and other common scientific computing languages.</span></p> </li> </ul> <p>&nbsp;</p> <p dir="ltr"><span>In the first two years of this three year project, and despite the global disruptive effects of the COVID-19 epidemic, the ExHACT team progressed toward these goals as follows</span></p> <p>&nbsp;</p> <ul> <li dir="ltr"> <p dir="ltr"><span>Training.&nbsp; Seven undergraduate students took part in summer or year-long research projects either extending or applying software developed for the project.&nbsp; Outcomes of this work include several written reports, an undergraduate honors thesis, and a scientific paper on optimal cycle representatives accepted for publication.&nbsp; The project includes two postdocs, one each spearheading the implementation of core rust code and the application of this code to neural data.&nbsp; These projects afford excellent opportunities both for self-direction and for training in general and domain-specific instruction by PI&rsquo;s.&nbsp; The project also includes one graduate student trainee, focused on foundations in mathematical theory and computer implementation.&nbsp; All 10 trainees met with one or multiple PI&rsquo;s weekly.&nbsp; Training included both hard skills (scientific methods, best practices in programming, etc.) and soft skills (written and oral communication, goal-setting, working towards a deadline, etc.).</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>Code development.&nbsp; The team has produced (I) a fully functional beta library that achieves the core project goals of (a) computing persistent homological generators, and (b) executing this computation with a fully general sparse matrix oracle API (II) an open-source Julia library for optimization of persistent cycle representatives, (III) a rust adaptation of the Julia package currently in beta testing; this package represents the first scientific use case of the core ExHACT library; the associated methods paper has been accepted for publication this year.</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>Design architecture.&nbsp; The team has concretized two-way translation between the theoretical computational programming framework general computation in homological algebra on the one hand, with primitive and higher-level data structures and algorithms native to Rust, on the other.</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>Scientific research.&nbsp; Together with our undergraduate mentees, the research team applied open source ExHACT software to the empirical study of optimal cycle representatives in scientific data.&nbsp; These methods proved remarkably effective, even for problems known to be NP hard.&nbsp; Selection of cycle representatives is an inverse problem that is fundamental to interpreting and explaining topological models of real-world data, and the results of this study are immediately actionable for researchers in this domain.</span></p> </li> <li dir="ltr"> <p dir="ltr"><span>Mathematical and computing research.&nbsp; The project team has developed several manuscripts on theory and methods deployed in ExHACT software, including numerical experiments comparing the outcomes of several theoretical algorithms.&nbsp; These manuscripts are intended for near-term submission to scientific journals.</span></p> </li> </ul> <p>&nbsp;</p> <p dir="ltr"><span>Work on this 3-year project past the current 2-year waypoint at both collaborating institutions of the University of Delaware and Macalester College.</span></p> <div><span><br /></span></div> <p>&nbsp;</p> <p dir="ltr">&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 06/16/2021<br>      Modified by: Jonathan&nbsp;D&nbsp;Cohen</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[      The goal of the ExHACT project is to enable modern researchers to develop novel, disruptive, and high-performance software in computational topology.  In particular, we focus on scientific applications of generators in persistent homology.    The core obstacle we seek to address is the current absence of flexible, performant software libraries for low-level mathematical operations involving very large matrices (hundreds of billions of rows or columns) coming from homological algebra.    This domain demands new tools because its underlying problems and data types differ significantly from currently established sparse linear algebra libraries such as LAPACK   exact rank calculations (without numerical error) are crucial   coefficients in general abstract rings are required   transpose operations are highly efficient for several of the most common compressed matrix data structures   most arrays are not asymmetric and highly singular   order matters in computation; dynamic recording is severely restricted   most scientific users work in research and academic departments with limited access to high performance computing resources      The ExHACT project addresses this problem with two contributions:   A theoretical programming framework with formal guarantees both for expressibility ("most" calculations in homological algebra with field coefficients can be formulated in this framework) and for implementation (every problem that can be formulated in this framework can be automatically transposed into a standard form and solved efficiently by a universal solver).   A performant implementation of this programming framework in the Rust programming language, with high-level interface wrappers in Python and other common scientific computing languages.      In the first two years of this three year project, and despite the global disruptive effects of the COVID-19 epidemic, the ExHACT team progressed toward these goals as follows      Training.  Seven undergraduate students took part in summer or year-long research projects either extending or applying software developed for the project.  Outcomes of this work include several written reports, an undergraduate honors thesis, and a scientific paper on optimal cycle representatives accepted for publication.  The project includes two postdocs, one each spearheading the implementation of core rust code and the application of this code to neural data.  These projects afford excellent opportunities both for self-direction and for training in general and domain-specific instruction by PI’s.  The project also includes one graduate student trainee, focused on foundations in mathematical theory and computer implementation.  All 10 trainees met with one or multiple PI’s weekly.  Training included both hard skills (scientific methods, best practices in programming, etc.) and soft skills (written and oral communication, goal-setting, working towards a deadline, etc.).   Code development.  The team has produced (I) a fully functional beta library that achieves the core project goals of (a) computing persistent homological generators, and (b) executing this computation with a fully general sparse matrix oracle API (II) an open-source Julia library for optimization of persistent cycle representatives, (III) a rust adaptation of the Julia package currently in beta testing; this package represents the first scientific use case of the core ExHACT library; the associated methods paper has been accepted for publication this year.   Design architecture.  The team has concretized two-way translation between the theoretical computational programming framework general computation in homological algebra on the one hand, with primitive and higher-level data structures and algorithms native to Rust, on the other.   Scientific research.  Together with our undergraduate mentees, the research team applied open source ExHACT software to the empirical study of optimal cycle representatives in scientific data.  These methods proved remarkably effective, even for problems known to be NP hard.  Selection of cycle representatives is an inverse problem that is fundamental to interpreting and explaining topological models of real-world data, and the results of this study are immediately actionable for researchers in this domain.   Mathematical and computing research.  The project team has developed several manuscripts on theory and methods deployed in ExHACT software, including numerical experiments comparing the outcomes of several theoretical algorithms.  These manuscripts are intended for near-term submission to scientific journals.      Work on this 3-year project past the current 2-year waypoint at both collaborating institutions of the University of Delaware and Macalester College.                 Last Modified: 06/16/2021       Submitted by: Jonathan D Cohen]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

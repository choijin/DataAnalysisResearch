<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SBIR Phase I:  Cloudseal: Software Testing with Deterministic Containers</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>02/01/2019</AwardEffectiveDate>
<AwardExpirationDate>01/31/2020</AwardExpirationDate>
<AwardTotalIntnAmount>224444.00</AwardTotalIntnAmount>
<AwardAmount>224444</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>07070000</Code>
<Directorate>
<Abbreviation>ENG</Abbreviation>
<LongName>Directorate For Engineering</LongName>
</Directorate>
<Division>
<Abbreviation>IIP</Abbreviation>
<LongName>Div Of Industrial Innovation &amp; Partnersh</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Peter Atherton</SignBlockName>
<PO_EMAI>patherto@nsf.gov</PO_EMAI>
<PO_PHON>7032928772</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase I project will result from enabling efficient repeatable computing using commodity technology. While computers should, in principle, operate the same way each time, we have all seen how a program that ran fine yesterday somehow crashes today. Our current computing infrastructure betrays its fundamentally unrepeatable nature in a thousand careless ways, by letting processor and operating system details affect how programs run. Popular computing abstractions like containers and virtual machines improve repeatability, but do not provide any guarantees. This project conducts R&amp;D on a new repeatable container, which provides repeatability for arbitrary programs running inside it. Repeatable containers will allow for reproducible software builds, software testing that runs the same on all machines, and faster software debugging with "one click" reproduction of failures. Repeatable containers reduce software development and QA costs. Repeatable containers can also facilitate archiving software and scientific research, and trustless grid computing.&lt;br/&gt;&lt;br/&gt;This Small Business Innovation Research (SBIR) Phase I project involves the development of new container runtime systems that can enforce repeatability with low performance overhead. This project will focus on technical improvements that yield a robust container runtime which can handle a wide range of legacy software that collectively exercises the full range of processor and operating system behaviors. The container will integrate smoothly with both existing container technologies and existing container users, to facilitate easy adoption by software developers. Key technical results will include developing a "fingerprinting" technology to uniquely identify container executions, and a stress-testing methodology to increase confidence that the repeatability guarantee holds.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>01/31/2019</MinAmdLetterDate>
<MaxAmdLetterDate>01/23/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.041</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1843634</AwardID>
<Investigator>
<FirstName>Ryan</FirstName>
<LastName>Newton</LastName>
<PI_MID_INIT>R</PI_MID_INIT>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Ryan R Newton</PI_FULL_NAME>
<EmailAddress>rn@cloudseal.io</EmailAddress>
<PI_PHON>6176428059</PI_PHON>
<NSF_ID>000780855</NSF_ID>
<StartDate>01/31/2019</StartDate>
<EndDate>10/02/2019</EndDate>
<RoleCode>Former Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Logan</FirstName>
<LastName>Wendholt</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Logan Wendholt</PI_FULL_NAME>
<EmailAddress>lw@cloudseal.io</EmailAddress>
<PI_PHON>8126399420</PI_PHON>
<NSF_ID>000812210</NSF_ID>
<StartDate>10/02/2019</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>CLOUDSEAL INC</Name>
<CityName>BLOOMINGTON</CityName>
<ZipCode>474089698</ZipCode>
<PhoneNumber>6176428059</PhoneNumber>
<StreetAddress>3814 E DEVONSHIRE CT</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<StateCode>IN</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IN09</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>081233049</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>CLOUDSEAL INC</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[CLOUDSEAL INC]]></Name>
<CityName>Bloomington</CityName>
<StateCode>IN</StateCode>
<ZipCode>474089698</ZipCode>
<StreetAddress><![CDATA[3814 E Devonshire Ct]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Indiana</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IN09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>5371</Code>
<Text>SBIR Phase I</Text>
</ProgramElement>
<ProgramReference>
<Code>5371</Code>
<Text>SMALL BUSINESS PHASE I</Text>
</ProgramReference>
<ProgramReference>
<Code>8032</Code>
<Text>Software Services and Applications</Text>
</ProgramReference>
<Appropriation>
<Code>0119</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2019~224444</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-d97a01fa-7fff-9392-89d3-c33879441612"> <p dir="ltr"><span>Many of today&rsquo;s IT virtualization technologies, including virtual machines and Docker containers, make a promise of portable, deterministic computation. Given the same program with the same inputs, we should get the same outcome across machines, again and again. However, these technologies do not fully deliver on this promise, as they allow hardware and operating system details to infiltrate and ultimately undermine the promise of reproducibility. Fueled by this NSF award, our startup company Cloudseal was able to build on academic research performed at Indiana University and the University of Pennsylvania and develop the world&rsquo;s first truly reproducible container prototype. Cloudseal container technology brings the benefits of reproducibility to unmodified programs, and retains compatibility with industry-standard Docker containers. Our Cloudseal containers provide a deterministic and portable computing abstraction that allows bugs to be easily reproduced from one machine to another, letting developers jump straight to understanding and fixing a bug instead of wasting time trying to reproduce it.</span></p> <br /> <p dir="ltr"><span>During the award period, Cloudseal was able to hire three engineers to add features to the container prototype, add support for recording and replaying network communication that crosses the container boundary, and develop a series of technical demos for networking and machine learning workloads. These outcomes were a crucial element of interactions with investors and alpha customers. Ultimately, these outcomes enabled a successful transition for the Cloudseal team to spearhead a reproducibility effort within a large technology company.</span></p> </span></p><br> <p>            Last Modified: 11/01/2020<br>      Modified by: Logan&nbsp;Wendholt</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Many of today’s IT virtualization technologies, including virtual machines and Docker containers, make a promise of portable, deterministic computation. Given the same program with the same inputs, we should get the same outcome across machines, again and again. However, these technologies do not fully deliver on this promise, as they allow hardware and operating system details to infiltrate and ultimately undermine the promise of reproducibility. Fueled by this NSF award, our startup company Cloudseal was able to build on academic research performed at Indiana University and the University of Pennsylvania and develop the world’s first truly reproducible container prototype. Cloudseal container technology brings the benefits of reproducibility to unmodified programs, and retains compatibility with industry-standard Docker containers. Our Cloudseal containers provide a deterministic and portable computing abstraction that allows bugs to be easily reproduced from one machine to another, letting developers jump straight to understanding and fixing a bug instead of wasting time trying to reproduce it.   During the award period, Cloudseal was able to hire three engineers to add features to the container prototype, add support for recording and replaying network communication that crosses the container boundary, and develop a series of technical demos for networking and machine learning workloads. These outcomes were a crucial element of interactions with investors and alpha customers. Ultimately, these outcomes enabled a successful transition for the Cloudseal team to spearhead a reproducibility effort within a large technology company.        Last Modified: 11/01/2020       Submitted by: Logan Wendholt]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>EDU: Collaborative: Using Virtual Machine Introspection for Deep Cyber Security Education</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>04/01/2018</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardTotalIntnAmount>110883.00</AwardTotalIntnAmount>
<AwardAmount>110883</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11010001</Code>
<Directorate>
<Abbreviation>EHR</Abbreviation>
<LongName>Direct For Education and Human Resources</LongName>
</Directorate>
<Division>
<Abbreviation>DGE</Abbreviation>
<LongName>Division Of Graduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Victor Piotrowski</SignBlockName>
<PO_EMAI>vpiotrow@nsf.gov</PO_EMAI>
<PO_PHON>7032925141</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Cybersecurity is one of the most strategically important areas in computer science, and also one of the most difficult disciplines to teach effectively. Historically, hands-on cyber security exercises helped students reinforce basic concepts, but most of them focused on user level attacks and defenses. Since OS kernels provide the foundations to the applications, any compromise to OS kernels will lead to an entirely untrusted computing. Therefore, it is imperative to teach students the practice of kernel level attacks and defenses.&lt;br/&gt;&lt;br/&gt;Over the past decade, there has been great interest in using virtualization to profile, characterize, and observe kernel events including the security incidents. Inspired by the great success from virtual machine introspection (VMI), this project aims to provide an advancement by directly building practical VMI tools and libraries (or toolkit) on top of virtualization, and applying them for deep cybersecurity education. The deepness comes from the study of the lower level system internals such as OS kernels. The project will further provide a number of seed contents to teach both instructors and students on utilizing the toolkit to be used for studying not only traditional user level attacks such as buffer overflow, but also defenses inside the OS kernels. The outcome of this project (i.e., the toolkit and the cybersecurity exercises) will contribute to the health, safety, and economic well-being of our society by helping to improve the state-of-the-art in cybersecurity education, especially for effectively performing hands-on cybersecurity exercises.</AbstractNarration>
<MinAmdLetterDate>04/09/2018</MinAmdLetterDate>
<MaxAmdLetterDate>04/09/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1834214</AwardID>
<Investigator>
<FirstName>Zhiqiang</FirstName>
<LastName>Lin</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Zhiqiang Lin</PI_FULL_NAME>
<EmailAddress>zlin@cse.ohio-state.edu</EmailAddress>
<PI_PHON>6142920055</PI_PHON>
<NSF_ID>000610524</NSF_ID>
<StartDate>04/09/2018</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Ohio State University</Name>
<CityName>Columbus</CityName>
<ZipCode>432101016</ZipCode>
<PhoneNumber>6146888735</PhoneNumber>
<StreetAddress>Office of Sponsored Programs</StreetAddress>
<StreetAddress2><![CDATA[1960 Kenny Road]]></StreetAddress2>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<StateCode>OH</StateCode>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>OH03</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>832127323</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>OHIO STATE UNIVERSITY, THE</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>001964634</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Ohio State University]]></Name>
<CityName>Columbus</CityName>
<StateCode>OH</StateCode>
<ZipCode>432101226</ZipCode>
<StreetAddress><![CDATA[2036 Neil Avenue]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Ohio</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>03</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>OH03</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>7254</Code>
<Text>CYBER SECURITY ACT PROPOSALS</Text>
</ProgramReference>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9179</Code>
<Text>GRADUATE INVOLVEMENT</Text>
</ProgramReference>
<ProgramReference>
<Code>SMET</Code>
<Text>SCIENCE, MATH, ENG &amp; TECH EDUCATION</Text>
</ProgramReference>
<Appropriation>
<Code>0416</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~110883</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-7c11bb9b-7fff-39fe-db86-f57409084213"> </span></p> <p dir="ltr"><span>This cybersecurity education project aims to provide hands-on labs and exercises for both undergraduate and graduate students to practise and learn low level cyber attacks and defenses using virtualization technology. Unlike many other projects that just use virtualization to package the labs (to ease the distribution), we instrument virtualization in a novel way and empower it to observe, interpose, interpret, and monitor both user space and kernel space events occurred inside guest OS kernel.&nbsp; Such a virtual machine introspection (VMI) enabled lab is not only easier to configure and deploy, but also offers a complete view of the entire software stack from kernel, to the library, and to the applications covering packet flows, system call and even instruction executions.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>Through the support of this project, we have developed eight seed security labs to study the low level attacks and defenses. These labs have covered from user space software security such as buffer overflow and return oriented programming (ROP), to kernel level attacks such as direct kernel object manipulation (DKOM) and defenses such as PatchGuard and heap spray detection inside guest OS kernels. Both the exercises and their source code of the developed labs have been made public available in gitlab such that other instructors can easily customize and adopt them in their teaching. Students anywhere in the world can also use them to study the low level details of computer security. We will keep maintaining these labs and updated them when necessary.</span></p> <p>&nbsp;</p> <p dir="ltr"><span>In addition to the hands-on labs developed, we have also published a paper entitled ?</span><span>Using Virtual Machine Introspection for Kernel Security Education? </span><span>at ACM SIGCSE 2018 to describe our vision of using virtual machine introspection to teach low level computer systems security, and our practice of how we have used it to develop the labs. We hope our methodology has inspired follow ups by other researchers and practitioners, and in fact we did observe quite a few in this line of direction.&nbsp;</span></p> <p>&nbsp;</p> <p dir="ltr"><span>In short, this project has resulted in eight open source labs and one academic paper, which will contribute to the cybersecurity education of the workforce particularly with hands-on knowledge of kernel level attacks and defenses.</span></p> <div><span><br /></span></div> <p>&nbsp;</p> <p>&nbsp;</p><br> <p>            Last Modified: 12/01/2019<br>      Modified by: Zhiqiang&nbsp;Lin</p> </div> <div class="porSideCol"></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[   This cybersecurity education project aims to provide hands-on labs and exercises for both undergraduate and graduate students to practise and learn low level cyber attacks and defenses using virtualization technology. Unlike many other projects that just use virtualization to package the labs (to ease the distribution), we instrument virtualization in a novel way and empower it to observe, interpose, interpret, and monitor both user space and kernel space events occurred inside guest OS kernel.  Such a virtual machine introspection (VMI) enabled lab is not only easier to configure and deploy, but also offers a complete view of the entire software stack from kernel, to the library, and to the applications covering packet flows, system call and even instruction executions.    Through the support of this project, we have developed eight seed security labs to study the low level attacks and defenses. These labs have covered from user space software security such as buffer overflow and return oriented programming (ROP), to kernel level attacks such as direct kernel object manipulation (DKOM) and defenses such as PatchGuard and heap spray detection inside guest OS kernels. Both the exercises and their source code of the developed labs have been made public available in gitlab such that other instructors can easily customize and adopt them in their teaching. Students anywhere in the world can also use them to study the low level details of computer security. We will keep maintaining these labs and updated them when necessary.    In addition to the hands-on labs developed, we have also published a paper entitled ?Using Virtual Machine Introspection for Kernel Security Education? at ACM SIGCSE 2018 to describe our vision of using virtual machine introspection to teach low level computer systems security, and our practice of how we have used it to develop the labs. We hope our methodology has inspired follow ups by other researchers and practitioners, and in fact we did observe quite a few in this line of direction.     In short, this project has resulted in eight open source labs and one academic paper, which will contribute to the cybersecurity education of the workforce particularly with hands-on knowledge of kernel level attacks and defenses.               Last Modified: 12/01/2019       Submitted by: Zhiqiang Lin]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>

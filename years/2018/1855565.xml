<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRII: CSR: Towards Pinpointing the Root Causes of Failures in Flash-based Storage Systems</AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/11/2018</AwardEffectiveDate>
<AwardExpirationDate>04/30/2020</AwardExpirationDate>
<AwardTotalIntnAmount>59494.00</AwardTotalIntnAmount>
<AwardAmount>59494</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Marilyn McClure</SignBlockName>
<PO_EMAI>mmcclure@nsf.gov</PO_EMAI>
<PO_PHON>7032925197</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Storage systems that hold financial transactions, scientific computation results, a family's photos, and more, are undergoing dramatic changes. Triggered by the advances in flash memory technology, almost every layer of storage systems is being optimized aggressively to make full use of flash. This trend increases the complexity of the systems and increases the chance of obscure failures. Failures in flash-based storage systems are challenging to diagnose even for data center professionals, and can lead to severe downtime or even data loss. Moreover, the difficulty of failure diagnosis will increase in the foreseeable future with the rapid growth of flash and other non-volatile memory technologies. Thus, a framework for diagnosing the whole system and pinpointing the root causes of failures is urgently needed.&lt;br/&gt;&lt;br/&gt;The goal of this research project is to enable precise, end-to-end diagnosis of failures in flash-based storage systems. One key observation is that more and more kernel components are being optimized aggressively for flash, so a diagnosis framework is needed that minimizes the dependence on the kernel. On the other hand, although many components are changing, some fundamental abstractions such as files and logical blocks, and interfaces such as system calls and command sets, are relatively stable. A diagnosis framework can focus on the invariants to analyze the behavior of the rapidly evolving systems. Based on these observations, this research project investigates a novel failure diagnosis framework that separates failure domains based on the interfaces and automatically correlates the fundamental operations across layers. More specifically, the framework consists of two synergistic components: (1) an on-drive device agent to record and reproduce the host-device interactions without any dependence on the host, and (2) an end-to-end analyzer to provide in-depth diagnosis support along the whole data path from the application to the device.&lt;br/&gt;&lt;br/&gt;This research project will advance the dependability of storage systems for various important data in modern society. The improvements to data storage will in turn benefit the society from many other aspects, including examples such as reducing maintenance costs and human efforts and avoiding financial loss due to service downtime or data corruption. This research project will also contribute to the curriculum of operating systems and other related courses, and will engage undergraduate and graduate students in systems research. In addition, the project will be integrated into the Alliance for Minority Participation  Program and the Young Women in Computing Program to engage students from traditionally underrepresented groups,  serving our national, regional, and local interest in increasing diversity in computing research.</AbstractNarration>
<MinAmdLetterDate>10/23/2018</MinAmdLetterDate>
<MaxAmdLetterDate>10/23/2018</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>0</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>1855565</AwardID>
<Investigator>
<FirstName>Mai</FirstName>
<LastName>Zheng</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Mai Zheng</PI_FULL_NAME>
<EmailAddress>mai@iastate.edu</EmailAddress>
<PI_PHON>6148861061</PI_PHON>
<NSF_ID>000702453</NSF_ID>
<StartDate>10/23/2018</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Iowa State University</Name>
<CityName>AMES</CityName>
<ZipCode>500112207</ZipCode>
<PhoneNumber>5152945225</PhoneNumber>
<StreetAddress>1138 Pearson</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<StateCode>IA</StateCode>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>IA04</CONGRESS_DISTRICT_ORG>
<ORG_DUNS_NUM>005309844</ORG_DUNS_NUM>
<ORG_LGL_BUS_NAME>IOWA STATE UNIVERSITY OF SCIENCE AND TECHNOLOGY</ORG_LGL_BUS_NAME>
<ORG_PRNT_DUNS_NUM>005309844</ORG_PRNT_DUNS_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Iowa State University]]></Name>
<CityName>Ames</CityName>
<StateCode>IA</StateCode>
<ZipCode>500110002</ZipCode>
<StreetAddress><![CDATA[372 Durham]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Iowa</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>04</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>IA04</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>7354</Code>
<Text>CSR-Computer Systems Research</Text>
</ProgramElement>
<ProgramReference>
<Code>8228</Code>
<Text>CISE Resrch Initiatn Initiatve</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0116</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<FUND_OBLG>2016~59494</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><!--StartFragment--> <p>Storage systems that hold financial transactions, scientific computation results, family photos, and more, are undergoing dramatic changes. Triggered by the advances in flash memory technology, almost every layer of storage systems is being optimized aggressively to make full use of flash. This trend increases the complexity of the systems and increases the chance of obscure failures. Failures in flash-based storage systems are challenging to diagnose even for data center professionals, and can lead to severe downtime or even data loss. Moreover, the difficulty of failure diagnosis will increase in the foreseeable future with the rapid growth of flash and other non-volatile memory technologies. Thus, a framework for diagnosing the whole system and pinpointing the root causes of failures is urgently needed.</p> <p>The PI and his research teams have designed and implemented multiple innovative techniques to address the challenges imposed by storage system failures through this project. Specifically, they have developed a command-level record and replay engine for understanding the behavior of storage devices and triggering high-level failure symptoms, as well as a function-level event logging engine for analyzing the behavior of storage software. These techniques have been applied to identify the defects in real world systems that could lead to failures and result in service downtime or data loss. The practical systems analyzed by the PI and his team in this project include Linux-based and SSD-based storage systems. Examples of failure symptoms exposed in the project include un-mountable devices, file corruptions, misplacement of files, hang, crash, and so on. The root causes of failures identified in the project include defects spanning multiple layers of the storage stack such as the block layer, the recovery procedure, and so on. Moreover, based on the defects identified by the framework, the PI and his team have developed a transactional library called rfsck to help improve the robustness of Linux file system checkers. The rfsck library has been open sourced on GitLab. &nbsp;The research result has been published on peer-reviewed venues.</p> <p>In addition, the research covered in this project have been incorporated into multiple courses and educational initiatives at two universities. Examples of relevant courses include "CS479/579 Special Topics: Reliable Storage Systems" at New Mexico State University (NMSU) and "CprE563X Advanced Data Storage Systems" at Iowa State University (ISU). Examples of relevant educational initiatives include the BIGDatA REU program at NMSU and the Iowa STEM Festivals. Through these incorporated activities, the PI has mentored a diverse set of students, including those from traditionally under-represented groups (e.g., female students, African-American students, and Hispanic-American students).</p> <!--EndFragment--> <p>&nbsp;</p><br> <p>            Last Modified: 05/10/2020<br>      Modified by: Mai&nbsp;Zheng</p> </div> <div class="porSideCol"> <div class="each-gallery"> <div class="galContent" id="gallery0"> <div class="photoCount" id="photoCount0">          Images (<span id="selectedPhoto0">1</span> of <span class="totalNumber"></span>)           </div> <div class="galControls" id="controls0"></div> <div class="galSlideshow" id="slideshow0"></div> <div class="galEmbox" id="embox"> <div class="image-title"></div> </div> </div> <div class="galNavigation" id="navigation0"> <ul class="thumbs" id="thumbs0"> <li> <a href="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153220313_XRay-Overview--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153220313_XRay-Overview--rgov-800width.jpg" title="A Cross Layer Diagnosis Framework"><img src="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153220313_XRay-Overview--rgov-66x44.jpg" alt="A Cross Layer Diagnosis Framework"></a> <div class="imageCaptionContainer"> <div class="imageCaption">A Cross Layer Approach for Failure Diagnosis: the target software stack is hosted in a virtual machine; DevAgent, HostAgent, andX-Explorer are the three main components; the basic mode visualizes a correlation tree for inspection; the advancedmode highlights critical nodes based on rules.</div> <div class="imageCredit">Mai Zheng</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Mai&nbsp;Zheng</div> <div class="imageTitle">A Cross Layer Diagnosis Framework</div> </div> </li> <li> <a href="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153457341_CrossLayerEventTree--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153457341_CrossLayerEventTree--rgov-800width.jpg" title="Correlation Tree"><img src="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153457341_CrossLayerEventTree--rgov-66x44.jpg" alt="Correlation Tree"></a> <div class="imageCaptionContainer"> <div class="imageCaption">Example of  A Correlation Tree: the tree includes one system call (green), 704 kernel functions (white nodes), and 3device commands (blue); the critical path (red) is selected by a simple rule: all ancestors of the command nodes.</div> <div class="imageCredit">Mai Zheng</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Mai&nbsp;Zheng</div> <div class="imageTitle">Correlation Tree</div> </div> </li> <li> <a href="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153662849_RFSCK-Workflow--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153662849_RFSCK-Workflow--rgov-800width.jpg" title="RFSCK Workflow"><img src="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153662849_RFSCK-Workflow--rgov-66x44.jpg" alt="RFSCK Workflow"></a> <div class="imageCaptionContainer"> <div class="imageCaption">This figure shows the 10 steps of testing a file system checker using the command record and replay engine.</div> <div class="imageCredit">Mai Zheng</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Mai&nbsp;Zheng</div> <div class="imageTitle">RFSCK Workflow</div> </div> </li> <li> <a href="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153731246_rfsck-lib--rgov-214x142.jpg" original="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153731246_rfsck-lib--rgov-800width.jpg" title="RFSCK Log"><img src="/por/images/Reports/POR/2020/1855565/1855565_10406545_1589153731246_rfsck-lib--rgov-66x44.jpg" alt="RFSCK Log"></a> <div class="imageCaptionContainer"> <div class="imageCaption">This figure shows the format of the rfsck log.</div> <div class="imageCredit">Mai Zheng</div> <div class="imagePermisssions">Public Domain</div> <div class="imageSubmitted">Mai&nbsp;Zheng</div> <div class="imageTitle">RFSCK Log</div> </div> </li> </ul> </div> </div> </div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Storage systems that hold financial transactions, scientific computation results, family photos, and more, are undergoing dramatic changes. Triggered by the advances in flash memory technology, almost every layer of storage systems is being optimized aggressively to make full use of flash. This trend increases the complexity of the systems and increases the chance of obscure failures. Failures in flash-based storage systems are challenging to diagnose even for data center professionals, and can lead to severe downtime or even data loss. Moreover, the difficulty of failure diagnosis will increase in the foreseeable future with the rapid growth of flash and other non-volatile memory technologies. Thus, a framework for diagnosing the whole system and pinpointing the root causes of failures is urgently needed.  The PI and his research teams have designed and implemented multiple innovative techniques to address the challenges imposed by storage system failures through this project. Specifically, they have developed a command-level record and replay engine for understanding the behavior of storage devices and triggering high-level failure symptoms, as well as a function-level event logging engine for analyzing the behavior of storage software. These techniques have been applied to identify the defects in real world systems that could lead to failures and result in service downtime or data loss. The practical systems analyzed by the PI and his team in this project include Linux-based and SSD-based storage systems. Examples of failure symptoms exposed in the project include un-mountable devices, file corruptions, misplacement of files, hang, crash, and so on. The root causes of failures identified in the project include defects spanning multiple layers of the storage stack such as the block layer, the recovery procedure, and so on. Moreover, based on the defects identified by the framework, the PI and his team have developed a transactional library called rfsck to help improve the robustness of Linux file system checkers. The rfsck library has been open sourced on GitLab.  The research result has been published on peer-reviewed venues.  In addition, the research covered in this project have been incorporated into multiple courses and educational initiatives at two universities. Examples of relevant courses include "CS479/579 Special Topics: Reliable Storage Systems" at New Mexico State University (NMSU) and "CprE563X Advanced Data Storage Systems" at Iowa State University (ISU). Examples of relevant educational initiatives include the BIGDatA REU program at NMSU and the Iowa STEM Festivals. Through these incorporated activities, the PI has mentored a diverse set of students, including those from traditionally under-represented groups (e.g., female students, African-American students, and Hispanic-American students).           Last Modified: 05/10/2020       Submitted by: Mai Zheng]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>
